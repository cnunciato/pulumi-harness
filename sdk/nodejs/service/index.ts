// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./ami";
export * from "./codedeploy";
export * from "./ecs";
export * from "./helm";
export * from "./kubernetes";
export * from "./lambda";
export * from "./ssh";
export * from "./tanzu";
export * from "./winrm";

// Import resources to register:
import { Ami } from "./ami";
import { Codedeploy } from "./codedeploy";
import { Ecs } from "./ecs";
import { Helm } from "./helm";
import { Kubernetes } from "./kubernetes";
import { Lambda } from "./lambda";
import { Ssh } from "./ssh";
import { Tanzu } from "./tanzu";
import { Winrm } from "./winrm";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "harness:Service/ami:Ami":
                return new Ami(name, <any>undefined, { urn })
            case "harness:Service/codedeploy:Codedeploy":
                return new Codedeploy(name, <any>undefined, { urn })
            case "harness:Service/ecs:Ecs":
                return new Ecs(name, <any>undefined, { urn })
            case "harness:Service/helm:Helm":
                return new Helm(name, <any>undefined, { urn })
            case "harness:Service/kubernetes:Kubernetes":
                return new Kubernetes(name, <any>undefined, { urn })
            case "harness:Service/lambda:Lambda":
                return new Lambda(name, <any>undefined, { urn })
            case "harness:Service/ssh:Ssh":
                return new Ssh(name, <any>undefined, { urn })
            case "harness:Service/tanzu:Tanzu":
                return new Tanzu(name, <any>undefined, { urn })
            case "harness:Service/winrm:Winrm":
                return new Winrm(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("harness", "Service/ami", _module)
pulumi.runtime.registerResourceModule("harness", "Service/codedeploy", _module)
pulumi.runtime.registerResourceModule("harness", "Service/ecs", _module)
pulumi.runtime.registerResourceModule("harness", "Service/helm", _module)
pulumi.runtime.registerResourceModule("harness", "Service/kubernetes", _module)
pulumi.runtime.registerResourceModule("harness", "Service/lambda", _module)
pulumi.runtime.registerResourceModule("harness", "Service/ssh", _module)
pulumi.runtime.registerResourceModule("harness", "Service/tanzu", _module)
pulumi.runtime.registerResourceModule("harness", "Service/winrm", _module)
