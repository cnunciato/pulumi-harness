// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Data source for retrieving a Harness input set.
 */
export function getInputSet(args: GetInputSetArgs, opts?: pulumi.InvokeOptions): Promise<GetInputSetResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("harness:platform/getInputSet:getInputSet", {
        "identifier": args.identifier,
        "name": args.name,
        "orgId": args.orgId,
        "pipelineId": args.pipelineId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getInputSet.
 */
export interface GetInputSetArgs {
    /**
     * Unique identifier of the resource.
     */
    identifier?: string;
    /**
     * Name of the resource.
     */
    name?: string;
    /**
     * Unique identifier of the organization.
     */
    orgId: string;
    /**
     * Identifier of the pipeline
     */
    pipelineId: string;
    /**
     * Unique identifier of the project.
     */
    projectId: string;
}

/**
 * A collection of values returned by getInputSet.
 */
export interface GetInputSetResult {
    /**
     * Description of the resource.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Unique identifier of the resource.
     */
    readonly identifier?: string;
    /**
     * Name of the resource.
     */
    readonly name?: string;
    /**
     * Unique identifier of the organization.
     */
    readonly orgId: string;
    /**
     * Identifier of the pipeline
     */
    readonly pipelineId: string;
    /**
     * Unique identifier of the project.
     */
    readonly projectId: string;
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     */
    readonly tags: string[];
    /**
     * Input Set YAML
     */
    readonly yaml: string;
}

export function getInputSetOutput(args: GetInputSetOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInputSetResult> {
    return pulumi.output(args).apply(a => getInputSet(a, opts))
}

/**
 * A collection of arguments for invoking getInputSet.
 */
export interface GetInputSetOutputArgs {
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId: pulumi.Input<string>;
    /**
     * Identifier of the pipeline
     */
    pipelineId: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId: pulumi.Input<string>;
}
