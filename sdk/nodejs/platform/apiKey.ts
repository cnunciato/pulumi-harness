// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ApiKey extends pulumi.CustomResource {
    /**
     * Get an existing ApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiKeyState, opts?: pulumi.CustomResourceOptions): ApiKey {
        return new ApiKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:platform/apiKey:ApiKey';

    /**
     * Returns true if the given object is an instance of ApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiKey.__pulumiType;
    }

    /**
     * Account Identifier for the Entity
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Type of the API Key
     */
    public readonly apikeyType!: pulumi.Output<string>;
    /**
     * Default expiration time of the Token within API Key
     */
    public readonly defaultTimeToExpireToken!: pulumi.Output<number | undefined>;
    /**
     * Description of the API Key
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Identifier of the API Key
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * Name of the API Key
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Organization Identifier for the Entity
     */
    public readonly orgId!: pulumi.Output<string | undefined>;
    /**
     * Parent Entity Identifier of the API Key
     */
    public readonly parentId!: pulumi.Output<string>;
    /**
     * Project Identifier for the Entity
     */
    public readonly projectId!: pulumi.Output<string | undefined>;
    /**
     * Tags for the API Key
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiKeyArgs | ApiKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiKeyState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["apikeyType"] = state ? state.apikeyType : undefined;
            resourceInputs["defaultTimeToExpireToken"] = state ? state.defaultTimeToExpireToken : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ApiKeyArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.apikeyType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apikeyType'");
            }
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.parentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parentId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["apikeyType"] = args ? args.apikeyType : undefined;
            resourceInputs["defaultTimeToExpireToken"] = args ? args.defaultTimeToExpireToken : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiKey resources.
 */
export interface ApiKeyState {
    /**
     * Account Identifier for the Entity
     */
    accountId?: pulumi.Input<string>;
    /**
     * Type of the API Key
     */
    apikeyType?: pulumi.Input<string>;
    /**
     * Default expiration time of the Token within API Key
     */
    defaultTimeToExpireToken?: pulumi.Input<number>;
    /**
     * Description of the API Key
     */
    description?: pulumi.Input<string>;
    /**
     * Identifier of the API Key
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the API Key
     */
    name?: pulumi.Input<string>;
    /**
     * Organization Identifier for the Entity
     */
    orgId?: pulumi.Input<string>;
    /**
     * Parent Entity Identifier of the API Key
     */
    parentId?: pulumi.Input<string>;
    /**
     * Project Identifier for the Entity
     */
    projectId?: pulumi.Input<string>;
    /**
     * Tags for the API Key
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ApiKey resource.
 */
export interface ApiKeyArgs {
    /**
     * Account Identifier for the Entity
     */
    accountId: pulumi.Input<string>;
    /**
     * Type of the API Key
     */
    apikeyType: pulumi.Input<string>;
    /**
     * Default expiration time of the Token within API Key
     */
    defaultTimeToExpireToken?: pulumi.Input<number>;
    /**
     * Description of the API Key
     */
    description?: pulumi.Input<string>;
    /**
     * Identifier of the API Key
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the API Key
     */
    name?: pulumi.Input<string>;
    /**
     * Organization Identifier for the Entity
     */
    orgId?: pulumi.Input<string>;
    /**
     * Parent Entity Identifier of the API Key
     */
    parentId: pulumi.Input<string>;
    /**
     * Project Identifier for the Entity
     */
    projectId?: pulumi.Input<string>;
    /**
     * Tags for the API Key
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
