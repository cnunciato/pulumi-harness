// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./environment";
export * from "./getCurrentUser";
export * from "./getEnvironment";
export * from "./getInputSet";
export * from "./getOrganization";
export * from "./getPipeline";
export * from "./getProject";
export * from "./getResourceGroup";
export * from "./getRoles";
export * from "./getSecretFile";
export * from "./getSecretSshkey";
export * from "./getSecretText";
export * from "./getService";
export * from "./getServiceAccount";
export * from "./getTriggers";
export * from "./getUsergroup";
export * from "./inputSet";
export * from "./organization";
export * from "./pipeline";
export * from "./project";
export * from "./resourceGroup";
export * from "./roles";
export * from "./secretFile";
export * from "./secretSshkey";
export * from "./secretText";
export * from "./service";
export * from "./serviceAccount";
export * from "./triggers";
export * from "./usergroup";

// Import resources to register:
import { Environment } from "./environment";
import { InputSet } from "./inputSet";
import { Organization } from "./organization";
import { Pipeline } from "./pipeline";
import { Project } from "./project";
import { ResourceGroup } from "./resourceGroup";
import { Roles } from "./roles";
import { SecretFile } from "./secretFile";
import { SecretSshkey } from "./secretSshkey";
import { SecretText } from "./secretText";
import { Service } from "./service";
import { ServiceAccount } from "./serviceAccount";
import { Triggers } from "./triggers";
import { Usergroup } from "./usergroup";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "harness:Platform/environment:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "harness:Platform/inputSet:InputSet":
                return new InputSet(name, <any>undefined, { urn })
            case "harness:Platform/organization:Organization":
                return new Organization(name, <any>undefined, { urn })
            case "harness:Platform/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "harness:Platform/project:Project":
                return new Project(name, <any>undefined, { urn })
            case "harness:Platform/resourceGroup:ResourceGroup":
                return new ResourceGroup(name, <any>undefined, { urn })
            case "harness:Platform/roles:Roles":
                return new Roles(name, <any>undefined, { urn })
            case "harness:Platform/secretFile:SecretFile":
                return new SecretFile(name, <any>undefined, { urn })
            case "harness:Platform/secretSshkey:SecretSshkey":
                return new SecretSshkey(name, <any>undefined, { urn })
            case "harness:Platform/secretText:SecretText":
                return new SecretText(name, <any>undefined, { urn })
            case "harness:Platform/service:Service":
                return new Service(name, <any>undefined, { urn })
            case "harness:Platform/serviceAccount:ServiceAccount":
                return new ServiceAccount(name, <any>undefined, { urn })
            case "harness:Platform/triggers:Triggers":
                return new Triggers(name, <any>undefined, { urn })
            case "harness:Platform/usergroup:Usergroup":
                return new Usergroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("harness", "Platform/environment", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/inputSet", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/organization", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/pipeline", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/project", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/resourceGroup", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/roles", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/secretFile", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/secretSshkey", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/secretText", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/service", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/serviceAccount", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/triggers", _module)
pulumi.runtime.registerResourceModule("harness", "Platform/usergroup", _module)
