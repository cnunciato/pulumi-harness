// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Resource for creating an AWS Cloud Cost connector.
 */
export class AwsCC extends pulumi.CustomResource {
    /**
     * Get an existing AwsCC resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsCCState, opts?: pulumi.CustomResourceOptions): AwsCC {
        return new AwsCC(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'harness:PlatformConnector/awsCC:AwsCC';

    /**
     * Returns true if the given object is an instance of AwsCC.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsCC {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsCC.__pulumiType;
    }

    /**
     * The AWS account id.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
     */
    public readonly crossAccountAccess!: pulumi.Output<outputs.PlatformConnector.AwsCCCrossAccountAccess>;
    /**
     * Description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
     */
    public readonly featuresEnableds!: pulumi.Output<string[]>;
    /**
     * Unique identifier of the resource.
     */
    public readonly identifier!: pulumi.Output<string>;
    /**
     * Name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Unique identifier of the organization.
     */
    public readonly orgId!: pulumi.Output<string | undefined>;
    /**
     * Unique identifier of the project.
     */
    public readonly projectId!: pulumi.Output<string | undefined>;
    /**
     * The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
     */
    public readonly reportName!: pulumi.Output<string>;
    /**
     * The name of s3 bucket.
     */
    public readonly s3Bucket!: pulumi.Output<string>;
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a AwsCC resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsCCArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsCCArgs | AwsCCState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsCCState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["crossAccountAccess"] = state ? state.crossAccountAccess : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["featuresEnableds"] = state ? state.featuresEnableds : undefined;
            resourceInputs["identifier"] = state ? state.identifier : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["reportName"] = state ? state.reportName : undefined;
            resourceInputs["s3Bucket"] = state ? state.s3Bucket : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AwsCCArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.crossAccountAccess === undefined) && !opts.urn) {
                throw new Error("Missing required property 'crossAccountAccess'");
            }
            if ((!args || args.featuresEnableds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'featuresEnableds'");
            }
            if ((!args || args.identifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identifier'");
            }
            if ((!args || args.reportName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reportName'");
            }
            if ((!args || args.s3Bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 's3Bucket'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["crossAccountAccess"] = args ? args.crossAccountAccess : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["featuresEnableds"] = args ? args.featuresEnableds : undefined;
            resourceInputs["identifier"] = args ? args.identifier : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["reportName"] = args ? args.reportName : undefined;
            resourceInputs["s3Bucket"] = args ? args.s3Bucket : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsCC.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsCC resources.
 */
export interface AwsCCState {
    /**
     * The AWS account id.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
     */
    crossAccountAccess?: pulumi.Input<inputs.PlatformConnector.AwsCCCrossAccountAccess>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
     */
    featuresEnableds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique identifier of the resource.
     */
    identifier?: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
     */
    reportName?: pulumi.Input<string>;
    /**
     * The name of s3 bucket.
     */
    s3Bucket?: pulumi.Input<string>;
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AwsCC resource.
 */
export interface AwsCCArgs {
    /**
     * The AWS account id.
     */
    accountId: pulumi.Input<string>;
    /**
     * Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
     */
    crossAccountAccess: pulumi.Input<inputs.PlatformConnector.AwsCCCrossAccountAccess>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
     */
    featuresEnableds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Unique identifier of the resource.
     */
    identifier: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name?: pulumi.Input<string>;
    /**
     * Unique identifier of the organization.
     */
    orgId?: pulumi.Input<string>;
    /**
     * Unique identifier of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
     */
    reportName: pulumi.Input<string>;
    /**
     * The name of s3 bucket.
     */
    s3Bucket: pulumi.Input<string>;
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
