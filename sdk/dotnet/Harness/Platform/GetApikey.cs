// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Harness.Platform
{
    public static class GetApikey
    {
        public static Task<GetApikeyResult> InvokeAsync(GetApikeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApikeyResult>("harness:platform/getApikey:getApikey", args ?? new GetApikeyArgs(), options.WithDefaults());

        public static Output<GetApikeyResult> Invoke(GetApikeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApikeyResult>("harness:platform/getApikey:getApikey", args ?? new GetApikeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApikeyArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public string AccountId { get; set; } = null!;

        [Input("apikeyType", required: true)]
        public string ApikeyType { get; set; } = null!;

        [Input("defaultTimeToExpireToken")]
        public int? DefaultTimeToExpireToken { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("identifier", required: true)]
        public string Identifier { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("orgId")]
        public string? OrgId { get; set; }

        [Input("parentId", required: true)]
        public string ParentId { get; set; } = null!;

        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetApikeyArgs()
        {
        }
        public static new GetApikeyArgs Empty => new GetApikeyArgs();
    }

    public sealed class GetApikeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("apikeyType", required: true)]
        public Input<string> ApikeyType { get; set; } = null!;

        [Input("defaultTimeToExpireToken")]
        public Input<int>? DefaultTimeToExpireToken { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("parentId", required: true)]
        public Input<string> ParentId { get; set; } = null!;

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetApikeyInvokeArgs()
        {
        }
        public static new GetApikeyInvokeArgs Empty => new GetApikeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetApikeyResult
    {
        public readonly string AccountId;
        public readonly string ApikeyType;
        public readonly int? DefaultTimeToExpireToken;
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Identifier;
        public readonly string Name;
        public readonly string? OrgId;
        public readonly string ParentId;
        public readonly string? ProjectId;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetApikeyResult(
            string accountId,

            string apikeyType,

            int? defaultTimeToExpireToken,

            string? description,

            string id,

            string identifier,

            string name,

            string? orgId,

            string parentId,

            string? projectId,

            ImmutableDictionary<string, string>? tags)
        {
            AccountId = accountId;
            ApikeyType = apikeyType;
            DefaultTimeToExpireToken = defaultTimeToExpireToken;
            Description = description;
            Id = id;
            Identifier = identifier;
            Name = name;
            OrgId = orgId;
            ParentId = parentId;
            ProjectId = projectId;
            Tags = tags;
        }
    }
}
