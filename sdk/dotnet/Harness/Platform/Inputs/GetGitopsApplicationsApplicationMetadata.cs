// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Harness.Platform.Inputs
{

    public sealed class GetGitopsApplicationsApplicationMetadataArgs : global::Pulumi.InvokeArgs
    {
        [Input("annotations", required: true)]
        private Dictionary<string, string>? _annotations;
        public Dictionary<string, string> Annotations
        {
            get => _annotations ?? (_annotations = new Dictionary<string, string>());
            set => _annotations = value;
        }

        [Input("clusterName")]
        public string? ClusterName { get; set; }

        [Input("finalizers", required: true)]
        private List<string>? _finalizers;
        public List<string> Finalizers
        {
            get => _finalizers ?? (_finalizers = new List<string>());
            set => _finalizers = value;
        }

        [Input("generateName")]
        public string? GenerateName { get; set; }

        [Input("generation", required: true)]
        public string Generation { get; set; } = null!;

        [Input("labels", required: true)]
        private Dictionary<string, string>? _labels;
        public Dictionary<string, string> Labels
        {
            get => _labels ?? (_labels = new Dictionary<string, string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the GitOps application.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        [Input("ownerReferences")]
        private List<Inputs.GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs>? _ownerReferences;
        public List<Inputs.GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs> OwnerReferences
        {
            get => _ownerReferences ?? (_ownerReferences = new List<Inputs.GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs>());
            set => _ownerReferences = value;
        }

        [Input("uid", required: true)]
        public string Uid { get; set; } = null!;

        public GetGitopsApplicationsApplicationMetadataArgs()
        {
        }
        public static new GetGitopsApplicationsApplicationMetadataArgs Empty => new GetGitopsApplicationsApplicationMetadataArgs();
    }
}
