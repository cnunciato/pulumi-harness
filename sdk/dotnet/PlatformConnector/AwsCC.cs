// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Harness.PlatformConnector
{
    /// <summary>
    /// Resource for creating an AWS Cloud Cost connector.
    /// </summary>
    [HarnessResourceType("harness:PlatformConnector/awsCC:AwsCC")]
    public partial class AwsCC : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The AWS account id.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
        /// </summary>
        [Output("crossAccountAccess")]
        public Output<Outputs.AwsCCCrossAccountAccess> CrossAccountAccess { get; private set; } = null!;

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
        /// </summary>
        [Output("featuresEnableds")]
        public Output<ImmutableArray<string>> FeaturesEnableds { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Output("orgId")]
        public Output<string?> OrgId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string?> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
        /// </summary>
        [Output("reportName")]
        public Output<string> ReportName { get; private set; } = null!;

        /// <summary>
        /// The name of s3 bucket.
        /// </summary>
        [Output("s3Bucket")]
        public Output<string> S3Bucket { get; private set; } = null!;

        /// <summary>
        /// Tags to associate with the resource. Tags should be in the form `name:value`.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a AwsCC resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AwsCC(string name, AwsCCArgs args, CustomResourceOptions? options = null)
            : base("harness:PlatformConnector/awsCC:AwsCC", name, args ?? new AwsCCArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AwsCC(string name, Input<string> id, AwsCCState? state = null, CustomResourceOptions? options = null)
            : base("harness:PlatformConnector/awsCC:AwsCC", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AwsCC resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AwsCC Get(string name, Input<string> id, AwsCCState? state = null, CustomResourceOptions? options = null)
        {
            return new AwsCC(name, id, state, options);
        }
    }

    public sealed class AwsCCArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS account id.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
        /// </summary>
        [Input("crossAccountAccess", required: true)]
        public Input<Inputs.AwsCCCrossAccountAccessArgs> CrossAccountAccess { get; set; } = null!;

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("featuresEnableds", required: true)]
        private InputList<string>? _featuresEnableds;

        /// <summary>
        /// The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
        /// </summary>
        public InputList<string> FeaturesEnableds
        {
            get => _featuresEnableds ?? (_featuresEnableds = new InputList<string>());
            set => _featuresEnableds = value;
        }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        /// <summary>
        /// The name of s3 bucket.
        /// </summary>
        [Input("s3Bucket", required: true)]
        public Input<string> S3Bucket { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to associate with the resource. Tags should be in the form `name:value`.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public AwsCCArgs()
        {
        }
        public static new AwsCCArgs Empty => new AwsCCArgs();
    }

    public sealed class AwsCCState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS account id.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
        /// </summary>
        [Input("crossAccountAccess")]
        public Input<Inputs.AwsCCCrossAccountAccessGetArgs>? CrossAccountAccess { get; set; }

        /// <summary>
        /// Description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("featuresEnableds")]
        private InputList<string>? _featuresEnableds;

        /// <summary>
        /// The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
        /// </summary>
        public InputList<string> FeaturesEnableds
        {
            get => _featuresEnableds ?? (_featuresEnableds = new InputList<string>());
            set => _featuresEnableds = value;
        }

        /// <summary>
        /// Unique identifier of the resource.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unique identifier of the organization.
        /// </summary>
        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        /// <summary>
        /// Unique identifier of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
        /// </summary>
        [Input("reportName")]
        public Input<string>? ReportName { get; set; }

        /// <summary>
        /// The name of s3 bucket.
        /// </summary>
        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to associate with the resource. Tags should be in the form `name:value`.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public AwsCCState()
        {
        }
        public static new AwsCCState Empty => new AwsCCState();
    }
}
