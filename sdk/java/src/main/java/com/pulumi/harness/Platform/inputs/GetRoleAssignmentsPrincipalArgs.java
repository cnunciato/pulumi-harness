// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetRoleAssignmentsPrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRoleAssignmentsPrincipalArgs Empty = new GetRoleAssignmentsPrincipalArgs();

    /**
     * Identifier.
     * 
     */
    @Import(name="identifier", required=true)
    private Output<String> identifier;

    /**
     * @return Identifier.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }

    /**
     * Scope level.
     * 
     */
    @Import(name="scopeLevel", required=true)
    private Output<String> scopeLevel;

    /**
     * @return Scope level.
     * 
     */
    public Output<String> scopeLevel() {
        return this.scopeLevel;
    }

    /**
     * Type.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetRoleAssignmentsPrincipalArgs() {}

    private GetRoleAssignmentsPrincipalArgs(GetRoleAssignmentsPrincipalArgs $) {
        this.identifier = $.identifier;
        this.scopeLevel = $.scopeLevel;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoleAssignmentsPrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoleAssignmentsPrincipalArgs $;

        public Builder() {
            $ = new GetRoleAssignmentsPrincipalArgs();
        }

        public Builder(GetRoleAssignmentsPrincipalArgs defaults) {
            $ = new GetRoleAssignmentsPrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identifier Identifier.
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Identifier.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param scopeLevel Scope level.
         * 
         * @return builder
         * 
         */
        public Builder scopeLevel(Output<String> scopeLevel) {
            $.scopeLevel = scopeLevel;
            return this;
        }

        /**
         * @param scopeLevel Scope level.
         * 
         * @return builder
         * 
         */
        public Builder scopeLevel(String scopeLevel) {
            return scopeLevel(Output.of(scopeLevel));
        }

        /**
         * @param type Type.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetRoleAssignmentsPrincipalArgs build() {
            $.identifier = Objects.requireNonNull($.identifier, "expected parameter 'identifier' to be non-null");
            $.scopeLevel = Objects.requireNonNull($.scopeLevel, "expected parameter 'scopeLevel' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
