// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CcmFiltersFilterPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final CcmFiltersFilterPropertiesArgs Empty = new CcmFiltersFilterPropertiesArgs();

    /**
     * Type of CCM filters.
     * 
     */
    @Import(name="filterType", required=true)
    private Output<String> filterType;

    /**
     * @return Type of CCM filters.
     * 
     */
    public Output<String> filterType() {
        return this.filterType;
    }

    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CcmFiltersFilterPropertiesArgs() {}

    private CcmFiltersFilterPropertiesArgs(CcmFiltersFilterPropertiesArgs $) {
        this.filterType = $.filterType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CcmFiltersFilterPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CcmFiltersFilterPropertiesArgs $;

        public Builder() {
            $ = new CcmFiltersFilterPropertiesArgs();
        }

        public Builder(CcmFiltersFilterPropertiesArgs defaults) {
            $ = new CcmFiltersFilterPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterType Type of CCM filters.
         * 
         * @return builder
         * 
         */
        public Builder filterType(Output<String> filterType) {
            $.filterType = filterType;
            return this;
        }

        /**
         * @param filterType Type of CCM filters.
         * 
         * @return builder
         * 
         */
        public Builder filterType(String filterType) {
            return filterType(Output.of(filterType));
        }

        /**
         * @param tags Tags to associate with the resource. Tags should be in the form `name:value`.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags to associate with the resource. Tags should be in the form `name:value`.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags to associate with the resource. Tags should be in the form `name:value`.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public CcmFiltersFilterPropertiesArgs build() {
            $.filterType = Objects.requireNonNull($.filterType, "expected parameter 'filterType' to be non-null");
            return $;
        }
    }

}
