// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.PlatformConnector.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.PlatformConnector.outputs.GetGitlabCredentialHttp;
import com.pulumi.harness.PlatformConnector.outputs.GetGitlabCredentialSsh;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGitlabCredential {
    private List<GetGitlabCredentialHttp> https;
    private List<GetGitlabCredentialSsh> sshes;

    private GetGitlabCredential() {}
    public List<GetGitlabCredentialHttp> https() {
        return this.https;
    }
    public List<GetGitlabCredentialSsh> sshes() {
        return this.sshes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGitlabCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGitlabCredentialHttp> https;
        private List<GetGitlabCredentialSsh> sshes;
        public Builder() {}
        public Builder(GetGitlabCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.https = defaults.https;
    	      this.sshes = defaults.sshes;
        }

        @CustomType.Setter
        public Builder https(List<GetGitlabCredentialHttp> https) {
            this.https = Objects.requireNonNull(https);
            return this;
        }
        public Builder https(GetGitlabCredentialHttp... https) {
            return https(List.of(https));
        }
        @CustomType.Setter
        public Builder sshes(List<GetGitlabCredentialSsh> sshes) {
            this.sshes = Objects.requireNonNull(sshes);
            return this;
        }
        public Builder sshes(GetGitlabCredentialSsh... sshes) {
            return sshes(List.of(sshes));
        }
        public GetGitlabCredential build() {
            final var o = new GetGitlabCredential();
            o.https = https;
            o.sshes = sshes;
            return o;
        }
    }
}
