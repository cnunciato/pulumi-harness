// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GetResourceGroupIncludedScope;
import com.pulumi.harness.platform.outputs.GetResourceGroupResourceFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourceGroupResult {
    /**
     * @return Account Identifier of the account
     * 
     */
    private String accountId;
    /**
     * @return The scope levels at which this resource group can be used
     * 
     */
    private List<String> allowedScopeLevels;
    /**
     * @return Color of the environment.
     * 
     */
    private String color;
    /**
     * @return Description of the resource.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the resource.
     * 
     */
    private @Nullable String identifier;
    /**
     * @return Included scopes
     * 
     */
    private List<GetResourceGroupIncludedScope> includedScopes;
    /**
     * @return Name of the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return Unique identifier of the Organization.
     * 
     */
    private @Nullable String orgId;
    /**
     * @return Unique identifier of the Project.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Contains resource filter for a resource group
     * 
     */
    private List<GetResourceGroupResourceFilter> resourceFilters;
    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    private List<String> tags;

    private GetResourceGroupResult() {}
    /**
     * @return Account Identifier of the account
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The scope levels at which this resource group can be used
     * 
     */
    public List<String> allowedScopeLevels() {
        return this.allowedScopeLevels;
    }
    /**
     * @return Color of the environment.
     * 
     */
    public String color() {
        return this.color;
    }
    /**
     * @return Description of the resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Optional<String> identifier() {
        return Optional.ofNullable(this.identifier);
    }
    /**
     * @return Included scopes
     * 
     */
    public List<GetResourceGroupIncludedScope> includedScopes() {
        return this.includedScopes;
    }
    /**
     * @return Name of the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Unique identifier of the Organization.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    /**
     * @return Unique identifier of the Project.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Contains resource filter for a resource group
     * 
     */
    public List<GetResourceGroupResourceFilter> resourceFilters() {
        return this.resourceFilters;
    }
    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private List<String> allowedScopeLevels;
        private String color;
        private String description;
        private String id;
        private @Nullable String identifier;
        private List<GetResourceGroupIncludedScope> includedScopes;
        private @Nullable String name;
        private @Nullable String orgId;
        private @Nullable String projectId;
        private List<GetResourceGroupResourceFilter> resourceFilters;
        private List<String> tags;
        public Builder() {}
        public Builder(GetResourceGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.allowedScopeLevels = defaults.allowedScopeLevels;
    	      this.color = defaults.color;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.includedScopes = defaults.includedScopes;
    	      this.name = defaults.name;
    	      this.orgId = defaults.orgId;
    	      this.projectId = defaults.projectId;
    	      this.resourceFilters = defaults.resourceFilters;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder allowedScopeLevels(List<String> allowedScopeLevels) {
            this.allowedScopeLevels = Objects.requireNonNull(allowedScopeLevels);
            return this;
        }
        public Builder allowedScopeLevels(String... allowedScopeLevels) {
            return allowedScopeLevels(List.of(allowedScopeLevels));
        }
        @CustomType.Setter
        public Builder color(String color) {
            this.color = Objects.requireNonNull(color);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identifier(@Nullable String identifier) {
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder includedScopes(List<GetResourceGroupIncludedScope> includedScopes) {
            this.includedScopes = Objects.requireNonNull(includedScopes);
            return this;
        }
        public Builder includedScopes(GetResourceGroupIncludedScope... includedScopes) {
            return includedScopes(List.of(includedScopes));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceFilters(List<GetResourceGroupResourceFilter> resourceFilters) {
            this.resourceFilters = Objects.requireNonNull(resourceFilters);
            return this;
        }
        public Builder resourceFilters(GetResourceGroupResourceFilter... resourceFilters) {
            return resourceFilters(List.of(resourceFilters));
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetResourceGroupResult build() {
            final var o = new GetResourceGroupResult();
            o.accountId = accountId;
            o.allowedScopeLevels = allowedScopeLevels;
            o.color = color;
            o.description = description;
            o.id = id;
            o.identifier = identifier;
            o.includedScopes = includedScopes;
            o.name = name;
            o.orgId = orgId;
            o.projectId = projectId;
            o.resourceFilters = resourceFilters;
            o.tags = tags;
            return o;
        }
    }
}
