// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsAgentMetadata extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsAgentMetadata Empty = new GetGitopsAgentMetadata();

    @Import(name="highAvailability")
    private @Nullable Boolean highAvailability;

    public Optional<Boolean> highAvailability() {
        return Optional.ofNullable(this.highAvailability);
    }

    @Import(name="namespace", required=true)
    private String namespace;

    public String namespace() {
        return this.namespace;
    }

    private GetGitopsAgentMetadata() {}

    private GetGitopsAgentMetadata(GetGitopsAgentMetadata $) {
        this.highAvailability = $.highAvailability;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsAgentMetadata defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsAgentMetadata $;

        public Builder() {
            $ = new GetGitopsAgentMetadata();
        }

        public Builder(GetGitopsAgentMetadata defaults) {
            $ = new GetGitopsAgentMetadata(Objects.requireNonNull(defaults));
        }

        public Builder highAvailability(@Nullable Boolean highAvailability) {
            $.highAvailability = highAvailability;
            return this;
        }

        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        public GetGitopsAgentMetadata build() {
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
