// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GithubConnectorApiAuthenticationGithubApp {
    private @Nullable String applicationId;
    private @Nullable String applicationIdRef;
    private @Nullable String installationId;
    private @Nullable String installationIdRef;
    private String privateKeyRef;

    private GithubConnectorApiAuthenticationGithubApp() {}
    public Optional<String> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }
    public Optional<String> applicationIdRef() {
        return Optional.ofNullable(this.applicationIdRef);
    }
    public Optional<String> installationId() {
        return Optional.ofNullable(this.installationId);
    }
    public Optional<String> installationIdRef() {
        return Optional.ofNullable(this.installationIdRef);
    }
    public String privateKeyRef() {
        return this.privateKeyRef;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GithubConnectorApiAuthenticationGithubApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationId;
        private @Nullable String applicationIdRef;
        private @Nullable String installationId;
        private @Nullable String installationIdRef;
        private String privateKeyRef;
        public Builder() {}
        public Builder(GithubConnectorApiAuthenticationGithubApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.applicationIdRef = defaults.applicationIdRef;
    	      this.installationId = defaults.installationId;
    	      this.installationIdRef = defaults.installationIdRef;
    	      this.privateKeyRef = defaults.privateKeyRef;
        }

        @CustomType.Setter
        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationIdRef(@Nullable String applicationIdRef) {
            this.applicationIdRef = applicationIdRef;
            return this;
        }
        @CustomType.Setter
        public Builder installationId(@Nullable String installationId) {
            this.installationId = installationId;
            return this;
        }
        @CustomType.Setter
        public Builder installationIdRef(@Nullable String installationIdRef) {
            this.installationIdRef = installationIdRef;
            return this;
        }
        @CustomType.Setter
        public Builder privateKeyRef(String privateKeyRef) {
            this.privateKeyRef = Objects.requireNonNull(privateKeyRef);
            return this;
        }
        public GithubConnectorApiAuthenticationGithubApp build() {
            final var o = new GithubConnectorApiAuthenticationGithubApp();
            o.applicationId = applicationId;
            o.applicationIdRef = applicationIdRef;
            o.installationId = installationId;
            o.installationIdRef = installationIdRef;
            o.privateKeyRef = privateKeyRef;
            return o;
        }
    }
}
