// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserGroupPermissionsAppPermissionsPipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupPermissionsAppPermissionsPipelineArgs Empty = new UserGroupPermissionsAppPermissionsPipelineArgs();

    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    public Output<List<String>> actions() {
        return this.actions;
    }

    @Import(name="appIds")
    private @Nullable Output<List<String>> appIds;

    public Optional<Output<List<String>>> appIds() {
        return Optional.ofNullable(this.appIds);
    }

    @Import(name="envIds")
    private @Nullable Output<List<String>> envIds;

    public Optional<Output<List<String>>> envIds() {
        return Optional.ofNullable(this.envIds);
    }

    @Import(name="filters")
    private @Nullable Output<List<String>> filters;

    public Optional<Output<List<String>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private UserGroupPermissionsAppPermissionsPipelineArgs() {}

    private UserGroupPermissionsAppPermissionsPipelineArgs(UserGroupPermissionsAppPermissionsPipelineArgs $) {
        this.actions = $.actions;
        this.appIds = $.appIds;
        this.envIds = $.envIds;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserGroupPermissionsAppPermissionsPipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserGroupPermissionsAppPermissionsPipelineArgs $;

        public Builder() {
            $ = new UserGroupPermissionsAppPermissionsPipelineArgs();
        }

        public Builder(UserGroupPermissionsAppPermissionsPipelineArgs defaults) {
            $ = new UserGroupPermissionsAppPermissionsPipelineArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        public Builder appIds(@Nullable Output<List<String>> appIds) {
            $.appIds = appIds;
            return this;
        }

        public Builder appIds(List<String> appIds) {
            return appIds(Output.of(appIds));
        }

        public Builder appIds(String... appIds) {
            return appIds(List.of(appIds));
        }

        public Builder envIds(@Nullable Output<List<String>> envIds) {
            $.envIds = envIds;
            return this;
        }

        public Builder envIds(List<String> envIds) {
            return envIds(Output.of(envIds));
        }

        public Builder envIds(String... envIds) {
            return envIds(List.of(envIds));
        }

        public Builder filters(@Nullable Output<List<String>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<String> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }

        public UserGroupPermissionsAppPermissionsPipelineArgs build() {
            $.actions = Objects.requireNonNull($.actions, "expected parameter 'actions' to be non-null");
            return $;
        }
    }

}
