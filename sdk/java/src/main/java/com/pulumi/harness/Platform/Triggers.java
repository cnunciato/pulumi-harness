// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.TriggersArgs;
import com.pulumi.harness.platform.inputs.TriggersState;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for craeting triggers in Harness.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.Triggers;
 * import com.pulumi.harness.platform.TriggersArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Triggers(&#34;example&#34;, TriggersArgs.builder()        
 *             .identifier(&#34;identifier&#34;)
 *             .orgId(&#34;orgIdentifer&#34;)
 *             .projectId(&#34;projectIdentifier&#34;)
 *             .targetId(&#34;pipelineIdentifier&#34;)
 *             .yaml(&#34;&#34;&#34;
 *   trigger:
 *     name: &#34;name&#34;
 *     identifier: &#34;identifier&#34;
 *     enabled: true
 *     description: &#34;&#34;
 *     tags: {}
 *     projectIdentifier: &#34;projectIdentifier&#34;
 *     orgIdentifier: &#34;orgIdentifer&#34;
 *     pipelineIdentifier: &#34;pipelineIdentifier&#34;
 *     source:
 *       type: &#34;Webhook&#34;
 *       spec:
 *         type: &#34;Github&#34;
 *         spec:
 *           type: &#34;Push&#34;
 *           spec:
 *             connectorRef: &#34;account.TestAccResourceConnectorGithub_Ssh_IZBeG&#34;
 *             autoAbortPreviousExecutions: false
 *             payloadConditions:
 *             - key: &#34;changedFiles&#34;
 *               operator: &#34;Equals&#34;
 *               value: &#34;value&#34;
 *             - key: &#34;targetBranch&#34;
 *               operator: &#34;Equals&#34;
 *               value: &#34;value&#34;
 *             headerConditions: []
 *             repoName: &#34;repoName&#34;
 *             actions: []
 *     inputYaml: &#34;pipeline: {}\n&#34;
 * 
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Import using trigger id
 * 
 * ```sh
 *  $ pulumi import harness:platform/triggers:Triggers example &lt;triggers_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/triggers:Triggers")
public class Triggers extends com.pulumi.resources.CustomResource {
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * if-Match
     * 
     */
    @Export(name="ifMatch", type=String.class, parameters={})
    private Output</* @Nullable */ String> ifMatch;

    /**
     * @return if-Match
     * 
     */
    public Output<Optional<String>> ifMatch() {
        return Codegen.optional(this.ifMatch);
    }
    /**
     * ignore error default false
     * 
     */
    @Export(name="ignoreError", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> ignoreError;

    /**
     * @return ignore error default false
     * 
     */
    public Output<Optional<Boolean>> ignoreError() {
        return Codegen.optional(this.ignoreError);
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the Organization.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output<String> orgId;

    /**
     * @return Unique identifier of the Organization.
     * 
     */
    public Output<String> orgId() {
        return this.orgId;
    }
    /**
     * Unique identifier of the Project.
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    /**
     * @return Unique identifier of the Project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Identifier of the target pipeline
     * 
     */
    @Export(name="targetId", type=String.class, parameters={})
    private Output<String> targetId;

    /**
     * @return Identifier of the target pipeline
     * 
     */
    public Output<String> targetId() {
        return this.targetId;
    }
    /**
     * trigger yaml
     * 
     */
    @Export(name="yaml", type=String.class, parameters={})
    private Output<String> yaml;

    /**
     * @return trigger yaml
     * 
     */
    public Output<String> yaml() {
        return this.yaml;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Triggers(String name) {
        this(name, TriggersArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Triggers(String name, TriggersArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Triggers(String name, TriggersArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/triggers:Triggers", name, args == null ? TriggersArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Triggers(String name, Output<String> id, @Nullable TriggersState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/triggers:Triggers", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Triggers get(String name, Output<String> id, @Nullable TriggersState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Triggers(name, id, state, options);
    }
}
