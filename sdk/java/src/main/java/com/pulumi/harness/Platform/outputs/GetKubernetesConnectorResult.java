// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GetKubernetesConnectorClientKeyCert;
import com.pulumi.harness.platform.outputs.GetKubernetesConnectorInheritFromDelegate;
import com.pulumi.harness.platform.outputs.GetKubernetesConnectorOpenidConnect;
import com.pulumi.harness.platform.outputs.GetKubernetesConnectorServiceAccount;
import com.pulumi.harness.platform.outputs.GetKubernetesConnectorUsernamePassword;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKubernetesConnectorResult {
    /**
     * @return Client key and certificate config for the connector.
     * 
     */
    private List<GetKubernetesConnectorClientKeyCert> clientKeyCerts;
    /**
     * @return Selectors to use for the delegate.
     * 
     */
    private List<String> delegateSelectors;
    /**
     * @return Description of the resource.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique identifier of the resource.
     * 
     */
    private @Nullable String identifier;
    /**
     * @return Credentials are inherited from the delegate.
     * 
     */
    private List<GetKubernetesConnectorInheritFromDelegate> inheritFromDelegates;
    /**
     * @return Name of the resource.
     * 
     */
    private @Nullable String name;
    /**
     * @return OpenID configuration for the connector.
     * 
     */
    private List<GetKubernetesConnectorOpenidConnect> openidConnects;
    /**
     * @return Unique identifier of the organization.
     * 
     */
    private @Nullable String orgId;
    /**
     * @return Unique identifier of the project.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Service account for the connector.
     * 
     */
    private List<GetKubernetesConnectorServiceAccount> serviceAccounts;
    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    private List<String> tags;
    /**
     * @return Username and password for the connector.
     * 
     */
    private List<GetKubernetesConnectorUsernamePassword> usernamePasswords;

    private GetKubernetesConnectorResult() {}
    /**
     * @return Client key and certificate config for the connector.
     * 
     */
    public List<GetKubernetesConnectorClientKeyCert> clientKeyCerts() {
        return this.clientKeyCerts;
    }
    /**
     * @return Selectors to use for the delegate.
     * 
     */
    public List<String> delegateSelectors() {
        return this.delegateSelectors;
    }
    /**
     * @return Description of the resource.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Optional<String> identifier() {
        return Optional.ofNullable(this.identifier);
    }
    /**
     * @return Credentials are inherited from the delegate.
     * 
     */
    public List<GetKubernetesConnectorInheritFromDelegate> inheritFromDelegates() {
        return this.inheritFromDelegates;
    }
    /**
     * @return Name of the resource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return OpenID configuration for the connector.
     * 
     */
    public List<GetKubernetesConnectorOpenidConnect> openidConnects() {
        return this.openidConnects;
    }
    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }
    /**
     * @return Unique identifier of the project.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Service account for the connector.
     * 
     */
    public List<GetKubernetesConnectorServiceAccount> serviceAccounts() {
        return this.serviceAccounts;
    }
    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return Username and password for the connector.
     * 
     */
    public List<GetKubernetesConnectorUsernamePassword> usernamePasswords() {
        return this.usernamePasswords;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetKubernetesConnectorClientKeyCert> clientKeyCerts;
        private List<String> delegateSelectors;
        private String description;
        private String id;
        private @Nullable String identifier;
        private List<GetKubernetesConnectorInheritFromDelegate> inheritFromDelegates;
        private @Nullable String name;
        private List<GetKubernetesConnectorOpenidConnect> openidConnects;
        private @Nullable String orgId;
        private @Nullable String projectId;
        private List<GetKubernetesConnectorServiceAccount> serviceAccounts;
        private List<String> tags;
        private List<GetKubernetesConnectorUsernamePassword> usernamePasswords;
        public Builder() {}
        public Builder(GetKubernetesConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientKeyCerts = defaults.clientKeyCerts;
    	      this.delegateSelectors = defaults.delegateSelectors;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.identifier = defaults.identifier;
    	      this.inheritFromDelegates = defaults.inheritFromDelegates;
    	      this.name = defaults.name;
    	      this.openidConnects = defaults.openidConnects;
    	      this.orgId = defaults.orgId;
    	      this.projectId = defaults.projectId;
    	      this.serviceAccounts = defaults.serviceAccounts;
    	      this.tags = defaults.tags;
    	      this.usernamePasswords = defaults.usernamePasswords;
        }

        @CustomType.Setter
        public Builder clientKeyCerts(List<GetKubernetesConnectorClientKeyCert> clientKeyCerts) {
            this.clientKeyCerts = Objects.requireNonNull(clientKeyCerts);
            return this;
        }
        public Builder clientKeyCerts(GetKubernetesConnectorClientKeyCert... clientKeyCerts) {
            return clientKeyCerts(List.of(clientKeyCerts));
        }
        @CustomType.Setter
        public Builder delegateSelectors(List<String> delegateSelectors) {
            this.delegateSelectors = Objects.requireNonNull(delegateSelectors);
            return this;
        }
        public Builder delegateSelectors(String... delegateSelectors) {
            return delegateSelectors(List.of(delegateSelectors));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identifier(@Nullable String identifier) {
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder inheritFromDelegates(List<GetKubernetesConnectorInheritFromDelegate> inheritFromDelegates) {
            this.inheritFromDelegates = Objects.requireNonNull(inheritFromDelegates);
            return this;
        }
        public Builder inheritFromDelegates(GetKubernetesConnectorInheritFromDelegate... inheritFromDelegates) {
            return inheritFromDelegates(List.of(inheritFromDelegates));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder openidConnects(List<GetKubernetesConnectorOpenidConnect> openidConnects) {
            this.openidConnects = Objects.requireNonNull(openidConnects);
            return this;
        }
        public Builder openidConnects(GetKubernetesConnectorOpenidConnect... openidConnects) {
            return openidConnects(List.of(openidConnects));
        }
        @CustomType.Setter
        public Builder orgId(@Nullable String orgId) {
            this.orgId = orgId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAccounts(List<GetKubernetesConnectorServiceAccount> serviceAccounts) {
            this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
            return this;
        }
        public Builder serviceAccounts(GetKubernetesConnectorServiceAccount... serviceAccounts) {
            return serviceAccounts(List.of(serviceAccounts));
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder usernamePasswords(List<GetKubernetesConnectorUsernamePassword> usernamePasswords) {
            this.usernamePasswords = Objects.requireNonNull(usernamePasswords);
            return this;
        }
        public Builder usernamePasswords(GetKubernetesConnectorUsernamePassword... usernamePasswords) {
            return usernamePasswords(List.of(usernamePasswords));
        }
        public GetKubernetesConnectorResult build() {
            final var o = new GetKubernetesConnectorResult();
            o.clientKeyCerts = clientKeyCerts;
            o.delegateSelectors = delegateSelectors;
            o.description = description;
            o.id = id;
            o.identifier = identifier;
            o.inheritFromDelegates = inheritFromDelegates;
            o.name = name;
            o.openidConnects = openidConnects;
            o.orgId = orgId;
            o.projectId = projectId;
            o.serviceAccounts = serviceAccounts;
            o.tags = tags;
            o.usernamePasswords = usernamePasswords;
            return o;
        }
    }
}
