// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitOpsApplicationsApplicationSpecSourceKustomize {
    private @Nullable Map<String,String> commonAnnotations;
    private @Nullable Map<String,String> commonLabels;
    private @Nullable Boolean forceCommonAnnotations;
    private @Nullable Boolean forceCommonLabels;
    private @Nullable List<String> images;
    private @Nullable String namePrefix;
    private @Nullable String nameSuffix;
    private @Nullable String version;

    private GitOpsApplicationsApplicationSpecSourceKustomize() {}
    public Map<String,String> commonAnnotations() {
        return this.commonAnnotations == null ? Map.of() : this.commonAnnotations;
    }
    public Map<String,String> commonLabels() {
        return this.commonLabels == null ? Map.of() : this.commonLabels;
    }
    public Optional<Boolean> forceCommonAnnotations() {
        return Optional.ofNullable(this.forceCommonAnnotations);
    }
    public Optional<Boolean> forceCommonLabels() {
        return Optional.ofNullable(this.forceCommonLabels);
    }
    public List<String> images() {
        return this.images == null ? List.of() : this.images;
    }
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }
    public Optional<String> nameSuffix() {
        return Optional.ofNullable(this.nameSuffix);
    }
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitOpsApplicationsApplicationSpecSourceKustomize defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> commonAnnotations;
        private @Nullable Map<String,String> commonLabels;
        private @Nullable Boolean forceCommonAnnotations;
        private @Nullable Boolean forceCommonLabels;
        private @Nullable List<String> images;
        private @Nullable String namePrefix;
        private @Nullable String nameSuffix;
        private @Nullable String version;
        public Builder() {}
        public Builder(GitOpsApplicationsApplicationSpecSourceKustomize defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonAnnotations = defaults.commonAnnotations;
    	      this.commonLabels = defaults.commonLabels;
    	      this.forceCommonAnnotations = defaults.forceCommonAnnotations;
    	      this.forceCommonLabels = defaults.forceCommonLabels;
    	      this.images = defaults.images;
    	      this.namePrefix = defaults.namePrefix;
    	      this.nameSuffix = defaults.nameSuffix;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder commonAnnotations(@Nullable Map<String,String> commonAnnotations) {
            this.commonAnnotations = commonAnnotations;
            return this;
        }
        @CustomType.Setter
        public Builder commonLabels(@Nullable Map<String,String> commonLabels) {
            this.commonLabels = commonLabels;
            return this;
        }
        @CustomType.Setter
        public Builder forceCommonAnnotations(@Nullable Boolean forceCommonAnnotations) {
            this.forceCommonAnnotations = forceCommonAnnotations;
            return this;
        }
        @CustomType.Setter
        public Builder forceCommonLabels(@Nullable Boolean forceCommonLabels) {
            this.forceCommonLabels = forceCommonLabels;
            return this;
        }
        @CustomType.Setter
        public Builder images(@Nullable List<String> images) {
            this.images = images;
            return this;
        }
        public Builder images(String... images) {
            return images(List.of(images));
        }
        @CustomType.Setter
        public Builder namePrefix(@Nullable String namePrefix) {
            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder nameSuffix(@Nullable String nameSuffix) {
            this.nameSuffix = nameSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GitOpsApplicationsApplicationSpecSourceKustomize build() {
            final var o = new GitOpsApplicationsApplicationSpecSourceKustomize();
            o.commonAnnotations = commonAnnotations;
            o.commonLabels = commonLabels;
            o.forceCommonAnnotations = forceCommonAnnotations;
            o.forceCommonLabels = forceCommonLabels;
            o.images = images;
            o.namePrefix = namePrefix;
            o.nameSuffix = nameSuffix;
            o.version = version;
            return o;
        }
    }
}
