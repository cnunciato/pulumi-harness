// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GitOpsApplicationsApplicationMetadataOwnerReference;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GitOpsApplicationsApplicationMetadata {
    private @Nullable Map<String,String> annotations;
    private @Nullable String clusterName;
    private @Nullable List<String> finalizers;
    private @Nullable String generateName;
    private @Nullable String generation;
    private @Nullable Map<String,String> labels;
    /**
     * @return Name of the GitOps application.
     * 
     */
    private @Nullable String name;
    private @Nullable String namespace;
    private @Nullable List<GitOpsApplicationsApplicationMetadataOwnerReference> ownerReferences;
    private @Nullable String uid;

    private GitOpsApplicationsApplicationMetadata() {}
    public Map<String,String> annotations() {
        return this.annotations == null ? Map.of() : this.annotations;
    }
    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }
    public List<String> finalizers() {
        return this.finalizers == null ? List.of() : this.finalizers;
    }
    public Optional<String> generateName() {
        return Optional.ofNullable(this.generateName);
    }
    public Optional<String> generation() {
        return Optional.ofNullable(this.generation);
    }
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return Name of the GitOps application.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public List<GitOpsApplicationsApplicationMetadataOwnerReference> ownerReferences() {
        return this.ownerReferences == null ? List.of() : this.ownerReferences;
    }
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GitOpsApplicationsApplicationMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,String> annotations;
        private @Nullable String clusterName;
        private @Nullable List<String> finalizers;
        private @Nullable String generateName;
        private @Nullable String generation;
        private @Nullable Map<String,String> labels;
        private @Nullable String name;
        private @Nullable String namespace;
        private @Nullable List<GitOpsApplicationsApplicationMetadataOwnerReference> ownerReferences;
        private @Nullable String uid;
        public Builder() {}
        public Builder(GitOpsApplicationsApplicationMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.clusterName = defaults.clusterName;
    	      this.finalizers = defaults.finalizers;
    	      this.generateName = defaults.generateName;
    	      this.generation = defaults.generation;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.ownerReferences = defaults.ownerReferences;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder annotations(@Nullable Map<String,String> annotations) {
            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder finalizers(@Nullable List<String> finalizers) {
            this.finalizers = finalizers;
            return this;
        }
        public Builder finalizers(String... finalizers) {
            return finalizers(List.of(finalizers));
        }
        @CustomType.Setter
        public Builder generateName(@Nullable String generateName) {
            this.generateName = generateName;
            return this;
        }
        @CustomType.Setter
        public Builder generation(@Nullable String generation) {
            this.generation = generation;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder ownerReferences(@Nullable List<GitOpsApplicationsApplicationMetadataOwnerReference> ownerReferences) {
            this.ownerReferences = ownerReferences;
            return this;
        }
        public Builder ownerReferences(GitOpsApplicationsApplicationMetadataOwnerReference... ownerReferences) {
            return ownerReferences(List.of(ownerReferences));
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        public GitOpsApplicationsApplicationMetadata build() {
            final var o = new GitOpsApplicationsApplicationMetadata();
            o.annotations = annotations;
            o.clusterName = clusterName;
            o.finalizers = finalizers;
            o.generateName = generateName;
            o.generation = generation;
            o.labels = labels;
            o.name = name;
            o.namespace = namespace;
            o.ownerReferences = ownerReferences;
            o.uid = uid;
            return o;
        }
    }
}
