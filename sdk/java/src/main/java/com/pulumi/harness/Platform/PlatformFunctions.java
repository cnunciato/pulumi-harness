// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.Platform;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.harness.Platform.inputs.GetEnvironmentArgs;
import com.pulumi.harness.Platform.inputs.GetEnvironmentPlainArgs;
import com.pulumi.harness.Platform.inputs.GetInputSetArgs;
import com.pulumi.harness.Platform.inputs.GetInputSetPlainArgs;
import com.pulumi.harness.Platform.inputs.GetOrganizationArgs;
import com.pulumi.harness.Platform.inputs.GetOrganizationPlainArgs;
import com.pulumi.harness.Platform.inputs.GetPipelineArgs;
import com.pulumi.harness.Platform.inputs.GetPipelinePlainArgs;
import com.pulumi.harness.Platform.inputs.GetProjectArgs;
import com.pulumi.harness.Platform.inputs.GetProjectPlainArgs;
import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
import com.pulumi.harness.Platform.inputs.GetResourceGroupPlainArgs;
import com.pulumi.harness.Platform.inputs.GetRolesArgs;
import com.pulumi.harness.Platform.inputs.GetRolesPlainArgs;
import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
import com.pulumi.harness.Platform.inputs.GetSecretFilePlainArgs;
import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
import com.pulumi.harness.Platform.inputs.GetSecretSshkeyPlainArgs;
import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
import com.pulumi.harness.Platform.inputs.GetSecretTextPlainArgs;
import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
import com.pulumi.harness.Platform.inputs.GetServiceAccountPlainArgs;
import com.pulumi.harness.Platform.inputs.GetServiceArgs;
import com.pulumi.harness.Platform.inputs.GetServicePlainArgs;
import com.pulumi.harness.Platform.inputs.GetTriggersArgs;
import com.pulumi.harness.Platform.inputs.GetTriggersPlainArgs;
import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
import com.pulumi.harness.Platform.inputs.GetUsergroupPlainArgs;
import com.pulumi.harness.Platform.outputs.GetCurrentUserResult;
import com.pulumi.harness.Platform.outputs.GetEnvironmentResult;
import com.pulumi.harness.Platform.outputs.GetInputSetResult;
import com.pulumi.harness.Platform.outputs.GetOrganizationResult;
import com.pulumi.harness.Platform.outputs.GetPipelineResult;
import com.pulumi.harness.Platform.outputs.GetProjectResult;
import com.pulumi.harness.Platform.outputs.GetResourceGroupResult;
import com.pulumi.harness.Platform.outputs.GetRolesResult;
import com.pulumi.harness.Platform.outputs.GetSecretFileResult;
import com.pulumi.harness.Platform.outputs.GetSecretSshkeyResult;
import com.pulumi.harness.Platform.outputs.GetSecretTextResult;
import com.pulumi.harness.Platform.outputs.GetServiceAccountResult;
import com.pulumi.harness.Platform.outputs.GetServiceResult;
import com.pulumi.harness.Platform.outputs.GetTriggersResult;
import com.pulumi.harness.Platform.outputs.GetUsergroupResult;
import com.pulumi.harness.Utilities;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class PlatformFunctions {
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static Output<GetCurrentUserResult> getCurrentUser() {
        return getCurrentUser(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static CompletableFuture<GetCurrentUserResult> getCurrentUserPlain() {
        return getCurrentUserPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static Output<GetCurrentUserResult> getCurrentUser(InvokeArgs args) {
        return getCurrentUser(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static CompletableFuture<GetCurrentUserResult> getCurrentUserPlain(InvokeArgs args) {
        return getCurrentUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static Output<GetCurrentUserResult> getCurrentUser(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getCurrentUser:getCurrentUser", TypeShape.of(GetCurrentUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static CompletableFuture<GetCurrentUserResult> getCurrentUserPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getCurrentUser:getCurrentUser", TypeShape.of(GetCurrentUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args) {
        return getEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args) {
        return getEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static Output<GetInputSetResult> getInputSet(GetInputSetArgs args) {
        return getInputSet(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static CompletableFuture<GetInputSetResult> getInputSetPlain(GetInputSetPlainArgs args) {
        return getInputSetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static Output<GetInputSetResult> getInputSet(GetInputSetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getInputSet:getInputSet", TypeShape.of(GetInputSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static CompletableFuture<GetInputSetResult> getInputSetPlain(GetInputSetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getInputSet:getInputSet", TypeShape.of(GetInputSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     */
    public static Output<GetOrganizationResult> getOrganization() {
        return getOrganization(GetOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain() {
        return getOrganizationPlain(GetOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     */
    public static Output<GetPipelineResult> getPipeline(GetPipelineArgs args) {
        return getPipeline(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     */
    public static CompletableFuture<GetPipelineResult> getPipelinePlain(GetPipelinePlainArgs args) {
        return getPipelinePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     */
    public static Output<GetPipelineResult> getPipeline(GetPipelineArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getPipeline:getPipeline", TypeShape.of(GetPipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     */
    public static CompletableFuture<GetPipelineResult> getPipelinePlain(GetPipelinePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getPipeline:getPipeline", TypeShape.of(GetPipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup() {
        return getResourceGroup(GetResourceGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain() {
        return getResourceGroupPlain(GetResourceGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args) {
        return getResourceGroup(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain(GetResourceGroupPlainArgs args) {
        return getResourceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain(GetResourceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretFileResult> getSecretFile() {
        return getSecretFile(GetSecretFileArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretFileResult> getSecretFilePlain() {
        return getSecretFilePlain(GetSecretFilePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretFileResult> getSecretFile(GetSecretFileArgs args) {
        return getSecretFile(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretFileResult> getSecretFilePlain(GetSecretFilePlainArgs args) {
        return getSecretFilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretFileResult> getSecretFile(GetSecretFileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getSecretFile:getSecretFile", TypeShape.of(GetSecretFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretFileResult> getSecretFilePlain(GetSecretFilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getSecretFile:getSecretFile", TypeShape.of(GetSecretFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretSshkeyResult> getSecretSshkey() {
        return getSecretSshkey(GetSecretSshkeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretSshkeyResult> getSecretSshkeyPlain() {
        return getSecretSshkeyPlain(GetSecretSshkeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretSshkeyResult> getSecretSshkey(GetSecretSshkeyArgs args) {
        return getSecretSshkey(args, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretSshkeyResult> getSecretSshkeyPlain(GetSecretSshkeyPlainArgs args) {
        return getSecretSshkeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretSshkeyResult> getSecretSshkey(GetSecretSshkeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getSecretSshkey:getSecretSshkey", TypeShape.of(GetSecretSshkeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretSshkeyResult> getSecretSshkeyPlain(GetSecretSshkeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getSecretSshkey:getSecretSshkey", TypeShape.of(GetSecretSshkeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretTextResult> getSecretText() {
        return getSecretText(GetSecretTextArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretTextResult> getSecretTextPlain() {
        return getSecretTextPlain(GetSecretTextPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretTextResult> getSecretText(GetSecretTextArgs args) {
        return getSecretText(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretTextResult> getSecretTextPlain(GetSecretTextPlainArgs args) {
        return getSecretTextPlain(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretTextResult> getSecretText(GetSecretTextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getSecretText:getSecretText", TypeShape.of(GetSecretTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretTextResult> getSecretTextPlain(GetSecretTextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getSecretText:getSecretText", TypeShape.of(GetSecretTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount() {
        return getServiceAccount(GetServiceAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain() {
        return getServiceAccountPlain(GetServiceAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args) {
        return getServiceAccount(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain(GetServiceAccountPlainArgs args) {
        return getServiceAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getServiceAccount:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain(GetServiceAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getServiceAccount:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args) {
        return getTriggers(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTriggersResult> getTriggersPlain(GetTriggersPlainArgs args) {
        return getTriggersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTriggersResult> getTriggersPlain(GetTriggersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsergroupResult> getUsergroup() {
        return getUsergroup(GetUsergroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsergroupResult> getUsergroupPlain() {
        return getUsergroupPlain(GetUsergroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsergroupResult> getUsergroup(GetUsergroupArgs args) {
        return getUsergroup(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsergroupResult> getUsergroupPlain(GetUsergroupPlainArgs args) {
        return getUsergroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsergroupResult> getUsergroup(GetUsergroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:Platform/getUsergroup:getUsergroup", TypeShape.of(GetUsergroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.Platform.PlatformFunctions;
     * import com.pulumi.harness.Platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsergroupResult> getUsergroupPlain(GetUsergroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:Platform/getUsergroup:getUsergroup", TypeShape.of(GetUsergroupResult.class), args, Utilities.withVersion(options));
    }
}
