// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.inputs.GetAppDynamicsConnectorArgs;
import com.pulumi.harness.platform.inputs.GetAppDynamicsConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetArtifactoryConnectorArgs;
import com.pulumi.harness.platform.inputs.GetArtifactoryConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetAwsCCConnectorArgs;
import com.pulumi.harness.platform.inputs.GetAwsCCConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetAwsConnectorArgs;
import com.pulumi.harness.platform.inputs.GetAwsConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetAwsKmsConnectorArgs;
import com.pulumi.harness.platform.inputs.GetAwsKmsConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetAwsSecretManagerConnectorArgs;
import com.pulumi.harness.platform.inputs.GetAwsSecretManagerConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetBitbucketConnectorArgs;
import com.pulumi.harness.platform.inputs.GetBitbucketConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetDatadogConnectorArgs;
import com.pulumi.harness.platform.inputs.GetDatadogConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetDockerConnectorArgs;
import com.pulumi.harness.platform.inputs.GetDockerConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetDynatraceConnectorArgs;
import com.pulumi.harness.platform.inputs.GetDynatraceConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetEnvironmentArgs;
import com.pulumi.harness.platform.inputs.GetEnvironmentClustersMappingArgs;
import com.pulumi.harness.platform.inputs.GetEnvironmentClustersMappingPlainArgs;
import com.pulumi.harness.platform.inputs.GetEnvironmentGroupArgs;
import com.pulumi.harness.platform.inputs.GetEnvironmentGroupPlainArgs;
import com.pulumi.harness.platform.inputs.GetEnvironmentPlainArgs;
import com.pulumi.harness.platform.inputs.GetGcpConnectorArgs;
import com.pulumi.harness.platform.inputs.GetGcpConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetGitConnectorArgs;
import com.pulumi.harness.platform.inputs.GetGitConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetGithubConnectorArgs;
import com.pulumi.harness.platform.inputs.GetGithubConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetGitlabConnectorArgs;
import com.pulumi.harness.platform.inputs.GetGitlabConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetGitopsAgentArgs;
import com.pulumi.harness.platform.inputs.GetGitopsAgentPlainArgs;
import com.pulumi.harness.platform.inputs.GetGitopsClusterArgs;
import com.pulumi.harness.platform.inputs.GetGitopsClusterPlainArgs;
import com.pulumi.harness.platform.inputs.GetGitopsRepositoryArgs;
import com.pulumi.harness.platform.inputs.GetGitopsRepositoryPlainArgs;
import com.pulumi.harness.platform.inputs.GetHelmConnectorArgs;
import com.pulumi.harness.platform.inputs.GetHelmConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetInfrastructureArgs;
import com.pulumi.harness.platform.inputs.GetInfrastructurePlainArgs;
import com.pulumi.harness.platform.inputs.GetInputSetArgs;
import com.pulumi.harness.platform.inputs.GetInputSetPlainArgs;
import com.pulumi.harness.platform.inputs.GetJiraConnectorArgs;
import com.pulumi.harness.platform.inputs.GetJiraConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetKubernetesConnectorArgs;
import com.pulumi.harness.platform.inputs.GetKubernetesConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetNexusConnectorArgs;
import com.pulumi.harness.platform.inputs.GetNexusConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
import com.pulumi.harness.platform.inputs.GetOrganizationPlainArgs;
import com.pulumi.harness.platform.inputs.GetPagerdutyConnectorArgs;
import com.pulumi.harness.platform.inputs.GetPagerdutyConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
import com.pulumi.harness.platform.inputs.GetPermissionsPlainArgs;
import com.pulumi.harness.platform.inputs.GetPipelineArgs;
import com.pulumi.harness.platform.inputs.GetPipelinePlainArgs;
import com.pulumi.harness.platform.inputs.GetProjectArgs;
import com.pulumi.harness.platform.inputs.GetProjectPlainArgs;
import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
import com.pulumi.harness.platform.inputs.GetPrometheusConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
import com.pulumi.harness.platform.inputs.GetResourceGroupPlainArgs;
import com.pulumi.harness.platform.inputs.GetRoleAssignmentsArgs;
import com.pulumi.harness.platform.inputs.GetRoleAssignmentsPlainArgs;
import com.pulumi.harness.platform.inputs.GetRolesArgs;
import com.pulumi.harness.platform.inputs.GetRolesPlainArgs;
import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
import com.pulumi.harness.platform.inputs.GetSecretFilePlainArgs;
import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
import com.pulumi.harness.platform.inputs.GetSecretSshkeyPlainArgs;
import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
import com.pulumi.harness.platform.inputs.GetSecretTextPlainArgs;
import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
import com.pulumi.harness.platform.inputs.GetServiceAccountPlainArgs;
import com.pulumi.harness.platform.inputs.GetServiceArgs;
import com.pulumi.harness.platform.inputs.GetServicePlainArgs;
import com.pulumi.harness.platform.inputs.GetSplunkConnectorArgs;
import com.pulumi.harness.platform.inputs.GetSplunkConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetSumologicConnectorArgs;
import com.pulumi.harness.platform.inputs.GetSumologicConnectorPlainArgs;
import com.pulumi.harness.platform.inputs.GetTriggersArgs;
import com.pulumi.harness.platform.inputs.GetTriggersPlainArgs;
import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
import com.pulumi.harness.platform.inputs.GetUsergroupPlainArgs;
import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
import com.pulumi.harness.platform.inputs.GetVaultConnectorPlainArgs;
import com.pulumi.harness.platform.outputs.GetAppDynamicsConnectorResult;
import com.pulumi.harness.platform.outputs.GetArtifactoryConnectorResult;
import com.pulumi.harness.platform.outputs.GetAwsCCConnectorResult;
import com.pulumi.harness.platform.outputs.GetAwsConnectorResult;
import com.pulumi.harness.platform.outputs.GetAwsKmsConnectorResult;
import com.pulumi.harness.platform.outputs.GetAwsSecretManagerConnectorResult;
import com.pulumi.harness.platform.outputs.GetBitbucketConnectorResult;
import com.pulumi.harness.platform.outputs.GetCurrentUserResult;
import com.pulumi.harness.platform.outputs.GetDatadogConnectorResult;
import com.pulumi.harness.platform.outputs.GetDockerConnectorResult;
import com.pulumi.harness.platform.outputs.GetDynatraceConnectorResult;
import com.pulumi.harness.platform.outputs.GetEnvironmentClustersMappingResult;
import com.pulumi.harness.platform.outputs.GetEnvironmentGroupResult;
import com.pulumi.harness.platform.outputs.GetEnvironmentResult;
import com.pulumi.harness.platform.outputs.GetGcpConnectorResult;
import com.pulumi.harness.platform.outputs.GetGitConnectorResult;
import com.pulumi.harness.platform.outputs.GetGithubConnectorResult;
import com.pulumi.harness.platform.outputs.GetGitlabConnectorResult;
import com.pulumi.harness.platform.outputs.GetGitopsAgentResult;
import com.pulumi.harness.platform.outputs.GetGitopsClusterResult;
import com.pulumi.harness.platform.outputs.GetGitopsRepositoryResult;
import com.pulumi.harness.platform.outputs.GetHelmConnectorResult;
import com.pulumi.harness.platform.outputs.GetInfrastructureResult;
import com.pulumi.harness.platform.outputs.GetInputSetResult;
import com.pulumi.harness.platform.outputs.GetJiraConnectorResult;
import com.pulumi.harness.platform.outputs.GetKubernetesConnectorResult;
import com.pulumi.harness.platform.outputs.GetNexusConnectorResult;
import com.pulumi.harness.platform.outputs.GetOrganizationResult;
import com.pulumi.harness.platform.outputs.GetPagerdutyConnectorResult;
import com.pulumi.harness.platform.outputs.GetPermissionsResult;
import com.pulumi.harness.platform.outputs.GetPipelineResult;
import com.pulumi.harness.platform.outputs.GetProjectResult;
import com.pulumi.harness.platform.outputs.GetPrometheusConnectorResult;
import com.pulumi.harness.platform.outputs.GetResourceGroupResult;
import com.pulumi.harness.platform.outputs.GetRoleAssignmentsResult;
import com.pulumi.harness.platform.outputs.GetRolesResult;
import com.pulumi.harness.platform.outputs.GetSecretFileResult;
import com.pulumi.harness.platform.outputs.GetSecretSshkeyResult;
import com.pulumi.harness.platform.outputs.GetSecretTextResult;
import com.pulumi.harness.platform.outputs.GetServiceAccountResult;
import com.pulumi.harness.platform.outputs.GetServiceResult;
import com.pulumi.harness.platform.outputs.GetSplunkConnectorResult;
import com.pulumi.harness.platform.outputs.GetSumologicConnectorResult;
import com.pulumi.harness.platform.outputs.GetTriggersResult;
import com.pulumi.harness.platform.outputs.GetUsergroupResult;
import com.pulumi.harness.platform.outputs.GetVaultConnectorResult;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class PlatformFunctions {
    /**
     * Datasource for looking up an App Dynamics connector.
     * 
     */
    public static Output<GetAppDynamicsConnectorResult> getAppDynamicsConnector() {
        return getAppDynamicsConnector(GetAppDynamicsConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an App Dynamics connector.
     * 
     */
    public static CompletableFuture<GetAppDynamicsConnectorResult> getAppDynamicsConnectorPlain() {
        return getAppDynamicsConnectorPlain(GetAppDynamicsConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an App Dynamics connector.
     * 
     */
    public static Output<GetAppDynamicsConnectorResult> getAppDynamicsConnector(GetAppDynamicsConnectorArgs args) {
        return getAppDynamicsConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an App Dynamics connector.
     * 
     */
    public static CompletableFuture<GetAppDynamicsConnectorResult> getAppDynamicsConnectorPlain(GetAppDynamicsConnectorPlainArgs args) {
        return getAppDynamicsConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an App Dynamics connector.
     * 
     */
    public static Output<GetAppDynamicsConnectorResult> getAppDynamicsConnector(GetAppDynamicsConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getAppDynamicsConnector:getAppDynamicsConnector", TypeShape.of(GetAppDynamicsConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an App Dynamics connector.
     * 
     */
    public static CompletableFuture<GetAppDynamicsConnectorResult> getAppDynamicsConnectorPlain(GetAppDynamicsConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getAppDynamicsConnector:getAppDynamicsConnector", TypeShape.of(GetAppDynamicsConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource for looking up an App Dynamics connector.
     * 
     */
    public static Output<GetArtifactoryConnectorResult> getArtifactoryConnector() {
        return getArtifactoryConnector(GetArtifactoryConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an App Dynamics connector.
     * 
     */
    public static CompletableFuture<GetArtifactoryConnectorResult> getArtifactoryConnectorPlain() {
        return getArtifactoryConnectorPlain(GetArtifactoryConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an App Dynamics connector.
     * 
     */
    public static Output<GetArtifactoryConnectorResult> getArtifactoryConnector(GetArtifactoryConnectorArgs args) {
        return getArtifactoryConnector(args, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an App Dynamics connector.
     * 
     */
    public static CompletableFuture<GetArtifactoryConnectorResult> getArtifactoryConnectorPlain(GetArtifactoryConnectorPlainArgs args) {
        return getArtifactoryConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an App Dynamics connector.
     * 
     */
    public static Output<GetArtifactoryConnectorResult> getArtifactoryConnector(GetArtifactoryConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getArtifactoryConnector:getArtifactoryConnector", TypeShape.of(GetArtifactoryConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource for looking up an App Dynamics connector.
     * 
     */
    public static CompletableFuture<GetArtifactoryConnectorResult> getArtifactoryConnectorPlain(GetArtifactoryConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getArtifactoryConnector:getArtifactoryConnector", TypeShape.of(GetArtifactoryConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS Cloud Cost connector.
     * 
     */
    public static Output<GetAwsCCConnectorResult> getAwsCCConnector() {
        return getAwsCCConnector(GetAwsCCConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Cloud Cost connector.
     * 
     */
    public static CompletableFuture<GetAwsCCConnectorResult> getAwsCCConnectorPlain() {
        return getAwsCCConnectorPlain(GetAwsCCConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Cloud Cost connector.
     * 
     */
    public static Output<GetAwsCCConnectorResult> getAwsCCConnector(GetAwsCCConnectorArgs args) {
        return getAwsCCConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Cloud Cost connector.
     * 
     */
    public static CompletableFuture<GetAwsCCConnectorResult> getAwsCCConnectorPlain(GetAwsCCConnectorPlainArgs args) {
        return getAwsCCConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Cloud Cost connector.
     * 
     */
    public static Output<GetAwsCCConnectorResult> getAwsCCConnector(GetAwsCCConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getAwsCCConnector:getAwsCCConnector", TypeShape.of(GetAwsCCConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS Cloud Cost connector.
     * 
     */
    public static CompletableFuture<GetAwsCCConnectorResult> getAwsCCConnectorPlain(GetAwsCCConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getAwsCCConnector:getAwsCCConnector", TypeShape.of(GetAwsCCConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS connector.
     * 
     */
    public static Output<GetAwsConnectorResult> getAwsConnector() {
        return getAwsConnector(GetAwsConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS connector.
     * 
     */
    public static CompletableFuture<GetAwsConnectorResult> getAwsConnectorPlain() {
        return getAwsConnectorPlain(GetAwsConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS connector.
     * 
     */
    public static Output<GetAwsConnectorResult> getAwsConnector(GetAwsConnectorArgs args) {
        return getAwsConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS connector.
     * 
     */
    public static CompletableFuture<GetAwsConnectorResult> getAwsConnectorPlain(GetAwsConnectorPlainArgs args) {
        return getAwsConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS connector.
     * 
     */
    public static Output<GetAwsConnectorResult> getAwsConnector(GetAwsConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getAwsConnector:getAwsConnector", TypeShape.of(GetAwsConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS connector.
     * 
     */
    public static CompletableFuture<GetAwsConnectorResult> getAwsConnectorPlain(GetAwsConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getAwsConnector:getAwsConnector", TypeShape.of(GetAwsConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS KMS connector.
     * 
     */
    public static Output<GetAwsKmsConnectorResult> getAwsKmsConnector() {
        return getAwsKmsConnector(GetAwsKmsConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS KMS connector.
     * 
     */
    public static CompletableFuture<GetAwsKmsConnectorResult> getAwsKmsConnectorPlain() {
        return getAwsKmsConnectorPlain(GetAwsKmsConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS KMS connector.
     * 
     */
    public static Output<GetAwsKmsConnectorResult> getAwsKmsConnector(GetAwsKmsConnectorArgs args) {
        return getAwsKmsConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS KMS connector.
     * 
     */
    public static CompletableFuture<GetAwsKmsConnectorResult> getAwsKmsConnectorPlain(GetAwsKmsConnectorPlainArgs args) {
        return getAwsKmsConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS KMS connector.
     * 
     */
    public static Output<GetAwsKmsConnectorResult> getAwsKmsConnector(GetAwsKmsConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getAwsKmsConnector:getAwsKmsConnector", TypeShape.of(GetAwsKmsConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS KMS connector.
     * 
     */
    public static CompletableFuture<GetAwsKmsConnectorResult> getAwsKmsConnectorPlain(GetAwsKmsConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getAwsKmsConnector:getAwsKmsConnector", TypeShape.of(GetAwsKmsConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS Secret Manager connector.
     * 
     */
    public static Output<GetAwsSecretManagerConnectorResult> getAwsSecretManagerConnector() {
        return getAwsSecretManagerConnector(GetAwsSecretManagerConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Secret Manager connector.
     * 
     */
    public static CompletableFuture<GetAwsSecretManagerConnectorResult> getAwsSecretManagerConnectorPlain() {
        return getAwsSecretManagerConnectorPlain(GetAwsSecretManagerConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Secret Manager connector.
     * 
     */
    public static Output<GetAwsSecretManagerConnectorResult> getAwsSecretManagerConnector(GetAwsSecretManagerConnectorArgs args) {
        return getAwsSecretManagerConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Secret Manager connector.
     * 
     */
    public static CompletableFuture<GetAwsSecretManagerConnectorResult> getAwsSecretManagerConnectorPlain(GetAwsSecretManagerConnectorPlainArgs args) {
        return getAwsSecretManagerConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up an AWS Secret Manager connector.
     * 
     */
    public static Output<GetAwsSecretManagerConnectorResult> getAwsSecretManagerConnector(GetAwsSecretManagerConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getAwsSecretManagerConnector:getAwsSecretManagerConnector", TypeShape.of(GetAwsSecretManagerConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up an AWS Secret Manager connector.
     * 
     */
    public static CompletableFuture<GetAwsSecretManagerConnectorResult> getAwsSecretManagerConnectorPlain(GetAwsSecretManagerConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getAwsSecretManagerConnector:getAwsSecretManagerConnector", TypeShape.of(GetAwsSecretManagerConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Bitbucket connector.
     * 
     */
    public static Output<GetBitbucketConnectorResult> getBitbucketConnector() {
        return getBitbucketConnector(GetBitbucketConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Bitbucket connector.
     * 
     */
    public static CompletableFuture<GetBitbucketConnectorResult> getBitbucketConnectorPlain() {
        return getBitbucketConnectorPlain(GetBitbucketConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Bitbucket connector.
     * 
     */
    public static Output<GetBitbucketConnectorResult> getBitbucketConnector(GetBitbucketConnectorArgs args) {
        return getBitbucketConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Bitbucket connector.
     * 
     */
    public static CompletableFuture<GetBitbucketConnectorResult> getBitbucketConnectorPlain(GetBitbucketConnectorPlainArgs args) {
        return getBitbucketConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Bitbucket connector.
     * 
     */
    public static Output<GetBitbucketConnectorResult> getBitbucketConnector(GetBitbucketConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getBitbucketConnector:getBitbucketConnector", TypeShape.of(GetBitbucketConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Bitbucket connector.
     * 
     */
    public static CompletableFuture<GetBitbucketConnectorResult> getBitbucketConnectorPlain(GetBitbucketConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getBitbucketConnector:getBitbucketConnector", TypeShape.of(GetBitbucketConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static Output<GetCurrentUserResult> getCurrentUser() {
        return getCurrentUser(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static CompletableFuture<GetCurrentUserResult> getCurrentUserPlain() {
        return getCurrentUserPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static Output<GetCurrentUserResult> getCurrentUser(InvokeArgs args) {
        return getCurrentUser(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static CompletableFuture<GetCurrentUserResult> getCurrentUserPlain(InvokeArgs args) {
        return getCurrentUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static Output<GetCurrentUserResult> getCurrentUser(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getCurrentUser:getCurrentUser", TypeShape.of(GetCurrentUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving the current user based on the API key.
     * 
     */
    public static CompletableFuture<GetCurrentUserResult> getCurrentUserPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getCurrentUser:getCurrentUser", TypeShape.of(GetCurrentUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static Output<GetDatadogConnectorResult> getDatadogConnector() {
        return getDatadogConnector(GetDatadogConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static CompletableFuture<GetDatadogConnectorResult> getDatadogConnectorPlain() {
        return getDatadogConnectorPlain(GetDatadogConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static Output<GetDatadogConnectorResult> getDatadogConnector(GetDatadogConnectorArgs args) {
        return getDatadogConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static CompletableFuture<GetDatadogConnectorResult> getDatadogConnectorPlain(GetDatadogConnectorPlainArgs args) {
        return getDatadogConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static Output<GetDatadogConnectorResult> getDatadogConnector(GetDatadogConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getDatadogConnector:getDatadogConnector", TypeShape.of(GetDatadogConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static CompletableFuture<GetDatadogConnectorResult> getDatadogConnectorPlain(GetDatadogConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getDatadogConnector:getDatadogConnector", TypeShape.of(GetDatadogConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static Output<GetDockerConnectorResult> getDockerConnector() {
        return getDockerConnector(GetDockerConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static CompletableFuture<GetDockerConnectorResult> getDockerConnectorPlain() {
        return getDockerConnectorPlain(GetDockerConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static Output<GetDockerConnectorResult> getDockerConnector(GetDockerConnectorArgs args) {
        return getDockerConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static CompletableFuture<GetDockerConnectorResult> getDockerConnectorPlain(GetDockerConnectorPlainArgs args) {
        return getDockerConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static Output<GetDockerConnectorResult> getDockerConnector(GetDockerConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getDockerConnector:getDockerConnector", TypeShape.of(GetDockerConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Datadog connector.
     * 
     */
    public static CompletableFuture<GetDockerConnectorResult> getDockerConnectorPlain(GetDockerConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getDockerConnector:getDockerConnector", TypeShape.of(GetDockerConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Dynatrace connector.
     * 
     */
    public static Output<GetDynatraceConnectorResult> getDynatraceConnector() {
        return getDynatraceConnector(GetDynatraceConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Dynatrace connector.
     * 
     */
    public static CompletableFuture<GetDynatraceConnectorResult> getDynatraceConnectorPlain() {
        return getDynatraceConnectorPlain(GetDynatraceConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Dynatrace connector.
     * 
     */
    public static Output<GetDynatraceConnectorResult> getDynatraceConnector(GetDynatraceConnectorArgs args) {
        return getDynatraceConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Dynatrace connector.
     * 
     */
    public static CompletableFuture<GetDynatraceConnectorResult> getDynatraceConnectorPlain(GetDynatraceConnectorPlainArgs args) {
        return getDynatraceConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Dynatrace connector.
     * 
     */
    public static Output<GetDynatraceConnectorResult> getDynatraceConnector(GetDynatraceConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getDynatraceConnector:getDynatraceConnector", TypeShape.of(GetDynatraceConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Dynatrace connector.
     * 
     */
    public static CompletableFuture<GetDynatraceConnectorResult> getDynatraceConnectorPlain(GetDynatraceConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getDynatraceConnector:getDynatraceConnector", TypeShape.of(GetDynatraceConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args) {
        return getEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args) {
        return getEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness environment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentClustersMappingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentClustersMapping(GetEnvironmentClustersMappingArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentClustersMappingResult> getEnvironmentClustersMapping(GetEnvironmentClustersMappingArgs args) {
        return getEnvironmentClustersMapping(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentClustersMappingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentClustersMapping(GetEnvironmentClustersMappingArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentClustersMappingResult> getEnvironmentClustersMappingPlain(GetEnvironmentClustersMappingPlainArgs args) {
        return getEnvironmentClustersMappingPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentClustersMappingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentClustersMapping(GetEnvironmentClustersMappingArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentClustersMappingResult> getEnvironmentClustersMapping(GetEnvironmentClustersMappingArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getEnvironmentClustersMapping:getEnvironmentClustersMapping", TypeShape.of(GetEnvironmentClustersMappingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness Cluster.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentClustersMappingArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentClustersMapping(GetEnvironmentClustersMappingArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentClustersMappingResult> getEnvironmentClustersMappingPlain(GetEnvironmentClustersMappingPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getEnvironmentClustersMapping:getEnvironmentClustersMapping", TypeShape.of(GetEnvironmentClustersMappingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness environment group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentGroup(GetEnvironmentGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentGroupResult> getEnvironmentGroup(GetEnvironmentGroupArgs args) {
        return getEnvironmentGroup(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness environment group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentGroup(GetEnvironmentGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentGroupResult> getEnvironmentGroupPlain(GetEnvironmentGroupPlainArgs args) {
        return getEnvironmentGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness environment group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentGroup(GetEnvironmentGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetEnvironmentGroupResult> getEnvironmentGroup(GetEnvironmentGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getEnvironmentGroup:getEnvironmentGroup", TypeShape.of(GetEnvironmentGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness environment group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetEnvironmentGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getEnvironmentGroup(GetEnvironmentGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetEnvironmentGroupResult> getEnvironmentGroupPlain(GetEnvironmentGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getEnvironmentGroup:getEnvironmentGroup", TypeShape.of(GetEnvironmentGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Gcp connector.
     * 
     */
    public static Output<GetGcpConnectorResult> getGcpConnector() {
        return getGcpConnector(GetGcpConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gcp connector.
     * 
     */
    public static CompletableFuture<GetGcpConnectorResult> getGcpConnectorPlain() {
        return getGcpConnectorPlain(GetGcpConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gcp connector.
     * 
     */
    public static Output<GetGcpConnectorResult> getGcpConnector(GetGcpConnectorArgs args) {
        return getGcpConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gcp connector.
     * 
     */
    public static CompletableFuture<GetGcpConnectorResult> getGcpConnectorPlain(GetGcpConnectorPlainArgs args) {
        return getGcpConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gcp connector.
     * 
     */
    public static Output<GetGcpConnectorResult> getGcpConnector(GetGcpConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGcpConnector:getGcpConnector", TypeShape.of(GetGcpConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Gcp connector.
     * 
     */
    public static CompletableFuture<GetGcpConnectorResult> getGcpConnectorPlain(GetGcpConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGcpConnector:getGcpConnector", TypeShape.of(GetGcpConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Git connector.
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector() {
        return getGitConnector(GetGitConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Git connector.
     * 
     */
    public static CompletableFuture<GetGitConnectorResult> getGitConnectorPlain() {
        return getGitConnectorPlain(GetGitConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Git connector.
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector(GetGitConnectorArgs args) {
        return getGitConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Git connector.
     * 
     */
    public static CompletableFuture<GetGitConnectorResult> getGitConnectorPlain(GetGitConnectorPlainArgs args) {
        return getGitConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Git connector.
     * 
     */
    public static Output<GetGitConnectorResult> getGitConnector(GetGitConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGitConnector:getGitConnector", TypeShape.of(GetGitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Git connector.
     * 
     */
    public static CompletableFuture<GetGitConnectorResult> getGitConnectorPlain(GetGitConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGitConnector:getGitConnector", TypeShape.of(GetGitConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Github connector.
     * 
     */
    public static Output<GetGithubConnectorResult> getGithubConnector() {
        return getGithubConnector(GetGithubConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Github connector.
     * 
     */
    public static CompletableFuture<GetGithubConnectorResult> getGithubConnectorPlain() {
        return getGithubConnectorPlain(GetGithubConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Github connector.
     * 
     */
    public static Output<GetGithubConnectorResult> getGithubConnector(GetGithubConnectorArgs args) {
        return getGithubConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Github connector.
     * 
     */
    public static CompletableFuture<GetGithubConnectorResult> getGithubConnectorPlain(GetGithubConnectorPlainArgs args) {
        return getGithubConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Github connector.
     * 
     */
    public static Output<GetGithubConnectorResult> getGithubConnector(GetGithubConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGithubConnector:getGithubConnector", TypeShape.of(GetGithubConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Github connector.
     * 
     */
    public static CompletableFuture<GetGithubConnectorResult> getGithubConnectorPlain(GetGithubConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGithubConnector:getGithubConnector", TypeShape.of(GetGithubConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Gitlab connector.
     * 
     */
    public static Output<GetGitlabConnectorResult> getGitlabConnector() {
        return getGitlabConnector(GetGitlabConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gitlab connector.
     * 
     */
    public static CompletableFuture<GetGitlabConnectorResult> getGitlabConnectorPlain() {
        return getGitlabConnectorPlain(GetGitlabConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gitlab connector.
     * 
     */
    public static Output<GetGitlabConnectorResult> getGitlabConnector(GetGitlabConnectorArgs args) {
        return getGitlabConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gitlab connector.
     * 
     */
    public static CompletableFuture<GetGitlabConnectorResult> getGitlabConnectorPlain(GetGitlabConnectorPlainArgs args) {
        return getGitlabConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Gitlab connector.
     * 
     */
    public static Output<GetGitlabConnectorResult> getGitlabConnector(GetGitlabConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGitlabConnector:getGitlabConnector", TypeShape.of(GetGitlabConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Gitlab connector.
     * 
     */
    public static CompletableFuture<GetGitlabConnectorResult> getGitlabConnectorPlain(GetGitlabConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGitlabConnector:getGitlabConnector", TypeShape.of(GetGitlabConnectorResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetGitopsAgentResult> getGitopsAgent(GetGitopsAgentArgs args) {
        return getGitopsAgent(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGitopsAgentResult> getGitopsAgentPlain(GetGitopsAgentPlainArgs args) {
        return getGitopsAgentPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetGitopsAgentResult> getGitopsAgent(GetGitopsAgentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGitopsAgent:getGitopsAgent", TypeShape.of(GetGitopsAgentResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetGitopsAgentResult> getGitopsAgentPlain(GetGitopsAgentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGitopsAgent:getGitopsAgent", TypeShape.of(GetGitopsAgentResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetGitopsClusterResult> getGitopsCluster(GetGitopsClusterArgs args) {
        return getGitopsCluster(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGitopsClusterResult> getGitopsClusterPlain(GetGitopsClusterPlainArgs args) {
        return getGitopsClusterPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetGitopsClusterResult> getGitopsCluster(GetGitopsClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGitopsCluster:getGitopsCluster", TypeShape.of(GetGitopsClusterResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetGitopsClusterResult> getGitopsClusterPlain(GetGitopsClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGitopsCluster:getGitopsCluster", TypeShape.of(GetGitopsClusterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetGitopsRepositoryResult> getGitopsRepository(GetGitopsRepositoryArgs args) {
        return getGitopsRepository(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetGitopsRepositoryResult> getGitopsRepositoryPlain(GetGitopsRepositoryPlainArgs args) {
        return getGitopsRepositoryPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetGitopsRepositoryResult> getGitopsRepository(GetGitopsRepositoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getGitopsRepository:getGitopsRepository", TypeShape.of(GetGitopsRepositoryResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetGitopsRepositoryResult> getGitopsRepositoryPlain(GetGitopsRepositoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getGitopsRepository:getGitopsRepository", TypeShape.of(GetGitopsRepositoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Helm connector.
     * 
     */
    public static Output<GetHelmConnectorResult> getHelmConnector() {
        return getHelmConnector(GetHelmConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Helm connector.
     * 
     */
    public static CompletableFuture<GetHelmConnectorResult> getHelmConnectorPlain() {
        return getHelmConnectorPlain(GetHelmConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Helm connector.
     * 
     */
    public static Output<GetHelmConnectorResult> getHelmConnector(GetHelmConnectorArgs args) {
        return getHelmConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Helm connector.
     * 
     */
    public static CompletableFuture<GetHelmConnectorResult> getHelmConnectorPlain(GetHelmConnectorPlainArgs args) {
        return getHelmConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Helm connector.
     * 
     */
    public static Output<GetHelmConnectorResult> getHelmConnector(GetHelmConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getHelmConnector:getHelmConnector", TypeShape.of(GetHelmConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Helm connector.
     * 
     */
    public static CompletableFuture<GetHelmConnectorResult> getHelmConnectorPlain(GetHelmConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getHelmConnector:getHelmConnector", TypeShape.of(GetHelmConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness Infrastructure.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getInfrastructure(GetInfrastructureArgs.builder()
     *             .envId(&#34;env_id&#34;)
     *             .identifier(&#34;identifier&#34;)
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInfrastructureResult> getInfrastructure(GetInfrastructureArgs args) {
        return getInfrastructure(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness Infrastructure.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getInfrastructure(GetInfrastructureArgs.builder()
     *             .envId(&#34;env_id&#34;)
     *             .identifier(&#34;identifier&#34;)
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInfrastructureResult> getInfrastructurePlain(GetInfrastructurePlainArgs args) {
        return getInfrastructurePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness Infrastructure.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getInfrastructure(GetInfrastructureArgs.builder()
     *             .envId(&#34;env_id&#34;)
     *             .identifier(&#34;identifier&#34;)
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInfrastructureResult> getInfrastructure(GetInfrastructureArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getInfrastructure:getInfrastructure", TypeShape.of(GetInfrastructureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness Infrastructure.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getInfrastructure(GetInfrastructureArgs.builder()
     *             .envId(&#34;env_id&#34;)
     *             .identifier(&#34;identifier&#34;)
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInfrastructureResult> getInfrastructurePlain(GetInfrastructurePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getInfrastructure:getInfrastructure", TypeShape.of(GetInfrastructureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static Output<GetInputSetResult> getInputSet(GetInputSetArgs args) {
        return getInputSet(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static CompletableFuture<GetInputSetResult> getInputSetPlain(GetInputSetPlainArgs args) {
        return getInputSetPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static Output<GetInputSetResult> getInputSet(GetInputSetArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getInputSet:getInputSet", TypeShape.of(GetInputSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness input set.
     * 
     */
    public static CompletableFuture<GetInputSetResult> getInputSetPlain(GetInputSetPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getInputSet:getInputSet", TypeShape.of(GetInputSetResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Jira connector.
     * 
     */
    public static Output<GetJiraConnectorResult> getJiraConnector() {
        return getJiraConnector(GetJiraConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Jira connector.
     * 
     */
    public static CompletableFuture<GetJiraConnectorResult> getJiraConnectorPlain() {
        return getJiraConnectorPlain(GetJiraConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Jira connector.
     * 
     */
    public static Output<GetJiraConnectorResult> getJiraConnector(GetJiraConnectorArgs args) {
        return getJiraConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Jira connector.
     * 
     */
    public static CompletableFuture<GetJiraConnectorResult> getJiraConnectorPlain(GetJiraConnectorPlainArgs args) {
        return getJiraConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Jira connector.
     * 
     */
    public static Output<GetJiraConnectorResult> getJiraConnector(GetJiraConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getJiraConnector:getJiraConnector", TypeShape.of(GetJiraConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Jira connector.
     * 
     */
    public static CompletableFuture<GetJiraConnectorResult> getJiraConnectorPlain(GetJiraConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getJiraConnector:getJiraConnector", TypeShape.of(GetJiraConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Kubernetes connector.
     * 
     */
    public static Output<GetKubernetesConnectorResult> getKubernetesConnector() {
        return getKubernetesConnector(GetKubernetesConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Kubernetes connector.
     * 
     */
    public static CompletableFuture<GetKubernetesConnectorResult> getKubernetesConnectorPlain() {
        return getKubernetesConnectorPlain(GetKubernetesConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Kubernetes connector.
     * 
     */
    public static Output<GetKubernetesConnectorResult> getKubernetesConnector(GetKubernetesConnectorArgs args) {
        return getKubernetesConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Kubernetes connector.
     * 
     */
    public static CompletableFuture<GetKubernetesConnectorResult> getKubernetesConnectorPlain(GetKubernetesConnectorPlainArgs args) {
        return getKubernetesConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Kubernetes connector.
     * 
     */
    public static Output<GetKubernetesConnectorResult> getKubernetesConnector(GetKubernetesConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getKubernetesConnector:getKubernetesConnector", TypeShape.of(GetKubernetesConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Kubernetes connector.
     * 
     */
    public static CompletableFuture<GetKubernetesConnectorResult> getKubernetesConnectorPlain(GetKubernetesConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getKubernetesConnector:getKubernetesConnector", TypeShape.of(GetKubernetesConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Nexus connector.
     * 
     */
    public static Output<GetNexusConnectorResult> getNexusConnector() {
        return getNexusConnector(GetNexusConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Nexus connector.
     * 
     */
    public static CompletableFuture<GetNexusConnectorResult> getNexusConnectorPlain() {
        return getNexusConnectorPlain(GetNexusConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Nexus connector.
     * 
     */
    public static Output<GetNexusConnectorResult> getNexusConnector(GetNexusConnectorArgs args) {
        return getNexusConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Nexus connector.
     * 
     */
    public static CompletableFuture<GetNexusConnectorResult> getNexusConnectorPlain(GetNexusConnectorPlainArgs args) {
        return getNexusConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Nexus connector.
     * 
     */
    public static Output<GetNexusConnectorResult> getNexusConnector(GetNexusConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getNexusConnector:getNexusConnector", TypeShape.of(GetNexusConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Nexus connector.
     * 
     */
    public static CompletableFuture<GetNexusConnectorResult> getNexusConnectorPlain(GetNexusConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getNexusConnector:getNexusConnector", TypeShape.of(GetNexusConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PlatformFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrganizationResult> getOrganization() {
        return getOrganization(GetOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PlatformFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain() {
        return getOrganizationPlain(GetOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PlatformFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PlatformFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PlatformFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness organization
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var this = PlatformFunctions.getOrganization(GetOrganizationArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a PagerDuty connector.
     * 
     */
    public static Output<GetPagerdutyConnectorResult> getPagerdutyConnector() {
        return getPagerdutyConnector(GetPagerdutyConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a PagerDuty connector.
     * 
     */
    public static CompletableFuture<GetPagerdutyConnectorResult> getPagerdutyConnectorPlain() {
        return getPagerdutyConnectorPlain(GetPagerdutyConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a PagerDuty connector.
     * 
     */
    public static Output<GetPagerdutyConnectorResult> getPagerdutyConnector(GetPagerdutyConnectorArgs args) {
        return getPagerdutyConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a PagerDuty connector.
     * 
     */
    public static CompletableFuture<GetPagerdutyConnectorResult> getPagerdutyConnectorPlain(GetPagerdutyConnectorPlainArgs args) {
        return getPagerdutyConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a PagerDuty connector.
     * 
     */
    public static Output<GetPagerdutyConnectorResult> getPagerdutyConnector(GetPagerdutyConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getPagerdutyConnector:getPagerdutyConnector", TypeShape.of(GetPagerdutyConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a PagerDuty connector.
     * 
     */
    public static CompletableFuture<GetPagerdutyConnectorResult> getPagerdutyConnectorPlain(GetPagerdutyConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getPagerdutyConnector:getPagerdutyConnector", TypeShape.of(GetPagerdutyConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving permissions.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getPermissions(GetPermissionsArgs.builder()
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPermissionsResult> getPermissions() {
        return getPermissions(GetPermissionsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving permissions.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getPermissions(GetPermissionsArgs.builder()
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPermissionsResult> getPermissionsPlain() {
        return getPermissionsPlain(GetPermissionsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving permissions.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getPermissions(GetPermissionsArgs.builder()
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPermissionsResult> getPermissions(GetPermissionsArgs args) {
        return getPermissions(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving permissions.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getPermissions(GetPermissionsArgs.builder()
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPermissionsResult> getPermissionsPlain(GetPermissionsPlainArgs args) {
        return getPermissionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving permissions.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getPermissions(GetPermissionsArgs.builder()
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPermissionsResult> getPermissions(GetPermissionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getPermissions:getPermissions", TypeShape.of(GetPermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving permissions.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPermissionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getPermissions(GetPermissionsArgs.builder()
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPermissionsResult> getPermissionsPlain(GetPermissionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getPermissions:getPermissions", TypeShape.of(GetPermissionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPipeline(GetPipelineArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPipelineResult> getPipeline(GetPipelineArgs args) {
        return getPipeline(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPipeline(GetPipelineArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPipelineResult> getPipelinePlain(GetPipelinePlainArgs args) {
        return getPipelinePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPipeline(GetPipelineArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPipelineResult> getPipeline(GetPipelineArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getPipeline:getPipeline", TypeShape.of(GetPipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness pipeline.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPipelineArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPipeline(GetPipelineArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPipelineResult> getPipelinePlain(GetPipelinePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getPipeline:getPipeline", TypeShape.of(GetPipelineResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness project.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Prometheus connector.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPrometheusConnector(GetPrometheusConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPrometheusConnectorResult> getPrometheusConnector() {
        return getPrometheusConnector(GetPrometheusConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Prometheus connector.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPrometheusConnector(GetPrometheusConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPrometheusConnectorResult> getPrometheusConnectorPlain() {
        return getPrometheusConnectorPlain(GetPrometheusConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Prometheus connector.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPrometheusConnector(GetPrometheusConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPrometheusConnectorResult> getPrometheusConnector(GetPrometheusConnectorArgs args) {
        return getPrometheusConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Prometheus connector.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPrometheusConnector(GetPrometheusConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPrometheusConnectorResult> getPrometheusConnectorPlain(GetPrometheusConnectorPlainArgs args) {
        return getPrometheusConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Prometheus connector.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPrometheusConnector(GetPrometheusConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetPrometheusConnectorResult> getPrometheusConnector(GetPrometheusConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getPrometheusConnector:getPrometheusConnector", TypeShape.of(GetPrometheusConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Prometheus connector.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetPrometheusConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getPrometheusConnector(GetPrometheusConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetPrometheusConnectorResult> getPrometheusConnectorPlain(GetPrometheusConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getPrometheusConnector:getPrometheusConnector", TypeShape.of(GetPrometheusConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup() {
        return getResourceGroup(GetResourceGroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain() {
        return getResourceGroupPlain(GetResourceGroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args) {
        return getResourceGroup(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain(GetResourceGroupPlainArgs args) {
        return getResourceGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetResourceGroupResult> getResourceGroup(GetResourceGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up resource group in harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetResourceGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getResourceGroup(GetResourceGroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetResourceGroupResult> getResourceGroupPlain(GetResourceGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getResourceGroup:getResourceGroup", TypeShape.of(GetResourceGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving role assignment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRoleAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoleAssignments(GetRoleAssignmentsArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleAssignmentsResult> getRoleAssignments(GetRoleAssignmentsArgs args) {
        return getRoleAssignments(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving role assignment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRoleAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoleAssignments(GetRoleAssignmentsArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleAssignmentsResult> getRoleAssignmentsPlain(GetRoleAssignmentsPlainArgs args) {
        return getRoleAssignmentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving role assignment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRoleAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoleAssignments(GetRoleAssignmentsArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRoleAssignmentsResult> getRoleAssignments(GetRoleAssignmentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getRoleAssignments:getRoleAssignments", TypeShape.of(GetRoleAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving role assignment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRoleAssignmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoleAssignments(GetRoleAssignmentsArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRoleAssignmentsResult> getRoleAssignmentsPlain(GetRoleAssignmentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getRoleAssignments:getRoleAssignments", TypeShape.of(GetRoleAssignmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles() {
        return getRoles(GetRolesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain() {
        return getRolesPlain(GetRolesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args) {
        return getRoles(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args) {
        return getRolesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetRolesResult> getRoles(GetRolesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving roles
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetRolesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getRoles(GetRolesArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetRolesResult> getRolesPlain(GetRolesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getRoles:getRoles", TypeShape.of(GetRolesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretFileResult> getSecretFile() {
        return getSecretFile(GetSecretFileArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretFileResult> getSecretFilePlain() {
        return getSecretFilePlain(GetSecretFilePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretFileResult> getSecretFile(GetSecretFileArgs args) {
        return getSecretFile(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretFileResult> getSecretFilePlain(GetSecretFilePlainArgs args) {
        return getSecretFilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretFileResult> getSecretFile(GetSecretFileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getSecretFile:getSecretFile", TypeShape.of(GetSecretFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up secert file type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretFileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretFile(GetSecretFileArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretFileResult> getSecretFilePlain(GetSecretFilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getSecretFile:getSecretFile", TypeShape.of(GetSecretFileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretSshkeyResult> getSecretSshkey() {
        return getSecretSshkey(GetSecretSshkeyArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretSshkeyResult> getSecretSshkeyPlain() {
        return getSecretSshkeyPlain(GetSecretSshkeyPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretSshkeyResult> getSecretSshkey(GetSecretSshkeyArgs args) {
        return getSecretSshkey(args, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretSshkeyResult> getSecretSshkeyPlain(GetSecretSshkeyPlainArgs args) {
        return getSecretSshkeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretSshkeyResult> getSecretSshkey(GetSecretSshkeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getSecretSshkey:getSecretSshkey", TypeShape.of(GetSecretSshkeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Resource for looking up an SSH Key type secret.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretSshkeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getSecretSshkey(GetSecretSshkeyArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretSshkeyResult> getSecretSshkeyPlain(GetSecretSshkeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getSecretSshkey:getSecretSshkey", TypeShape.of(GetSecretSshkeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretTextResult> getSecretText() {
        return getSecretText(GetSecretTextArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretTextResult> getSecretTextPlain() {
        return getSecretTextPlain(GetSecretTextPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretTextResult> getSecretText(GetSecretTextArgs args) {
        return getSecretText(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretTextResult> getSecretTextPlain(GetSecretTextPlainArgs args) {
        return getSecretTextPlain(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecretTextResult> getSecretText(GetSecretTextArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getSecretText:getSecretText", TypeShape.of(GetSecretTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up secret of type secret text.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetSecretTextArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = PlatformFunctions.getSecretText(GetSecretTextArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecretTextResult> getSecretTextPlain(GetSecretTextPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getSecretText:getSecretText", TypeShape.of(GetSecretTextResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args) {
        return getService(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args) {
        return getServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceResult> getService(GetServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness service.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.inputs.GetServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getService(GetServiceArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceResult> getServicePlain(GetServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getService:getService", TypeShape.of(GetServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount() {
        return getServiceAccount(GetServiceAccountArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain() {
        return getServiceAccountPlain(GetServiceAccountPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args) {
        return getServiceAccount(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain(GetServiceAccountPlainArgs args) {
        return getServiceAccountPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getServiceAccount:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving service account.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetServiceAccountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getServiceAccount(GetServiceAccountArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccountPlain(GetServiceAccountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getServiceAccount:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Splunk connector.
     * 
     */
    public static Output<GetSplunkConnectorResult> getSplunkConnector() {
        return getSplunkConnector(GetSplunkConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Splunk connector.
     * 
     */
    public static CompletableFuture<GetSplunkConnectorResult> getSplunkConnectorPlain() {
        return getSplunkConnectorPlain(GetSplunkConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Splunk connector.
     * 
     */
    public static Output<GetSplunkConnectorResult> getSplunkConnector(GetSplunkConnectorArgs args) {
        return getSplunkConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Splunk connector.
     * 
     */
    public static CompletableFuture<GetSplunkConnectorResult> getSplunkConnectorPlain(GetSplunkConnectorPlainArgs args) {
        return getSplunkConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Splunk connector.
     * 
     */
    public static Output<GetSplunkConnectorResult> getSplunkConnector(GetSplunkConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getSplunkConnector:getSplunkConnector", TypeShape.of(GetSplunkConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Splunk connector.
     * 
     */
    public static CompletableFuture<GetSplunkConnectorResult> getSplunkConnectorPlain(GetSplunkConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getSplunkConnector:getSplunkConnector", TypeShape.of(GetSplunkConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Sumologic connector.
     * 
     */
    public static Output<GetSumologicConnectorResult> getSumologicConnector() {
        return getSumologicConnector(GetSumologicConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Sumologic connector.
     * 
     */
    public static CompletableFuture<GetSumologicConnectorResult> getSumologicConnectorPlain() {
        return getSumologicConnectorPlain(GetSumologicConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Sumologic connector.
     * 
     */
    public static Output<GetSumologicConnectorResult> getSumologicConnector(GetSumologicConnectorArgs args) {
        return getSumologicConnector(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Sumologic connector.
     * 
     */
    public static CompletableFuture<GetSumologicConnectorResult> getSumologicConnectorPlain(GetSumologicConnectorPlainArgs args) {
        return getSumologicConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Datasource for looking up a Sumologic connector.
     * 
     */
    public static Output<GetSumologicConnectorResult> getSumologicConnector(GetSumologicConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getSumologicConnector:getSumologicConnector", TypeShape.of(GetSumologicConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Datasource for looking up a Sumologic connector.
     * 
     */
    public static CompletableFuture<GetSumologicConnectorResult> getSumologicConnectorPlain(GetSumologicConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getSumologicConnector:getSumologicConnector", TypeShape.of(GetSumologicConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args) {
        return getTriggers(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTriggersResult> getTriggersPlain(GetTriggersPlainArgs args) {
        return getTriggersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetTriggersResult> getTriggers(GetTriggersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness trigger.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetTriggersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getTriggers(GetTriggersArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .targetId(&#34;pipeline_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetTriggersResult> getTriggersPlain(GetTriggersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getTriggers:getTriggers", TypeShape.of(GetTriggersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsergroupResult> getUsergroup() {
        return getUsergroup(GetUsergroupArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsergroupResult> getUsergroupPlain() {
        return getUsergroupPlain(GetUsergroupPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsergroupResult> getUsergroup(GetUsergroupArgs args) {
        return getUsergroup(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsergroupResult> getUsergroupPlain(GetUsergroupPlainArgs args) {
        return getUsergroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetUsergroupResult> getUsergroup(GetUsergroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getUsergroup:getUsergroup", TypeShape.of(GetUsergroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source for retrieving a Harness User Group.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetUsergroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var exampleById = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *         final var exampleByName = PlatformFunctions.getUsergroup(GetUsergroupArgs.builder()
     *             .name(&#34;name&#34;)
     *             .orgId(&#34;org_id&#34;)
     *             .projectId(&#34;project_id&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetUsergroupResult> getUsergroupPlain(GetUsergroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getUsergroup:getUsergroup", TypeShape.of(GetUsergroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up a Vault connector in Harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getVaultConnector(GetVaultConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVaultConnectorResult> getVaultConnector() {
        return getVaultConnector(GetVaultConnectorArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up a Vault connector in Harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getVaultConnector(GetVaultConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVaultConnectorResult> getVaultConnectorPlain() {
        return getVaultConnectorPlain(GetVaultConnectorPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up a Vault connector in Harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getVaultConnector(GetVaultConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVaultConnectorResult> getVaultConnector(GetVaultConnectorArgs args) {
        return getVaultConnector(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up a Vault connector in Harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getVaultConnector(GetVaultConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVaultConnectorResult> getVaultConnectorPlain(GetVaultConnectorPlainArgs args) {
        return getVaultConnectorPlain(args, InvokeOptions.Empty);
    }
    /**
     * DataSource for looking up a Vault connector in Harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getVaultConnector(GetVaultConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetVaultConnectorResult> getVaultConnector(GetVaultConnectorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("harness:platform/getVaultConnector:getVaultConnector", TypeShape.of(GetVaultConnectorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * DataSource for looking up a Vault connector in Harness.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.harness.platform.PlatformFunctions;
     * import com.pulumi.harness.platform.inputs.GetVaultConnectorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = PlatformFunctions.getVaultConnector(GetVaultConnectorArgs.builder()
     *             .identifier(&#34;identifier&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetVaultConnectorResult> getVaultConnectorPlain(GetVaultConnectorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("harness:platform/getVaultConnector:getVaultConnector", TypeShape.of(GetVaultConnectorResult.class), args, Utilities.withVersion(options));
    }
}
