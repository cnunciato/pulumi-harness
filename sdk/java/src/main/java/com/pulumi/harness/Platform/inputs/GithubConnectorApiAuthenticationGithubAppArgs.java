// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GithubConnectorApiAuthenticationGithubAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final GithubConnectorApiAuthenticationGithubAppArgs Empty = new GithubConnectorApiAuthenticationGithubAppArgs();

    @Import(name="applicationId", required=true)
    private Output<String> applicationId;

    public Output<String> applicationId() {
        return this.applicationId;
    }

    @Import(name="installationId", required=true)
    private Output<String> installationId;

    public Output<String> installationId() {
        return this.installationId;
    }

    @Import(name="privateKeyRef", required=true)
    private Output<String> privateKeyRef;

    public Output<String> privateKeyRef() {
        return this.privateKeyRef;
    }

    private GithubConnectorApiAuthenticationGithubAppArgs() {}

    private GithubConnectorApiAuthenticationGithubAppArgs(GithubConnectorApiAuthenticationGithubAppArgs $) {
        this.applicationId = $.applicationId;
        this.installationId = $.installationId;
        this.privateKeyRef = $.privateKeyRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GithubConnectorApiAuthenticationGithubAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GithubConnectorApiAuthenticationGithubAppArgs $;

        public Builder() {
            $ = new GithubConnectorApiAuthenticationGithubAppArgs();
        }

        public Builder(GithubConnectorApiAuthenticationGithubAppArgs defaults) {
            $ = new GithubConnectorApiAuthenticationGithubAppArgs(Objects.requireNonNull(defaults));
        }

        public Builder applicationId(Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        public Builder installationId(Output<String> installationId) {
            $.installationId = installationId;
            return this;
        }

        public Builder installationId(String installationId) {
            return installationId(Output.of(installationId));
        }

        public Builder privateKeyRef(Output<String> privateKeyRef) {
            $.privateKeyRef = privateKeyRef;
            return this;
        }

        public Builder privateKeyRef(String privateKeyRef) {
            return privateKeyRef(Output.of(privateKeyRef));
        }

        public GithubConnectorApiAuthenticationGithubAppArgs build() {
            $.applicationId = Objects.requireNonNull($.applicationId, "expected parameter 'applicationId' to be non-null");
            $.installationId = Objects.requireNonNull($.installationId, "expected parameter 'installationId' to be non-null");
            $.privateKeyRef = Objects.requireNonNull($.privateKeyRef, "expected parameter 'privateKeyRef' to be non-null");
            return $;
        }
    }

}
