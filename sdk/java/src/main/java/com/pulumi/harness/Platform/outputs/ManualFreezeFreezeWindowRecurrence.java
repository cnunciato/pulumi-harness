// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.ManualFreezeFreezeWindowRecurrenceRecurrenceSpec;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManualFreezeFreezeWindowRecurrence {
    private @Nullable List<ManualFreezeFreezeWindowRecurrenceRecurrenceSpec> recurrenceSpecs;
    /**
     * @return Type of freeze
     * 
     */
    private @Nullable String type;

    private ManualFreezeFreezeWindowRecurrence() {}
    public List<ManualFreezeFreezeWindowRecurrenceRecurrenceSpec> recurrenceSpecs() {
        return this.recurrenceSpecs == null ? List.of() : this.recurrenceSpecs;
    }
    /**
     * @return Type of freeze
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManualFreezeFreezeWindowRecurrence defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ManualFreezeFreezeWindowRecurrenceRecurrenceSpec> recurrenceSpecs;
        private @Nullable String type;
        public Builder() {}
        public Builder(ManualFreezeFreezeWindowRecurrence defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recurrenceSpecs = defaults.recurrenceSpecs;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder recurrenceSpecs(@Nullable List<ManualFreezeFreezeWindowRecurrenceRecurrenceSpec> recurrenceSpecs) {
            this.recurrenceSpecs = recurrenceSpecs;
            return this;
        }
        public Builder recurrenceSpecs(ManualFreezeFreezeWindowRecurrenceRecurrenceSpec... recurrenceSpecs) {
            return recurrenceSpecs(List.of(recurrenceSpecs));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public ManualFreezeFreezeWindowRecurrence build() {
            final var o = new ManualFreezeFreezeWindowRecurrence();
            o.recurrenceSpecs = recurrenceSpecs;
            o.type = type;
            return o;
        }
    }
}
