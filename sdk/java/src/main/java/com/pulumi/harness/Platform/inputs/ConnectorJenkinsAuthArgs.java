// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.ConnectorJenkinsAuthJenkinsBearerTokenArgs;
import com.pulumi.harness.platform.inputs.ConnectorJenkinsAuthJenkinsUserNamePasswordArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectorJenkinsAuthArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectorJenkinsAuthArgs Empty = new ConnectorJenkinsAuthArgs();

    /**
     * Authenticate to App Dynamics using bearer token.
     * 
     */
    @Import(name="jenkinsBearerToken")
    private @Nullable Output<ConnectorJenkinsAuthJenkinsBearerTokenArgs> jenkinsBearerToken;

    /**
     * @return Authenticate to App Dynamics using bearer token.
     * 
     */
    public Optional<Output<ConnectorJenkinsAuthJenkinsBearerTokenArgs>> jenkinsBearerToken() {
        return Optional.ofNullable(this.jenkinsBearerToken);
    }

    /**
     * Authenticate to App Dynamics using user name and password.
     * 
     */
    @Import(name="jenkinsUserNamePassword")
    private @Nullable Output<ConnectorJenkinsAuthJenkinsUserNamePasswordArgs> jenkinsUserNamePassword;

    /**
     * @return Authenticate to App Dynamics using user name and password.
     * 
     */
    public Optional<Output<ConnectorJenkinsAuthJenkinsUserNamePasswordArgs>> jenkinsUserNamePassword() {
        return Optional.ofNullable(this.jenkinsUserNamePassword);
    }

    /**
     * Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ConnectorJenkinsAuthArgs() {}

    private ConnectorJenkinsAuthArgs(ConnectorJenkinsAuthArgs $) {
        this.jenkinsBearerToken = $.jenkinsBearerToken;
        this.jenkinsUserNamePassword = $.jenkinsUserNamePassword;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectorJenkinsAuthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectorJenkinsAuthArgs $;

        public Builder() {
            $ = new ConnectorJenkinsAuthArgs();
        }

        public Builder(ConnectorJenkinsAuthArgs defaults) {
            $ = new ConnectorJenkinsAuthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jenkinsBearerToken Authenticate to App Dynamics using bearer token.
         * 
         * @return builder
         * 
         */
        public Builder jenkinsBearerToken(@Nullable Output<ConnectorJenkinsAuthJenkinsBearerTokenArgs> jenkinsBearerToken) {
            $.jenkinsBearerToken = jenkinsBearerToken;
            return this;
        }

        /**
         * @param jenkinsBearerToken Authenticate to App Dynamics using bearer token.
         * 
         * @return builder
         * 
         */
        public Builder jenkinsBearerToken(ConnectorJenkinsAuthJenkinsBearerTokenArgs jenkinsBearerToken) {
            return jenkinsBearerToken(Output.of(jenkinsBearerToken));
        }

        /**
         * @param jenkinsUserNamePassword Authenticate to App Dynamics using user name and password.
         * 
         * @return builder
         * 
         */
        public Builder jenkinsUserNamePassword(@Nullable Output<ConnectorJenkinsAuthJenkinsUserNamePasswordArgs> jenkinsUserNamePassword) {
            $.jenkinsUserNamePassword = jenkinsUserNamePassword;
            return this;
        }

        /**
         * @param jenkinsUserNamePassword Authenticate to App Dynamics using user name and password.
         * 
         * @return builder
         * 
         */
        public Builder jenkinsUserNamePassword(ConnectorJenkinsAuthJenkinsUserNamePasswordArgs jenkinsUserNamePassword) {
            return jenkinsUserNamePassword(Output.of(jenkinsUserNamePassword));
        }

        /**
         * @param type Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ConnectorJenkinsAuthArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
