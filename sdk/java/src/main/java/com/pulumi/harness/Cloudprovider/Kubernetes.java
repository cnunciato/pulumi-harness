// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.cloudprovider;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.cloudprovider.KubernetesArgs;
import com.pulumi.harness.cloudprovider.inputs.KubernetesState;
import com.pulumi.harness.cloudprovider.outputs.KubernetesAuthentication;
import com.pulumi.harness.cloudprovider.outputs.KubernetesUsageScope;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Kubernetes cloud provider. This resource uses the config-as-code API&#39;s. When updating the `name` or `path` of this resource you should typically also set the `create_before_destroy = true` lifecycle setting.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.HarnessFunctions;
 * import com.pulumi.harness.inputs.GetSecretManagerArgs;
 * import com.pulumi.harness.EncryptedText;
 * import com.pulumi.harness.EncryptedTextArgs;
 * import com.pulumi.harness.cloudprovider.Kubernetes;
 * import com.pulumi.harness.cloudprovider.KubernetesArgs;
 * import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationArgs;
 * import com.pulumi.harness.cloudprovider.inputs.KubernetesAuthenticationUsernamePasswordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var default = HarnessFunctions.getSecretManager(GetSecretManagerArgs.builder()
 *             .default_(true)
 *             .build());
 * 
 *         var username = new EncryptedText(&#34;username&#34;, EncryptedTextArgs.builder()        
 *             .value(&#34;&lt;USERNAME&gt;&#34;)
 *             .secretManagerId(default_.id())
 *             .build());
 * 
 *         var password = new EncryptedText(&#34;password&#34;, EncryptedTextArgs.builder()        
 *             .value(&#34;&lt;PASSWORD&gt;&#34;)
 *             .secretManagerId(default_.id())
 *             .build());
 * 
 *         var example = new Kubernetes(&#34;example&#34;, KubernetesArgs.builder()        
 *             .skipValidation(true)
 *             .authentication(KubernetesAuthenticationArgs.builder()
 *                 .usernamePassword(KubernetesAuthenticationUsernamePasswordArgs.builder()
 *                     .masterUrl(&#34;https://localhost.com&#34;)
 *                     .usernameSecretName(username.name())
 *                     .passwordSecretName(password.name())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * # Import using the Harness kubernetes cloud provider id.
 * 
 * ```sh
 *  $ pulumi import harness:cloudprovider/kubernetes:Kubernetes example &lt;provider_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:cloudprovider/kubernetes:Kubernetes")
public class Kubernetes extends com.pulumi.resources.CustomResource {
    /**
     * Authentication configuration for the Kubernetes cluster
     * 
     */
    @Export(name="authentication", type=KubernetesAuthentication.class, parameters={})
    private Output<KubernetesAuthentication> authentication;

    /**
     * @return Authentication configuration for the Kubernetes cluster
     * 
     */
    public Output<KubernetesAuthentication> authentication() {
        return this.authentication;
    }
    /**
     * The name of the cloud provider.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the cloud provider.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Skip validation of Kubernetes configuration.
     * 
     */
    @Export(name="skipValidation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> skipValidation;

    /**
     * @return Skip validation of Kubernetes configuration.
     * 
     */
    public Output<Optional<Boolean>> skipValidation() {
        return Codegen.optional(this.skipValidation);
    }
    /**
     * This block is used for scoping the resource to a specific set of applications or environments.
     * 
     */
    @Export(name="usageScopes", type=List.class, parameters={KubernetesUsageScope.class})
    private Output</* @Nullable */ List<KubernetesUsageScope>> usageScopes;

    /**
     * @return This block is used for scoping the resource to a specific set of applications or environments.
     * 
     */
    public Output<Optional<List<KubernetesUsageScope>>> usageScopes() {
        return Codegen.optional(this.usageScopes);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Kubernetes(String name) {
        this(name, KubernetesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Kubernetes(String name, KubernetesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Kubernetes(String name, KubernetesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:cloudprovider/kubernetes:Kubernetes", name, args == null ? KubernetesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Kubernetes(String name, Output<String> id, @Nullable KubernetesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:cloudprovider/kubernetes:Kubernetes", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Kubernetes get(String name, Output<String> id, @Nullable KubernetesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Kubernetes(name, id, state, options);
    }
}
