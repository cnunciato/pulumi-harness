// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class SloRequestSloTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final SloRequestSloTargetArgs Empty = new SloRequestSloTargetArgs();

    @Import(name="sloTargetPercentage", required=true)
    private Output<Double> sloTargetPercentage;

    public Output<Double> sloTargetPercentage() {
        return this.sloTargetPercentage;
    }

    @Import(name="spec", required=true)
    private Output<String> spec;

    public Output<String> spec() {
        return this.spec;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private SloRequestSloTargetArgs() {}

    private SloRequestSloTargetArgs(SloRequestSloTargetArgs $) {
        this.sloTargetPercentage = $.sloTargetPercentage;
        this.spec = $.spec;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SloRequestSloTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SloRequestSloTargetArgs $;

        public Builder() {
            $ = new SloRequestSloTargetArgs();
        }

        public Builder(SloRequestSloTargetArgs defaults) {
            $ = new SloRequestSloTargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder sloTargetPercentage(Output<Double> sloTargetPercentage) {
            $.sloTargetPercentage = sloTargetPercentage;
            return this;
        }

        public Builder sloTargetPercentage(Double sloTargetPercentage) {
            return sloTargetPercentage(Output.of(sloTargetPercentage));
        }

        public Builder spec(Output<String> spec) {
            $.spec = spec;
            return this;
        }

        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SloRequestSloTargetArgs build() {
            $.sloTargetPercentage = Objects.requireNonNull($.sloTargetPercentage, "expected parameter 'sloTargetPercentage' to be non-null");
            $.spec = Objects.requireNonNull($.spec, "expected parameter 'spec' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
