// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.UsergroupArgs;
import com.pulumi.harness.platform.inputs.UsergroupState;
import com.pulumi.harness.platform.outputs.UsergroupNotificationConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Harness User Group.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.Usergroup;
 * import com.pulumi.harness.platform.UsergroupArgs;
 * import com.pulumi.harness.platform.inputs.UsergroupNotificationConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Usergroup(&#34;example&#34;, UsergroupArgs.builder()        
 *             .externallyManaged(false)
 *             .identifier(&#34;identifier&#34;)
 *             .linkedSsoDisplayName(&#34;linked_sso_display_name&#34;)
 *             .linkedSsoId(&#34;linked_sso_id&#34;)
 *             .linkedSsoType(&#34;SAML&#34;)
 *             .notificationConfigs(            
 *                 UsergroupNotificationConfigArgs.builder()
 *                     .slackWebhookUrl(&#34;https://google.com&#34;)
 *                     .type(&#34;SLACK&#34;)
 *                     .build(),
 *                 UsergroupNotificationConfigArgs.builder()
 *                     .groupEmail(&#34;email@email.com&#34;)
 *                     .type(&#34;EMAIL&#34;)
 *                     .build(),
 *                 UsergroupNotificationConfigArgs.builder()
 *                     .microsoftTeamsWebhookUrl(&#34;https://google.com&#34;)
 *                     .type(&#34;MSTEAMS&#34;)
 *                     .build(),
 *                 UsergroupNotificationConfigArgs.builder()
 *                     .pagerDutyKey(&#34;pagerDutyKey&#34;)
 *                     .type(&#34;PAGERDUTY&#34;)
 *                     .build())
 *             .orgId(&#34;org_id&#34;)
 *             .projectId(&#34;project_id&#34;)
 *             .ssoGroupId(&#34;sso_group_id&#34;)
 *             .ssoGroupName(&#34;sso_group_name&#34;)
 *             .ssoLinked(true)
 *             .users(&#34;user_id&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * # Import using user group id
 * 
 * ```sh
 *  $ pulumi import harness:platform/usergroup:Usergroup example &lt;usergroup_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/usergroup:Usergroup")
public class Usergroup extends com.pulumi.resources.CustomResource {
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Whether the user group is externally managed.
     * 
     */
    @Export(name="externallyManaged", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> externallyManaged;

    /**
     * @return Whether the user group is externally managed.
     * 
     */
    public Output<Optional<Boolean>> externallyManaged() {
        return Codegen.optional(this.externallyManaged);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the linked SSO.
     * 
     */
    @Export(name="linkedSsoDisplayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> linkedSsoDisplayName;

    /**
     * @return Name of the linked SSO.
     * 
     */
    public Output<Optional<String>> linkedSsoDisplayName() {
        return Codegen.optional(this.linkedSsoDisplayName);
    }
    /**
     * The SSO account ID that the user group is linked to.
     * 
     */
    @Export(name="linkedSsoId", type=String.class, parameters={})
    private Output</* @Nullable */ String> linkedSsoId;

    /**
     * @return The SSO account ID that the user group is linked to.
     * 
     */
    public Output<Optional<String>> linkedSsoId() {
        return Codegen.optional(this.linkedSsoId);
    }
    /**
     * Type of linked SSO
     * 
     */
    @Export(name="linkedSsoType", type=String.class, parameters={})
    private Output</* @Nullable */ String> linkedSsoType;

    /**
     * @return Type of linked SSO
     * 
     */
    public Output<Optional<String>> linkedSsoType() {
        return Codegen.optional(this.linkedSsoType);
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * List of notification settings.
     * 
     */
    @Export(name="notificationConfigs", type=List.class, parameters={UsergroupNotificationConfig.class})
    private Output</* @Nullable */ List<UsergroupNotificationConfig>> notificationConfigs;

    /**
     * @return List of notification settings.
     * 
     */
    public Output<Optional<List<UsergroupNotificationConfig>>> notificationConfigs() {
        return Codegen.optional(this.notificationConfigs);
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Identifier of the userGroup in SSO.
     * 
     */
    @Export(name="ssoGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> ssoGroupId;

    /**
     * @return Identifier of the userGroup in SSO.
     * 
     */
    public Output<Optional<String>> ssoGroupId() {
        return Codegen.optional(this.ssoGroupId);
    }
    /**
     * Name of the SSO userGroup.
     * 
     */
    @Export(name="ssoGroupName", type=String.class, parameters={})
    private Output</* @Nullable */ String> ssoGroupName;

    /**
     * @return Name of the SSO userGroup.
     * 
     */
    public Output<Optional<String>> ssoGroupName() {
        return Codegen.optional(this.ssoGroupName);
    }
    /**
     * Whether sso is linked or not
     * 
     */
    @Export(name="ssoLinked", type=Boolean.class, parameters={})
    private Output<Boolean> ssoLinked;

    /**
     * @return Whether sso is linked or not
     * 
     */
    public Output<Boolean> ssoLinked() {
        return this.ssoLinked;
    }
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * List of users in the UserGroup.
     * 
     */
    @Export(name="users", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> users;

    /**
     * @return List of users in the UserGroup.
     * 
     */
    public Output<Optional<List<String>>> users() {
        return Codegen.optional(this.users);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Usergroup(String name) {
        this(name, UsergroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Usergroup(String name, UsergroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Usergroup(String name, UsergroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/usergroup:Usergroup", name, args == null ? UsergroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Usergroup(String name, Output<String> id, @Nullable UsergroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/usergroup:Usergroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Usergroup get(String name, Output<String> id, @Nullable UsergroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Usergroup(name, id, state, options);
    }
}
