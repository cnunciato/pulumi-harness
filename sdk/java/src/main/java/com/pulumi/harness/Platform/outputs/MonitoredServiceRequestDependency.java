// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MonitoredServiceRequestDependency {
    private @Nullable String dependencyMetadata;
    private String monitoredServiceIdentifier;
    private String type;

    private MonitoredServiceRequestDependency() {}
    public Optional<String> dependencyMetadata() {
        return Optional.ofNullable(this.dependencyMetadata);
    }
    public String monitoredServiceIdentifier() {
        return this.monitoredServiceIdentifier;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoredServiceRequestDependency defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dependencyMetadata;
        private String monitoredServiceIdentifier;
        private String type;
        public Builder() {}
        public Builder(MonitoredServiceRequestDependency defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dependencyMetadata = defaults.dependencyMetadata;
    	      this.monitoredServiceIdentifier = defaults.monitoredServiceIdentifier;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dependencyMetadata(@Nullable String dependencyMetadata) {
            this.dependencyMetadata = dependencyMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder monitoredServiceIdentifier(String monitoredServiceIdentifier) {
            this.monitoredServiceIdentifier = Objects.requireNonNull(monitoredServiceIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public MonitoredServiceRequestDependency build() {
            final var o = new MonitoredServiceRequestDependency();
            o.dependencyMetadata = dependencyMetadata;
            o.monitoredServiceIdentifier = monitoredServiceIdentifier;
            o.type = type;
            return o;
        }
    }
}
