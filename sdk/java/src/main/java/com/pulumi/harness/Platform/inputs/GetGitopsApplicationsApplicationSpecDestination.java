// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsApplicationsApplicationSpecDestination extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsApplicationsApplicationSpecDestination Empty = new GetGitopsApplicationsApplicationSpecDestination();

    /**
     * Name of the GitOps application.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the GitOps application.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namespace")
    private @Nullable String namespace;

    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    @Import(name="server")
    private @Nullable String server;

    public Optional<String> server() {
        return Optional.ofNullable(this.server);
    }

    private GetGitopsApplicationsApplicationSpecDestination() {}

    private GetGitopsApplicationsApplicationSpecDestination(GetGitopsApplicationsApplicationSpecDestination $) {
        this.name = $.name;
        this.namespace = $.namespace;
        this.server = $.server;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsApplicationsApplicationSpecDestination defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsApplicationsApplicationSpecDestination $;

        public Builder() {
            $ = new GetGitopsApplicationsApplicationSpecDestination();
        }

        public Builder(GetGitopsApplicationsApplicationSpecDestination defaults) {
            $ = new GetGitopsApplicationsApplicationSpecDestination(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the GitOps application.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder namespace(@Nullable String namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder server(@Nullable String server) {
            $.server = server;
            return this;
        }

        public GetGitopsApplicationsApplicationSpecDestination build() {
            return $;
        }
    }

}
