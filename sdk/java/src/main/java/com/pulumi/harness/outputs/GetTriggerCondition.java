// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.outputs.GetTriggerConditionOnWebhook;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTriggerCondition {
    private List<GetTriggerConditionOnWebhook> onWebhooks;
    private String triggerConditionType;

    private GetTriggerCondition() {}
    public List<GetTriggerConditionOnWebhook> onWebhooks() {
        return this.onWebhooks;
    }
    public String triggerConditionType() {
        return this.triggerConditionType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTriggerCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTriggerConditionOnWebhook> onWebhooks;
        private String triggerConditionType;
        public Builder() {}
        public Builder(GetTriggerCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.onWebhooks = defaults.onWebhooks;
    	      this.triggerConditionType = defaults.triggerConditionType;
        }

        @CustomType.Setter
        public Builder onWebhooks(List<GetTriggerConditionOnWebhook> onWebhooks) {
            this.onWebhooks = Objects.requireNonNull(onWebhooks);
            return this;
        }
        public Builder onWebhooks(GetTriggerConditionOnWebhook... onWebhooks) {
            return onWebhooks(List.of(onWebhooks));
        }
        @CustomType.Setter
        public Builder triggerConditionType(String triggerConditionType) {
            this.triggerConditionType = Objects.requireNonNull(triggerConditionType);
            return this;
        }
        public GetTriggerCondition build() {
            final var o = new GetTriggerCondition();
            o.onWebhooks = onWebhooks;
            o.triggerConditionType = triggerConditionType;
            return o;
        }
    }
}
