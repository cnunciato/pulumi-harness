// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GitOpsClusterRequestClusterConfigArgs;
import com.pulumi.harness.platform.inputs.GitOpsClusterRequestClusterInfoArgs;
import com.pulumi.harness.platform.inputs.GitOpsClusterRequestClusterRefreshRequestedAtArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GitOpsClusterRequestClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GitOpsClusterRequestClusterArgs Empty = new GitOpsClusterRequestClusterArgs();

    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    @Import(name="clusterResources")
    private @Nullable Output<Boolean> clusterResources;

    public Optional<Output<Boolean>> clusterResources() {
        return Optional.ofNullable(this.clusterResources);
    }

    @Import(name="configs")
    private @Nullable Output<List<GitOpsClusterRequestClusterConfigArgs>> configs;

    public Optional<Output<List<GitOpsClusterRequestClusterConfigArgs>>> configs() {
        return Optional.ofNullable(this.configs);
    }

    @Import(name="infos")
    private @Nullable Output<List<GitOpsClusterRequestClusterInfoArgs>> infos;

    public Optional<Output<List<GitOpsClusterRequestClusterInfoArgs>>> infos() {
        return Optional.ofNullable(this.infos);
    }

    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="namespaces")
    private @Nullable Output<List<String>> namespaces;

    public Optional<Output<List<String>>> namespaces() {
        return Optional.ofNullable(this.namespaces);
    }

    @Import(name="project")
    private @Nullable Output<String> project;

    public Optional<Output<String>> project() {
        return Optional.ofNullable(this.project);
    }

    @Import(name="refreshRequestedAts")
    private @Nullable Output<List<GitOpsClusterRequestClusterRefreshRequestedAtArgs>> refreshRequestedAts;

    public Optional<Output<List<GitOpsClusterRequestClusterRefreshRequestedAtArgs>>> refreshRequestedAts() {
        return Optional.ofNullable(this.refreshRequestedAts);
    }

    @Import(name="server", required=true)
    private Output<String> server;

    public Output<String> server() {
        return this.server;
    }

    @Import(name="shard")
    private @Nullable Output<String> shard;

    public Optional<Output<String>> shard() {
        return Optional.ofNullable(this.shard);
    }

    private GitOpsClusterRequestClusterArgs() {}

    private GitOpsClusterRequestClusterArgs(GitOpsClusterRequestClusterArgs $) {
        this.annotations = $.annotations;
        this.clusterResources = $.clusterResources;
        this.configs = $.configs;
        this.infos = $.infos;
        this.labels = $.labels;
        this.name = $.name;
        this.namespaces = $.namespaces;
        this.project = $.project;
        this.refreshRequestedAts = $.refreshRequestedAts;
        this.server = $.server;
        this.shard = $.shard;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GitOpsClusterRequestClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GitOpsClusterRequestClusterArgs $;

        public Builder() {
            $ = new GitOpsClusterRequestClusterArgs();
        }

        public Builder(GitOpsClusterRequestClusterArgs defaults) {
            $ = new GitOpsClusterRequestClusterArgs(Objects.requireNonNull(defaults));
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        public Builder clusterResources(@Nullable Output<Boolean> clusterResources) {
            $.clusterResources = clusterResources;
            return this;
        }

        public Builder clusterResources(Boolean clusterResources) {
            return clusterResources(Output.of(clusterResources));
        }

        public Builder configs(@Nullable Output<List<GitOpsClusterRequestClusterConfigArgs>> configs) {
            $.configs = configs;
            return this;
        }

        public Builder configs(List<GitOpsClusterRequestClusterConfigArgs> configs) {
            return configs(Output.of(configs));
        }

        public Builder configs(GitOpsClusterRequestClusterConfigArgs... configs) {
            return configs(List.of(configs));
        }

        public Builder infos(@Nullable Output<List<GitOpsClusterRequestClusterInfoArgs>> infos) {
            $.infos = infos;
            return this;
        }

        public Builder infos(List<GitOpsClusterRequestClusterInfoArgs> infos) {
            return infos(Output.of(infos));
        }

        public Builder infos(GitOpsClusterRequestClusterInfoArgs... infos) {
            return infos(List.of(infos));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder namespaces(@Nullable Output<List<String>> namespaces) {
            $.namespaces = namespaces;
            return this;
        }

        public Builder namespaces(List<String> namespaces) {
            return namespaces(Output.of(namespaces));
        }

        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }

        public Builder project(@Nullable Output<String> project) {
            $.project = project;
            return this;
        }

        public Builder project(String project) {
            return project(Output.of(project));
        }

        public Builder refreshRequestedAts(@Nullable Output<List<GitOpsClusterRequestClusterRefreshRequestedAtArgs>> refreshRequestedAts) {
            $.refreshRequestedAts = refreshRequestedAts;
            return this;
        }

        public Builder refreshRequestedAts(List<GitOpsClusterRequestClusterRefreshRequestedAtArgs> refreshRequestedAts) {
            return refreshRequestedAts(Output.of(refreshRequestedAts));
        }

        public Builder refreshRequestedAts(GitOpsClusterRequestClusterRefreshRequestedAtArgs... refreshRequestedAts) {
            return refreshRequestedAts(List.of(refreshRequestedAts));
        }

        public Builder server(Output<String> server) {
            $.server = server;
            return this;
        }

        public Builder server(String server) {
            return server(Output.of(server));
        }

        public Builder shard(@Nullable Output<String> shard) {
            $.shard = shard;
            return this;
        }

        public Builder shard(String shard) {
            return shard(Output.of(shard));
        }

        public GitOpsClusterRequestClusterArgs build() {
            $.server = Objects.requireNonNull($.server, "expected parameter 'server' to be non-null");
            return $;
        }
    }

}
