// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.PlatformConnector.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GcpManualArgs extends com.pulumi.resources.ResourceArgs {

    public static final GcpManualArgs Empty = new GcpManualArgs();

    /**
     * The delegates to connect with.
     * 
     */
    @Import(name="delegateSelectors", required=true)
    private Output<List<String>> delegateSelectors;

    /**
     * @return The delegates to connect with.
     * 
     */
    public Output<List<String>> delegateSelectors() {
        return this.delegateSelectors;
    }

    /**
     * Reference to the Harness secret containing the secret key.
     * 
     */
    @Import(name="secretKeyRef", required=true)
    private Output<String> secretKeyRef;

    /**
     * @return Reference to the Harness secret containing the secret key.
     * 
     */
    public Output<String> secretKeyRef() {
        return this.secretKeyRef;
    }

    private GcpManualArgs() {}

    private GcpManualArgs(GcpManualArgs $) {
        this.delegateSelectors = $.delegateSelectors;
        this.secretKeyRef = $.secretKeyRef;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GcpManualArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GcpManualArgs $;

        public Builder() {
            $ = new GcpManualArgs();
        }

        public Builder(GcpManualArgs defaults) {
            $ = new GcpManualArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegateSelectors The delegates to connect with.
         * 
         * @return builder
         * 
         */
        public Builder delegateSelectors(Output<List<String>> delegateSelectors) {
            $.delegateSelectors = delegateSelectors;
            return this;
        }

        /**
         * @param delegateSelectors The delegates to connect with.
         * 
         * @return builder
         * 
         */
        public Builder delegateSelectors(List<String> delegateSelectors) {
            return delegateSelectors(Output.of(delegateSelectors));
        }

        /**
         * @param delegateSelectors The delegates to connect with.
         * 
         * @return builder
         * 
         */
        public Builder delegateSelectors(String... delegateSelectors) {
            return delegateSelectors(List.of(delegateSelectors));
        }

        /**
         * @param secretKeyRef Reference to the Harness secret containing the secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKeyRef(Output<String> secretKeyRef) {
            $.secretKeyRef = secretKeyRef;
            return this;
        }

        /**
         * @param secretKeyRef Reference to the Harness secret containing the secret key.
         * 
         * @return builder
         * 
         */
        public Builder secretKeyRef(String secretKeyRef) {
            return secretKeyRef(Output.of(secretKeyRef));
        }

        public GcpManualArgs build() {
            $.delegateSelectors = Objects.requireNonNull($.delegateSelectors, "expected parameter 'delegateSelectors' to be non-null");
            $.secretKeyRef = Objects.requireNonNull($.secretKeyRef, "expected parameter 'secretKeyRef' to be non-null");
            return $;
        }
    }

}
