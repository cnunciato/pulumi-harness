// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesConnectorClientKeyCert {
    /**
     * @return Reference to the secret containing the CA certificate for the connector.
     * 
     */
    private @Nullable String caCertRef;
    /**
     * @return Reference to the secret containing the client certificate for the connector.
     * 
     */
    private String clientCertRef;
    /**
     * @return The algorithm used to generate the client key for the connector. Valid values are RSA, EC
     * 
     */
    private String clientKeyAlgorithm;
    /**
     * @return Reference to the secret containing the client key passphrase for the connector.
     * 
     */
    private @Nullable String clientKeyPassphraseRef;
    /**
     * @return Reference to the secret containing the client key for the connector.
     * 
     */
    private String clientKeyRef;
    /**
     * @return The URL of the Kubernetes cluster.
     * 
     */
    private String masterUrl;

    private KubernetesConnectorClientKeyCert() {}
    /**
     * @return Reference to the secret containing the CA certificate for the connector.
     * 
     */
    public Optional<String> caCertRef() {
        return Optional.ofNullable(this.caCertRef);
    }
    /**
     * @return Reference to the secret containing the client certificate for the connector.
     * 
     */
    public String clientCertRef() {
        return this.clientCertRef;
    }
    /**
     * @return The algorithm used to generate the client key for the connector. Valid values are RSA, EC
     * 
     */
    public String clientKeyAlgorithm() {
        return this.clientKeyAlgorithm;
    }
    /**
     * @return Reference to the secret containing the client key passphrase for the connector.
     * 
     */
    public Optional<String> clientKeyPassphraseRef() {
        return Optional.ofNullable(this.clientKeyPassphraseRef);
    }
    /**
     * @return Reference to the secret containing the client key for the connector.
     * 
     */
    public String clientKeyRef() {
        return this.clientKeyRef;
    }
    /**
     * @return The URL of the Kubernetes cluster.
     * 
     */
    public String masterUrl() {
        return this.masterUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesConnectorClientKeyCert defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String caCertRef;
        private String clientCertRef;
        private String clientKeyAlgorithm;
        private @Nullable String clientKeyPassphraseRef;
        private String clientKeyRef;
        private String masterUrl;
        public Builder() {}
        public Builder(KubernetesConnectorClientKeyCert defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caCertRef = defaults.caCertRef;
    	      this.clientCertRef = defaults.clientCertRef;
    	      this.clientKeyAlgorithm = defaults.clientKeyAlgorithm;
    	      this.clientKeyPassphraseRef = defaults.clientKeyPassphraseRef;
    	      this.clientKeyRef = defaults.clientKeyRef;
    	      this.masterUrl = defaults.masterUrl;
        }

        @CustomType.Setter
        public Builder caCertRef(@Nullable String caCertRef) {
            this.caCertRef = caCertRef;
            return this;
        }
        @CustomType.Setter
        public Builder clientCertRef(String clientCertRef) {
            this.clientCertRef = Objects.requireNonNull(clientCertRef);
            return this;
        }
        @CustomType.Setter
        public Builder clientKeyAlgorithm(String clientKeyAlgorithm) {
            this.clientKeyAlgorithm = Objects.requireNonNull(clientKeyAlgorithm);
            return this;
        }
        @CustomType.Setter
        public Builder clientKeyPassphraseRef(@Nullable String clientKeyPassphraseRef) {
            this.clientKeyPassphraseRef = clientKeyPassphraseRef;
            return this;
        }
        @CustomType.Setter
        public Builder clientKeyRef(String clientKeyRef) {
            this.clientKeyRef = Objects.requireNonNull(clientKeyRef);
            return this;
        }
        @CustomType.Setter
        public Builder masterUrl(String masterUrl) {
            this.masterUrl = Objects.requireNonNull(masterUrl);
            return this;
        }
        public KubernetesConnectorClientKeyCert build() {
            final var o = new KubernetesConnectorClientKeyCert();
            o.caCertRef = caCertRef;
            o.clientCertRef = clientCertRef;
            o.clientKeyAlgorithm = clientKeyAlgorithm;
            o.clientKeyPassphraseRef = clientKeyPassphraseRef;
            o.clientKeyRef = clientKeyRef;
            o.masterUrl = masterUrl;
            return o;
        }
    }
}
