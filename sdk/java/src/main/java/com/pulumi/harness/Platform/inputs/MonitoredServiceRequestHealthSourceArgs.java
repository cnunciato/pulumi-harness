// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class MonitoredServiceRequestHealthSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitoredServiceRequestHealthSourceArgs Empty = new MonitoredServiceRequestHealthSourceArgs();

    /**
     * Identifier of the monitored service.
     * 
     */
    @Import(name="identifier", required=true)
    private Output<String> identifier;

    /**
     * @return Identifier of the monitored service.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="spec", required=true)
    private Output<String> spec;

    public Output<String> spec() {
        return this.spec;
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private MonitoredServiceRequestHealthSourceArgs() {}

    private MonitoredServiceRequestHealthSourceArgs(MonitoredServiceRequestHealthSourceArgs $) {
        this.identifier = $.identifier;
        this.name = $.name;
        this.spec = $.spec;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitoredServiceRequestHealthSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitoredServiceRequestHealthSourceArgs $;

        public Builder() {
            $ = new MonitoredServiceRequestHealthSourceArgs();
        }

        public Builder(MonitoredServiceRequestHealthSourceArgs defaults) {
            $ = new MonitoredServiceRequestHealthSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identifier Identifier of the monitored service.
         * 
         * @return builder
         * 
         */
        public Builder identifier(Output<String> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier Identifier of the monitored service.
         * 
         * @return builder
         * 
         */
        public Builder identifier(String identifier) {
            return identifier(Output.of(identifier));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder spec(Output<String> spec) {
            $.spec = spec;
            return this;
        }

        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MonitoredServiceRequestHealthSourceArgs build() {
            $.identifier = Objects.requireNonNull($.identifier, "expected parameter 'identifier' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.spec = Objects.requireNonNull($.spec, "expected parameter 'spec' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
