// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.ConnectorServiceNowArgs;
import com.pulumi.harness.platform.inputs.ConnectorServiceNowState;
import com.pulumi.harness.platform.outputs.ConnectorServiceNowAuth;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Service Now connector.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.platform.ConnectorServiceNow;
 * import com.pulumi.harness.platform.ConnectorServiceNowArgs;
 * import com.pulumi.harness.platform.inputs.ConnectorServiceNowAuthArgs;
 * import com.pulumi.harness.platform.inputs.ConnectorServiceNowAuthAdfsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new ConnectorServiceNow(&#34;test&#34;, ConnectorServiceNowArgs.builder()        
 *             .auth(ConnectorServiceNowAuthArgs.builder()
 *                 .adfs(ConnectorServiceNowAuthAdfsArgs.builder()
 *                     .adfsUrl(&#34;https://adfs_url.com&#34;)
 *                     .certificateRef(&#34;account.certificate_ref&#34;)
 *                     .clientIdRef(&#34;account.client_id_ref&#34;)
 *                     .privateKeyRef(&#34;account.private_key_ref}&#34;)
 *                     .resourceIdRef(&#34;account.resource_id_ref&#34;)
 *                     .build())
 *                 .authType(&#34;AdfsClientCredentialsWithCertificate&#34;)
 *                 .build())
 *             .delegateSelectors(&#34;harness-delegate&#34;)
 *             .description(&#34;test&#34;)
 *             .identifier(&#34;identifier&#34;)
 *             .serviceNowUrl(&#34;https://servicenow.com&#34;)
 *             .tags(&#34;foo:bar&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Import account level service now connector
 * 
 * ```sh
 *  $ pulumi import harness:platform/connectorServiceNow:ConnectorServiceNow example &lt;connector_id&gt;
 * ```
 * 
 *  Import org level service now connector
 * 
 * ```sh
 *  $ pulumi import harness:platform/connectorServiceNow:ConnectorServiceNow example &lt;ord_id&gt;/&lt;connector_id&gt;
 * ```
 * 
 *  Import project level service now connector
 * 
 * ```sh
 *  $ pulumi import harness:platform/connectorServiceNow:ConnectorServiceNow example &lt;org_id&gt;/&lt;project_id&gt;/&lt;connector_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:platform/connectorServiceNow:ConnectorServiceNow")
public class ConnectorServiceNow extends com.pulumi.resources.CustomResource {
    /**
     * The credentials to use for the service now authentication.
     * 
     */
    @Export(name="auth", refs={ConnectorServiceNowAuth.class}, tree="[0]")
    private Output<ConnectorServiceNowAuth> auth;

    /**
     * @return The credentials to use for the service now authentication.
     * 
     */
    public Output<ConnectorServiceNowAuth> auth() {
        return this.auth;
    }
    /**
     * Tags to filter delegates for connection.
     * 
     */
    @Export(name="delegateSelectors", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> delegateSelectors;

    /**
     * @return Tags to filter delegates for connection.
     * 
     */
    public Output<Optional<List<String>>> delegateSelectors() {
        return Codegen.optional(this.delegateSelectors);
    }
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", refs={String.class}, tree="[0]")
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Export(name="passwordRef", refs={String.class}, tree="[0]")
    private Output<String> passwordRef;

    /**
     * @return Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Output<String> passwordRef() {
        return this.passwordRef;
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * URL of service now.
     * 
     */
    @Export(name="serviceNowUrl", refs={String.class}, tree="[0]")
    private Output<String> serviceNowUrl;

    /**
     * @return URL of service now.
     * 
     */
    public Output<String> serviceNowUrl() {
        return this.serviceNowUrl;
    }
    /**
     * Tags to associate with the resource.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Username to use for authentication.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return Username to use for authentication.
     * 
     */
    public Output<String> username() {
        return this.username;
    }
    /**
     * Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    @Export(name="usernameRef", refs={String.class}, tree="[0]")
    private Output<String> usernameRef;

    /**
     * @return Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix &#39;org&#39; to the expression: org.{identifier}. To reference a secret at the account scope, prefix &#39;account` to the expression: account.{identifier}.
     * 
     */
    public Output<String> usernameRef() {
        return this.usernameRef;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConnectorServiceNow(String name) {
        this(name, ConnectorServiceNowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConnectorServiceNow(String name, ConnectorServiceNowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConnectorServiceNow(String name, ConnectorServiceNowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/connectorServiceNow:ConnectorServiceNow", name, args == null ? ConnectorServiceNowArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConnectorServiceNow(String name, Output<String> id, @Nullable ConnectorServiceNowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/connectorServiceNow:ConnectorServiceNow", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConnectorServiceNow get(String name, Output<String> id, @Nullable ConnectorServiceNowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConnectorServiceNow(name, id, state, options);
    }
}
