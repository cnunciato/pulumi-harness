// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.harness.platform.inputs.GetGitopsClusterQuery;
import com.pulumi.harness.platform.inputs.GetGitopsClusterRequest;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGitopsClusterPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGitopsClusterPlainArgs Empty = new GetGitopsClusterPlainArgs();

    @Import(name="accountId", required=true)
    private String accountId;

    public String accountId() {
        return this.accountId;
    }

    @Import(name="agentId")
    private @Nullable String agentId;

    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    @Import(name="identifier", required=true)
    private String identifier;

    public String identifier() {
        return this.identifier;
    }

    @Import(name="orgId")
    private @Nullable String orgId;

    public Optional<String> orgId() {
        return Optional.ofNullable(this.orgId);
    }

    @Import(name="projectId", required=true)
    private String projectId;

    public String projectId() {
        return this.projectId;
    }

    @Import(name="queries")
    private @Nullable List<GetGitopsClusterQuery> queries;

    public Optional<List<GetGitopsClusterQuery>> queries() {
        return Optional.ofNullable(this.queries);
    }

    @Import(name="requests")
    private @Nullable List<GetGitopsClusterRequest> requests;

    public Optional<List<GetGitopsClusterRequest>> requests() {
        return Optional.ofNullable(this.requests);
    }

    private GetGitopsClusterPlainArgs() {}

    private GetGitopsClusterPlainArgs(GetGitopsClusterPlainArgs $) {
        this.accountId = $.accountId;
        this.agentId = $.agentId;
        this.identifier = $.identifier;
        this.orgId = $.orgId;
        this.projectId = $.projectId;
        this.queries = $.queries;
        this.requests = $.requests;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGitopsClusterPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGitopsClusterPlainArgs $;

        public Builder() {
            $ = new GetGitopsClusterPlainArgs();
        }

        public Builder(GetGitopsClusterPlainArgs defaults) {
            $ = new GetGitopsClusterPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder agentId(@Nullable String agentId) {
            $.agentId = agentId;
            return this;
        }

        public Builder identifier(String identifier) {
            $.identifier = identifier;
            return this;
        }

        public Builder orgId(@Nullable String orgId) {
            $.orgId = orgId;
            return this;
        }

        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder queries(@Nullable List<GetGitopsClusterQuery> queries) {
            $.queries = queries;
            return this;
        }

        public Builder queries(GetGitopsClusterQuery... queries) {
            return queries(List.of(queries));
        }

        public Builder requests(@Nullable List<GetGitopsClusterRequest> requests) {
            $.requests = requests;
            return this;
        }

        public Builder requests(GetGitopsClusterRequest... requests) {
            return requests(List.of(requests));
        }

        public GetGitopsClusterPlainArgs build() {
            $.accountId = Objects.requireNonNull($.accountId, "expected parameter 'accountId' to be non-null");
            $.identifier = Objects.requireNonNull($.identifier, "expected parameter 'identifier' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            return $;
        }
    }

}
