// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.PlatformConnector.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.harness.PlatformConnector.inputs.AwsKmsCredentialsAssumeRoleArgs;
import com.pulumi.harness.PlatformConnector.inputs.AwsKmsCredentialsManualArgs;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AwsKmsCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AwsKmsCredentialsArgs Empty = new AwsKmsCredentialsArgs();

    /**
     * Connect using STS assume role.
     * 
     */
    @Import(name="assumeRole")
    private @Nullable Output<AwsKmsCredentialsAssumeRoleArgs> assumeRole;

    /**
     * @return Connect using STS assume role.
     * 
     */
    public Optional<Output<AwsKmsCredentialsAssumeRoleArgs>> assumeRole() {
        return Optional.ofNullable(this.assumeRole);
    }

    /**
     * Inherit the credentials from from the delegate.
     * 
     */
    @Import(name="inheritFromDelegate")
    private @Nullable Output<Boolean> inheritFromDelegate;

    /**
     * @return Inherit the credentials from from the delegate.
     * 
     */
    public Optional<Output<Boolean>> inheritFromDelegate() {
        return Optional.ofNullable(this.inheritFromDelegate);
    }

    /**
     * Specify the AWS key and secret used for authenticating.
     * 
     */
    @Import(name="manual")
    private @Nullable Output<AwsKmsCredentialsManualArgs> manual;

    /**
     * @return Specify the AWS key and secret used for authenticating.
     * 
     */
    public Optional<Output<AwsKmsCredentialsManualArgs>> manual() {
        return Optional.ofNullable(this.manual);
    }

    private AwsKmsCredentialsArgs() {}

    private AwsKmsCredentialsArgs(AwsKmsCredentialsArgs $) {
        this.assumeRole = $.assumeRole;
        this.inheritFromDelegate = $.inheritFromDelegate;
        this.manual = $.manual;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AwsKmsCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AwsKmsCredentialsArgs $;

        public Builder() {
            $ = new AwsKmsCredentialsArgs();
        }

        public Builder(AwsKmsCredentialsArgs defaults) {
            $ = new AwsKmsCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assumeRole Connect using STS assume role.
         * 
         * @return builder
         * 
         */
        public Builder assumeRole(@Nullable Output<AwsKmsCredentialsAssumeRoleArgs> assumeRole) {
            $.assumeRole = assumeRole;
            return this;
        }

        /**
         * @param assumeRole Connect using STS assume role.
         * 
         * @return builder
         * 
         */
        public Builder assumeRole(AwsKmsCredentialsAssumeRoleArgs assumeRole) {
            return assumeRole(Output.of(assumeRole));
        }

        /**
         * @param inheritFromDelegate Inherit the credentials from from the delegate.
         * 
         * @return builder
         * 
         */
        public Builder inheritFromDelegate(@Nullable Output<Boolean> inheritFromDelegate) {
            $.inheritFromDelegate = inheritFromDelegate;
            return this;
        }

        /**
         * @param inheritFromDelegate Inherit the credentials from from the delegate.
         * 
         * @return builder
         * 
         */
        public Builder inheritFromDelegate(Boolean inheritFromDelegate) {
            return inheritFromDelegate(Output.of(inheritFromDelegate));
        }

        /**
         * @param manual Specify the AWS key and secret used for authenticating.
         * 
         * @return builder
         * 
         */
        public Builder manual(@Nullable Output<AwsKmsCredentialsManualArgs> manual) {
            $.manual = manual;
            return this;
        }

        /**
         * @param manual Specify the AWS key and secret used for authenticating.
         * 
         * @return builder
         * 
         */
        public Builder manual(AwsKmsCredentialsManualArgs manual) {
            return manual(Output.of(manual));
        }

        public AwsKmsCredentialsArgs build() {
            return $;
        }
    }

}
