// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.Platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Platform.InputSetArgs;
import com.pulumi.harness.Platform.inputs.InputSetState;
import com.pulumi.harness.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Harness Resource Group
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.harness.Platform.InputSet;
 * import com.pulumi.harness.Platform.InputSetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new InputSet(&#34;example&#34;, InputSetArgs.builder()        
 *             .identifier(&#34;identifier&#34;)
 *             .orgId(&#34;org_id&#34;)
 *             .pipelineId(&#34;pipeline_id&#34;)
 *             .projectId(&#34;project_id&#34;)
 *             .tags(&#34;foo:bar&#34;)
 *             .yaml(&#34;&#34;&#34;
 *     inputSet:
 *       identifier: &#34;identifier&#34;
 *       name: &#34;name&#34;
 *       tags:
 *         foo: &#34;bar&#34;
 *       orgIdentifier: &#34;org_id&#34;
 *       projectIdentifier: &#34;project_id&#34;
 *       pipeline:
 *         identifier: &#34;pipeline_id&#34;
 *         variables:
 *         - name: &#34;key&#34;
 *           type: &#34;String&#34;
 *           value: &#34;value&#34;
 * 
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * # Import using input set id
 * 
 * ```sh
 *  $ pulumi import harness:Platform/inputSet:InputSet example &lt;input_set_id&gt;
 * ```
 * 
 */
@ResourceType(type="harness:Platform/inputSet:InputSet")
public class InputSet extends com.pulumi.resources.CustomResource {
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Identifier of the pipeline
     * 
     */
    @Export(name="pipelineId", type=String.class, parameters={})
    private Output<String> pipelineId;

    /**
     * @return Identifier of the pipeline
     * 
     */
    public Output<String> pipelineId() {
        return this.pipelineId;
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Input Set YAML
     * 
     */
    @Export(name="yaml", type=String.class, parameters={})
    private Output<String> yaml;

    /**
     * @return Input Set YAML
     * 
     */
    public Output<String> yaml() {
        return this.yaml;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InputSet(String name) {
        this(name, InputSetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InputSet(String name, InputSetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InputSet(String name, InputSetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:Platform/inputSet:InputSet", name, args == null ? InputSetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InputSet(String name, Output<String> id, @Nullable InputSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:Platform/inputSet:InputSet", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InputSet get(String name, Output<String> id, @Nullable InputSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InputSet(name, id, state, options);
    }
}
