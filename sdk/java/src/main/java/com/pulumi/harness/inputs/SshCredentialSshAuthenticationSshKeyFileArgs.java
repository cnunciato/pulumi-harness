// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SshCredentialSshAuthenticationSshKeyFileArgs extends com.pulumi.resources.ResourceArgs {

    public static final SshCredentialSshAuthenticationSshKeyFileArgs Empty = new SshCredentialSshAuthenticationSshKeyFileArgs();

    @Import(name="passphraseSecretId")
    private @Nullable Output<String> passphraseSecretId;

    public Optional<Output<String>> passphraseSecretId() {
        return Optional.ofNullable(this.passphraseSecretId);
    }

    @Import(name="path", required=true)
    private Output<String> path;

    public Output<String> path() {
        return this.path;
    }

    private SshCredentialSshAuthenticationSshKeyFileArgs() {}

    private SshCredentialSshAuthenticationSshKeyFileArgs(SshCredentialSshAuthenticationSshKeyFileArgs $) {
        this.passphraseSecretId = $.passphraseSecretId;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SshCredentialSshAuthenticationSshKeyFileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SshCredentialSshAuthenticationSshKeyFileArgs $;

        public Builder() {
            $ = new SshCredentialSshAuthenticationSshKeyFileArgs();
        }

        public Builder(SshCredentialSshAuthenticationSshKeyFileArgs defaults) {
            $ = new SshCredentialSshAuthenticationSshKeyFileArgs(Objects.requireNonNull(defaults));
        }

        public Builder passphraseSecretId(@Nullable Output<String> passphraseSecretId) {
            $.passphraseSecretId = passphraseSecretId;
            return this;
        }

        public Builder passphraseSecretId(String passphraseSecretId) {
            return passphraseSecretId(Output.of(passphraseSecretId));
        }

        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        public Builder path(String path) {
            return path(Output.of(path));
        }

        public SshCredentialSshAuthenticationSshKeyFileArgs build() {
            $.path = Objects.requireNonNull($.path, "expected parameter 'path' to be non-null");
            return $;
        }
    }

}
