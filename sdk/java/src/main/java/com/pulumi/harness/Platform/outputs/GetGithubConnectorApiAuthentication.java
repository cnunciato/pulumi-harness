// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.platform.outputs.GetGithubConnectorApiAuthenticationGithubApp;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGithubConnectorApiAuthentication {
    private List<GetGithubConnectorApiAuthenticationGithubApp> githubApps;
    private String tokenRef;

    private GetGithubConnectorApiAuthentication() {}
    public List<GetGithubConnectorApiAuthenticationGithubApp> githubApps() {
        return this.githubApps;
    }
    public String tokenRef() {
        return this.tokenRef;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGithubConnectorApiAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGithubConnectorApiAuthenticationGithubApp> githubApps;
        private String tokenRef;
        public Builder() {}
        public Builder(GetGithubConnectorApiAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.githubApps = defaults.githubApps;
    	      this.tokenRef = defaults.tokenRef;
        }

        @CustomType.Setter
        public Builder githubApps(List<GetGithubConnectorApiAuthenticationGithubApp> githubApps) {
            this.githubApps = Objects.requireNonNull(githubApps);
            return this;
        }
        public Builder githubApps(GetGithubConnectorApiAuthenticationGithubApp... githubApps) {
            return githubApps(List.of(githubApps));
        }
        @CustomType.Setter
        public Builder tokenRef(String tokenRef) {
            this.tokenRef = Objects.requireNonNull(tokenRef);
            return this;
        }
        public GetGithubConnectorApiAuthentication build() {
            final var o = new GetGithubConnectorApiAuthentication();
            o.githubApps = githubApps;
            o.tokenRef = tokenRef;
            return o;
        }
    }
}
