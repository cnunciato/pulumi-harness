// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.platform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.Utilities;
import com.pulumi.harness.platform.GitOpsClusterArgs;
import com.pulumi.harness.platform.inputs.GitOpsClusterState;
import com.pulumi.harness.platform.outputs.GitOpsClusterQuery;
import com.pulumi.harness.platform.outputs.GitOpsClusterRequest;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="harness:platform/gitOpsCluster:GitOpsCluster")
public class GitOpsCluster extends com.pulumi.resources.CustomResource {
    /**
     * account identifier of the cluster.
     * 
     */
    @Export(name="accountId", type=String.class, parameters={})
    private Output<String> accountId;

    /**
     * @return account identifier of the cluster.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * agent identifier of the cluster.
     * 
     */
    @Export(name="agentId", type=String.class, parameters={})
    private Output</* @Nullable */ String> agentId;

    /**
     * @return agent identifier of the cluster.
     * 
     */
    public Output<Optional<String>> agentId() {
        return Codegen.optional(this.agentId);
    }
    /**
     * identifier of the cluster.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return identifier of the cluster.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * organization identifier of the cluster.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output</* @Nullable */ String> orgId;

    /**
     * @return organization identifier of the cluster.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * project identifier of the cluster.
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output<String> projectId;

    /**
     * @return project identifier of the cluster.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * query for cluster resources
     * 
     */
    @Export(name="queries", type=List.class, parameters={GitOpsClusterQuery.class})
    private Output</* @Nullable */ List<GitOpsClusterQuery>> queries;

    /**
     * @return query for cluster resources
     * 
     */
    public Output<Optional<List<GitOpsClusterQuery>>> queries() {
        return Codegen.optional(this.queries);
    }
    /**
     * Cluster create/Update request.
     * 
     */
    @Export(name="requests", type=List.class, parameters={GitOpsClusterRequest.class})
    private Output</* @Nullable */ List<GitOpsClusterRequest>> requests;

    /**
     * @return Cluster create/Update request.
     * 
     */
    public Output<Optional<List<GitOpsClusterRequest>>> requests() {
        return Codegen.optional(this.requests);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GitOpsCluster(String name) {
        this(name, GitOpsClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GitOpsCluster(String name, GitOpsClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GitOpsCluster(String name, GitOpsClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/gitOpsCluster:GitOpsCluster", name, args == null ? GitOpsClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GitOpsCluster(String name, Output<String> id, @Nullable GitOpsClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:platform/gitOpsCluster:GitOpsCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GitOpsCluster get(String name, Output<String> id, @Nullable GitOpsClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GitOpsCluster(name, id, state, options);
    }
}
