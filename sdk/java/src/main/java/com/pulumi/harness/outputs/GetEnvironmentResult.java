// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.harness.outputs.GetEnvironmentVariableOverride;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEnvironmentResult {
    /**
     * @return The id of the application.
     * 
     */
    private String appId;
    /**
     * @return The description of the environment.
     * 
     */
    private String description;
    /**
     * @return The id of the environment.
     * 
     */
    private @Nullable String environmentId;
    /**
     * @return The id of the environment.
     * 
     */
    private String id;
    /**
     * @return The name of the environment.
     * 
     */
    private @Nullable String name;
    /**
     * @return The type of the environment. Valid values are `PROD` and `NON_PROD`
     * 
     */
    private String type;
    /**
     * @return Override for a service variable
     * 
     */
    private List<GetEnvironmentVariableOverride> variableOverrides;

    private GetEnvironmentResult() {}
    /**
     * @return The id of the application.
     * 
     */
    public String appId() {
        return this.appId;
    }
    /**
     * @return The description of the environment.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The id of the environment.
     * 
     */
    public Optional<String> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    /**
     * @return The id of the environment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the environment.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The type of the environment. Valid values are `PROD` and `NON_PROD`
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Override for a service variable
     * 
     */
    public List<GetEnvironmentVariableOverride> variableOverrides() {
        return this.variableOverrides;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnvironmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appId;
        private String description;
        private @Nullable String environmentId;
        private String id;
        private @Nullable String name;
        private String type;
        private List<GetEnvironmentVariableOverride> variableOverrides;
        public Builder() {}
        public Builder(GetEnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.description = defaults.description;
    	      this.environmentId = defaults.environmentId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.variableOverrides = defaults.variableOverrides;
        }

        @CustomType.Setter
        public Builder appId(String appId) {
            this.appId = Objects.requireNonNull(appId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder environmentId(@Nullable String environmentId) {
            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder variableOverrides(List<GetEnvironmentVariableOverride> variableOverrides) {
            this.variableOverrides = Objects.requireNonNull(variableOverrides);
            return this;
        }
        public Builder variableOverrides(GetEnvironmentVariableOverride... variableOverrides) {
            return variableOverrides(List.of(variableOverrides));
        }
        public GetEnvironmentResult build() {
            final var o = new GetEnvironmentResult();
            o.appId = appId;
            o.description = description;
            o.environmentId = environmentId;
            o.id = id;
            o.name = name;
            o.type = type;
            o.variableOverrides = variableOverrides;
            return o;
        }
    }
}
