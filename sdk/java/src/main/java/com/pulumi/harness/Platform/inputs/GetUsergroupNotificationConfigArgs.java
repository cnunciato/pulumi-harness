// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.Platform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetUsergroupNotificationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetUsergroupNotificationConfigArgs Empty = new GetUsergroupNotificationConfigArgs();

    /**
     * Group email
     * 
     */
    @Import(name="groupEmail", required=true)
    private Output<String> groupEmail;

    /**
     * @return Group email
     * 
     */
    public Output<String> groupEmail() {
        return this.groupEmail;
    }

    /**
     * Url of Microsoft teams webhook
     * 
     */
    @Import(name="microsoftTeamsWebhookUrl", required=true)
    private Output<String> microsoftTeamsWebhookUrl;

    /**
     * @return Url of Microsoft teams webhook
     * 
     */
    public Output<String> microsoftTeamsWebhookUrl() {
        return this.microsoftTeamsWebhookUrl;
    }

    /**
     * Pager duty key
     * 
     */
    @Import(name="pagerDutyKey", required=true)
    private Output<String> pagerDutyKey;

    /**
     * @return Pager duty key
     * 
     */
    public Output<String> pagerDutyKey() {
        return this.pagerDutyKey;
    }

    /**
     * Url of slack webhook
     * 
     */
    @Import(name="slackWebhookUrl", required=true)
    private Output<String> slackWebhookUrl;

    /**
     * @return Url of slack webhook
     * 
     */
    public Output<String> slackWebhookUrl() {
        return this.slackWebhookUrl;
    }

    /**
     * Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private GetUsergroupNotificationConfigArgs() {}

    private GetUsergroupNotificationConfigArgs(GetUsergroupNotificationConfigArgs $) {
        this.groupEmail = $.groupEmail;
        this.microsoftTeamsWebhookUrl = $.microsoftTeamsWebhookUrl;
        this.pagerDutyKey = $.pagerDutyKey;
        this.slackWebhookUrl = $.slackWebhookUrl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUsergroupNotificationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUsergroupNotificationConfigArgs $;

        public Builder() {
            $ = new GetUsergroupNotificationConfigArgs();
        }

        public Builder(GetUsergroupNotificationConfigArgs defaults) {
            $ = new GetUsergroupNotificationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupEmail Group email
         * 
         * @return builder
         * 
         */
        public Builder groupEmail(Output<String> groupEmail) {
            $.groupEmail = groupEmail;
            return this;
        }

        /**
         * @param groupEmail Group email
         * 
         * @return builder
         * 
         */
        public Builder groupEmail(String groupEmail) {
            return groupEmail(Output.of(groupEmail));
        }

        /**
         * @param microsoftTeamsWebhookUrl Url of Microsoft teams webhook
         * 
         * @return builder
         * 
         */
        public Builder microsoftTeamsWebhookUrl(Output<String> microsoftTeamsWebhookUrl) {
            $.microsoftTeamsWebhookUrl = microsoftTeamsWebhookUrl;
            return this;
        }

        /**
         * @param microsoftTeamsWebhookUrl Url of Microsoft teams webhook
         * 
         * @return builder
         * 
         */
        public Builder microsoftTeamsWebhookUrl(String microsoftTeamsWebhookUrl) {
            return microsoftTeamsWebhookUrl(Output.of(microsoftTeamsWebhookUrl));
        }

        /**
         * @param pagerDutyKey Pager duty key
         * 
         * @return builder
         * 
         */
        public Builder pagerDutyKey(Output<String> pagerDutyKey) {
            $.pagerDutyKey = pagerDutyKey;
            return this;
        }

        /**
         * @param pagerDutyKey Pager duty key
         * 
         * @return builder
         * 
         */
        public Builder pagerDutyKey(String pagerDutyKey) {
            return pagerDutyKey(Output.of(pagerDutyKey));
        }

        /**
         * @param slackWebhookUrl Url of slack webhook
         * 
         * @return builder
         * 
         */
        public Builder slackWebhookUrl(Output<String> slackWebhookUrl) {
            $.slackWebhookUrl = slackWebhookUrl;
            return this;
        }

        /**
         * @param slackWebhookUrl Url of slack webhook
         * 
         * @return builder
         * 
         */
        public Builder slackWebhookUrl(String slackWebhookUrl) {
            return slackWebhookUrl(Output.of(slackWebhookUrl));
        }

        /**
         * @param type Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetUsergroupNotificationConfigArgs build() {
            $.groupEmail = Objects.requireNonNull($.groupEmail, "expected parameter 'groupEmail' to be non-null");
            $.microsoftTeamsWebhookUrl = Objects.requireNonNull($.microsoftTeamsWebhookUrl, "expected parameter 'microsoftTeamsWebhookUrl' to be non-null");
            $.pagerDutyKey = Objects.requireNonNull($.pagerDutyKey, "expected parameter 'pagerDutyKey' to be non-null");
            $.slackWebhookUrl = Objects.requireNonNull($.slackWebhookUrl, "expected parameter 'slackWebhookUrl' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
