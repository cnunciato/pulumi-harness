// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.PlatformConnector.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetKubernetesOpenidConnect {
    private String clientIdRef;
    private String issuerUrl;
    private String masterUrl;
    private String passwordRef;
    private List<String> scopes;
    private String secretRef;
    private String username;
    private String usernameRef;

    private GetKubernetesOpenidConnect() {}
    public String clientIdRef() {
        return this.clientIdRef;
    }
    public String issuerUrl() {
        return this.issuerUrl;
    }
    public String masterUrl() {
        return this.masterUrl;
    }
    public String passwordRef() {
        return this.passwordRef;
    }
    public List<String> scopes() {
        return this.scopes;
    }
    public String secretRef() {
        return this.secretRef;
    }
    public String username() {
        return this.username;
    }
    public String usernameRef() {
        return this.usernameRef;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesOpenidConnect defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientIdRef;
        private String issuerUrl;
        private String masterUrl;
        private String passwordRef;
        private List<String> scopes;
        private String secretRef;
        private String username;
        private String usernameRef;
        public Builder() {}
        public Builder(GetKubernetesOpenidConnect defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientIdRef = defaults.clientIdRef;
    	      this.issuerUrl = defaults.issuerUrl;
    	      this.masterUrl = defaults.masterUrl;
    	      this.passwordRef = defaults.passwordRef;
    	      this.scopes = defaults.scopes;
    	      this.secretRef = defaults.secretRef;
    	      this.username = defaults.username;
    	      this.usernameRef = defaults.usernameRef;
        }

        @CustomType.Setter
        public Builder clientIdRef(String clientIdRef) {
            this.clientIdRef = Objects.requireNonNull(clientIdRef);
            return this;
        }
        @CustomType.Setter
        public Builder issuerUrl(String issuerUrl) {
            this.issuerUrl = Objects.requireNonNull(issuerUrl);
            return this;
        }
        @CustomType.Setter
        public Builder masterUrl(String masterUrl) {
            this.masterUrl = Objects.requireNonNull(masterUrl);
            return this;
        }
        @CustomType.Setter
        public Builder passwordRef(String passwordRef) {
            this.passwordRef = Objects.requireNonNull(passwordRef);
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            this.scopes = Objects.requireNonNull(scopes);
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder secretRef(String secretRef) {
            this.secretRef = Objects.requireNonNull(secretRef);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        @CustomType.Setter
        public Builder usernameRef(String usernameRef) {
            this.usernameRef = Objects.requireNonNull(usernameRef);
            return this;
        }
        public GetKubernetesOpenidConnect build() {
            final var o = new GetKubernetesOpenidConnect();
            o.clientIdRef = clientIdRef;
            o.issuerUrl = issuerUrl;
            o.masterUrl = masterUrl;
            o.passwordRef = passwordRef;
            o.scopes = scopes;
            o.secretRef = secretRef;
            o.username = username;
            o.usernameRef = usernameRef;
            return o;
        }
    }
}
