// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.harness.PlatformConnector;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.harness.PlatformConnector.JiraArgs;
import com.pulumi.harness.PlatformConnector.inputs.JiraState;
import com.pulumi.harness.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for creating a Jira connector.
 * 
 */
@ResourceType(type="harness:PlatformConnector/jira:Jira")
public class Jira extends com.pulumi.resources.CustomResource {
    /**
     * Connect using only the delegates which have these tags.
     * 
     */
    @Export(name="delegateSelectors", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> delegateSelectors;

    /**
     * @return Connect using only the delegates which have these tags.
     * 
     */
    public Output<Optional<List<String>>> delegateSelectors() {
        return Codegen.optional(this.delegateSelectors);
    }
    /**
     * Description of the resource.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Unique identifier of the resource.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return Unique identifier of the resource.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Name of the resource.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique identifier of the organization.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output</* @Nullable */ String> orgId;

    /**
     * @return Unique identifier of the organization.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * Reference to a secret containing the password to use for authentication.
     * 
     */
    @Export(name="passwordRef", type=String.class, parameters={})
    private Output<String> passwordRef;

    /**
     * @return Reference to a secret containing the password to use for authentication.
     * 
     */
    public Output<String> passwordRef() {
        return this.passwordRef;
    }
    /**
     * Unique identifier of the project.
     * 
     */
    @Export(name="projectId", type=String.class, parameters={})
    private Output</* @Nullable */ String> projectId;

    /**
     * @return Unique identifier of the project.
     * 
     */
    public Output<Optional<String>> projectId() {
        return Codegen.optional(this.projectId);
    }
    /**
     * Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    @Export(name="tags", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags to associate with the resource. Tags should be in the form `name:value`.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Url of the Jira server.
     * 
     */
    @Export(name="url", type=String.class, parameters={})
    private Output<String> url;

    /**
     * @return Url of the Jira server.
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * Username to use for authentication.
     * 
     */
    @Export(name="username", type=String.class, parameters={})
    private Output</* @Nullable */ String> username;

    /**
     * @return Username to use for authentication.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }
    /**
     * Reference to a secret containing the username to use for authentication.
     * 
     */
    @Export(name="usernameRef", type=String.class, parameters={})
    private Output</* @Nullable */ String> usernameRef;

    /**
     * @return Reference to a secret containing the username to use for authentication.
     * 
     */
    public Output<Optional<String>> usernameRef() {
        return Codegen.optional(this.usernameRef);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Jira(String name) {
        this(name, JiraArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Jira(String name, JiraArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Jira(String name, JiraArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:PlatformConnector/jira:Jira", name, args == null ? JiraArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Jira(String name, Output<String> id, @Nullable JiraState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("harness:PlatformConnector/jira:Jira", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Jira get(String name, Output<String> id, @Nullable JiraState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Jira(name, id, state, options);
    }
}
