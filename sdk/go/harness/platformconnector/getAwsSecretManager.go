// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platformconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up an AWS Secret Manager connector.
func LookupAwsSecretManager(ctx *pulumi.Context, args *LookupAwsSecretManagerArgs, opts ...pulumi.InvokeOption) (*LookupAwsSecretManagerResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAwsSecretManagerResult
	err := ctx.Invoke("harness:PlatformConnector/getAwsSecretManager:getAwsSecretManager", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsSecretManager.
type LookupAwsSecretManagerArgs struct {
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getAwsSecretManager.
type LookupAwsSecretManagerResult struct {
	// The credentials to use for connecting to aws.
	Credentials []GetAwsSecretManagerCredential `pulumi:"credentials"`
	// Connect using only the delegates which have these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// The AWS region where the AWS Secret Manager is.
	Region string `pulumi:"region"`
	// A prefix to be added to all secrets.
	SecretNamePrefix string `pulumi:"secretNamePrefix"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

func LookupAwsSecretManagerOutput(ctx *pulumi.Context, args LookupAwsSecretManagerOutputArgs, opts ...pulumi.InvokeOption) LookupAwsSecretManagerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsSecretManagerResult, error) {
			args := v.(LookupAwsSecretManagerArgs)
			r, err := LookupAwsSecretManager(ctx, &args, opts...)
			var s LookupAwsSecretManagerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwsSecretManagerResultOutput)
}

// A collection of arguments for invoking getAwsSecretManager.
type LookupAwsSecretManagerOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupAwsSecretManagerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsSecretManagerArgs)(nil)).Elem()
}

// A collection of values returned by getAwsSecretManager.
type LookupAwsSecretManagerResultOutput struct{ *pulumi.OutputState }

func (LookupAwsSecretManagerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsSecretManagerResult)(nil)).Elem()
}

func (o LookupAwsSecretManagerResultOutput) ToLookupAwsSecretManagerResultOutput() LookupAwsSecretManagerResultOutput {
	return o
}

func (o LookupAwsSecretManagerResultOutput) ToLookupAwsSecretManagerResultOutputWithContext(ctx context.Context) LookupAwsSecretManagerResultOutput {
	return o
}

// The credentials to use for connecting to aws.
func (o LookupAwsSecretManagerResultOutput) Credentials() GetAwsSecretManagerCredentialArrayOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) []GetAwsSecretManagerCredential { return v.Credentials }).(GetAwsSecretManagerCredentialArrayOutput)
}

// Connect using only the delegates which have these tags.
func (o LookupAwsSecretManagerResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupAwsSecretManagerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsSecretManagerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupAwsSecretManagerResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o LookupAwsSecretManagerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupAwsSecretManagerResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupAwsSecretManagerResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The AWS region where the AWS Secret Manager is.
func (o LookupAwsSecretManagerResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) string { return v.Region }).(pulumi.StringOutput)
}

// A prefix to be added to all secrets.
func (o LookupAwsSecretManagerResultOutput) SecretNamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) string { return v.SecretNamePrefix }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o LookupAwsSecretManagerResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsSecretManagerResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsSecretManagerResultOutput{})
}
