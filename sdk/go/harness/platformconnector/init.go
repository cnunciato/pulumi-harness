// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platformconnector

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/lbrlabs/pulumi-harness/sdk/go/harness"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "harness:PlatformConnector/appDynamics:AppDynamics":
		r = &AppDynamics{}
	case "harness:PlatformConnector/artifactory:Artifactory":
		r = &Artifactory{}
	case "harness:PlatformConnector/aws:Aws":
		r = &Aws{}
	case "harness:PlatformConnector/awsCC:AwsCC":
		r = &AwsCC{}
	case "harness:PlatformConnector/awsKms:AwsKms":
		r = &AwsKms{}
	case "harness:PlatformConnector/awsSecretManager:AwsSecretManager":
		r = &AwsSecretManager{}
	case "harness:PlatformConnector/bitbucket:Bitbucket":
		r = &Bitbucket{}
	case "harness:PlatformConnector/datadog:Datadog":
		r = &Datadog{}
	case "harness:PlatformConnector/docker:Docker":
		r = &Docker{}
	case "harness:PlatformConnector/dynatrace:Dynatrace":
		r = &Dynatrace{}
	case "harness:PlatformConnector/gcp:Gcp":
		r = &Gcp{}
	case "harness:PlatformConnector/git:Git":
		r = &Git{}
	case "harness:PlatformConnector/github:Github":
		r = &Github{}
	case "harness:PlatformConnector/gitlab:Gitlab":
		r = &Gitlab{}
	case "harness:PlatformConnector/helm:Helm":
		r = &Helm{}
	case "harness:PlatformConnector/jira:Jira":
		r = &Jira{}
	case "harness:PlatformConnector/kubernetes:Kubernetes":
		r = &Kubernetes{}
	case "harness:PlatformConnector/newrelic:Newrelic":
		r = &Newrelic{}
	case "harness:PlatformConnector/nexus:Nexus":
		r = &Nexus{}
	case "harness:PlatformConnector/pagerduty:Pagerduty":
		r = &Pagerduty{}
	case "harness:PlatformConnector/prometheus:Prometheus":
		r = &Prometheus{}
	case "harness:PlatformConnector/splunk:Splunk":
		r = &Splunk{}
	case "harness:PlatformConnector/sumologic:Sumologic":
		r = &Sumologic{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := harness.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/appDynamics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/artifactory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/aws",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/awsCC",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/awsKms",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/awsSecretManager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/bitbucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/datadog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/docker",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/dynatrace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/gcp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/git",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/github",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/gitlab",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/helm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/jira",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/kubernetes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/newrelic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/nexus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/pagerduty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/prometheus",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/splunk",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"harness",
		"PlatformConnector/sumologic",
		&module{version},
	)
}
