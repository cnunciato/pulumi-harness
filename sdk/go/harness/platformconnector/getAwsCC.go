// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platformconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up an AWS Cloud Cost connector.
func LookupAwsCC(ctx *pulumi.Context, args *LookupAwsCCArgs, opts ...pulumi.InvokeOption) (*LookupAwsCCResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupAwsCCResult
	err := ctx.Invoke("harness:PlatformConnector/getAwsCC:getAwsCC", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsCC.
type LookupAwsCCArgs struct {
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getAwsCC.
type LookupAwsCCResult struct {
	// The AWS account id.
	AccountId string `pulumi:"accountId"`
	// Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
	CrossAccountAccesses []GetAwsCCCrossAccountAccess `pulumi:"crossAccountAccesses"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
	ReportName string `pulumi:"reportName"`
	// The name of s3 bucket.
	S3Bucket string `pulumi:"s3Bucket"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

func LookupAwsCCOutput(ctx *pulumi.Context, args LookupAwsCCOutputArgs, opts ...pulumi.InvokeOption) LookupAwsCCResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAwsCCResult, error) {
			args := v.(LookupAwsCCArgs)
			r, err := LookupAwsCC(ctx, &args, opts...)
			var s LookupAwsCCResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAwsCCResultOutput)
}

// A collection of arguments for invoking getAwsCC.
type LookupAwsCCOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupAwsCCOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsCCArgs)(nil)).Elem()
}

// A collection of values returned by getAwsCC.
type LookupAwsCCResultOutput struct{ *pulumi.OutputState }

func (LookupAwsCCResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsCCResult)(nil)).Elem()
}

func (o LookupAwsCCResultOutput) ToLookupAwsCCResultOutput() LookupAwsCCResultOutput {
	return o
}

func (o LookupAwsCCResultOutput) ToLookupAwsCCResultOutputWithContext(ctx context.Context) LookupAwsCCResultOutput {
	return o
}

// The AWS account id.
func (o LookupAwsCCResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCCResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// Harness uses the secure cross-account role to access your AWS account. The role includes a restricted policy to access the cost and usage reports and resources for the sole purpose of cost analysis and cost optimization.
func (o LookupAwsCCResultOutput) CrossAccountAccesses() GetAwsCCCrossAccountAccessArrayOutput {
	return o.ApplyT(func(v LookupAwsCCResult) []GetAwsCCCrossAccountAccess { return v.CrossAccountAccesses }).(GetAwsCCCrossAccountAccessArrayOutput)
}

// Description of the resource.
func (o LookupAwsCCResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCCResult) string { return v.Description }).(pulumi.StringOutput)
}

// The features enabled for the connector. Valid values are BILLING, OPTIMIZATION, VISIBILITY.
func (o LookupAwsCCResultOutput) FeaturesEnableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsCCResult) []string { return v.FeaturesEnableds }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAwsCCResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCCResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupAwsCCResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsCCResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o LookupAwsCCResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsCCResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupAwsCCResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsCCResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupAwsCCResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAwsCCResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The cost and usage report name. Provided in the delivery options when the template is opened in the AWS console.
func (o LookupAwsCCResultOutput) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCCResult) string { return v.ReportName }).(pulumi.StringOutput)
}

// The name of s3 bucket.
func (o LookupAwsCCResultOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCCResult) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o LookupAwsCCResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsCCResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsCCResultOutput{})
}
