// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platformconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppDynamicsApiToken struct {
	// The client id used for connecting to App Dynamics.
	ClientId string `pulumi:"clientId"`
	// Reference to the Harness secret containing the App Dynamics client secret.
	ClientSecretRef string `pulumi:"clientSecretRef"`
}

// AppDynamicsApiTokenInput is an input type that accepts AppDynamicsApiTokenArgs and AppDynamicsApiTokenOutput values.
// You can construct a concrete instance of `AppDynamicsApiTokenInput` via:
//
//	AppDynamicsApiTokenArgs{...}
type AppDynamicsApiTokenInput interface {
	pulumi.Input

	ToAppDynamicsApiTokenOutput() AppDynamicsApiTokenOutput
	ToAppDynamicsApiTokenOutputWithContext(context.Context) AppDynamicsApiTokenOutput
}

type AppDynamicsApiTokenArgs struct {
	// The client id used for connecting to App Dynamics.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Reference to the Harness secret containing the App Dynamics client secret.
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
}

func (AppDynamicsApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsApiToken)(nil)).Elem()
}

func (i AppDynamicsApiTokenArgs) ToAppDynamicsApiTokenOutput() AppDynamicsApiTokenOutput {
	return i.ToAppDynamicsApiTokenOutputWithContext(context.Background())
}

func (i AppDynamicsApiTokenArgs) ToAppDynamicsApiTokenOutputWithContext(ctx context.Context) AppDynamicsApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsApiTokenOutput)
}

func (i AppDynamicsApiTokenArgs) ToAppDynamicsApiTokenPtrOutput() AppDynamicsApiTokenPtrOutput {
	return i.ToAppDynamicsApiTokenPtrOutputWithContext(context.Background())
}

func (i AppDynamicsApiTokenArgs) ToAppDynamicsApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsApiTokenOutput).ToAppDynamicsApiTokenPtrOutputWithContext(ctx)
}

// AppDynamicsApiTokenPtrInput is an input type that accepts AppDynamicsApiTokenArgs, AppDynamicsApiTokenPtr and AppDynamicsApiTokenPtrOutput values.
// You can construct a concrete instance of `AppDynamicsApiTokenPtrInput` via:
//
//	        AppDynamicsApiTokenArgs{...}
//
//	or:
//
//	        nil
type AppDynamicsApiTokenPtrInput interface {
	pulumi.Input

	ToAppDynamicsApiTokenPtrOutput() AppDynamicsApiTokenPtrOutput
	ToAppDynamicsApiTokenPtrOutputWithContext(context.Context) AppDynamicsApiTokenPtrOutput
}

type appDynamicsApiTokenPtrType AppDynamicsApiTokenArgs

func AppDynamicsApiTokenPtr(v *AppDynamicsApiTokenArgs) AppDynamicsApiTokenPtrInput {
	return (*appDynamicsApiTokenPtrType)(v)
}

func (*appDynamicsApiTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsApiToken)(nil)).Elem()
}

func (i *appDynamicsApiTokenPtrType) ToAppDynamicsApiTokenPtrOutput() AppDynamicsApiTokenPtrOutput {
	return i.ToAppDynamicsApiTokenPtrOutputWithContext(context.Background())
}

func (i *appDynamicsApiTokenPtrType) ToAppDynamicsApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsApiTokenPtrOutput)
}

type AppDynamicsApiTokenOutput struct{ *pulumi.OutputState }

func (AppDynamicsApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsApiToken)(nil)).Elem()
}

func (o AppDynamicsApiTokenOutput) ToAppDynamicsApiTokenOutput() AppDynamicsApiTokenOutput {
	return o
}

func (o AppDynamicsApiTokenOutput) ToAppDynamicsApiTokenOutputWithContext(ctx context.Context) AppDynamicsApiTokenOutput {
	return o
}

func (o AppDynamicsApiTokenOutput) ToAppDynamicsApiTokenPtrOutput() AppDynamicsApiTokenPtrOutput {
	return o.ToAppDynamicsApiTokenPtrOutputWithContext(context.Background())
}

func (o AppDynamicsApiTokenOutput) ToAppDynamicsApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsApiTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDynamicsApiToken) *AppDynamicsApiToken {
		return &v
	}).(AppDynamicsApiTokenPtrOutput)
}

// The client id used for connecting to App Dynamics.
func (o AppDynamicsApiTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsApiToken) string { return v.ClientId }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the App Dynamics client secret.
func (o AppDynamicsApiTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsApiToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

type AppDynamicsApiTokenPtrOutput struct{ *pulumi.OutputState }

func (AppDynamicsApiTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsApiToken)(nil)).Elem()
}

func (o AppDynamicsApiTokenPtrOutput) ToAppDynamicsApiTokenPtrOutput() AppDynamicsApiTokenPtrOutput {
	return o
}

func (o AppDynamicsApiTokenPtrOutput) ToAppDynamicsApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsApiTokenPtrOutput {
	return o
}

func (o AppDynamicsApiTokenPtrOutput) Elem() AppDynamicsApiTokenOutput {
	return o.ApplyT(func(v *AppDynamicsApiToken) AppDynamicsApiToken {
		if v != nil {
			return *v
		}
		var ret AppDynamicsApiToken
		return ret
	}).(AppDynamicsApiTokenOutput)
}

// The client id used for connecting to App Dynamics.
func (o AppDynamicsApiTokenPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsApiToken) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the App Dynamics client secret.
func (o AppDynamicsApiTokenPtrOutput) ClientSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsApiToken) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecretRef
	}).(pulumi.StringPtrOutput)
}

type AppDynamicsUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
}

// AppDynamicsUsernamePasswordInput is an input type that accepts AppDynamicsUsernamePasswordArgs and AppDynamicsUsernamePasswordOutput values.
// You can construct a concrete instance of `AppDynamicsUsernamePasswordInput` via:
//
//	AppDynamicsUsernamePasswordArgs{...}
type AppDynamicsUsernamePasswordInput interface {
	pulumi.Input

	ToAppDynamicsUsernamePasswordOutput() AppDynamicsUsernamePasswordOutput
	ToAppDynamicsUsernamePasswordOutputWithContext(context.Context) AppDynamicsUsernamePasswordOutput
}

type AppDynamicsUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AppDynamicsUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsUsernamePassword)(nil)).Elem()
}

func (i AppDynamicsUsernamePasswordArgs) ToAppDynamicsUsernamePasswordOutput() AppDynamicsUsernamePasswordOutput {
	return i.ToAppDynamicsUsernamePasswordOutputWithContext(context.Background())
}

func (i AppDynamicsUsernamePasswordArgs) ToAppDynamicsUsernamePasswordOutputWithContext(ctx context.Context) AppDynamicsUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsUsernamePasswordOutput)
}

func (i AppDynamicsUsernamePasswordArgs) ToAppDynamicsUsernamePasswordPtrOutput() AppDynamicsUsernamePasswordPtrOutput {
	return i.ToAppDynamicsUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i AppDynamicsUsernamePasswordArgs) ToAppDynamicsUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsUsernamePasswordOutput).ToAppDynamicsUsernamePasswordPtrOutputWithContext(ctx)
}

// AppDynamicsUsernamePasswordPtrInput is an input type that accepts AppDynamicsUsernamePasswordArgs, AppDynamicsUsernamePasswordPtr and AppDynamicsUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `AppDynamicsUsernamePasswordPtrInput` via:
//
//	        AppDynamicsUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type AppDynamicsUsernamePasswordPtrInput interface {
	pulumi.Input

	ToAppDynamicsUsernamePasswordPtrOutput() AppDynamicsUsernamePasswordPtrOutput
	ToAppDynamicsUsernamePasswordPtrOutputWithContext(context.Context) AppDynamicsUsernamePasswordPtrOutput
}

type appDynamicsUsernamePasswordPtrType AppDynamicsUsernamePasswordArgs

func AppDynamicsUsernamePasswordPtr(v *AppDynamicsUsernamePasswordArgs) AppDynamicsUsernamePasswordPtrInput {
	return (*appDynamicsUsernamePasswordPtrType)(v)
}

func (*appDynamicsUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsUsernamePassword)(nil)).Elem()
}

func (i *appDynamicsUsernamePasswordPtrType) ToAppDynamicsUsernamePasswordPtrOutput() AppDynamicsUsernamePasswordPtrOutput {
	return i.ToAppDynamicsUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *appDynamicsUsernamePasswordPtrType) ToAppDynamicsUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsUsernamePasswordPtrOutput)
}

type AppDynamicsUsernamePasswordOutput struct{ *pulumi.OutputState }

func (AppDynamicsUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsUsernamePassword)(nil)).Elem()
}

func (o AppDynamicsUsernamePasswordOutput) ToAppDynamicsUsernamePasswordOutput() AppDynamicsUsernamePasswordOutput {
	return o
}

func (o AppDynamicsUsernamePasswordOutput) ToAppDynamicsUsernamePasswordOutputWithContext(ctx context.Context) AppDynamicsUsernamePasswordOutput {
	return o
}

func (o AppDynamicsUsernamePasswordOutput) ToAppDynamicsUsernamePasswordPtrOutput() AppDynamicsUsernamePasswordPtrOutput {
	return o.ToAppDynamicsUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o AppDynamicsUsernamePasswordOutput) ToAppDynamicsUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDynamicsUsernamePassword) *AppDynamicsUsernamePassword {
		return &v
	}).(AppDynamicsUsernamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o AppDynamicsUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o AppDynamicsUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

type AppDynamicsUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (AppDynamicsUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsUsernamePassword)(nil)).Elem()
}

func (o AppDynamicsUsernamePasswordPtrOutput) ToAppDynamicsUsernamePasswordPtrOutput() AppDynamicsUsernamePasswordPtrOutput {
	return o
}

func (o AppDynamicsUsernamePasswordPtrOutput) ToAppDynamicsUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsUsernamePasswordPtrOutput {
	return o
}

func (o AppDynamicsUsernamePasswordPtrOutput) Elem() AppDynamicsUsernamePasswordOutput {
	return o.ApplyT(func(v *AppDynamicsUsernamePassword) AppDynamicsUsernamePassword {
		if v != nil {
			return *v
		}
		var ret AppDynamicsUsernamePassword
		return ret
	}).(AppDynamicsUsernamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o AppDynamicsUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o AppDynamicsUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ArtifactoryCredentials struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef *string `pulumi:"usernameRef"`
}

// ArtifactoryCredentialsInput is an input type that accepts ArtifactoryCredentialsArgs and ArtifactoryCredentialsOutput values.
// You can construct a concrete instance of `ArtifactoryCredentialsInput` via:
//
//	ArtifactoryCredentialsArgs{...}
type ArtifactoryCredentialsInput interface {
	pulumi.Input

	ToArtifactoryCredentialsOutput() ArtifactoryCredentialsOutput
	ToArtifactoryCredentialsOutputWithContext(context.Context) ArtifactoryCredentialsOutput
}

type ArtifactoryCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ArtifactoryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactoryCredentials)(nil)).Elem()
}

func (i ArtifactoryCredentialsArgs) ToArtifactoryCredentialsOutput() ArtifactoryCredentialsOutput {
	return i.ToArtifactoryCredentialsOutputWithContext(context.Background())
}

func (i ArtifactoryCredentialsArgs) ToArtifactoryCredentialsOutputWithContext(ctx context.Context) ArtifactoryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryCredentialsOutput)
}

func (i ArtifactoryCredentialsArgs) ToArtifactoryCredentialsPtrOutput() ArtifactoryCredentialsPtrOutput {
	return i.ToArtifactoryCredentialsPtrOutputWithContext(context.Background())
}

func (i ArtifactoryCredentialsArgs) ToArtifactoryCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryCredentialsOutput).ToArtifactoryCredentialsPtrOutputWithContext(ctx)
}

// ArtifactoryCredentialsPtrInput is an input type that accepts ArtifactoryCredentialsArgs, ArtifactoryCredentialsPtr and ArtifactoryCredentialsPtrOutput values.
// You can construct a concrete instance of `ArtifactoryCredentialsPtrInput` via:
//
//	        ArtifactoryCredentialsArgs{...}
//
//	or:
//
//	        nil
type ArtifactoryCredentialsPtrInput interface {
	pulumi.Input

	ToArtifactoryCredentialsPtrOutput() ArtifactoryCredentialsPtrOutput
	ToArtifactoryCredentialsPtrOutputWithContext(context.Context) ArtifactoryCredentialsPtrOutput
}

type artifactoryCredentialsPtrType ArtifactoryCredentialsArgs

func ArtifactoryCredentialsPtr(v *ArtifactoryCredentialsArgs) ArtifactoryCredentialsPtrInput {
	return (*artifactoryCredentialsPtrType)(v)
}

func (*artifactoryCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactoryCredentials)(nil)).Elem()
}

func (i *artifactoryCredentialsPtrType) ToArtifactoryCredentialsPtrOutput() ArtifactoryCredentialsPtrOutput {
	return i.ToArtifactoryCredentialsPtrOutputWithContext(context.Background())
}

func (i *artifactoryCredentialsPtrType) ToArtifactoryCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryCredentialsPtrOutput)
}

type ArtifactoryCredentialsOutput struct{ *pulumi.OutputState }

func (ArtifactoryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactoryCredentials)(nil)).Elem()
}

func (o ArtifactoryCredentialsOutput) ToArtifactoryCredentialsOutput() ArtifactoryCredentialsOutput {
	return o
}

func (o ArtifactoryCredentialsOutput) ToArtifactoryCredentialsOutputWithContext(ctx context.Context) ArtifactoryCredentialsOutput {
	return o
}

func (o ArtifactoryCredentialsOutput) ToArtifactoryCredentialsPtrOutput() ArtifactoryCredentialsPtrOutput {
	return o.ToArtifactoryCredentialsPtrOutputWithContext(context.Background())
}

func (o ArtifactoryCredentialsOutput) ToArtifactoryCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArtifactoryCredentials) *ArtifactoryCredentials {
		return &v
	}).(ArtifactoryCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o ArtifactoryCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ArtifactoryCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o ArtifactoryCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactoryCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o ArtifactoryCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactoryCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ArtifactoryCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ArtifactoryCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactoryCredentials)(nil)).Elem()
}

func (o ArtifactoryCredentialsPtrOutput) ToArtifactoryCredentialsPtrOutput() ArtifactoryCredentialsPtrOutput {
	return o
}

func (o ArtifactoryCredentialsPtrOutput) ToArtifactoryCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryCredentialsPtrOutput {
	return o
}

func (o ArtifactoryCredentialsPtrOutput) Elem() ArtifactoryCredentialsOutput {
	return o.ApplyT(func(v *ArtifactoryCredentials) ArtifactoryCredentials {
		if v != nil {
			return *v
		}
		var ret ArtifactoryCredentials
		return ret
	}).(ArtifactoryCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o ArtifactoryCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o ArtifactoryCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o ArtifactoryCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type AwsCCCrossAccountAccess struct {
	// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
	ExternalId string `pulumi:"externalId"`
	// The ARN of the role to use for cross-account access.
	RoleArn string `pulumi:"roleArn"`
}

// AwsCCCrossAccountAccessInput is an input type that accepts AwsCCCrossAccountAccessArgs and AwsCCCrossAccountAccessOutput values.
// You can construct a concrete instance of `AwsCCCrossAccountAccessInput` via:
//
//	AwsCCCrossAccountAccessArgs{...}
type AwsCCCrossAccountAccessInput interface {
	pulumi.Input

	ToAwsCCCrossAccountAccessOutput() AwsCCCrossAccountAccessOutput
	ToAwsCCCrossAccountAccessOutputWithContext(context.Context) AwsCCCrossAccountAccessOutput
}

type AwsCCCrossAccountAccessArgs struct {
	// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of the role to use for cross-account access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AwsCCCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCCCrossAccountAccess)(nil)).Elem()
}

func (i AwsCCCrossAccountAccessArgs) ToAwsCCCrossAccountAccessOutput() AwsCCCrossAccountAccessOutput {
	return i.ToAwsCCCrossAccountAccessOutputWithContext(context.Background())
}

func (i AwsCCCrossAccountAccessArgs) ToAwsCCCrossAccountAccessOutputWithContext(ctx context.Context) AwsCCCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCCCrossAccountAccessOutput)
}

func (i AwsCCCrossAccountAccessArgs) ToAwsCCCrossAccountAccessPtrOutput() AwsCCCrossAccountAccessPtrOutput {
	return i.ToAwsCCCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i AwsCCCrossAccountAccessArgs) ToAwsCCCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCCCrossAccountAccessOutput).ToAwsCCCrossAccountAccessPtrOutputWithContext(ctx)
}

// AwsCCCrossAccountAccessPtrInput is an input type that accepts AwsCCCrossAccountAccessArgs, AwsCCCrossAccountAccessPtr and AwsCCCrossAccountAccessPtrOutput values.
// You can construct a concrete instance of `AwsCCCrossAccountAccessPtrInput` via:
//
//	        AwsCCCrossAccountAccessArgs{...}
//
//	or:
//
//	        nil
type AwsCCCrossAccountAccessPtrInput interface {
	pulumi.Input

	ToAwsCCCrossAccountAccessPtrOutput() AwsCCCrossAccountAccessPtrOutput
	ToAwsCCCrossAccountAccessPtrOutputWithContext(context.Context) AwsCCCrossAccountAccessPtrOutput
}

type awsCCCrossAccountAccessPtrType AwsCCCrossAccountAccessArgs

func AwsCCCrossAccountAccessPtr(v *AwsCCCrossAccountAccessArgs) AwsCCCrossAccountAccessPtrInput {
	return (*awsCCCrossAccountAccessPtrType)(v)
}

func (*awsCCCrossAccountAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCCCrossAccountAccess)(nil)).Elem()
}

func (i *awsCCCrossAccountAccessPtrType) ToAwsCCCrossAccountAccessPtrOutput() AwsCCCrossAccountAccessPtrOutput {
	return i.ToAwsCCCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i *awsCCCrossAccountAccessPtrType) ToAwsCCCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCCCrossAccountAccessPtrOutput)
}

type AwsCCCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (AwsCCCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCCCrossAccountAccess)(nil)).Elem()
}

func (o AwsCCCrossAccountAccessOutput) ToAwsCCCrossAccountAccessOutput() AwsCCCrossAccountAccessOutput {
	return o
}

func (o AwsCCCrossAccountAccessOutput) ToAwsCCCrossAccountAccessOutputWithContext(ctx context.Context) AwsCCCrossAccountAccessOutput {
	return o
}

func (o AwsCCCrossAccountAccessOutput) ToAwsCCCrossAccountAccessPtrOutput() AwsCCCrossAccountAccessPtrOutput {
	return o.ToAwsCCCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (o AwsCCCrossAccountAccessOutput) ToAwsCCCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCCrossAccountAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsCCCrossAccountAccess) *AwsCCCrossAccountAccess {
		return &v
	}).(AwsCCCrossAccountAccessPtrOutput)
}

// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
func (o AwsCCCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCCCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the role to use for cross-account access.
func (o AwsCCCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCCCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsCCCrossAccountAccessPtrOutput struct{ *pulumi.OutputState }

func (AwsCCCrossAccountAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCCCrossAccountAccess)(nil)).Elem()
}

func (o AwsCCCrossAccountAccessPtrOutput) ToAwsCCCrossAccountAccessPtrOutput() AwsCCCrossAccountAccessPtrOutput {
	return o
}

func (o AwsCCCrossAccountAccessPtrOutput) ToAwsCCCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCCrossAccountAccessPtrOutput {
	return o
}

func (o AwsCCCrossAccountAccessPtrOutput) Elem() AwsCCCrossAccountAccessOutput {
	return o.ApplyT(func(v *AwsCCCrossAccountAccess) AwsCCCrossAccountAccess {
		if v != nil {
			return *v
		}
		var ret AwsCCCrossAccountAccess
		return ret
	}).(AwsCCCrossAccountAccessOutput)
}

// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
func (o AwsCCCrossAccountAccessPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCCCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role to use for cross-account access.
func (o AwsCCCrossAccountAccessPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCCCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsCrossAccountAccess struct {
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId *string `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
	RoleArn string `pulumi:"roleArn"`
}

// AwsCrossAccountAccessInput is an input type that accepts AwsCrossAccountAccessArgs and AwsCrossAccountAccessOutput values.
// You can construct a concrete instance of `AwsCrossAccountAccessInput` via:
//
//	AwsCrossAccountAccessArgs{...}
type AwsCrossAccountAccessInput interface {
	pulumi.Input

	ToAwsCrossAccountAccessOutput() AwsCrossAccountAccessOutput
	ToAwsCrossAccountAccessOutputWithContext(context.Context) AwsCrossAccountAccessOutput
}

type AwsCrossAccountAccessArgs struct {
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AwsCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCrossAccountAccess)(nil)).Elem()
}

func (i AwsCrossAccountAccessArgs) ToAwsCrossAccountAccessOutput() AwsCrossAccountAccessOutput {
	return i.ToAwsCrossAccountAccessOutputWithContext(context.Background())
}

func (i AwsCrossAccountAccessArgs) ToAwsCrossAccountAccessOutputWithContext(ctx context.Context) AwsCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCrossAccountAccessOutput)
}

func (i AwsCrossAccountAccessArgs) ToAwsCrossAccountAccessPtrOutput() AwsCrossAccountAccessPtrOutput {
	return i.ToAwsCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i AwsCrossAccountAccessArgs) ToAwsCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCrossAccountAccessOutput).ToAwsCrossAccountAccessPtrOutputWithContext(ctx)
}

// AwsCrossAccountAccessPtrInput is an input type that accepts AwsCrossAccountAccessArgs, AwsCrossAccountAccessPtr and AwsCrossAccountAccessPtrOutput values.
// You can construct a concrete instance of `AwsCrossAccountAccessPtrInput` via:
//
//	        AwsCrossAccountAccessArgs{...}
//
//	or:
//
//	        nil
type AwsCrossAccountAccessPtrInput interface {
	pulumi.Input

	ToAwsCrossAccountAccessPtrOutput() AwsCrossAccountAccessPtrOutput
	ToAwsCrossAccountAccessPtrOutputWithContext(context.Context) AwsCrossAccountAccessPtrOutput
}

type awsCrossAccountAccessPtrType AwsCrossAccountAccessArgs

func AwsCrossAccountAccessPtr(v *AwsCrossAccountAccessArgs) AwsCrossAccountAccessPtrInput {
	return (*awsCrossAccountAccessPtrType)(v)
}

func (*awsCrossAccountAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCrossAccountAccess)(nil)).Elem()
}

func (i *awsCrossAccountAccessPtrType) ToAwsCrossAccountAccessPtrOutput() AwsCrossAccountAccessPtrOutput {
	return i.ToAwsCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i *awsCrossAccountAccessPtrType) ToAwsCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCrossAccountAccessPtrOutput)
}

type AwsCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (AwsCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCrossAccountAccess)(nil)).Elem()
}

func (o AwsCrossAccountAccessOutput) ToAwsCrossAccountAccessOutput() AwsCrossAccountAccessOutput {
	return o
}

func (o AwsCrossAccountAccessOutput) ToAwsCrossAccountAccessOutputWithContext(ctx context.Context) AwsCrossAccountAccessOutput {
	return o
}

func (o AwsCrossAccountAccessOutput) ToAwsCrossAccountAccessPtrOutput() AwsCrossAccountAccessPtrOutput {
	return o.ToAwsCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (o AwsCrossAccountAccessOutput) ToAwsCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCrossAccountAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsCrossAccountAccess) *AwsCrossAccountAccess {
		return &v
	}).(AwsCrossAccountAccessPtrOutput)
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o AwsCrossAccountAccessOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsCrossAccountAccess) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
func (o AwsCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsCrossAccountAccessPtrOutput struct{ *pulumi.OutputState }

func (AwsCrossAccountAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCrossAccountAccess)(nil)).Elem()
}

func (o AwsCrossAccountAccessPtrOutput) ToAwsCrossAccountAccessPtrOutput() AwsCrossAccountAccessPtrOutput {
	return o
}

func (o AwsCrossAccountAccessPtrOutput) ToAwsCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCrossAccountAccessPtrOutput {
	return o
}

func (o AwsCrossAccountAccessPtrOutput) Elem() AwsCrossAccountAccessOutput {
	return o.ApplyT(func(v *AwsCrossAccountAccess) AwsCrossAccountAccess {
		if v != nil {
			return *v
		}
		var ret AwsCrossAccountAccess
		return ret
	}).(AwsCrossAccountAccessOutput)
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o AwsCrossAccountAccessPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
func (o AwsCrossAccountAccessPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsInheritFromDelegate struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// AwsInheritFromDelegateInput is an input type that accepts AwsInheritFromDelegateArgs and AwsInheritFromDelegateOutput values.
// You can construct a concrete instance of `AwsInheritFromDelegateInput` via:
//
//	AwsInheritFromDelegateArgs{...}
type AwsInheritFromDelegateInput interface {
	pulumi.Input

	ToAwsInheritFromDelegateOutput() AwsInheritFromDelegateOutput
	ToAwsInheritFromDelegateOutputWithContext(context.Context) AwsInheritFromDelegateOutput
}

type AwsInheritFromDelegateArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (AwsInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInheritFromDelegate)(nil)).Elem()
}

func (i AwsInheritFromDelegateArgs) ToAwsInheritFromDelegateOutput() AwsInheritFromDelegateOutput {
	return i.ToAwsInheritFromDelegateOutputWithContext(context.Background())
}

func (i AwsInheritFromDelegateArgs) ToAwsInheritFromDelegateOutputWithContext(ctx context.Context) AwsInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInheritFromDelegateOutput)
}

func (i AwsInheritFromDelegateArgs) ToAwsInheritFromDelegatePtrOutput() AwsInheritFromDelegatePtrOutput {
	return i.ToAwsInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i AwsInheritFromDelegateArgs) ToAwsInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInheritFromDelegateOutput).ToAwsInheritFromDelegatePtrOutputWithContext(ctx)
}

// AwsInheritFromDelegatePtrInput is an input type that accepts AwsInheritFromDelegateArgs, AwsInheritFromDelegatePtr and AwsInheritFromDelegatePtrOutput values.
// You can construct a concrete instance of `AwsInheritFromDelegatePtrInput` via:
//
//	        AwsInheritFromDelegateArgs{...}
//
//	or:
//
//	        nil
type AwsInheritFromDelegatePtrInput interface {
	pulumi.Input

	ToAwsInheritFromDelegatePtrOutput() AwsInheritFromDelegatePtrOutput
	ToAwsInheritFromDelegatePtrOutputWithContext(context.Context) AwsInheritFromDelegatePtrOutput
}

type awsInheritFromDelegatePtrType AwsInheritFromDelegateArgs

func AwsInheritFromDelegatePtr(v *AwsInheritFromDelegateArgs) AwsInheritFromDelegatePtrInput {
	return (*awsInheritFromDelegatePtrType)(v)
}

func (*awsInheritFromDelegatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInheritFromDelegate)(nil)).Elem()
}

func (i *awsInheritFromDelegatePtrType) ToAwsInheritFromDelegatePtrOutput() AwsInheritFromDelegatePtrOutput {
	return i.ToAwsInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i *awsInheritFromDelegatePtrType) ToAwsInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsInheritFromDelegatePtrOutput)
}

type AwsInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (AwsInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsInheritFromDelegate)(nil)).Elem()
}

func (o AwsInheritFromDelegateOutput) ToAwsInheritFromDelegateOutput() AwsInheritFromDelegateOutput {
	return o
}

func (o AwsInheritFromDelegateOutput) ToAwsInheritFromDelegateOutputWithContext(ctx context.Context) AwsInheritFromDelegateOutput {
	return o
}

func (o AwsInheritFromDelegateOutput) ToAwsInheritFromDelegatePtrOutput() AwsInheritFromDelegatePtrOutput {
	return o.ToAwsInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (o AwsInheritFromDelegateOutput) ToAwsInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsInheritFromDelegatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsInheritFromDelegate) *AwsInheritFromDelegate {
		return &v
	}).(AwsInheritFromDelegatePtrOutput)
}

// The delegates to inherit the credentials from.
func (o AwsInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type AwsInheritFromDelegatePtrOutput struct{ *pulumi.OutputState }

func (AwsInheritFromDelegatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsInheritFromDelegate)(nil)).Elem()
}

func (o AwsInheritFromDelegatePtrOutput) ToAwsInheritFromDelegatePtrOutput() AwsInheritFromDelegatePtrOutput {
	return o
}

func (o AwsInheritFromDelegatePtrOutput) ToAwsInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsInheritFromDelegatePtrOutput {
	return o
}

func (o AwsInheritFromDelegatePtrOutput) Elem() AwsInheritFromDelegateOutput {
	return o.ApplyT(func(v *AwsInheritFromDelegate) AwsInheritFromDelegate {
		if v != nil {
			return *v
		}
		var ret AwsInheritFromDelegate
		return ret
	}).(AwsInheritFromDelegateOutput)
}

// The delegates to inherit the credentials from.
func (o AwsInheritFromDelegatePtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsInheritFromDelegate) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type AwsIrsa struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// AwsIrsaInput is an input type that accepts AwsIrsaArgs and AwsIrsaOutput values.
// You can construct a concrete instance of `AwsIrsaInput` via:
//
//	AwsIrsaArgs{...}
type AwsIrsaInput interface {
	pulumi.Input

	ToAwsIrsaOutput() AwsIrsaOutput
	ToAwsIrsaOutputWithContext(context.Context) AwsIrsaOutput
}

type AwsIrsaArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (AwsIrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsIrsa)(nil)).Elem()
}

func (i AwsIrsaArgs) ToAwsIrsaOutput() AwsIrsaOutput {
	return i.ToAwsIrsaOutputWithContext(context.Background())
}

func (i AwsIrsaArgs) ToAwsIrsaOutputWithContext(ctx context.Context) AwsIrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIrsaOutput)
}

func (i AwsIrsaArgs) ToAwsIrsaPtrOutput() AwsIrsaPtrOutput {
	return i.ToAwsIrsaPtrOutputWithContext(context.Background())
}

func (i AwsIrsaArgs) ToAwsIrsaPtrOutputWithContext(ctx context.Context) AwsIrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIrsaOutput).ToAwsIrsaPtrOutputWithContext(ctx)
}

// AwsIrsaPtrInput is an input type that accepts AwsIrsaArgs, AwsIrsaPtr and AwsIrsaPtrOutput values.
// You can construct a concrete instance of `AwsIrsaPtrInput` via:
//
//	        AwsIrsaArgs{...}
//
//	or:
//
//	        nil
type AwsIrsaPtrInput interface {
	pulumi.Input

	ToAwsIrsaPtrOutput() AwsIrsaPtrOutput
	ToAwsIrsaPtrOutputWithContext(context.Context) AwsIrsaPtrOutput
}

type awsIrsaPtrType AwsIrsaArgs

func AwsIrsaPtr(v *AwsIrsaArgs) AwsIrsaPtrInput {
	return (*awsIrsaPtrType)(v)
}

func (*awsIrsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsIrsa)(nil)).Elem()
}

func (i *awsIrsaPtrType) ToAwsIrsaPtrOutput() AwsIrsaPtrOutput {
	return i.ToAwsIrsaPtrOutputWithContext(context.Background())
}

func (i *awsIrsaPtrType) ToAwsIrsaPtrOutputWithContext(ctx context.Context) AwsIrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIrsaPtrOutput)
}

type AwsIrsaOutput struct{ *pulumi.OutputState }

func (AwsIrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsIrsa)(nil)).Elem()
}

func (o AwsIrsaOutput) ToAwsIrsaOutput() AwsIrsaOutput {
	return o
}

func (o AwsIrsaOutput) ToAwsIrsaOutputWithContext(ctx context.Context) AwsIrsaOutput {
	return o
}

func (o AwsIrsaOutput) ToAwsIrsaPtrOutput() AwsIrsaPtrOutput {
	return o.ToAwsIrsaPtrOutputWithContext(context.Background())
}

func (o AwsIrsaOutput) ToAwsIrsaPtrOutputWithContext(ctx context.Context) AwsIrsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsIrsa) *AwsIrsa {
		return &v
	}).(AwsIrsaPtrOutput)
}

// The delegates to inherit the credentials from.
func (o AwsIrsaOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsIrsa) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type AwsIrsaPtrOutput struct{ *pulumi.OutputState }

func (AwsIrsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsIrsa)(nil)).Elem()
}

func (o AwsIrsaPtrOutput) ToAwsIrsaPtrOutput() AwsIrsaPtrOutput {
	return o
}

func (o AwsIrsaPtrOutput) ToAwsIrsaPtrOutputWithContext(ctx context.Context) AwsIrsaPtrOutput {
	return o
}

func (o AwsIrsaPtrOutput) Elem() AwsIrsaOutput {
	return o.ApplyT(func(v *AwsIrsa) AwsIrsa {
		if v != nil {
			return *v
		}
		var ret AwsIrsa
		return ret
	}).(AwsIrsaOutput)
}

// The delegates to inherit the credentials from.
func (o AwsIrsaPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsIrsa) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type AwsKmsCredentials struct {
	// Connect using STS assume role.
	AssumeRole *AwsKmsCredentialsAssumeRole `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate *bool `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual *AwsKmsCredentialsManual `pulumi:"manual"`
}

// AwsKmsCredentialsInput is an input type that accepts AwsKmsCredentialsArgs and AwsKmsCredentialsOutput values.
// You can construct a concrete instance of `AwsKmsCredentialsInput` via:
//
//	AwsKmsCredentialsArgs{...}
type AwsKmsCredentialsInput interface {
	pulumi.Input

	ToAwsKmsCredentialsOutput() AwsKmsCredentialsOutput
	ToAwsKmsCredentialsOutputWithContext(context.Context) AwsKmsCredentialsOutput
}

type AwsKmsCredentialsArgs struct {
	// Connect using STS assume role.
	AssumeRole AwsKmsCredentialsAssumeRolePtrInput `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate pulumi.BoolPtrInput `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual AwsKmsCredentialsManualPtrInput `pulumi:"manual"`
}

func (AwsKmsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsCredentials)(nil)).Elem()
}

func (i AwsKmsCredentialsArgs) ToAwsKmsCredentialsOutput() AwsKmsCredentialsOutput {
	return i.ToAwsKmsCredentialsOutputWithContext(context.Background())
}

func (i AwsKmsCredentialsArgs) ToAwsKmsCredentialsOutputWithContext(ctx context.Context) AwsKmsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsOutput)
}

func (i AwsKmsCredentialsArgs) ToAwsKmsCredentialsPtrOutput() AwsKmsCredentialsPtrOutput {
	return i.ToAwsKmsCredentialsPtrOutputWithContext(context.Background())
}

func (i AwsKmsCredentialsArgs) ToAwsKmsCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsOutput).ToAwsKmsCredentialsPtrOutputWithContext(ctx)
}

// AwsKmsCredentialsPtrInput is an input type that accepts AwsKmsCredentialsArgs, AwsKmsCredentialsPtr and AwsKmsCredentialsPtrOutput values.
// You can construct a concrete instance of `AwsKmsCredentialsPtrInput` via:
//
//	        AwsKmsCredentialsArgs{...}
//
//	or:
//
//	        nil
type AwsKmsCredentialsPtrInput interface {
	pulumi.Input

	ToAwsKmsCredentialsPtrOutput() AwsKmsCredentialsPtrOutput
	ToAwsKmsCredentialsPtrOutputWithContext(context.Context) AwsKmsCredentialsPtrOutput
}

type awsKmsCredentialsPtrType AwsKmsCredentialsArgs

func AwsKmsCredentialsPtr(v *AwsKmsCredentialsArgs) AwsKmsCredentialsPtrInput {
	return (*awsKmsCredentialsPtrType)(v)
}

func (*awsKmsCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsCredentials)(nil)).Elem()
}

func (i *awsKmsCredentialsPtrType) ToAwsKmsCredentialsPtrOutput() AwsKmsCredentialsPtrOutput {
	return i.ToAwsKmsCredentialsPtrOutputWithContext(context.Background())
}

func (i *awsKmsCredentialsPtrType) ToAwsKmsCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsPtrOutput)
}

type AwsKmsCredentialsOutput struct{ *pulumi.OutputState }

func (AwsKmsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsCredentials)(nil)).Elem()
}

func (o AwsKmsCredentialsOutput) ToAwsKmsCredentialsOutput() AwsKmsCredentialsOutput {
	return o
}

func (o AwsKmsCredentialsOutput) ToAwsKmsCredentialsOutputWithContext(ctx context.Context) AwsKmsCredentialsOutput {
	return o
}

func (o AwsKmsCredentialsOutput) ToAwsKmsCredentialsPtrOutput() AwsKmsCredentialsPtrOutput {
	return o.ToAwsKmsCredentialsPtrOutputWithContext(context.Background())
}

func (o AwsKmsCredentialsOutput) ToAwsKmsCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsKmsCredentials) *AwsKmsCredentials {
		return &v
	}).(AwsKmsCredentialsPtrOutput)
}

// Connect using STS assume role.
func (o AwsKmsCredentialsOutput) AssumeRole() AwsKmsCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v AwsKmsCredentials) *AwsKmsCredentialsAssumeRole { return v.AssumeRole }).(AwsKmsCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsKmsCredentialsOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsKmsCredentials) *bool { return v.InheritFromDelegate }).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsKmsCredentialsOutput) Manual() AwsKmsCredentialsManualPtrOutput {
	return o.ApplyT(func(v AwsKmsCredentials) *AwsKmsCredentialsManual { return v.Manual }).(AwsKmsCredentialsManualPtrOutput)
}

type AwsKmsCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AwsKmsCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsCredentials)(nil)).Elem()
}

func (o AwsKmsCredentialsPtrOutput) ToAwsKmsCredentialsPtrOutput() AwsKmsCredentialsPtrOutput {
	return o
}

func (o AwsKmsCredentialsPtrOutput) ToAwsKmsCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsPtrOutput {
	return o
}

func (o AwsKmsCredentialsPtrOutput) Elem() AwsKmsCredentialsOutput {
	return o.ApplyT(func(v *AwsKmsCredentials) AwsKmsCredentials {
		if v != nil {
			return *v
		}
		var ret AwsKmsCredentials
		return ret
	}).(AwsKmsCredentialsOutput)
}

// Connect using STS assume role.
func (o AwsKmsCredentialsPtrOutput) AssumeRole() AwsKmsCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentials) *AwsKmsCredentialsAssumeRole {
		if v == nil {
			return nil
		}
		return v.AssumeRole
	}).(AwsKmsCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsKmsCredentialsPtrOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromDelegate
	}).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsKmsCredentialsPtrOutput) Manual() AwsKmsCredentialsManualPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentials) *AwsKmsCredentialsManual {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(AwsKmsCredentialsManualPtrOutput)
}

type AwsKmsCredentialsAssumeRole struct {
	Duration   int     `pulumi:"duration"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    string  `pulumi:"roleArn"`
}

// AwsKmsCredentialsAssumeRoleInput is an input type that accepts AwsKmsCredentialsAssumeRoleArgs and AwsKmsCredentialsAssumeRoleOutput values.
// You can construct a concrete instance of `AwsKmsCredentialsAssumeRoleInput` via:
//
//	AwsKmsCredentialsAssumeRoleArgs{...}
type AwsKmsCredentialsAssumeRoleInput interface {
	pulumi.Input

	ToAwsKmsCredentialsAssumeRoleOutput() AwsKmsCredentialsAssumeRoleOutput
	ToAwsKmsCredentialsAssumeRoleOutputWithContext(context.Context) AwsKmsCredentialsAssumeRoleOutput
}

type AwsKmsCredentialsAssumeRoleArgs struct {
	Duration   pulumi.IntInput       `pulumi:"duration"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput    `pulumi:"roleArn"`
}

func (AwsKmsCredentialsAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsCredentialsAssumeRole)(nil)).Elem()
}

func (i AwsKmsCredentialsAssumeRoleArgs) ToAwsKmsCredentialsAssumeRoleOutput() AwsKmsCredentialsAssumeRoleOutput {
	return i.ToAwsKmsCredentialsAssumeRoleOutputWithContext(context.Background())
}

func (i AwsKmsCredentialsAssumeRoleArgs) ToAwsKmsCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsKmsCredentialsAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsAssumeRoleOutput)
}

func (i AwsKmsCredentialsAssumeRoleArgs) ToAwsKmsCredentialsAssumeRolePtrOutput() AwsKmsCredentialsAssumeRolePtrOutput {
	return i.ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i AwsKmsCredentialsAssumeRoleArgs) ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsAssumeRoleOutput).ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(ctx)
}

// AwsKmsCredentialsAssumeRolePtrInput is an input type that accepts AwsKmsCredentialsAssumeRoleArgs, AwsKmsCredentialsAssumeRolePtr and AwsKmsCredentialsAssumeRolePtrOutput values.
// You can construct a concrete instance of `AwsKmsCredentialsAssumeRolePtrInput` via:
//
//	        AwsKmsCredentialsAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type AwsKmsCredentialsAssumeRolePtrInput interface {
	pulumi.Input

	ToAwsKmsCredentialsAssumeRolePtrOutput() AwsKmsCredentialsAssumeRolePtrOutput
	ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(context.Context) AwsKmsCredentialsAssumeRolePtrOutput
}

type awsKmsCredentialsAssumeRolePtrType AwsKmsCredentialsAssumeRoleArgs

func AwsKmsCredentialsAssumeRolePtr(v *AwsKmsCredentialsAssumeRoleArgs) AwsKmsCredentialsAssumeRolePtrInput {
	return (*awsKmsCredentialsAssumeRolePtrType)(v)
}

func (*awsKmsCredentialsAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsCredentialsAssumeRole)(nil)).Elem()
}

func (i *awsKmsCredentialsAssumeRolePtrType) ToAwsKmsCredentialsAssumeRolePtrOutput() AwsKmsCredentialsAssumeRolePtrOutput {
	return i.ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i *awsKmsCredentialsAssumeRolePtrType) ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsAssumeRolePtrOutput)
}

type AwsKmsCredentialsAssumeRoleOutput struct{ *pulumi.OutputState }

func (AwsKmsCredentialsAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsKmsCredentialsAssumeRoleOutput) ToAwsKmsCredentialsAssumeRoleOutput() AwsKmsCredentialsAssumeRoleOutput {
	return o
}

func (o AwsKmsCredentialsAssumeRoleOutput) ToAwsKmsCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsKmsCredentialsAssumeRoleOutput {
	return o
}

func (o AwsKmsCredentialsAssumeRoleOutput) ToAwsKmsCredentialsAssumeRolePtrOutput() AwsKmsCredentialsAssumeRolePtrOutput {
	return o.ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (o AwsKmsCredentialsAssumeRoleOutput) ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsCredentialsAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsKmsCredentialsAssumeRole) *AwsKmsCredentialsAssumeRole {
		return &v
	}).(AwsKmsCredentialsAssumeRolePtrOutput)
}

func (o AwsKmsCredentialsAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v AwsKmsCredentialsAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o AwsKmsCredentialsAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsKmsCredentialsAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o AwsKmsCredentialsAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsKmsCredentialsAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsKmsCredentialsAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (AwsKmsCredentialsAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsKmsCredentialsAssumeRolePtrOutput) ToAwsKmsCredentialsAssumeRolePtrOutput() AwsKmsCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsKmsCredentialsAssumeRolePtrOutput) ToAwsKmsCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsKmsCredentialsAssumeRolePtrOutput) Elem() AwsKmsCredentialsAssumeRoleOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsAssumeRole) AwsKmsCredentialsAssumeRole {
		if v != nil {
			return *v
		}
		var ret AwsKmsCredentialsAssumeRole
		return ret
	}).(AwsKmsCredentialsAssumeRoleOutput)
}

func (o AwsKmsCredentialsAssumeRolePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsAssumeRole) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o AwsKmsCredentialsAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o AwsKmsCredentialsAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsKmsCredentialsManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// AwsKmsCredentialsManualInput is an input type that accepts AwsKmsCredentialsManualArgs and AwsKmsCredentialsManualOutput values.
// You can construct a concrete instance of `AwsKmsCredentialsManualInput` via:
//
//	AwsKmsCredentialsManualArgs{...}
type AwsKmsCredentialsManualInput interface {
	pulumi.Input

	ToAwsKmsCredentialsManualOutput() AwsKmsCredentialsManualOutput
	ToAwsKmsCredentialsManualOutputWithContext(context.Context) AwsKmsCredentialsManualOutput
}

type AwsKmsCredentialsManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (AwsKmsCredentialsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsCredentialsManual)(nil)).Elem()
}

func (i AwsKmsCredentialsManualArgs) ToAwsKmsCredentialsManualOutput() AwsKmsCredentialsManualOutput {
	return i.ToAwsKmsCredentialsManualOutputWithContext(context.Background())
}

func (i AwsKmsCredentialsManualArgs) ToAwsKmsCredentialsManualOutputWithContext(ctx context.Context) AwsKmsCredentialsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsManualOutput)
}

func (i AwsKmsCredentialsManualArgs) ToAwsKmsCredentialsManualPtrOutput() AwsKmsCredentialsManualPtrOutput {
	return i.ToAwsKmsCredentialsManualPtrOutputWithContext(context.Background())
}

func (i AwsKmsCredentialsManualArgs) ToAwsKmsCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsManualOutput).ToAwsKmsCredentialsManualPtrOutputWithContext(ctx)
}

// AwsKmsCredentialsManualPtrInput is an input type that accepts AwsKmsCredentialsManualArgs, AwsKmsCredentialsManualPtr and AwsKmsCredentialsManualPtrOutput values.
// You can construct a concrete instance of `AwsKmsCredentialsManualPtrInput` via:
//
//	        AwsKmsCredentialsManualArgs{...}
//
//	or:
//
//	        nil
type AwsKmsCredentialsManualPtrInput interface {
	pulumi.Input

	ToAwsKmsCredentialsManualPtrOutput() AwsKmsCredentialsManualPtrOutput
	ToAwsKmsCredentialsManualPtrOutputWithContext(context.Context) AwsKmsCredentialsManualPtrOutput
}

type awsKmsCredentialsManualPtrType AwsKmsCredentialsManualArgs

func AwsKmsCredentialsManualPtr(v *AwsKmsCredentialsManualArgs) AwsKmsCredentialsManualPtrInput {
	return (*awsKmsCredentialsManualPtrType)(v)
}

func (*awsKmsCredentialsManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsCredentialsManual)(nil)).Elem()
}

func (i *awsKmsCredentialsManualPtrType) ToAwsKmsCredentialsManualPtrOutput() AwsKmsCredentialsManualPtrOutput {
	return i.ToAwsKmsCredentialsManualPtrOutputWithContext(context.Background())
}

func (i *awsKmsCredentialsManualPtrType) ToAwsKmsCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsCredentialsManualPtrOutput)
}

type AwsKmsCredentialsManualOutput struct{ *pulumi.OutputState }

func (AwsKmsCredentialsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsCredentialsManual)(nil)).Elem()
}

func (o AwsKmsCredentialsManualOutput) ToAwsKmsCredentialsManualOutput() AwsKmsCredentialsManualOutput {
	return o
}

func (o AwsKmsCredentialsManualOutput) ToAwsKmsCredentialsManualOutputWithContext(ctx context.Context) AwsKmsCredentialsManualOutput {
	return o
}

func (o AwsKmsCredentialsManualOutput) ToAwsKmsCredentialsManualPtrOutput() AwsKmsCredentialsManualPtrOutput {
	return o.ToAwsKmsCredentialsManualPtrOutputWithContext(context.Background())
}

func (o AwsKmsCredentialsManualOutput) ToAwsKmsCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsKmsCredentialsManual) *AwsKmsCredentialsManual {
		return &v
	}).(AwsKmsCredentialsManualPtrOutput)
}

func (o AwsKmsCredentialsManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsKmsCredentialsManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o AwsKmsCredentialsManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsKmsCredentialsManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type AwsKmsCredentialsManualPtrOutput struct{ *pulumi.OutputState }

func (AwsKmsCredentialsManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsCredentialsManual)(nil)).Elem()
}

func (o AwsKmsCredentialsManualPtrOutput) ToAwsKmsCredentialsManualPtrOutput() AwsKmsCredentialsManualPtrOutput {
	return o
}

func (o AwsKmsCredentialsManualPtrOutput) ToAwsKmsCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsCredentialsManualPtrOutput {
	return o
}

func (o AwsKmsCredentialsManualPtrOutput) Elem() AwsKmsCredentialsManualOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsManual) AwsKmsCredentialsManual {
		if v != nil {
			return *v
		}
		var ret AwsKmsCredentialsManual
		return ret
	}).(AwsKmsCredentialsManualOutput)
}

func (o AwsKmsCredentialsManualPtrOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyRef
	}).(pulumi.StringPtrOutput)
}

func (o AwsKmsCredentialsManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type AwsManual struct {
	// AWS access key.
	AccessKey *string `pulumi:"accessKey"`
	// Reference to the Harness secret containing the aws access key.
	AccessKeyRef *string `pulumi:"accessKeyRef"`
	// Connect only use delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the aws secret key.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// AwsManualInput is an input type that accepts AwsManualArgs and AwsManualOutput values.
// You can construct a concrete instance of `AwsManualInput` via:
//
//	AwsManualArgs{...}
type AwsManualInput interface {
	pulumi.Input

	ToAwsManualOutput() AwsManualOutput
	ToAwsManualOutputWithContext(context.Context) AwsManualOutput
}

type AwsManualArgs struct {
	// AWS access key.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Reference to the Harness secret containing the aws access key.
	AccessKeyRef pulumi.StringPtrInput `pulumi:"accessKeyRef"`
	// Connect only use delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the aws secret key.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (AwsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsManual)(nil)).Elem()
}

func (i AwsManualArgs) ToAwsManualOutput() AwsManualOutput {
	return i.ToAwsManualOutputWithContext(context.Background())
}

func (i AwsManualArgs) ToAwsManualOutputWithContext(ctx context.Context) AwsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsManualOutput)
}

func (i AwsManualArgs) ToAwsManualPtrOutput() AwsManualPtrOutput {
	return i.ToAwsManualPtrOutputWithContext(context.Background())
}

func (i AwsManualArgs) ToAwsManualPtrOutputWithContext(ctx context.Context) AwsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsManualOutput).ToAwsManualPtrOutputWithContext(ctx)
}

// AwsManualPtrInput is an input type that accepts AwsManualArgs, AwsManualPtr and AwsManualPtrOutput values.
// You can construct a concrete instance of `AwsManualPtrInput` via:
//
//	        AwsManualArgs{...}
//
//	or:
//
//	        nil
type AwsManualPtrInput interface {
	pulumi.Input

	ToAwsManualPtrOutput() AwsManualPtrOutput
	ToAwsManualPtrOutputWithContext(context.Context) AwsManualPtrOutput
}

type awsManualPtrType AwsManualArgs

func AwsManualPtr(v *AwsManualArgs) AwsManualPtrInput {
	return (*awsManualPtrType)(v)
}

func (*awsManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsManual)(nil)).Elem()
}

func (i *awsManualPtrType) ToAwsManualPtrOutput() AwsManualPtrOutput {
	return i.ToAwsManualPtrOutputWithContext(context.Background())
}

func (i *awsManualPtrType) ToAwsManualPtrOutputWithContext(ctx context.Context) AwsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsManualPtrOutput)
}

type AwsManualOutput struct{ *pulumi.OutputState }

func (AwsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsManual)(nil)).Elem()
}

func (o AwsManualOutput) ToAwsManualOutput() AwsManualOutput {
	return o
}

func (o AwsManualOutput) ToAwsManualOutputWithContext(ctx context.Context) AwsManualOutput {
	return o
}

func (o AwsManualOutput) ToAwsManualPtrOutput() AwsManualPtrOutput {
	return o.ToAwsManualPtrOutputWithContext(context.Background())
}

func (o AwsManualOutput) ToAwsManualPtrOutputWithContext(ctx context.Context) AwsManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsManual) *AwsManual {
		return &v
	}).(AwsManualPtrOutput)
}

// AWS access key.
func (o AwsManualOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsManual) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the aws access key.
func (o AwsManualOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsManual) *string { return v.AccessKeyRef }).(pulumi.StringPtrOutput)
}

// Connect only use delegates with these tags.
func (o AwsManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the aws secret key.
func (o AwsManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type AwsManualPtrOutput struct{ *pulumi.OutputState }

func (AwsManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsManual)(nil)).Elem()
}

func (o AwsManualPtrOutput) ToAwsManualPtrOutput() AwsManualPtrOutput {
	return o
}

func (o AwsManualPtrOutput) ToAwsManualPtrOutputWithContext(ctx context.Context) AwsManualPtrOutput {
	return o
}

func (o AwsManualPtrOutput) Elem() AwsManualOutput {
	return o.ApplyT(func(v *AwsManual) AwsManual {
		if v != nil {
			return *v
		}
		var ret AwsManual
		return ret
	}).(AwsManualOutput)
}

// AWS access key.
func (o AwsManualPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsManual) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the aws access key.
func (o AwsManualPtrOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsManual) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyRef
	}).(pulumi.StringPtrOutput)
}

// Connect only use delegates with these tags.
func (o AwsManualPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsManual) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the aws secret key.
func (o AwsManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type AwsSecretManagerCredentials struct {
	// Connect using STS assume role.
	AssumeRole *AwsSecretManagerCredentialsAssumeRole `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate *bool `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual *AwsSecretManagerCredentialsManual `pulumi:"manual"`
}

// AwsSecretManagerCredentialsInput is an input type that accepts AwsSecretManagerCredentialsArgs and AwsSecretManagerCredentialsOutput values.
// You can construct a concrete instance of `AwsSecretManagerCredentialsInput` via:
//
//	AwsSecretManagerCredentialsArgs{...}
type AwsSecretManagerCredentialsInput interface {
	pulumi.Input

	ToAwsSecretManagerCredentialsOutput() AwsSecretManagerCredentialsOutput
	ToAwsSecretManagerCredentialsOutputWithContext(context.Context) AwsSecretManagerCredentialsOutput
}

type AwsSecretManagerCredentialsArgs struct {
	// Connect using STS assume role.
	AssumeRole AwsSecretManagerCredentialsAssumeRolePtrInput `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate pulumi.BoolPtrInput `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual AwsSecretManagerCredentialsManualPtrInput `pulumi:"manual"`
}

func (AwsSecretManagerCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerCredentials)(nil)).Elem()
}

func (i AwsSecretManagerCredentialsArgs) ToAwsSecretManagerCredentialsOutput() AwsSecretManagerCredentialsOutput {
	return i.ToAwsSecretManagerCredentialsOutputWithContext(context.Background())
}

func (i AwsSecretManagerCredentialsArgs) ToAwsSecretManagerCredentialsOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsOutput)
}

func (i AwsSecretManagerCredentialsArgs) ToAwsSecretManagerCredentialsPtrOutput() AwsSecretManagerCredentialsPtrOutput {
	return i.ToAwsSecretManagerCredentialsPtrOutputWithContext(context.Background())
}

func (i AwsSecretManagerCredentialsArgs) ToAwsSecretManagerCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsOutput).ToAwsSecretManagerCredentialsPtrOutputWithContext(ctx)
}

// AwsSecretManagerCredentialsPtrInput is an input type that accepts AwsSecretManagerCredentialsArgs, AwsSecretManagerCredentialsPtr and AwsSecretManagerCredentialsPtrOutput values.
// You can construct a concrete instance of `AwsSecretManagerCredentialsPtrInput` via:
//
//	        AwsSecretManagerCredentialsArgs{...}
//
//	or:
//
//	        nil
type AwsSecretManagerCredentialsPtrInput interface {
	pulumi.Input

	ToAwsSecretManagerCredentialsPtrOutput() AwsSecretManagerCredentialsPtrOutput
	ToAwsSecretManagerCredentialsPtrOutputWithContext(context.Context) AwsSecretManagerCredentialsPtrOutput
}

type awsSecretManagerCredentialsPtrType AwsSecretManagerCredentialsArgs

func AwsSecretManagerCredentialsPtr(v *AwsSecretManagerCredentialsArgs) AwsSecretManagerCredentialsPtrInput {
	return (*awsSecretManagerCredentialsPtrType)(v)
}

func (*awsSecretManagerCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerCredentials)(nil)).Elem()
}

func (i *awsSecretManagerCredentialsPtrType) ToAwsSecretManagerCredentialsPtrOutput() AwsSecretManagerCredentialsPtrOutput {
	return i.ToAwsSecretManagerCredentialsPtrOutputWithContext(context.Background())
}

func (i *awsSecretManagerCredentialsPtrType) ToAwsSecretManagerCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsPtrOutput)
}

type AwsSecretManagerCredentialsOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerCredentials)(nil)).Elem()
}

func (o AwsSecretManagerCredentialsOutput) ToAwsSecretManagerCredentialsOutput() AwsSecretManagerCredentialsOutput {
	return o
}

func (o AwsSecretManagerCredentialsOutput) ToAwsSecretManagerCredentialsOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsOutput {
	return o
}

func (o AwsSecretManagerCredentialsOutput) ToAwsSecretManagerCredentialsPtrOutput() AwsSecretManagerCredentialsPtrOutput {
	return o.ToAwsSecretManagerCredentialsPtrOutputWithContext(context.Background())
}

func (o AwsSecretManagerCredentialsOutput) ToAwsSecretManagerCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsSecretManagerCredentials) *AwsSecretManagerCredentials {
		return &v
	}).(AwsSecretManagerCredentialsPtrOutput)
}

// Connect using STS assume role.
func (o AwsSecretManagerCredentialsOutput) AssumeRole() AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentials) *AwsSecretManagerCredentialsAssumeRole { return v.AssumeRole }).(AwsSecretManagerCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsSecretManagerCredentialsOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentials) *bool { return v.InheritFromDelegate }).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsSecretManagerCredentialsOutput) Manual() AwsSecretManagerCredentialsManualPtrOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentials) *AwsSecretManagerCredentialsManual { return v.Manual }).(AwsSecretManagerCredentialsManualPtrOutput)
}

type AwsSecretManagerCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerCredentials)(nil)).Elem()
}

func (o AwsSecretManagerCredentialsPtrOutput) ToAwsSecretManagerCredentialsPtrOutput() AwsSecretManagerCredentialsPtrOutput {
	return o
}

func (o AwsSecretManagerCredentialsPtrOutput) ToAwsSecretManagerCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsPtrOutput {
	return o
}

func (o AwsSecretManagerCredentialsPtrOutput) Elem() AwsSecretManagerCredentialsOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentials) AwsSecretManagerCredentials {
		if v != nil {
			return *v
		}
		var ret AwsSecretManagerCredentials
		return ret
	}).(AwsSecretManagerCredentialsOutput)
}

// Connect using STS assume role.
func (o AwsSecretManagerCredentialsPtrOutput) AssumeRole() AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentials) *AwsSecretManagerCredentialsAssumeRole {
		if v == nil {
			return nil
		}
		return v.AssumeRole
	}).(AwsSecretManagerCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsSecretManagerCredentialsPtrOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromDelegate
	}).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsSecretManagerCredentialsPtrOutput) Manual() AwsSecretManagerCredentialsManualPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentials) *AwsSecretManagerCredentialsManual {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(AwsSecretManagerCredentialsManualPtrOutput)
}

type AwsSecretManagerCredentialsAssumeRole struct {
	Duration   int     `pulumi:"duration"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    string  `pulumi:"roleArn"`
}

// AwsSecretManagerCredentialsAssumeRoleInput is an input type that accepts AwsSecretManagerCredentialsAssumeRoleArgs and AwsSecretManagerCredentialsAssumeRoleOutput values.
// You can construct a concrete instance of `AwsSecretManagerCredentialsAssumeRoleInput` via:
//
//	AwsSecretManagerCredentialsAssumeRoleArgs{...}
type AwsSecretManagerCredentialsAssumeRoleInput interface {
	pulumi.Input

	ToAwsSecretManagerCredentialsAssumeRoleOutput() AwsSecretManagerCredentialsAssumeRoleOutput
	ToAwsSecretManagerCredentialsAssumeRoleOutputWithContext(context.Context) AwsSecretManagerCredentialsAssumeRoleOutput
}

type AwsSecretManagerCredentialsAssumeRoleArgs struct {
	Duration   pulumi.IntInput       `pulumi:"duration"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput    `pulumi:"roleArn"`
}

func (AwsSecretManagerCredentialsAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerCredentialsAssumeRole)(nil)).Elem()
}

func (i AwsSecretManagerCredentialsAssumeRoleArgs) ToAwsSecretManagerCredentialsAssumeRoleOutput() AwsSecretManagerCredentialsAssumeRoleOutput {
	return i.ToAwsSecretManagerCredentialsAssumeRoleOutputWithContext(context.Background())
}

func (i AwsSecretManagerCredentialsAssumeRoleArgs) ToAwsSecretManagerCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsAssumeRoleOutput)
}

func (i AwsSecretManagerCredentialsAssumeRoleArgs) ToAwsSecretManagerCredentialsAssumeRolePtrOutput() AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return i.ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i AwsSecretManagerCredentialsAssumeRoleArgs) ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsAssumeRoleOutput).ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(ctx)
}

// AwsSecretManagerCredentialsAssumeRolePtrInput is an input type that accepts AwsSecretManagerCredentialsAssumeRoleArgs, AwsSecretManagerCredentialsAssumeRolePtr and AwsSecretManagerCredentialsAssumeRolePtrOutput values.
// You can construct a concrete instance of `AwsSecretManagerCredentialsAssumeRolePtrInput` via:
//
//	        AwsSecretManagerCredentialsAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type AwsSecretManagerCredentialsAssumeRolePtrInput interface {
	pulumi.Input

	ToAwsSecretManagerCredentialsAssumeRolePtrOutput() AwsSecretManagerCredentialsAssumeRolePtrOutput
	ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(context.Context) AwsSecretManagerCredentialsAssumeRolePtrOutput
}

type awsSecretManagerCredentialsAssumeRolePtrType AwsSecretManagerCredentialsAssumeRoleArgs

func AwsSecretManagerCredentialsAssumeRolePtr(v *AwsSecretManagerCredentialsAssumeRoleArgs) AwsSecretManagerCredentialsAssumeRolePtrInput {
	return (*awsSecretManagerCredentialsAssumeRolePtrType)(v)
}

func (*awsSecretManagerCredentialsAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerCredentialsAssumeRole)(nil)).Elem()
}

func (i *awsSecretManagerCredentialsAssumeRolePtrType) ToAwsSecretManagerCredentialsAssumeRolePtrOutput() AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return i.ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i *awsSecretManagerCredentialsAssumeRolePtrType) ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsAssumeRolePtrOutput)
}

type AwsSecretManagerCredentialsAssumeRoleOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerCredentialsAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) ToAwsSecretManagerCredentialsAssumeRoleOutput() AwsSecretManagerCredentialsAssumeRoleOutput {
	return o
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) ToAwsSecretManagerCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsAssumeRoleOutput {
	return o
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) ToAwsSecretManagerCredentialsAssumeRolePtrOutput() AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return o.ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsSecretManagerCredentialsAssumeRole) *AwsSecretManagerCredentialsAssumeRole {
		return &v
	}).(AwsSecretManagerCredentialsAssumeRolePtrOutput)
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentialsAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentialsAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o AwsSecretManagerCredentialsAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentialsAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsSecretManagerCredentialsAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerCredentialsAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsSecretManagerCredentialsAssumeRolePtrOutput) ToAwsSecretManagerCredentialsAssumeRolePtrOutput() AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsSecretManagerCredentialsAssumeRolePtrOutput) ToAwsSecretManagerCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsSecretManagerCredentialsAssumeRolePtrOutput) Elem() AwsSecretManagerCredentialsAssumeRoleOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsAssumeRole) AwsSecretManagerCredentialsAssumeRole {
		if v != nil {
			return *v
		}
		var ret AwsSecretManagerCredentialsAssumeRole
		return ret
	}).(AwsSecretManagerCredentialsAssumeRoleOutput)
}

func (o AwsSecretManagerCredentialsAssumeRolePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsAssumeRole) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o AwsSecretManagerCredentialsAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o AwsSecretManagerCredentialsAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsSecretManagerCredentialsManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// AwsSecretManagerCredentialsManualInput is an input type that accepts AwsSecretManagerCredentialsManualArgs and AwsSecretManagerCredentialsManualOutput values.
// You can construct a concrete instance of `AwsSecretManagerCredentialsManualInput` via:
//
//	AwsSecretManagerCredentialsManualArgs{...}
type AwsSecretManagerCredentialsManualInput interface {
	pulumi.Input

	ToAwsSecretManagerCredentialsManualOutput() AwsSecretManagerCredentialsManualOutput
	ToAwsSecretManagerCredentialsManualOutputWithContext(context.Context) AwsSecretManagerCredentialsManualOutput
}

type AwsSecretManagerCredentialsManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (AwsSecretManagerCredentialsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerCredentialsManual)(nil)).Elem()
}

func (i AwsSecretManagerCredentialsManualArgs) ToAwsSecretManagerCredentialsManualOutput() AwsSecretManagerCredentialsManualOutput {
	return i.ToAwsSecretManagerCredentialsManualOutputWithContext(context.Background())
}

func (i AwsSecretManagerCredentialsManualArgs) ToAwsSecretManagerCredentialsManualOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsManualOutput)
}

func (i AwsSecretManagerCredentialsManualArgs) ToAwsSecretManagerCredentialsManualPtrOutput() AwsSecretManagerCredentialsManualPtrOutput {
	return i.ToAwsSecretManagerCredentialsManualPtrOutputWithContext(context.Background())
}

func (i AwsSecretManagerCredentialsManualArgs) ToAwsSecretManagerCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsManualOutput).ToAwsSecretManagerCredentialsManualPtrOutputWithContext(ctx)
}

// AwsSecretManagerCredentialsManualPtrInput is an input type that accepts AwsSecretManagerCredentialsManualArgs, AwsSecretManagerCredentialsManualPtr and AwsSecretManagerCredentialsManualPtrOutput values.
// You can construct a concrete instance of `AwsSecretManagerCredentialsManualPtrInput` via:
//
//	        AwsSecretManagerCredentialsManualArgs{...}
//
//	or:
//
//	        nil
type AwsSecretManagerCredentialsManualPtrInput interface {
	pulumi.Input

	ToAwsSecretManagerCredentialsManualPtrOutput() AwsSecretManagerCredentialsManualPtrOutput
	ToAwsSecretManagerCredentialsManualPtrOutputWithContext(context.Context) AwsSecretManagerCredentialsManualPtrOutput
}

type awsSecretManagerCredentialsManualPtrType AwsSecretManagerCredentialsManualArgs

func AwsSecretManagerCredentialsManualPtr(v *AwsSecretManagerCredentialsManualArgs) AwsSecretManagerCredentialsManualPtrInput {
	return (*awsSecretManagerCredentialsManualPtrType)(v)
}

func (*awsSecretManagerCredentialsManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerCredentialsManual)(nil)).Elem()
}

func (i *awsSecretManagerCredentialsManualPtrType) ToAwsSecretManagerCredentialsManualPtrOutput() AwsSecretManagerCredentialsManualPtrOutput {
	return i.ToAwsSecretManagerCredentialsManualPtrOutputWithContext(context.Background())
}

func (i *awsSecretManagerCredentialsManualPtrType) ToAwsSecretManagerCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerCredentialsManualPtrOutput)
}

type AwsSecretManagerCredentialsManualOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerCredentialsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerCredentialsManual)(nil)).Elem()
}

func (o AwsSecretManagerCredentialsManualOutput) ToAwsSecretManagerCredentialsManualOutput() AwsSecretManagerCredentialsManualOutput {
	return o
}

func (o AwsSecretManagerCredentialsManualOutput) ToAwsSecretManagerCredentialsManualOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsManualOutput {
	return o
}

func (o AwsSecretManagerCredentialsManualOutput) ToAwsSecretManagerCredentialsManualPtrOutput() AwsSecretManagerCredentialsManualPtrOutput {
	return o.ToAwsSecretManagerCredentialsManualPtrOutputWithContext(context.Background())
}

func (o AwsSecretManagerCredentialsManualOutput) ToAwsSecretManagerCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsSecretManagerCredentialsManual) *AwsSecretManagerCredentialsManual {
		return &v
	}).(AwsSecretManagerCredentialsManualPtrOutput)
}

func (o AwsSecretManagerCredentialsManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentialsManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o AwsSecretManagerCredentialsManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsSecretManagerCredentialsManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type AwsSecretManagerCredentialsManualPtrOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerCredentialsManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerCredentialsManual)(nil)).Elem()
}

func (o AwsSecretManagerCredentialsManualPtrOutput) ToAwsSecretManagerCredentialsManualPtrOutput() AwsSecretManagerCredentialsManualPtrOutput {
	return o
}

func (o AwsSecretManagerCredentialsManualPtrOutput) ToAwsSecretManagerCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerCredentialsManualPtrOutput {
	return o
}

func (o AwsSecretManagerCredentialsManualPtrOutput) Elem() AwsSecretManagerCredentialsManualOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsManual) AwsSecretManagerCredentialsManual {
		if v != nil {
			return *v
		}
		var ret AwsSecretManagerCredentialsManual
		return ret
	}).(AwsSecretManagerCredentialsManualOutput)
}

func (o AwsSecretManagerCredentialsManualPtrOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyRef
	}).(pulumi.StringPtrOutput)
}

func (o AwsSecretManagerCredentialsManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type BitbucketApiAuthentication struct {
	// Personal access token for interacting with the BitBucket api.
	TokenRef string `pulumi:"tokenRef"`
	// The username used for connecting to the api.
	Username *string `pulumi:"username"`
	// The name of the Harness secret containing the username.
	UsernameRef *string `pulumi:"usernameRef"`
}

// BitbucketApiAuthenticationInput is an input type that accepts BitbucketApiAuthenticationArgs and BitbucketApiAuthenticationOutput values.
// You can construct a concrete instance of `BitbucketApiAuthenticationInput` via:
//
//	BitbucketApiAuthenticationArgs{...}
type BitbucketApiAuthenticationInput interface {
	pulumi.Input

	ToBitbucketApiAuthenticationOutput() BitbucketApiAuthenticationOutput
	ToBitbucketApiAuthenticationOutputWithContext(context.Context) BitbucketApiAuthenticationOutput
}

type BitbucketApiAuthenticationArgs struct {
	// Personal access token for interacting with the BitBucket api.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
	// The username used for connecting to the api.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// The name of the Harness secret containing the username.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (BitbucketApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketApiAuthentication)(nil)).Elem()
}

func (i BitbucketApiAuthenticationArgs) ToBitbucketApiAuthenticationOutput() BitbucketApiAuthenticationOutput {
	return i.ToBitbucketApiAuthenticationOutputWithContext(context.Background())
}

func (i BitbucketApiAuthenticationArgs) ToBitbucketApiAuthenticationOutputWithContext(ctx context.Context) BitbucketApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketApiAuthenticationOutput)
}

func (i BitbucketApiAuthenticationArgs) ToBitbucketApiAuthenticationPtrOutput() BitbucketApiAuthenticationPtrOutput {
	return i.ToBitbucketApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i BitbucketApiAuthenticationArgs) ToBitbucketApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketApiAuthenticationOutput).ToBitbucketApiAuthenticationPtrOutputWithContext(ctx)
}

// BitbucketApiAuthenticationPtrInput is an input type that accepts BitbucketApiAuthenticationArgs, BitbucketApiAuthenticationPtr and BitbucketApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `BitbucketApiAuthenticationPtrInput` via:
//
//	        BitbucketApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type BitbucketApiAuthenticationPtrInput interface {
	pulumi.Input

	ToBitbucketApiAuthenticationPtrOutput() BitbucketApiAuthenticationPtrOutput
	ToBitbucketApiAuthenticationPtrOutputWithContext(context.Context) BitbucketApiAuthenticationPtrOutput
}

type bitbucketApiAuthenticationPtrType BitbucketApiAuthenticationArgs

func BitbucketApiAuthenticationPtr(v *BitbucketApiAuthenticationArgs) BitbucketApiAuthenticationPtrInput {
	return (*bitbucketApiAuthenticationPtrType)(v)
}

func (*bitbucketApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketApiAuthentication)(nil)).Elem()
}

func (i *bitbucketApiAuthenticationPtrType) ToBitbucketApiAuthenticationPtrOutput() BitbucketApiAuthenticationPtrOutput {
	return i.ToBitbucketApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *bitbucketApiAuthenticationPtrType) ToBitbucketApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketApiAuthenticationPtrOutput)
}

type BitbucketApiAuthenticationOutput struct{ *pulumi.OutputState }

func (BitbucketApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketApiAuthentication)(nil)).Elem()
}

func (o BitbucketApiAuthenticationOutput) ToBitbucketApiAuthenticationOutput() BitbucketApiAuthenticationOutput {
	return o
}

func (o BitbucketApiAuthenticationOutput) ToBitbucketApiAuthenticationOutputWithContext(ctx context.Context) BitbucketApiAuthenticationOutput {
	return o
}

func (o BitbucketApiAuthenticationOutput) ToBitbucketApiAuthenticationPtrOutput() BitbucketApiAuthenticationPtrOutput {
	return o.ToBitbucketApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o BitbucketApiAuthenticationOutput) ToBitbucketApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketApiAuthentication) *BitbucketApiAuthentication {
		return &v
	}).(BitbucketApiAuthenticationPtrOutput)
}

// Personal access token for interacting with the BitBucket api.
func (o BitbucketApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v BitbucketApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

// The username used for connecting to the api.
func (o BitbucketApiAuthenticationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketApiAuthentication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The name of the Harness secret containing the username.
func (o BitbucketApiAuthenticationOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketApiAuthentication) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type BitbucketApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (BitbucketApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketApiAuthentication)(nil)).Elem()
}

func (o BitbucketApiAuthenticationPtrOutput) ToBitbucketApiAuthenticationPtrOutput() BitbucketApiAuthenticationPtrOutput {
	return o
}

func (o BitbucketApiAuthenticationPtrOutput) ToBitbucketApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketApiAuthenticationPtrOutput {
	return o
}

func (o BitbucketApiAuthenticationPtrOutput) Elem() BitbucketApiAuthenticationOutput {
	return o.ApplyT(func(v *BitbucketApiAuthentication) BitbucketApiAuthentication {
		if v != nil {
			return *v
		}
		var ret BitbucketApiAuthentication
		return ret
	}).(BitbucketApiAuthenticationOutput)
}

// Personal access token for interacting with the BitBucket api.
func (o BitbucketApiAuthenticationPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

// The username used for connecting to the api.
func (o BitbucketApiAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The name of the Harness secret containing the username.
func (o BitbucketApiAuthenticationPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type BitbucketCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *BitbucketCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *BitbucketCredentialsSsh `pulumi:"ssh"`
}

// BitbucketCredentialsInput is an input type that accepts BitbucketCredentialsArgs and BitbucketCredentialsOutput values.
// You can construct a concrete instance of `BitbucketCredentialsInput` via:
//
//	BitbucketCredentialsArgs{...}
type BitbucketCredentialsInput interface {
	pulumi.Input

	ToBitbucketCredentialsOutput() BitbucketCredentialsOutput
	ToBitbucketCredentialsOutputWithContext(context.Context) BitbucketCredentialsOutput
}

type BitbucketCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http BitbucketCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh BitbucketCredentialsSshPtrInput `pulumi:"ssh"`
}

func (BitbucketCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketCredentials)(nil)).Elem()
}

func (i BitbucketCredentialsArgs) ToBitbucketCredentialsOutput() BitbucketCredentialsOutput {
	return i.ToBitbucketCredentialsOutputWithContext(context.Background())
}

func (i BitbucketCredentialsArgs) ToBitbucketCredentialsOutputWithContext(ctx context.Context) BitbucketCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsOutput)
}

func (i BitbucketCredentialsArgs) ToBitbucketCredentialsPtrOutput() BitbucketCredentialsPtrOutput {
	return i.ToBitbucketCredentialsPtrOutputWithContext(context.Background())
}

func (i BitbucketCredentialsArgs) ToBitbucketCredentialsPtrOutputWithContext(ctx context.Context) BitbucketCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsOutput).ToBitbucketCredentialsPtrOutputWithContext(ctx)
}

// BitbucketCredentialsPtrInput is an input type that accepts BitbucketCredentialsArgs, BitbucketCredentialsPtr and BitbucketCredentialsPtrOutput values.
// You can construct a concrete instance of `BitbucketCredentialsPtrInput` via:
//
//	        BitbucketCredentialsArgs{...}
//
//	or:
//
//	        nil
type BitbucketCredentialsPtrInput interface {
	pulumi.Input

	ToBitbucketCredentialsPtrOutput() BitbucketCredentialsPtrOutput
	ToBitbucketCredentialsPtrOutputWithContext(context.Context) BitbucketCredentialsPtrOutput
}

type bitbucketCredentialsPtrType BitbucketCredentialsArgs

func BitbucketCredentialsPtr(v *BitbucketCredentialsArgs) BitbucketCredentialsPtrInput {
	return (*bitbucketCredentialsPtrType)(v)
}

func (*bitbucketCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketCredentials)(nil)).Elem()
}

func (i *bitbucketCredentialsPtrType) ToBitbucketCredentialsPtrOutput() BitbucketCredentialsPtrOutput {
	return i.ToBitbucketCredentialsPtrOutputWithContext(context.Background())
}

func (i *bitbucketCredentialsPtrType) ToBitbucketCredentialsPtrOutputWithContext(ctx context.Context) BitbucketCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsPtrOutput)
}

type BitbucketCredentialsOutput struct{ *pulumi.OutputState }

func (BitbucketCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketCredentials)(nil)).Elem()
}

func (o BitbucketCredentialsOutput) ToBitbucketCredentialsOutput() BitbucketCredentialsOutput {
	return o
}

func (o BitbucketCredentialsOutput) ToBitbucketCredentialsOutputWithContext(ctx context.Context) BitbucketCredentialsOutput {
	return o
}

func (o BitbucketCredentialsOutput) ToBitbucketCredentialsPtrOutput() BitbucketCredentialsPtrOutput {
	return o.ToBitbucketCredentialsPtrOutputWithContext(context.Background())
}

func (o BitbucketCredentialsOutput) ToBitbucketCredentialsPtrOutputWithContext(ctx context.Context) BitbucketCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketCredentials) *BitbucketCredentials {
		return &v
	}).(BitbucketCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o BitbucketCredentialsOutput) Http() BitbucketCredentialsHttpPtrOutput {
	return o.ApplyT(func(v BitbucketCredentials) *BitbucketCredentialsHttp { return v.Http }).(BitbucketCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o BitbucketCredentialsOutput) Ssh() BitbucketCredentialsSshPtrOutput {
	return o.ApplyT(func(v BitbucketCredentials) *BitbucketCredentialsSsh { return v.Ssh }).(BitbucketCredentialsSshPtrOutput)
}

type BitbucketCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BitbucketCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketCredentials)(nil)).Elem()
}

func (o BitbucketCredentialsPtrOutput) ToBitbucketCredentialsPtrOutput() BitbucketCredentialsPtrOutput {
	return o
}

func (o BitbucketCredentialsPtrOutput) ToBitbucketCredentialsPtrOutputWithContext(ctx context.Context) BitbucketCredentialsPtrOutput {
	return o
}

func (o BitbucketCredentialsPtrOutput) Elem() BitbucketCredentialsOutput {
	return o.ApplyT(func(v *BitbucketCredentials) BitbucketCredentials {
		if v != nil {
			return *v
		}
		var ret BitbucketCredentials
		return ret
	}).(BitbucketCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o BitbucketCredentialsPtrOutput) Http() BitbucketCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *BitbucketCredentials) *BitbucketCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(BitbucketCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o BitbucketCredentialsPtrOutput) Ssh() BitbucketCredentialsSshPtrOutput {
	return o.ApplyT(func(v *BitbucketCredentials) *BitbucketCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(BitbucketCredentialsSshPtrOutput)
}

type BitbucketCredentialsHttp struct {
	PasswordRef *string `pulumi:"passwordRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// BitbucketCredentialsHttpInput is an input type that accepts BitbucketCredentialsHttpArgs and BitbucketCredentialsHttpOutput values.
// You can construct a concrete instance of `BitbucketCredentialsHttpInput` via:
//
//	BitbucketCredentialsHttpArgs{...}
type BitbucketCredentialsHttpInput interface {
	pulumi.Input

	ToBitbucketCredentialsHttpOutput() BitbucketCredentialsHttpOutput
	ToBitbucketCredentialsHttpOutputWithContext(context.Context) BitbucketCredentialsHttpOutput
}

type BitbucketCredentialsHttpArgs struct {
	PasswordRef pulumi.StringPtrInput `pulumi:"passwordRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (BitbucketCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketCredentialsHttp)(nil)).Elem()
}

func (i BitbucketCredentialsHttpArgs) ToBitbucketCredentialsHttpOutput() BitbucketCredentialsHttpOutput {
	return i.ToBitbucketCredentialsHttpOutputWithContext(context.Background())
}

func (i BitbucketCredentialsHttpArgs) ToBitbucketCredentialsHttpOutputWithContext(ctx context.Context) BitbucketCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsHttpOutput)
}

func (i BitbucketCredentialsHttpArgs) ToBitbucketCredentialsHttpPtrOutput() BitbucketCredentialsHttpPtrOutput {
	return i.ToBitbucketCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i BitbucketCredentialsHttpArgs) ToBitbucketCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsHttpOutput).ToBitbucketCredentialsHttpPtrOutputWithContext(ctx)
}

// BitbucketCredentialsHttpPtrInput is an input type that accepts BitbucketCredentialsHttpArgs, BitbucketCredentialsHttpPtr and BitbucketCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `BitbucketCredentialsHttpPtrInput` via:
//
//	        BitbucketCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type BitbucketCredentialsHttpPtrInput interface {
	pulumi.Input

	ToBitbucketCredentialsHttpPtrOutput() BitbucketCredentialsHttpPtrOutput
	ToBitbucketCredentialsHttpPtrOutputWithContext(context.Context) BitbucketCredentialsHttpPtrOutput
}

type bitbucketCredentialsHttpPtrType BitbucketCredentialsHttpArgs

func BitbucketCredentialsHttpPtr(v *BitbucketCredentialsHttpArgs) BitbucketCredentialsHttpPtrInput {
	return (*bitbucketCredentialsHttpPtrType)(v)
}

func (*bitbucketCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketCredentialsHttp)(nil)).Elem()
}

func (i *bitbucketCredentialsHttpPtrType) ToBitbucketCredentialsHttpPtrOutput() BitbucketCredentialsHttpPtrOutput {
	return i.ToBitbucketCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *bitbucketCredentialsHttpPtrType) ToBitbucketCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsHttpPtrOutput)
}

type BitbucketCredentialsHttpOutput struct{ *pulumi.OutputState }

func (BitbucketCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketCredentialsHttp)(nil)).Elem()
}

func (o BitbucketCredentialsHttpOutput) ToBitbucketCredentialsHttpOutput() BitbucketCredentialsHttpOutput {
	return o
}

func (o BitbucketCredentialsHttpOutput) ToBitbucketCredentialsHttpOutputWithContext(ctx context.Context) BitbucketCredentialsHttpOutput {
	return o
}

func (o BitbucketCredentialsHttpOutput) ToBitbucketCredentialsHttpPtrOutput() BitbucketCredentialsHttpPtrOutput {
	return o.ToBitbucketCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o BitbucketCredentialsHttpOutput) ToBitbucketCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketCredentialsHttp) *BitbucketCredentialsHttp {
		return &v
	}).(BitbucketCredentialsHttpPtrOutput)
}

func (o BitbucketCredentialsHttpOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketCredentialsHttp) *string { return v.PasswordRef }).(pulumi.StringPtrOutput)
}

func (o BitbucketCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o BitbucketCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type BitbucketCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (BitbucketCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketCredentialsHttp)(nil)).Elem()
}

func (o BitbucketCredentialsHttpPtrOutput) ToBitbucketCredentialsHttpPtrOutput() BitbucketCredentialsHttpPtrOutput {
	return o
}

func (o BitbucketCredentialsHttpPtrOutput) ToBitbucketCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketCredentialsHttpPtrOutput {
	return o
}

func (o BitbucketCredentialsHttpPtrOutput) Elem() BitbucketCredentialsHttpOutput {
	return o.ApplyT(func(v *BitbucketCredentialsHttp) BitbucketCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret BitbucketCredentialsHttp
		return ret
	}).(BitbucketCredentialsHttpOutput)
}

func (o BitbucketCredentialsHttpPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o BitbucketCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o BitbucketCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type BitbucketCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// BitbucketCredentialsSshInput is an input type that accepts BitbucketCredentialsSshArgs and BitbucketCredentialsSshOutput values.
// You can construct a concrete instance of `BitbucketCredentialsSshInput` via:
//
//	BitbucketCredentialsSshArgs{...}
type BitbucketCredentialsSshInput interface {
	pulumi.Input

	ToBitbucketCredentialsSshOutput() BitbucketCredentialsSshOutput
	ToBitbucketCredentialsSshOutputWithContext(context.Context) BitbucketCredentialsSshOutput
}

type BitbucketCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (BitbucketCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketCredentialsSsh)(nil)).Elem()
}

func (i BitbucketCredentialsSshArgs) ToBitbucketCredentialsSshOutput() BitbucketCredentialsSshOutput {
	return i.ToBitbucketCredentialsSshOutputWithContext(context.Background())
}

func (i BitbucketCredentialsSshArgs) ToBitbucketCredentialsSshOutputWithContext(ctx context.Context) BitbucketCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsSshOutput)
}

func (i BitbucketCredentialsSshArgs) ToBitbucketCredentialsSshPtrOutput() BitbucketCredentialsSshPtrOutput {
	return i.ToBitbucketCredentialsSshPtrOutputWithContext(context.Background())
}

func (i BitbucketCredentialsSshArgs) ToBitbucketCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsSshOutput).ToBitbucketCredentialsSshPtrOutputWithContext(ctx)
}

// BitbucketCredentialsSshPtrInput is an input type that accepts BitbucketCredentialsSshArgs, BitbucketCredentialsSshPtr and BitbucketCredentialsSshPtrOutput values.
// You can construct a concrete instance of `BitbucketCredentialsSshPtrInput` via:
//
//	        BitbucketCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type BitbucketCredentialsSshPtrInput interface {
	pulumi.Input

	ToBitbucketCredentialsSshPtrOutput() BitbucketCredentialsSshPtrOutput
	ToBitbucketCredentialsSshPtrOutputWithContext(context.Context) BitbucketCredentialsSshPtrOutput
}

type bitbucketCredentialsSshPtrType BitbucketCredentialsSshArgs

func BitbucketCredentialsSshPtr(v *BitbucketCredentialsSshArgs) BitbucketCredentialsSshPtrInput {
	return (*bitbucketCredentialsSshPtrType)(v)
}

func (*bitbucketCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketCredentialsSsh)(nil)).Elem()
}

func (i *bitbucketCredentialsSshPtrType) ToBitbucketCredentialsSshPtrOutput() BitbucketCredentialsSshPtrOutput {
	return i.ToBitbucketCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *bitbucketCredentialsSshPtrType) ToBitbucketCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketCredentialsSshPtrOutput)
}

type BitbucketCredentialsSshOutput struct{ *pulumi.OutputState }

func (BitbucketCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketCredentialsSsh)(nil)).Elem()
}

func (o BitbucketCredentialsSshOutput) ToBitbucketCredentialsSshOutput() BitbucketCredentialsSshOutput {
	return o
}

func (o BitbucketCredentialsSshOutput) ToBitbucketCredentialsSshOutputWithContext(ctx context.Context) BitbucketCredentialsSshOutput {
	return o
}

func (o BitbucketCredentialsSshOutput) ToBitbucketCredentialsSshPtrOutput() BitbucketCredentialsSshPtrOutput {
	return o.ToBitbucketCredentialsSshPtrOutputWithContext(context.Background())
}

func (o BitbucketCredentialsSshOutput) ToBitbucketCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketCredentialsSsh) *BitbucketCredentialsSsh {
		return &v
	}).(BitbucketCredentialsSshPtrOutput)
}

func (o BitbucketCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v BitbucketCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type BitbucketCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (BitbucketCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketCredentialsSsh)(nil)).Elem()
}

func (o BitbucketCredentialsSshPtrOutput) ToBitbucketCredentialsSshPtrOutput() BitbucketCredentialsSshPtrOutput {
	return o
}

func (o BitbucketCredentialsSshPtrOutput) ToBitbucketCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketCredentialsSshPtrOutput {
	return o
}

func (o BitbucketCredentialsSshPtrOutput) Elem() BitbucketCredentialsSshOutput {
	return o.ApplyT(func(v *BitbucketCredentialsSsh) BitbucketCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret BitbucketCredentialsSsh
		return ret
	}).(BitbucketCredentialsSshOutput)
}

func (o BitbucketCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type DockerCredentials struct {
	// The reference to the password to use for the docker registry.
	PasswordRef string `pulumi:"passwordRef"`
	// The username to use for the docker registry.
	Username *string `pulumi:"username"`
	// The reference to the username to use for the docker registry.
	UsernameRef *string `pulumi:"usernameRef"`
}

// DockerCredentialsInput is an input type that accepts DockerCredentialsArgs and DockerCredentialsOutput values.
// You can construct a concrete instance of `DockerCredentialsInput` via:
//
//	DockerCredentialsArgs{...}
type DockerCredentialsInput interface {
	pulumi.Input

	ToDockerCredentialsOutput() DockerCredentialsOutput
	ToDockerCredentialsOutputWithContext(context.Context) DockerCredentialsOutput
}

type DockerCredentialsArgs struct {
	// The reference to the password to use for the docker registry.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// The username to use for the docker registry.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// The reference to the username to use for the docker registry.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (DockerCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerCredentials)(nil)).Elem()
}

func (i DockerCredentialsArgs) ToDockerCredentialsOutput() DockerCredentialsOutput {
	return i.ToDockerCredentialsOutputWithContext(context.Background())
}

func (i DockerCredentialsArgs) ToDockerCredentialsOutputWithContext(ctx context.Context) DockerCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerCredentialsOutput)
}

func (i DockerCredentialsArgs) ToDockerCredentialsPtrOutput() DockerCredentialsPtrOutput {
	return i.ToDockerCredentialsPtrOutputWithContext(context.Background())
}

func (i DockerCredentialsArgs) ToDockerCredentialsPtrOutputWithContext(ctx context.Context) DockerCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerCredentialsOutput).ToDockerCredentialsPtrOutputWithContext(ctx)
}

// DockerCredentialsPtrInput is an input type that accepts DockerCredentialsArgs, DockerCredentialsPtr and DockerCredentialsPtrOutput values.
// You can construct a concrete instance of `DockerCredentialsPtrInput` via:
//
//	        DockerCredentialsArgs{...}
//
//	or:
//
//	        nil
type DockerCredentialsPtrInput interface {
	pulumi.Input

	ToDockerCredentialsPtrOutput() DockerCredentialsPtrOutput
	ToDockerCredentialsPtrOutputWithContext(context.Context) DockerCredentialsPtrOutput
}

type dockerCredentialsPtrType DockerCredentialsArgs

func DockerCredentialsPtr(v *DockerCredentialsArgs) DockerCredentialsPtrInput {
	return (*dockerCredentialsPtrType)(v)
}

func (*dockerCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerCredentials)(nil)).Elem()
}

func (i *dockerCredentialsPtrType) ToDockerCredentialsPtrOutput() DockerCredentialsPtrOutput {
	return i.ToDockerCredentialsPtrOutputWithContext(context.Background())
}

func (i *dockerCredentialsPtrType) ToDockerCredentialsPtrOutputWithContext(ctx context.Context) DockerCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerCredentialsPtrOutput)
}

type DockerCredentialsOutput struct{ *pulumi.OutputState }

func (DockerCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerCredentials)(nil)).Elem()
}

func (o DockerCredentialsOutput) ToDockerCredentialsOutput() DockerCredentialsOutput {
	return o
}

func (o DockerCredentialsOutput) ToDockerCredentialsOutputWithContext(ctx context.Context) DockerCredentialsOutput {
	return o
}

func (o DockerCredentialsOutput) ToDockerCredentialsPtrOutput() DockerCredentialsPtrOutput {
	return o.ToDockerCredentialsPtrOutputWithContext(context.Background())
}

func (o DockerCredentialsOutput) ToDockerCredentialsPtrOutputWithContext(ctx context.Context) DockerCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerCredentials) *DockerCredentials {
		return &v
	}).(DockerCredentialsPtrOutput)
}

// The reference to the password to use for the docker registry.
func (o DockerCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v DockerCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// The username to use for the docker registry.
func (o DockerCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The reference to the username to use for the docker registry.
func (o DockerCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type DockerCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DockerCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerCredentials)(nil)).Elem()
}

func (o DockerCredentialsPtrOutput) ToDockerCredentialsPtrOutput() DockerCredentialsPtrOutput {
	return o
}

func (o DockerCredentialsPtrOutput) ToDockerCredentialsPtrOutputWithContext(ctx context.Context) DockerCredentialsPtrOutput {
	return o
}

func (o DockerCredentialsPtrOutput) Elem() DockerCredentialsOutput {
	return o.ApplyT(func(v *DockerCredentials) DockerCredentials {
		if v != nil {
			return *v
		}
		var ret DockerCredentials
		return ret
	}).(DockerCredentialsOutput)
}

// The reference to the password to use for the docker registry.
func (o DockerCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// The username to use for the docker registry.
func (o DockerCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The reference to the username to use for the docker registry.
func (o DockerCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GcpInheritFromDelegate struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GcpInheritFromDelegateInput is an input type that accepts GcpInheritFromDelegateArgs and GcpInheritFromDelegateOutput values.
// You can construct a concrete instance of `GcpInheritFromDelegateInput` via:
//
//	GcpInheritFromDelegateArgs{...}
type GcpInheritFromDelegateInput interface {
	pulumi.Input

	ToGcpInheritFromDelegateOutput() GcpInheritFromDelegateOutput
	ToGcpInheritFromDelegateOutputWithContext(context.Context) GcpInheritFromDelegateOutput
}

type GcpInheritFromDelegateArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GcpInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpInheritFromDelegate)(nil)).Elem()
}

func (i GcpInheritFromDelegateArgs) ToGcpInheritFromDelegateOutput() GcpInheritFromDelegateOutput {
	return i.ToGcpInheritFromDelegateOutputWithContext(context.Background())
}

func (i GcpInheritFromDelegateArgs) ToGcpInheritFromDelegateOutputWithContext(ctx context.Context) GcpInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpInheritFromDelegateOutput)
}

// GcpInheritFromDelegateArrayInput is an input type that accepts GcpInheritFromDelegateArray and GcpInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GcpInheritFromDelegateArrayInput` via:
//
//	GcpInheritFromDelegateArray{ GcpInheritFromDelegateArgs{...} }
type GcpInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGcpInheritFromDelegateArrayOutput() GcpInheritFromDelegateArrayOutput
	ToGcpInheritFromDelegateArrayOutputWithContext(context.Context) GcpInheritFromDelegateArrayOutput
}

type GcpInheritFromDelegateArray []GcpInheritFromDelegateInput

func (GcpInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpInheritFromDelegate)(nil)).Elem()
}

func (i GcpInheritFromDelegateArray) ToGcpInheritFromDelegateArrayOutput() GcpInheritFromDelegateArrayOutput {
	return i.ToGcpInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GcpInheritFromDelegateArray) ToGcpInheritFromDelegateArrayOutputWithContext(ctx context.Context) GcpInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpInheritFromDelegateArrayOutput)
}

type GcpInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GcpInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpInheritFromDelegate)(nil)).Elem()
}

func (o GcpInheritFromDelegateOutput) ToGcpInheritFromDelegateOutput() GcpInheritFromDelegateOutput {
	return o
}

func (o GcpInheritFromDelegateOutput) ToGcpInheritFromDelegateOutputWithContext(ctx context.Context) GcpInheritFromDelegateOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GcpInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GcpInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GcpInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpInheritFromDelegate)(nil)).Elem()
}

func (o GcpInheritFromDelegateArrayOutput) ToGcpInheritFromDelegateArrayOutput() GcpInheritFromDelegateArrayOutput {
	return o
}

func (o GcpInheritFromDelegateArrayOutput) ToGcpInheritFromDelegateArrayOutputWithContext(ctx context.Context) GcpInheritFromDelegateArrayOutput {
	return o
}

func (o GcpInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GcpInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpInheritFromDelegate {
		return vs[0].([]GcpInheritFromDelegate)[vs[1].(int)]
	}).(GcpInheritFromDelegateOutput)
}

type GcpManual struct {
	// The delegates to connect with.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the secret key.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GcpManualInput is an input type that accepts GcpManualArgs and GcpManualOutput values.
// You can construct a concrete instance of `GcpManualInput` via:
//
//	GcpManualArgs{...}
type GcpManualInput interface {
	pulumi.Input

	ToGcpManualOutput() GcpManualOutput
	ToGcpManualOutputWithContext(context.Context) GcpManualOutput
}

type GcpManualArgs struct {
	// The delegates to connect with.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the secret key.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GcpManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpManual)(nil)).Elem()
}

func (i GcpManualArgs) ToGcpManualOutput() GcpManualOutput {
	return i.ToGcpManualOutputWithContext(context.Background())
}

func (i GcpManualArgs) ToGcpManualOutputWithContext(ctx context.Context) GcpManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpManualOutput)
}

func (i GcpManualArgs) ToGcpManualPtrOutput() GcpManualPtrOutput {
	return i.ToGcpManualPtrOutputWithContext(context.Background())
}

func (i GcpManualArgs) ToGcpManualPtrOutputWithContext(ctx context.Context) GcpManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpManualOutput).ToGcpManualPtrOutputWithContext(ctx)
}

// GcpManualPtrInput is an input type that accepts GcpManualArgs, GcpManualPtr and GcpManualPtrOutput values.
// You can construct a concrete instance of `GcpManualPtrInput` via:
//
//	        GcpManualArgs{...}
//
//	or:
//
//	        nil
type GcpManualPtrInput interface {
	pulumi.Input

	ToGcpManualPtrOutput() GcpManualPtrOutput
	ToGcpManualPtrOutputWithContext(context.Context) GcpManualPtrOutput
}

type gcpManualPtrType GcpManualArgs

func GcpManualPtr(v *GcpManualArgs) GcpManualPtrInput {
	return (*gcpManualPtrType)(v)
}

func (*gcpManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpManual)(nil)).Elem()
}

func (i *gcpManualPtrType) ToGcpManualPtrOutput() GcpManualPtrOutput {
	return i.ToGcpManualPtrOutputWithContext(context.Background())
}

func (i *gcpManualPtrType) ToGcpManualPtrOutputWithContext(ctx context.Context) GcpManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpManualPtrOutput)
}

type GcpManualOutput struct{ *pulumi.OutputState }

func (GcpManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpManual)(nil)).Elem()
}

func (o GcpManualOutput) ToGcpManualOutput() GcpManualOutput {
	return o
}

func (o GcpManualOutput) ToGcpManualOutputWithContext(ctx context.Context) GcpManualOutput {
	return o
}

func (o GcpManualOutput) ToGcpManualPtrOutput() GcpManualPtrOutput {
	return o.ToGcpManualPtrOutputWithContext(context.Background())
}

func (o GcpManualOutput) ToGcpManualPtrOutputWithContext(ctx context.Context) GcpManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcpManual) *GcpManual {
		return &v
	}).(GcpManualPtrOutput)
}

// The delegates to connect with.
func (o GcpManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the secret key.
func (o GcpManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GcpManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GcpManualPtrOutput struct{ *pulumi.OutputState }

func (GcpManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpManual)(nil)).Elem()
}

func (o GcpManualPtrOutput) ToGcpManualPtrOutput() GcpManualPtrOutput {
	return o
}

func (o GcpManualPtrOutput) ToGcpManualPtrOutputWithContext(ctx context.Context) GcpManualPtrOutput {
	return o
}

func (o GcpManualPtrOutput) Elem() GcpManualOutput {
	return o.ApplyT(func(v *GcpManual) GcpManual {
		if v != nil {
			return *v
		}
		var ret GcpManual
		return ret
	}).(GcpManualOutput)
}

// The delegates to connect with.
func (o GcpManualPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpManual) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the secret key.
func (o GcpManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type GitCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *GitCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *GitCredentialsSsh `pulumi:"ssh"`
}

// GitCredentialsInput is an input type that accepts GitCredentialsArgs and GitCredentialsOutput values.
// You can construct a concrete instance of `GitCredentialsInput` via:
//
//	GitCredentialsArgs{...}
type GitCredentialsInput interface {
	pulumi.Input

	ToGitCredentialsOutput() GitCredentialsOutput
	ToGitCredentialsOutputWithContext(context.Context) GitCredentialsOutput
}

type GitCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http GitCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh GitCredentialsSshPtrInput `pulumi:"ssh"`
}

func (GitCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCredentials)(nil)).Elem()
}

func (i GitCredentialsArgs) ToGitCredentialsOutput() GitCredentialsOutput {
	return i.ToGitCredentialsOutputWithContext(context.Background())
}

func (i GitCredentialsArgs) ToGitCredentialsOutputWithContext(ctx context.Context) GitCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsOutput)
}

func (i GitCredentialsArgs) ToGitCredentialsPtrOutput() GitCredentialsPtrOutput {
	return i.ToGitCredentialsPtrOutputWithContext(context.Background())
}

func (i GitCredentialsArgs) ToGitCredentialsPtrOutputWithContext(ctx context.Context) GitCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsOutput).ToGitCredentialsPtrOutputWithContext(ctx)
}

// GitCredentialsPtrInput is an input type that accepts GitCredentialsArgs, GitCredentialsPtr and GitCredentialsPtrOutput values.
// You can construct a concrete instance of `GitCredentialsPtrInput` via:
//
//	        GitCredentialsArgs{...}
//
//	or:
//
//	        nil
type GitCredentialsPtrInput interface {
	pulumi.Input

	ToGitCredentialsPtrOutput() GitCredentialsPtrOutput
	ToGitCredentialsPtrOutputWithContext(context.Context) GitCredentialsPtrOutput
}

type gitCredentialsPtrType GitCredentialsArgs

func GitCredentialsPtr(v *GitCredentialsArgs) GitCredentialsPtrInput {
	return (*gitCredentialsPtrType)(v)
}

func (*gitCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCredentials)(nil)).Elem()
}

func (i *gitCredentialsPtrType) ToGitCredentialsPtrOutput() GitCredentialsPtrOutput {
	return i.ToGitCredentialsPtrOutputWithContext(context.Background())
}

func (i *gitCredentialsPtrType) ToGitCredentialsPtrOutputWithContext(ctx context.Context) GitCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsPtrOutput)
}

type GitCredentialsOutput struct{ *pulumi.OutputState }

func (GitCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCredentials)(nil)).Elem()
}

func (o GitCredentialsOutput) ToGitCredentialsOutput() GitCredentialsOutput {
	return o
}

func (o GitCredentialsOutput) ToGitCredentialsOutputWithContext(ctx context.Context) GitCredentialsOutput {
	return o
}

func (o GitCredentialsOutput) ToGitCredentialsPtrOutput() GitCredentialsPtrOutput {
	return o.ToGitCredentialsPtrOutputWithContext(context.Background())
}

func (o GitCredentialsOutput) ToGitCredentialsPtrOutputWithContext(ctx context.Context) GitCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitCredentials) *GitCredentials {
		return &v
	}).(GitCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitCredentialsOutput) Http() GitCredentialsHttpPtrOutput {
	return o.ApplyT(func(v GitCredentials) *GitCredentialsHttp { return v.Http }).(GitCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitCredentialsOutput) Ssh() GitCredentialsSshPtrOutput {
	return o.ApplyT(func(v GitCredentials) *GitCredentialsSsh { return v.Ssh }).(GitCredentialsSshPtrOutput)
}

type GitCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GitCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCredentials)(nil)).Elem()
}

func (o GitCredentialsPtrOutput) ToGitCredentialsPtrOutput() GitCredentialsPtrOutput {
	return o
}

func (o GitCredentialsPtrOutput) ToGitCredentialsPtrOutputWithContext(ctx context.Context) GitCredentialsPtrOutput {
	return o
}

func (o GitCredentialsPtrOutput) Elem() GitCredentialsOutput {
	return o.ApplyT(func(v *GitCredentials) GitCredentials {
		if v != nil {
			return *v
		}
		var ret GitCredentials
		return ret
	}).(GitCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitCredentialsPtrOutput) Http() GitCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *GitCredentials) *GitCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GitCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitCredentialsPtrOutput) Ssh() GitCredentialsSshPtrOutput {
	return o.ApplyT(func(v *GitCredentials) *GitCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(GitCredentialsSshPtrOutput)
}

type GitCredentialsHttp struct {
	PasswordRef string  `pulumi:"passwordRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// GitCredentialsHttpInput is an input type that accepts GitCredentialsHttpArgs and GitCredentialsHttpOutput values.
// You can construct a concrete instance of `GitCredentialsHttpInput` via:
//
//	GitCredentialsHttpArgs{...}
type GitCredentialsHttpInput interface {
	pulumi.Input

	ToGitCredentialsHttpOutput() GitCredentialsHttpOutput
	ToGitCredentialsHttpOutputWithContext(context.Context) GitCredentialsHttpOutput
}

type GitCredentialsHttpArgs struct {
	PasswordRef pulumi.StringInput    `pulumi:"passwordRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (GitCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCredentialsHttp)(nil)).Elem()
}

func (i GitCredentialsHttpArgs) ToGitCredentialsHttpOutput() GitCredentialsHttpOutput {
	return i.ToGitCredentialsHttpOutputWithContext(context.Background())
}

func (i GitCredentialsHttpArgs) ToGitCredentialsHttpOutputWithContext(ctx context.Context) GitCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsHttpOutput)
}

func (i GitCredentialsHttpArgs) ToGitCredentialsHttpPtrOutput() GitCredentialsHttpPtrOutput {
	return i.ToGitCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i GitCredentialsHttpArgs) ToGitCredentialsHttpPtrOutputWithContext(ctx context.Context) GitCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsHttpOutput).ToGitCredentialsHttpPtrOutputWithContext(ctx)
}

// GitCredentialsHttpPtrInput is an input type that accepts GitCredentialsHttpArgs, GitCredentialsHttpPtr and GitCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `GitCredentialsHttpPtrInput` via:
//
//	        GitCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type GitCredentialsHttpPtrInput interface {
	pulumi.Input

	ToGitCredentialsHttpPtrOutput() GitCredentialsHttpPtrOutput
	ToGitCredentialsHttpPtrOutputWithContext(context.Context) GitCredentialsHttpPtrOutput
}

type gitCredentialsHttpPtrType GitCredentialsHttpArgs

func GitCredentialsHttpPtr(v *GitCredentialsHttpArgs) GitCredentialsHttpPtrInput {
	return (*gitCredentialsHttpPtrType)(v)
}

func (*gitCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCredentialsHttp)(nil)).Elem()
}

func (i *gitCredentialsHttpPtrType) ToGitCredentialsHttpPtrOutput() GitCredentialsHttpPtrOutput {
	return i.ToGitCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *gitCredentialsHttpPtrType) ToGitCredentialsHttpPtrOutputWithContext(ctx context.Context) GitCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsHttpPtrOutput)
}

type GitCredentialsHttpOutput struct{ *pulumi.OutputState }

func (GitCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCredentialsHttp)(nil)).Elem()
}

func (o GitCredentialsHttpOutput) ToGitCredentialsHttpOutput() GitCredentialsHttpOutput {
	return o
}

func (o GitCredentialsHttpOutput) ToGitCredentialsHttpOutputWithContext(ctx context.Context) GitCredentialsHttpOutput {
	return o
}

func (o GitCredentialsHttpOutput) ToGitCredentialsHttpPtrOutput() GitCredentialsHttpPtrOutput {
	return o.ToGitCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o GitCredentialsHttpOutput) ToGitCredentialsHttpPtrOutputWithContext(ctx context.Context) GitCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitCredentialsHttp) *GitCredentialsHttp {
		return &v
	}).(GitCredentialsHttpPtrOutput)
}

func (o GitCredentialsHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitCredentialsHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GitCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GitCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type GitCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (GitCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCredentialsHttp)(nil)).Elem()
}

func (o GitCredentialsHttpPtrOutput) ToGitCredentialsHttpPtrOutput() GitCredentialsHttpPtrOutput {
	return o
}

func (o GitCredentialsHttpPtrOutput) ToGitCredentialsHttpPtrOutputWithContext(ctx context.Context) GitCredentialsHttpPtrOutput {
	return o
}

func (o GitCredentialsHttpPtrOutput) Elem() GitCredentialsHttpOutput {
	return o.ApplyT(func(v *GitCredentialsHttp) GitCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret GitCredentialsHttp
		return ret
	}).(GitCredentialsHttpOutput)
}

func (o GitCredentialsHttpPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o GitCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o GitCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GitCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GitCredentialsSshInput is an input type that accepts GitCredentialsSshArgs and GitCredentialsSshOutput values.
// You can construct a concrete instance of `GitCredentialsSshInput` via:
//
//	GitCredentialsSshArgs{...}
type GitCredentialsSshInput interface {
	pulumi.Input

	ToGitCredentialsSshOutput() GitCredentialsSshOutput
	ToGitCredentialsSshOutputWithContext(context.Context) GitCredentialsSshOutput
}

type GitCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GitCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCredentialsSsh)(nil)).Elem()
}

func (i GitCredentialsSshArgs) ToGitCredentialsSshOutput() GitCredentialsSshOutput {
	return i.ToGitCredentialsSshOutputWithContext(context.Background())
}

func (i GitCredentialsSshArgs) ToGitCredentialsSshOutputWithContext(ctx context.Context) GitCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsSshOutput)
}

func (i GitCredentialsSshArgs) ToGitCredentialsSshPtrOutput() GitCredentialsSshPtrOutput {
	return i.ToGitCredentialsSshPtrOutputWithContext(context.Background())
}

func (i GitCredentialsSshArgs) ToGitCredentialsSshPtrOutputWithContext(ctx context.Context) GitCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsSshOutput).ToGitCredentialsSshPtrOutputWithContext(ctx)
}

// GitCredentialsSshPtrInput is an input type that accepts GitCredentialsSshArgs, GitCredentialsSshPtr and GitCredentialsSshPtrOutput values.
// You can construct a concrete instance of `GitCredentialsSshPtrInput` via:
//
//	        GitCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type GitCredentialsSshPtrInput interface {
	pulumi.Input

	ToGitCredentialsSshPtrOutput() GitCredentialsSshPtrOutput
	ToGitCredentialsSshPtrOutputWithContext(context.Context) GitCredentialsSshPtrOutput
}

type gitCredentialsSshPtrType GitCredentialsSshArgs

func GitCredentialsSshPtr(v *GitCredentialsSshArgs) GitCredentialsSshPtrInput {
	return (*gitCredentialsSshPtrType)(v)
}

func (*gitCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCredentialsSsh)(nil)).Elem()
}

func (i *gitCredentialsSshPtrType) ToGitCredentialsSshPtrOutput() GitCredentialsSshPtrOutput {
	return i.ToGitCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *gitCredentialsSshPtrType) ToGitCredentialsSshPtrOutputWithContext(ctx context.Context) GitCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitCredentialsSshPtrOutput)
}

type GitCredentialsSshOutput struct{ *pulumi.OutputState }

func (GitCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitCredentialsSsh)(nil)).Elem()
}

func (o GitCredentialsSshOutput) ToGitCredentialsSshOutput() GitCredentialsSshOutput {
	return o
}

func (o GitCredentialsSshOutput) ToGitCredentialsSshOutputWithContext(ctx context.Context) GitCredentialsSshOutput {
	return o
}

func (o GitCredentialsSshOutput) ToGitCredentialsSshPtrOutput() GitCredentialsSshPtrOutput {
	return o.ToGitCredentialsSshPtrOutputWithContext(context.Background())
}

func (o GitCredentialsSshOutput) ToGitCredentialsSshPtrOutputWithContext(ctx context.Context) GitCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitCredentialsSsh) *GitCredentialsSsh {
		return &v
	}).(GitCredentialsSshPtrOutput)
}

func (o GitCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GitCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (GitCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitCredentialsSsh)(nil)).Elem()
}

func (o GitCredentialsSshPtrOutput) ToGitCredentialsSshPtrOutput() GitCredentialsSshPtrOutput {
	return o
}

func (o GitCredentialsSshPtrOutput) ToGitCredentialsSshPtrOutputWithContext(ctx context.Context) GitCredentialsSshPtrOutput {
	return o
}

func (o GitCredentialsSshPtrOutput) Elem() GitCredentialsSshOutput {
	return o.ApplyT(func(v *GitCredentialsSsh) GitCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret GitCredentialsSsh
		return ret
	}).(GitCredentialsSshOutput)
}

func (o GitCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type GithubApiAuthentication struct {
	// Configuration for using the github app for interacting with the github api.
	GithubApp *GithubApiAuthenticationGithubApp `pulumi:"githubApp"`
	// Personal access token for interacting with the github api.
	TokenRef *string `pulumi:"tokenRef"`
}

// GithubApiAuthenticationInput is an input type that accepts GithubApiAuthenticationArgs and GithubApiAuthenticationOutput values.
// You can construct a concrete instance of `GithubApiAuthenticationInput` via:
//
//	GithubApiAuthenticationArgs{...}
type GithubApiAuthenticationInput interface {
	pulumi.Input

	ToGithubApiAuthenticationOutput() GithubApiAuthenticationOutput
	ToGithubApiAuthenticationOutputWithContext(context.Context) GithubApiAuthenticationOutput
}

type GithubApiAuthenticationArgs struct {
	// Configuration for using the github app for interacting with the github api.
	GithubApp GithubApiAuthenticationGithubAppPtrInput `pulumi:"githubApp"`
	// Personal access token for interacting with the github api.
	TokenRef pulumi.StringPtrInput `pulumi:"tokenRef"`
}

func (GithubApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubApiAuthentication)(nil)).Elem()
}

func (i GithubApiAuthenticationArgs) ToGithubApiAuthenticationOutput() GithubApiAuthenticationOutput {
	return i.ToGithubApiAuthenticationOutputWithContext(context.Background())
}

func (i GithubApiAuthenticationArgs) ToGithubApiAuthenticationOutputWithContext(ctx context.Context) GithubApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubApiAuthenticationOutput)
}

func (i GithubApiAuthenticationArgs) ToGithubApiAuthenticationPtrOutput() GithubApiAuthenticationPtrOutput {
	return i.ToGithubApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i GithubApiAuthenticationArgs) ToGithubApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubApiAuthenticationOutput).ToGithubApiAuthenticationPtrOutputWithContext(ctx)
}

// GithubApiAuthenticationPtrInput is an input type that accepts GithubApiAuthenticationArgs, GithubApiAuthenticationPtr and GithubApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `GithubApiAuthenticationPtrInput` via:
//
//	        GithubApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type GithubApiAuthenticationPtrInput interface {
	pulumi.Input

	ToGithubApiAuthenticationPtrOutput() GithubApiAuthenticationPtrOutput
	ToGithubApiAuthenticationPtrOutputWithContext(context.Context) GithubApiAuthenticationPtrOutput
}

type githubApiAuthenticationPtrType GithubApiAuthenticationArgs

func GithubApiAuthenticationPtr(v *GithubApiAuthenticationArgs) GithubApiAuthenticationPtrInput {
	return (*githubApiAuthenticationPtrType)(v)
}

func (*githubApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubApiAuthentication)(nil)).Elem()
}

func (i *githubApiAuthenticationPtrType) ToGithubApiAuthenticationPtrOutput() GithubApiAuthenticationPtrOutput {
	return i.ToGithubApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *githubApiAuthenticationPtrType) ToGithubApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubApiAuthenticationPtrOutput)
}

type GithubApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GithubApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubApiAuthentication)(nil)).Elem()
}

func (o GithubApiAuthenticationOutput) ToGithubApiAuthenticationOutput() GithubApiAuthenticationOutput {
	return o
}

func (o GithubApiAuthenticationOutput) ToGithubApiAuthenticationOutputWithContext(ctx context.Context) GithubApiAuthenticationOutput {
	return o
}

func (o GithubApiAuthenticationOutput) ToGithubApiAuthenticationPtrOutput() GithubApiAuthenticationPtrOutput {
	return o.ToGithubApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o GithubApiAuthenticationOutput) ToGithubApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubApiAuthentication) *GithubApiAuthentication {
		return &v
	}).(GithubApiAuthenticationPtrOutput)
}

// Configuration for using the github app for interacting with the github api.
func (o GithubApiAuthenticationOutput) GithubApp() GithubApiAuthenticationGithubAppPtrOutput {
	return o.ApplyT(func(v GithubApiAuthentication) *GithubApiAuthenticationGithubApp { return v.GithubApp }).(GithubApiAuthenticationGithubAppPtrOutput)
}

// Personal access token for interacting with the github api.
func (o GithubApiAuthenticationOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubApiAuthentication) *string { return v.TokenRef }).(pulumi.StringPtrOutput)
}

type GithubApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GithubApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubApiAuthentication)(nil)).Elem()
}

func (o GithubApiAuthenticationPtrOutput) ToGithubApiAuthenticationPtrOutput() GithubApiAuthenticationPtrOutput {
	return o
}

func (o GithubApiAuthenticationPtrOutput) ToGithubApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationPtrOutput {
	return o
}

func (o GithubApiAuthenticationPtrOutput) Elem() GithubApiAuthenticationOutput {
	return o.ApplyT(func(v *GithubApiAuthentication) GithubApiAuthentication {
		if v != nil {
			return *v
		}
		var ret GithubApiAuthentication
		return ret
	}).(GithubApiAuthenticationOutput)
}

// Configuration for using the github app for interacting with the github api.
func (o GithubApiAuthenticationPtrOutput) GithubApp() GithubApiAuthenticationGithubAppPtrOutput {
	return o.ApplyT(func(v *GithubApiAuthentication) *GithubApiAuthenticationGithubApp {
		if v == nil {
			return nil
		}
		return v.GithubApp
	}).(GithubApiAuthenticationGithubAppPtrOutput)
}

// Personal access token for interacting with the github api.
func (o GithubApiAuthenticationPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenRef
	}).(pulumi.StringPtrOutput)
}

type GithubApiAuthenticationGithubApp struct {
	ApplicationId  string `pulumi:"applicationId"`
	InstallationId string `pulumi:"installationId"`
	PrivateKeyRef  string `pulumi:"privateKeyRef"`
}

// GithubApiAuthenticationGithubAppInput is an input type that accepts GithubApiAuthenticationGithubAppArgs and GithubApiAuthenticationGithubAppOutput values.
// You can construct a concrete instance of `GithubApiAuthenticationGithubAppInput` via:
//
//	GithubApiAuthenticationGithubAppArgs{...}
type GithubApiAuthenticationGithubAppInput interface {
	pulumi.Input

	ToGithubApiAuthenticationGithubAppOutput() GithubApiAuthenticationGithubAppOutput
	ToGithubApiAuthenticationGithubAppOutputWithContext(context.Context) GithubApiAuthenticationGithubAppOutput
}

type GithubApiAuthenticationGithubAppArgs struct {
	ApplicationId  pulumi.StringInput `pulumi:"applicationId"`
	InstallationId pulumi.StringInput `pulumi:"installationId"`
	PrivateKeyRef  pulumi.StringInput `pulumi:"privateKeyRef"`
}

func (GithubApiAuthenticationGithubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GithubApiAuthenticationGithubAppArgs) ToGithubApiAuthenticationGithubAppOutput() GithubApiAuthenticationGithubAppOutput {
	return i.ToGithubApiAuthenticationGithubAppOutputWithContext(context.Background())
}

func (i GithubApiAuthenticationGithubAppArgs) ToGithubApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GithubApiAuthenticationGithubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubApiAuthenticationGithubAppOutput)
}

func (i GithubApiAuthenticationGithubAppArgs) ToGithubApiAuthenticationGithubAppPtrOutput() GithubApiAuthenticationGithubAppPtrOutput {
	return i.ToGithubApiAuthenticationGithubAppPtrOutputWithContext(context.Background())
}

func (i GithubApiAuthenticationGithubAppArgs) ToGithubApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationGithubAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubApiAuthenticationGithubAppOutput).ToGithubApiAuthenticationGithubAppPtrOutputWithContext(ctx)
}

// GithubApiAuthenticationGithubAppPtrInput is an input type that accepts GithubApiAuthenticationGithubAppArgs, GithubApiAuthenticationGithubAppPtr and GithubApiAuthenticationGithubAppPtrOutput values.
// You can construct a concrete instance of `GithubApiAuthenticationGithubAppPtrInput` via:
//
//	        GithubApiAuthenticationGithubAppArgs{...}
//
//	or:
//
//	        nil
type GithubApiAuthenticationGithubAppPtrInput interface {
	pulumi.Input

	ToGithubApiAuthenticationGithubAppPtrOutput() GithubApiAuthenticationGithubAppPtrOutput
	ToGithubApiAuthenticationGithubAppPtrOutputWithContext(context.Context) GithubApiAuthenticationGithubAppPtrOutput
}

type githubApiAuthenticationGithubAppPtrType GithubApiAuthenticationGithubAppArgs

func GithubApiAuthenticationGithubAppPtr(v *GithubApiAuthenticationGithubAppArgs) GithubApiAuthenticationGithubAppPtrInput {
	return (*githubApiAuthenticationGithubAppPtrType)(v)
}

func (*githubApiAuthenticationGithubAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (i *githubApiAuthenticationGithubAppPtrType) ToGithubApiAuthenticationGithubAppPtrOutput() GithubApiAuthenticationGithubAppPtrOutput {
	return i.ToGithubApiAuthenticationGithubAppPtrOutputWithContext(context.Background())
}

func (i *githubApiAuthenticationGithubAppPtrType) ToGithubApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationGithubAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubApiAuthenticationGithubAppPtrOutput)
}

type GithubApiAuthenticationGithubAppOutput struct{ *pulumi.OutputState }

func (GithubApiAuthenticationGithubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GithubApiAuthenticationGithubAppOutput) ToGithubApiAuthenticationGithubAppOutput() GithubApiAuthenticationGithubAppOutput {
	return o
}

func (o GithubApiAuthenticationGithubAppOutput) ToGithubApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GithubApiAuthenticationGithubAppOutput {
	return o
}

func (o GithubApiAuthenticationGithubAppOutput) ToGithubApiAuthenticationGithubAppPtrOutput() GithubApiAuthenticationGithubAppPtrOutput {
	return o.ToGithubApiAuthenticationGithubAppPtrOutputWithContext(context.Background())
}

func (o GithubApiAuthenticationGithubAppOutput) ToGithubApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationGithubAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubApiAuthenticationGithubApp) *GithubApiAuthenticationGithubApp {
		return &v
	}).(GithubApiAuthenticationGithubAppPtrOutput)
}

func (o GithubApiAuthenticationGithubAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GithubApiAuthenticationGithubApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o GithubApiAuthenticationGithubAppOutput) InstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GithubApiAuthenticationGithubApp) string { return v.InstallationId }).(pulumi.StringOutput)
}

func (o GithubApiAuthenticationGithubAppOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GithubApiAuthenticationGithubApp) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

type GithubApiAuthenticationGithubAppPtrOutput struct{ *pulumi.OutputState }

func (GithubApiAuthenticationGithubAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GithubApiAuthenticationGithubAppPtrOutput) ToGithubApiAuthenticationGithubAppPtrOutput() GithubApiAuthenticationGithubAppPtrOutput {
	return o
}

func (o GithubApiAuthenticationGithubAppPtrOutput) ToGithubApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubApiAuthenticationGithubAppPtrOutput {
	return o
}

func (o GithubApiAuthenticationGithubAppPtrOutput) Elem() GithubApiAuthenticationGithubAppOutput {
	return o.ApplyT(func(v *GithubApiAuthenticationGithubApp) GithubApiAuthenticationGithubApp {
		if v != nil {
			return *v
		}
		var ret GithubApiAuthenticationGithubApp
		return ret
	}).(GithubApiAuthenticationGithubAppOutput)
}

func (o GithubApiAuthenticationGithubAppPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o GithubApiAuthenticationGithubAppPtrOutput) InstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return &v.InstallationId
	}).(pulumi.StringPtrOutput)
}

func (o GithubApiAuthenticationGithubAppPtrOutput) PrivateKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKeyRef
	}).(pulumi.StringPtrOutput)
}

type GithubCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *GithubCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *GithubCredentialsSsh `pulumi:"ssh"`
}

// GithubCredentialsInput is an input type that accepts GithubCredentialsArgs and GithubCredentialsOutput values.
// You can construct a concrete instance of `GithubCredentialsInput` via:
//
//	GithubCredentialsArgs{...}
type GithubCredentialsInput interface {
	pulumi.Input

	ToGithubCredentialsOutput() GithubCredentialsOutput
	ToGithubCredentialsOutputWithContext(context.Context) GithubCredentialsOutput
}

type GithubCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http GithubCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh GithubCredentialsSshPtrInput `pulumi:"ssh"`
}

func (GithubCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubCredentials)(nil)).Elem()
}

func (i GithubCredentialsArgs) ToGithubCredentialsOutput() GithubCredentialsOutput {
	return i.ToGithubCredentialsOutputWithContext(context.Background())
}

func (i GithubCredentialsArgs) ToGithubCredentialsOutputWithContext(ctx context.Context) GithubCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsOutput)
}

func (i GithubCredentialsArgs) ToGithubCredentialsPtrOutput() GithubCredentialsPtrOutput {
	return i.ToGithubCredentialsPtrOutputWithContext(context.Background())
}

func (i GithubCredentialsArgs) ToGithubCredentialsPtrOutputWithContext(ctx context.Context) GithubCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsOutput).ToGithubCredentialsPtrOutputWithContext(ctx)
}

// GithubCredentialsPtrInput is an input type that accepts GithubCredentialsArgs, GithubCredentialsPtr and GithubCredentialsPtrOutput values.
// You can construct a concrete instance of `GithubCredentialsPtrInput` via:
//
//	        GithubCredentialsArgs{...}
//
//	or:
//
//	        nil
type GithubCredentialsPtrInput interface {
	pulumi.Input

	ToGithubCredentialsPtrOutput() GithubCredentialsPtrOutput
	ToGithubCredentialsPtrOutputWithContext(context.Context) GithubCredentialsPtrOutput
}

type githubCredentialsPtrType GithubCredentialsArgs

func GithubCredentialsPtr(v *GithubCredentialsArgs) GithubCredentialsPtrInput {
	return (*githubCredentialsPtrType)(v)
}

func (*githubCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubCredentials)(nil)).Elem()
}

func (i *githubCredentialsPtrType) ToGithubCredentialsPtrOutput() GithubCredentialsPtrOutput {
	return i.ToGithubCredentialsPtrOutputWithContext(context.Background())
}

func (i *githubCredentialsPtrType) ToGithubCredentialsPtrOutputWithContext(ctx context.Context) GithubCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsPtrOutput)
}

type GithubCredentialsOutput struct{ *pulumi.OutputState }

func (GithubCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubCredentials)(nil)).Elem()
}

func (o GithubCredentialsOutput) ToGithubCredentialsOutput() GithubCredentialsOutput {
	return o
}

func (o GithubCredentialsOutput) ToGithubCredentialsOutputWithContext(ctx context.Context) GithubCredentialsOutput {
	return o
}

func (o GithubCredentialsOutput) ToGithubCredentialsPtrOutput() GithubCredentialsPtrOutput {
	return o.ToGithubCredentialsPtrOutputWithContext(context.Background())
}

func (o GithubCredentialsOutput) ToGithubCredentialsPtrOutputWithContext(ctx context.Context) GithubCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubCredentials) *GithubCredentials {
		return &v
	}).(GithubCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GithubCredentialsOutput) Http() GithubCredentialsHttpPtrOutput {
	return o.ApplyT(func(v GithubCredentials) *GithubCredentialsHttp { return v.Http }).(GithubCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GithubCredentialsOutput) Ssh() GithubCredentialsSshPtrOutput {
	return o.ApplyT(func(v GithubCredentials) *GithubCredentialsSsh { return v.Ssh }).(GithubCredentialsSshPtrOutput)
}

type GithubCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GithubCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubCredentials)(nil)).Elem()
}

func (o GithubCredentialsPtrOutput) ToGithubCredentialsPtrOutput() GithubCredentialsPtrOutput {
	return o
}

func (o GithubCredentialsPtrOutput) ToGithubCredentialsPtrOutputWithContext(ctx context.Context) GithubCredentialsPtrOutput {
	return o
}

func (o GithubCredentialsPtrOutput) Elem() GithubCredentialsOutput {
	return o.ApplyT(func(v *GithubCredentials) GithubCredentials {
		if v != nil {
			return *v
		}
		var ret GithubCredentials
		return ret
	}).(GithubCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GithubCredentialsPtrOutput) Http() GithubCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *GithubCredentials) *GithubCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GithubCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GithubCredentialsPtrOutput) Ssh() GithubCredentialsSshPtrOutput {
	return o.ApplyT(func(v *GithubCredentials) *GithubCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(GithubCredentialsSshPtrOutput)
}

type GithubCredentialsHttp struct {
	TokenRef    string  `pulumi:"tokenRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// GithubCredentialsHttpInput is an input type that accepts GithubCredentialsHttpArgs and GithubCredentialsHttpOutput values.
// You can construct a concrete instance of `GithubCredentialsHttpInput` via:
//
//	GithubCredentialsHttpArgs{...}
type GithubCredentialsHttpInput interface {
	pulumi.Input

	ToGithubCredentialsHttpOutput() GithubCredentialsHttpOutput
	ToGithubCredentialsHttpOutputWithContext(context.Context) GithubCredentialsHttpOutput
}

type GithubCredentialsHttpArgs struct {
	TokenRef    pulumi.StringInput    `pulumi:"tokenRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (GithubCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubCredentialsHttp)(nil)).Elem()
}

func (i GithubCredentialsHttpArgs) ToGithubCredentialsHttpOutput() GithubCredentialsHttpOutput {
	return i.ToGithubCredentialsHttpOutputWithContext(context.Background())
}

func (i GithubCredentialsHttpArgs) ToGithubCredentialsHttpOutputWithContext(ctx context.Context) GithubCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsHttpOutput)
}

func (i GithubCredentialsHttpArgs) ToGithubCredentialsHttpPtrOutput() GithubCredentialsHttpPtrOutput {
	return i.ToGithubCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i GithubCredentialsHttpArgs) ToGithubCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsHttpOutput).ToGithubCredentialsHttpPtrOutputWithContext(ctx)
}

// GithubCredentialsHttpPtrInput is an input type that accepts GithubCredentialsHttpArgs, GithubCredentialsHttpPtr and GithubCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `GithubCredentialsHttpPtrInput` via:
//
//	        GithubCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type GithubCredentialsHttpPtrInput interface {
	pulumi.Input

	ToGithubCredentialsHttpPtrOutput() GithubCredentialsHttpPtrOutput
	ToGithubCredentialsHttpPtrOutputWithContext(context.Context) GithubCredentialsHttpPtrOutput
}

type githubCredentialsHttpPtrType GithubCredentialsHttpArgs

func GithubCredentialsHttpPtr(v *GithubCredentialsHttpArgs) GithubCredentialsHttpPtrInput {
	return (*githubCredentialsHttpPtrType)(v)
}

func (*githubCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubCredentialsHttp)(nil)).Elem()
}

func (i *githubCredentialsHttpPtrType) ToGithubCredentialsHttpPtrOutput() GithubCredentialsHttpPtrOutput {
	return i.ToGithubCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *githubCredentialsHttpPtrType) ToGithubCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsHttpPtrOutput)
}

type GithubCredentialsHttpOutput struct{ *pulumi.OutputState }

func (GithubCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubCredentialsHttp)(nil)).Elem()
}

func (o GithubCredentialsHttpOutput) ToGithubCredentialsHttpOutput() GithubCredentialsHttpOutput {
	return o
}

func (o GithubCredentialsHttpOutput) ToGithubCredentialsHttpOutputWithContext(ctx context.Context) GithubCredentialsHttpOutput {
	return o
}

func (o GithubCredentialsHttpOutput) ToGithubCredentialsHttpPtrOutput() GithubCredentialsHttpPtrOutput {
	return o.ToGithubCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o GithubCredentialsHttpOutput) ToGithubCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubCredentialsHttp) *GithubCredentialsHttp {
		return &v
	}).(GithubCredentialsHttpPtrOutput)
}

func (o GithubCredentialsHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GithubCredentialsHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GithubCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GithubCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type GithubCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (GithubCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubCredentialsHttp)(nil)).Elem()
}

func (o GithubCredentialsHttpPtrOutput) ToGithubCredentialsHttpPtrOutput() GithubCredentialsHttpPtrOutput {
	return o
}

func (o GithubCredentialsHttpPtrOutput) ToGithubCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubCredentialsHttpPtrOutput {
	return o
}

func (o GithubCredentialsHttpPtrOutput) Elem() GithubCredentialsHttpOutput {
	return o.ApplyT(func(v *GithubCredentialsHttp) GithubCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret GithubCredentialsHttp
		return ret
	}).(GithubCredentialsHttpOutput)
}

func (o GithubCredentialsHttpPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

func (o GithubCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o GithubCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GithubCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GithubCredentialsSshInput is an input type that accepts GithubCredentialsSshArgs and GithubCredentialsSshOutput values.
// You can construct a concrete instance of `GithubCredentialsSshInput` via:
//
//	GithubCredentialsSshArgs{...}
type GithubCredentialsSshInput interface {
	pulumi.Input

	ToGithubCredentialsSshOutput() GithubCredentialsSshOutput
	ToGithubCredentialsSshOutputWithContext(context.Context) GithubCredentialsSshOutput
}

type GithubCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GithubCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubCredentialsSsh)(nil)).Elem()
}

func (i GithubCredentialsSshArgs) ToGithubCredentialsSshOutput() GithubCredentialsSshOutput {
	return i.ToGithubCredentialsSshOutputWithContext(context.Background())
}

func (i GithubCredentialsSshArgs) ToGithubCredentialsSshOutputWithContext(ctx context.Context) GithubCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsSshOutput)
}

func (i GithubCredentialsSshArgs) ToGithubCredentialsSshPtrOutput() GithubCredentialsSshPtrOutput {
	return i.ToGithubCredentialsSshPtrOutputWithContext(context.Background())
}

func (i GithubCredentialsSshArgs) ToGithubCredentialsSshPtrOutputWithContext(ctx context.Context) GithubCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsSshOutput).ToGithubCredentialsSshPtrOutputWithContext(ctx)
}

// GithubCredentialsSshPtrInput is an input type that accepts GithubCredentialsSshArgs, GithubCredentialsSshPtr and GithubCredentialsSshPtrOutput values.
// You can construct a concrete instance of `GithubCredentialsSshPtrInput` via:
//
//	        GithubCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type GithubCredentialsSshPtrInput interface {
	pulumi.Input

	ToGithubCredentialsSshPtrOutput() GithubCredentialsSshPtrOutput
	ToGithubCredentialsSshPtrOutputWithContext(context.Context) GithubCredentialsSshPtrOutput
}

type githubCredentialsSshPtrType GithubCredentialsSshArgs

func GithubCredentialsSshPtr(v *GithubCredentialsSshArgs) GithubCredentialsSshPtrInput {
	return (*githubCredentialsSshPtrType)(v)
}

func (*githubCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubCredentialsSsh)(nil)).Elem()
}

func (i *githubCredentialsSshPtrType) ToGithubCredentialsSshPtrOutput() GithubCredentialsSshPtrOutput {
	return i.ToGithubCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *githubCredentialsSshPtrType) ToGithubCredentialsSshPtrOutputWithContext(ctx context.Context) GithubCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubCredentialsSshPtrOutput)
}

type GithubCredentialsSshOutput struct{ *pulumi.OutputState }

func (GithubCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubCredentialsSsh)(nil)).Elem()
}

func (o GithubCredentialsSshOutput) ToGithubCredentialsSshOutput() GithubCredentialsSshOutput {
	return o
}

func (o GithubCredentialsSshOutput) ToGithubCredentialsSshOutputWithContext(ctx context.Context) GithubCredentialsSshOutput {
	return o
}

func (o GithubCredentialsSshOutput) ToGithubCredentialsSshPtrOutput() GithubCredentialsSshPtrOutput {
	return o.ToGithubCredentialsSshPtrOutputWithContext(context.Background())
}

func (o GithubCredentialsSshOutput) ToGithubCredentialsSshPtrOutputWithContext(ctx context.Context) GithubCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubCredentialsSsh) *GithubCredentialsSsh {
		return &v
	}).(GithubCredentialsSshPtrOutput)
}

func (o GithubCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GithubCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GithubCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (GithubCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubCredentialsSsh)(nil)).Elem()
}

func (o GithubCredentialsSshPtrOutput) ToGithubCredentialsSshPtrOutput() GithubCredentialsSshPtrOutput {
	return o
}

func (o GithubCredentialsSshPtrOutput) ToGithubCredentialsSshPtrOutputWithContext(ctx context.Context) GithubCredentialsSshPtrOutput {
	return o
}

func (o GithubCredentialsSshPtrOutput) Elem() GithubCredentialsSshOutput {
	return o.ApplyT(func(v *GithubCredentialsSsh) GithubCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret GithubCredentialsSsh
		return ret
	}).(GithubCredentialsSshOutput)
}

func (o GithubCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type GitlabApiAuthentication struct {
	// Personal access token for interacting with the gitlab api.
	TokenRef string `pulumi:"tokenRef"`
}

// GitlabApiAuthenticationInput is an input type that accepts GitlabApiAuthenticationArgs and GitlabApiAuthenticationOutput values.
// You can construct a concrete instance of `GitlabApiAuthenticationInput` via:
//
//	GitlabApiAuthenticationArgs{...}
type GitlabApiAuthenticationInput interface {
	pulumi.Input

	ToGitlabApiAuthenticationOutput() GitlabApiAuthenticationOutput
	ToGitlabApiAuthenticationOutputWithContext(context.Context) GitlabApiAuthenticationOutput
}

type GitlabApiAuthenticationArgs struct {
	// Personal access token for interacting with the gitlab api.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GitlabApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabApiAuthentication)(nil)).Elem()
}

func (i GitlabApiAuthenticationArgs) ToGitlabApiAuthenticationOutput() GitlabApiAuthenticationOutput {
	return i.ToGitlabApiAuthenticationOutputWithContext(context.Background())
}

func (i GitlabApiAuthenticationArgs) ToGitlabApiAuthenticationOutputWithContext(ctx context.Context) GitlabApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabApiAuthenticationOutput)
}

func (i GitlabApiAuthenticationArgs) ToGitlabApiAuthenticationPtrOutput() GitlabApiAuthenticationPtrOutput {
	return i.ToGitlabApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i GitlabApiAuthenticationArgs) ToGitlabApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabApiAuthenticationOutput).ToGitlabApiAuthenticationPtrOutputWithContext(ctx)
}

// GitlabApiAuthenticationPtrInput is an input type that accepts GitlabApiAuthenticationArgs, GitlabApiAuthenticationPtr and GitlabApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `GitlabApiAuthenticationPtrInput` via:
//
//	        GitlabApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type GitlabApiAuthenticationPtrInput interface {
	pulumi.Input

	ToGitlabApiAuthenticationPtrOutput() GitlabApiAuthenticationPtrOutput
	ToGitlabApiAuthenticationPtrOutputWithContext(context.Context) GitlabApiAuthenticationPtrOutput
}

type gitlabApiAuthenticationPtrType GitlabApiAuthenticationArgs

func GitlabApiAuthenticationPtr(v *GitlabApiAuthenticationArgs) GitlabApiAuthenticationPtrInput {
	return (*gitlabApiAuthenticationPtrType)(v)
}

func (*gitlabApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabApiAuthentication)(nil)).Elem()
}

func (i *gitlabApiAuthenticationPtrType) ToGitlabApiAuthenticationPtrOutput() GitlabApiAuthenticationPtrOutput {
	return i.ToGitlabApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *gitlabApiAuthenticationPtrType) ToGitlabApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabApiAuthenticationPtrOutput)
}

type GitlabApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GitlabApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabApiAuthentication)(nil)).Elem()
}

func (o GitlabApiAuthenticationOutput) ToGitlabApiAuthenticationOutput() GitlabApiAuthenticationOutput {
	return o
}

func (o GitlabApiAuthenticationOutput) ToGitlabApiAuthenticationOutputWithContext(ctx context.Context) GitlabApiAuthenticationOutput {
	return o
}

func (o GitlabApiAuthenticationOutput) ToGitlabApiAuthenticationPtrOutput() GitlabApiAuthenticationPtrOutput {
	return o.ToGitlabApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o GitlabApiAuthenticationOutput) ToGitlabApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabApiAuthentication) *GitlabApiAuthentication {
		return &v
	}).(GitlabApiAuthenticationPtrOutput)
}

// Personal access token for interacting with the gitlab api.
func (o GitlabApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitlabApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GitlabApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GitlabApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabApiAuthentication)(nil)).Elem()
}

func (o GitlabApiAuthenticationPtrOutput) ToGitlabApiAuthenticationPtrOutput() GitlabApiAuthenticationPtrOutput {
	return o
}

func (o GitlabApiAuthenticationPtrOutput) ToGitlabApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabApiAuthenticationPtrOutput {
	return o
}

func (o GitlabApiAuthenticationPtrOutput) Elem() GitlabApiAuthenticationOutput {
	return o.ApplyT(func(v *GitlabApiAuthentication) GitlabApiAuthentication {
		if v != nil {
			return *v
		}
		var ret GitlabApiAuthentication
		return ret
	}).(GitlabApiAuthenticationOutput)
}

// Personal access token for interacting with the gitlab api.
func (o GitlabApiAuthenticationPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

type GitlabCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *GitlabCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *GitlabCredentialsSsh `pulumi:"ssh"`
}

// GitlabCredentialsInput is an input type that accepts GitlabCredentialsArgs and GitlabCredentialsOutput values.
// You can construct a concrete instance of `GitlabCredentialsInput` via:
//
//	GitlabCredentialsArgs{...}
type GitlabCredentialsInput interface {
	pulumi.Input

	ToGitlabCredentialsOutput() GitlabCredentialsOutput
	ToGitlabCredentialsOutputWithContext(context.Context) GitlabCredentialsOutput
}

type GitlabCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http GitlabCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh GitlabCredentialsSshPtrInput `pulumi:"ssh"`
}

func (GitlabCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabCredentials)(nil)).Elem()
}

func (i GitlabCredentialsArgs) ToGitlabCredentialsOutput() GitlabCredentialsOutput {
	return i.ToGitlabCredentialsOutputWithContext(context.Background())
}

func (i GitlabCredentialsArgs) ToGitlabCredentialsOutputWithContext(ctx context.Context) GitlabCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsOutput)
}

func (i GitlabCredentialsArgs) ToGitlabCredentialsPtrOutput() GitlabCredentialsPtrOutput {
	return i.ToGitlabCredentialsPtrOutputWithContext(context.Background())
}

func (i GitlabCredentialsArgs) ToGitlabCredentialsPtrOutputWithContext(ctx context.Context) GitlabCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsOutput).ToGitlabCredentialsPtrOutputWithContext(ctx)
}

// GitlabCredentialsPtrInput is an input type that accepts GitlabCredentialsArgs, GitlabCredentialsPtr and GitlabCredentialsPtrOutput values.
// You can construct a concrete instance of `GitlabCredentialsPtrInput` via:
//
//	        GitlabCredentialsArgs{...}
//
//	or:
//
//	        nil
type GitlabCredentialsPtrInput interface {
	pulumi.Input

	ToGitlabCredentialsPtrOutput() GitlabCredentialsPtrOutput
	ToGitlabCredentialsPtrOutputWithContext(context.Context) GitlabCredentialsPtrOutput
}

type gitlabCredentialsPtrType GitlabCredentialsArgs

func GitlabCredentialsPtr(v *GitlabCredentialsArgs) GitlabCredentialsPtrInput {
	return (*gitlabCredentialsPtrType)(v)
}

func (*gitlabCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabCredentials)(nil)).Elem()
}

func (i *gitlabCredentialsPtrType) ToGitlabCredentialsPtrOutput() GitlabCredentialsPtrOutput {
	return i.ToGitlabCredentialsPtrOutputWithContext(context.Background())
}

func (i *gitlabCredentialsPtrType) ToGitlabCredentialsPtrOutputWithContext(ctx context.Context) GitlabCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsPtrOutput)
}

type GitlabCredentialsOutput struct{ *pulumi.OutputState }

func (GitlabCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabCredentials)(nil)).Elem()
}

func (o GitlabCredentialsOutput) ToGitlabCredentialsOutput() GitlabCredentialsOutput {
	return o
}

func (o GitlabCredentialsOutput) ToGitlabCredentialsOutputWithContext(ctx context.Context) GitlabCredentialsOutput {
	return o
}

func (o GitlabCredentialsOutput) ToGitlabCredentialsPtrOutput() GitlabCredentialsPtrOutput {
	return o.ToGitlabCredentialsPtrOutputWithContext(context.Background())
}

func (o GitlabCredentialsOutput) ToGitlabCredentialsPtrOutputWithContext(ctx context.Context) GitlabCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabCredentials) *GitlabCredentials {
		return &v
	}).(GitlabCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitlabCredentialsOutput) Http() GitlabCredentialsHttpPtrOutput {
	return o.ApplyT(func(v GitlabCredentials) *GitlabCredentialsHttp { return v.Http }).(GitlabCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitlabCredentialsOutput) Ssh() GitlabCredentialsSshPtrOutput {
	return o.ApplyT(func(v GitlabCredentials) *GitlabCredentialsSsh { return v.Ssh }).(GitlabCredentialsSshPtrOutput)
}

type GitlabCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GitlabCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabCredentials)(nil)).Elem()
}

func (o GitlabCredentialsPtrOutput) ToGitlabCredentialsPtrOutput() GitlabCredentialsPtrOutput {
	return o
}

func (o GitlabCredentialsPtrOutput) ToGitlabCredentialsPtrOutputWithContext(ctx context.Context) GitlabCredentialsPtrOutput {
	return o
}

func (o GitlabCredentialsPtrOutput) Elem() GitlabCredentialsOutput {
	return o.ApplyT(func(v *GitlabCredentials) GitlabCredentials {
		if v != nil {
			return *v
		}
		var ret GitlabCredentials
		return ret
	}).(GitlabCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitlabCredentialsPtrOutput) Http() GitlabCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *GitlabCredentials) *GitlabCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GitlabCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitlabCredentialsPtrOutput) Ssh() GitlabCredentialsSshPtrOutput {
	return o.ApplyT(func(v *GitlabCredentials) *GitlabCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(GitlabCredentialsSshPtrOutput)
}

type GitlabCredentialsHttp struct {
	PasswordRef *string `pulumi:"passwordRef"`
	TokenRef    *string `pulumi:"tokenRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// GitlabCredentialsHttpInput is an input type that accepts GitlabCredentialsHttpArgs and GitlabCredentialsHttpOutput values.
// You can construct a concrete instance of `GitlabCredentialsHttpInput` via:
//
//	GitlabCredentialsHttpArgs{...}
type GitlabCredentialsHttpInput interface {
	pulumi.Input

	ToGitlabCredentialsHttpOutput() GitlabCredentialsHttpOutput
	ToGitlabCredentialsHttpOutputWithContext(context.Context) GitlabCredentialsHttpOutput
}

type GitlabCredentialsHttpArgs struct {
	PasswordRef pulumi.StringPtrInput `pulumi:"passwordRef"`
	TokenRef    pulumi.StringPtrInput `pulumi:"tokenRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (GitlabCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabCredentialsHttp)(nil)).Elem()
}

func (i GitlabCredentialsHttpArgs) ToGitlabCredentialsHttpOutput() GitlabCredentialsHttpOutput {
	return i.ToGitlabCredentialsHttpOutputWithContext(context.Background())
}

func (i GitlabCredentialsHttpArgs) ToGitlabCredentialsHttpOutputWithContext(ctx context.Context) GitlabCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsHttpOutput)
}

func (i GitlabCredentialsHttpArgs) ToGitlabCredentialsHttpPtrOutput() GitlabCredentialsHttpPtrOutput {
	return i.ToGitlabCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i GitlabCredentialsHttpArgs) ToGitlabCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsHttpOutput).ToGitlabCredentialsHttpPtrOutputWithContext(ctx)
}

// GitlabCredentialsHttpPtrInput is an input type that accepts GitlabCredentialsHttpArgs, GitlabCredentialsHttpPtr and GitlabCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `GitlabCredentialsHttpPtrInput` via:
//
//	        GitlabCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type GitlabCredentialsHttpPtrInput interface {
	pulumi.Input

	ToGitlabCredentialsHttpPtrOutput() GitlabCredentialsHttpPtrOutput
	ToGitlabCredentialsHttpPtrOutputWithContext(context.Context) GitlabCredentialsHttpPtrOutput
}

type gitlabCredentialsHttpPtrType GitlabCredentialsHttpArgs

func GitlabCredentialsHttpPtr(v *GitlabCredentialsHttpArgs) GitlabCredentialsHttpPtrInput {
	return (*gitlabCredentialsHttpPtrType)(v)
}

func (*gitlabCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabCredentialsHttp)(nil)).Elem()
}

func (i *gitlabCredentialsHttpPtrType) ToGitlabCredentialsHttpPtrOutput() GitlabCredentialsHttpPtrOutput {
	return i.ToGitlabCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *gitlabCredentialsHttpPtrType) ToGitlabCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsHttpPtrOutput)
}

type GitlabCredentialsHttpOutput struct{ *pulumi.OutputState }

func (GitlabCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabCredentialsHttp)(nil)).Elem()
}

func (o GitlabCredentialsHttpOutput) ToGitlabCredentialsHttpOutput() GitlabCredentialsHttpOutput {
	return o
}

func (o GitlabCredentialsHttpOutput) ToGitlabCredentialsHttpOutputWithContext(ctx context.Context) GitlabCredentialsHttpOutput {
	return o
}

func (o GitlabCredentialsHttpOutput) ToGitlabCredentialsHttpPtrOutput() GitlabCredentialsHttpPtrOutput {
	return o.ToGitlabCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o GitlabCredentialsHttpOutput) ToGitlabCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabCredentialsHttp) *GitlabCredentialsHttp {
		return &v
	}).(GitlabCredentialsHttpPtrOutput)
}

func (o GitlabCredentialsHttpOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabCredentialsHttp) *string { return v.PasswordRef }).(pulumi.StringPtrOutput)
}

func (o GitlabCredentialsHttpOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabCredentialsHttp) *string { return v.TokenRef }).(pulumi.StringPtrOutput)
}

func (o GitlabCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GitlabCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type GitlabCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (GitlabCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabCredentialsHttp)(nil)).Elem()
}

func (o GitlabCredentialsHttpPtrOutput) ToGitlabCredentialsHttpPtrOutput() GitlabCredentialsHttpPtrOutput {
	return o
}

func (o GitlabCredentialsHttpPtrOutput) ToGitlabCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabCredentialsHttpPtrOutput {
	return o
}

func (o GitlabCredentialsHttpPtrOutput) Elem() GitlabCredentialsHttpOutput {
	return o.ApplyT(func(v *GitlabCredentialsHttp) GitlabCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret GitlabCredentialsHttp
		return ret
	}).(GitlabCredentialsHttpOutput)
}

func (o GitlabCredentialsHttpPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o GitlabCredentialsHttpPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.TokenRef
	}).(pulumi.StringPtrOutput)
}

func (o GitlabCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o GitlabCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GitlabCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GitlabCredentialsSshInput is an input type that accepts GitlabCredentialsSshArgs and GitlabCredentialsSshOutput values.
// You can construct a concrete instance of `GitlabCredentialsSshInput` via:
//
//	GitlabCredentialsSshArgs{...}
type GitlabCredentialsSshInput interface {
	pulumi.Input

	ToGitlabCredentialsSshOutput() GitlabCredentialsSshOutput
	ToGitlabCredentialsSshOutputWithContext(context.Context) GitlabCredentialsSshOutput
}

type GitlabCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GitlabCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabCredentialsSsh)(nil)).Elem()
}

func (i GitlabCredentialsSshArgs) ToGitlabCredentialsSshOutput() GitlabCredentialsSshOutput {
	return i.ToGitlabCredentialsSshOutputWithContext(context.Background())
}

func (i GitlabCredentialsSshArgs) ToGitlabCredentialsSshOutputWithContext(ctx context.Context) GitlabCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsSshOutput)
}

func (i GitlabCredentialsSshArgs) ToGitlabCredentialsSshPtrOutput() GitlabCredentialsSshPtrOutput {
	return i.ToGitlabCredentialsSshPtrOutputWithContext(context.Background())
}

func (i GitlabCredentialsSshArgs) ToGitlabCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsSshOutput).ToGitlabCredentialsSshPtrOutputWithContext(ctx)
}

// GitlabCredentialsSshPtrInput is an input type that accepts GitlabCredentialsSshArgs, GitlabCredentialsSshPtr and GitlabCredentialsSshPtrOutput values.
// You can construct a concrete instance of `GitlabCredentialsSshPtrInput` via:
//
//	        GitlabCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type GitlabCredentialsSshPtrInput interface {
	pulumi.Input

	ToGitlabCredentialsSshPtrOutput() GitlabCredentialsSshPtrOutput
	ToGitlabCredentialsSshPtrOutputWithContext(context.Context) GitlabCredentialsSshPtrOutput
}

type gitlabCredentialsSshPtrType GitlabCredentialsSshArgs

func GitlabCredentialsSshPtr(v *GitlabCredentialsSshArgs) GitlabCredentialsSshPtrInput {
	return (*gitlabCredentialsSshPtrType)(v)
}

func (*gitlabCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabCredentialsSsh)(nil)).Elem()
}

func (i *gitlabCredentialsSshPtrType) ToGitlabCredentialsSshPtrOutput() GitlabCredentialsSshPtrOutput {
	return i.ToGitlabCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *gitlabCredentialsSshPtrType) ToGitlabCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabCredentialsSshPtrOutput)
}

type GitlabCredentialsSshOutput struct{ *pulumi.OutputState }

func (GitlabCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabCredentialsSsh)(nil)).Elem()
}

func (o GitlabCredentialsSshOutput) ToGitlabCredentialsSshOutput() GitlabCredentialsSshOutput {
	return o
}

func (o GitlabCredentialsSshOutput) ToGitlabCredentialsSshOutputWithContext(ctx context.Context) GitlabCredentialsSshOutput {
	return o
}

func (o GitlabCredentialsSshOutput) ToGitlabCredentialsSshPtrOutput() GitlabCredentialsSshPtrOutput {
	return o.ToGitlabCredentialsSshPtrOutputWithContext(context.Background())
}

func (o GitlabCredentialsSshOutput) ToGitlabCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabCredentialsSsh) *GitlabCredentialsSsh {
		return &v
	}).(GitlabCredentialsSshPtrOutput)
}

func (o GitlabCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitlabCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GitlabCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (GitlabCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabCredentialsSsh)(nil)).Elem()
}

func (o GitlabCredentialsSshPtrOutput) ToGitlabCredentialsSshPtrOutput() GitlabCredentialsSshPtrOutput {
	return o
}

func (o GitlabCredentialsSshPtrOutput) ToGitlabCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabCredentialsSshPtrOutput {
	return o
}

func (o GitlabCredentialsSshPtrOutput) Elem() GitlabCredentialsSshOutput {
	return o.ApplyT(func(v *GitlabCredentialsSsh) GitlabCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret GitlabCredentialsSsh
		return ret
	}).(GitlabCredentialsSshOutput)
}

func (o GitlabCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type HelmCredentials struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef *string `pulumi:"usernameRef"`
}

// HelmCredentialsInput is an input type that accepts HelmCredentialsArgs and HelmCredentialsOutput values.
// You can construct a concrete instance of `HelmCredentialsInput` via:
//
//	HelmCredentialsArgs{...}
type HelmCredentialsInput interface {
	pulumi.Input

	ToHelmCredentialsOutput() HelmCredentialsOutput
	ToHelmCredentialsOutputWithContext(context.Context) HelmCredentialsOutput
}

type HelmCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (HelmCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmCredentials)(nil)).Elem()
}

func (i HelmCredentialsArgs) ToHelmCredentialsOutput() HelmCredentialsOutput {
	return i.ToHelmCredentialsOutputWithContext(context.Background())
}

func (i HelmCredentialsArgs) ToHelmCredentialsOutputWithContext(ctx context.Context) HelmCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmCredentialsOutput)
}

func (i HelmCredentialsArgs) ToHelmCredentialsPtrOutput() HelmCredentialsPtrOutput {
	return i.ToHelmCredentialsPtrOutputWithContext(context.Background())
}

func (i HelmCredentialsArgs) ToHelmCredentialsPtrOutputWithContext(ctx context.Context) HelmCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmCredentialsOutput).ToHelmCredentialsPtrOutputWithContext(ctx)
}

// HelmCredentialsPtrInput is an input type that accepts HelmCredentialsArgs, HelmCredentialsPtr and HelmCredentialsPtrOutput values.
// You can construct a concrete instance of `HelmCredentialsPtrInput` via:
//
//	        HelmCredentialsArgs{...}
//
//	or:
//
//	        nil
type HelmCredentialsPtrInput interface {
	pulumi.Input

	ToHelmCredentialsPtrOutput() HelmCredentialsPtrOutput
	ToHelmCredentialsPtrOutputWithContext(context.Context) HelmCredentialsPtrOutput
}

type helmCredentialsPtrType HelmCredentialsArgs

func HelmCredentialsPtr(v *HelmCredentialsArgs) HelmCredentialsPtrInput {
	return (*helmCredentialsPtrType)(v)
}

func (*helmCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmCredentials)(nil)).Elem()
}

func (i *helmCredentialsPtrType) ToHelmCredentialsPtrOutput() HelmCredentialsPtrOutput {
	return i.ToHelmCredentialsPtrOutputWithContext(context.Background())
}

func (i *helmCredentialsPtrType) ToHelmCredentialsPtrOutputWithContext(ctx context.Context) HelmCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmCredentialsPtrOutput)
}

type HelmCredentialsOutput struct{ *pulumi.OutputState }

func (HelmCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmCredentials)(nil)).Elem()
}

func (o HelmCredentialsOutput) ToHelmCredentialsOutput() HelmCredentialsOutput {
	return o
}

func (o HelmCredentialsOutput) ToHelmCredentialsOutputWithContext(ctx context.Context) HelmCredentialsOutput {
	return o
}

func (o HelmCredentialsOutput) ToHelmCredentialsPtrOutput() HelmCredentialsPtrOutput {
	return o.ToHelmCredentialsPtrOutputWithContext(context.Background())
}

func (o HelmCredentialsOutput) ToHelmCredentialsPtrOutputWithContext(ctx context.Context) HelmCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmCredentials) *HelmCredentials {
		return &v
	}).(HelmCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o HelmCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v HelmCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o HelmCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o HelmCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type HelmCredentialsPtrOutput struct{ *pulumi.OutputState }

func (HelmCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmCredentials)(nil)).Elem()
}

func (o HelmCredentialsPtrOutput) ToHelmCredentialsPtrOutput() HelmCredentialsPtrOutput {
	return o
}

func (o HelmCredentialsPtrOutput) ToHelmCredentialsPtrOutputWithContext(ctx context.Context) HelmCredentialsPtrOutput {
	return o
}

func (o HelmCredentialsPtrOutput) Elem() HelmCredentialsOutput {
	return o.ApplyT(func(v *HelmCredentials) HelmCredentials {
		if v != nil {
			return *v
		}
		var ret HelmCredentials
		return ret
	}).(HelmCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o HelmCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o HelmCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o HelmCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesClientKeyCert struct {
	// Reference to the secret containing the CA certificate for the connector.
	CaCertRef *string `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector.
	ClientCertRef string `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm string `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector.
	ClientKeyPassphraseRef *string `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector.
	ClientKeyRef string `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
}

// KubernetesClientKeyCertInput is an input type that accepts KubernetesClientKeyCertArgs and KubernetesClientKeyCertOutput values.
// You can construct a concrete instance of `KubernetesClientKeyCertInput` via:
//
//	KubernetesClientKeyCertArgs{...}
type KubernetesClientKeyCertInput interface {
	pulumi.Input

	ToKubernetesClientKeyCertOutput() KubernetesClientKeyCertOutput
	ToKubernetesClientKeyCertOutputWithContext(context.Context) KubernetesClientKeyCertOutput
}

type KubernetesClientKeyCertArgs struct {
	// Reference to the secret containing the CA certificate for the connector.
	CaCertRef pulumi.StringPtrInput `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector.
	ClientCertRef pulumi.StringInput `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm pulumi.StringInput `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector.
	ClientKeyPassphraseRef pulumi.StringPtrInput `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector.
	ClientKeyRef pulumi.StringInput `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
}

func (KubernetesClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClientKeyCert)(nil)).Elem()
}

func (i KubernetesClientKeyCertArgs) ToKubernetesClientKeyCertOutput() KubernetesClientKeyCertOutput {
	return i.ToKubernetesClientKeyCertOutputWithContext(context.Background())
}

func (i KubernetesClientKeyCertArgs) ToKubernetesClientKeyCertOutputWithContext(ctx context.Context) KubernetesClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClientKeyCertOutput)
}

func (i KubernetesClientKeyCertArgs) ToKubernetesClientKeyCertPtrOutput() KubernetesClientKeyCertPtrOutput {
	return i.ToKubernetesClientKeyCertPtrOutputWithContext(context.Background())
}

func (i KubernetesClientKeyCertArgs) ToKubernetesClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClientKeyCertOutput).ToKubernetesClientKeyCertPtrOutputWithContext(ctx)
}

// KubernetesClientKeyCertPtrInput is an input type that accepts KubernetesClientKeyCertArgs, KubernetesClientKeyCertPtr and KubernetesClientKeyCertPtrOutput values.
// You can construct a concrete instance of `KubernetesClientKeyCertPtrInput` via:
//
//	        KubernetesClientKeyCertArgs{...}
//
//	or:
//
//	        nil
type KubernetesClientKeyCertPtrInput interface {
	pulumi.Input

	ToKubernetesClientKeyCertPtrOutput() KubernetesClientKeyCertPtrOutput
	ToKubernetesClientKeyCertPtrOutputWithContext(context.Context) KubernetesClientKeyCertPtrOutput
}

type kubernetesClientKeyCertPtrType KubernetesClientKeyCertArgs

func KubernetesClientKeyCertPtr(v *KubernetesClientKeyCertArgs) KubernetesClientKeyCertPtrInput {
	return (*kubernetesClientKeyCertPtrType)(v)
}

func (*kubernetesClientKeyCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClientKeyCert)(nil)).Elem()
}

func (i *kubernetesClientKeyCertPtrType) ToKubernetesClientKeyCertPtrOutput() KubernetesClientKeyCertPtrOutput {
	return i.ToKubernetesClientKeyCertPtrOutputWithContext(context.Background())
}

func (i *kubernetesClientKeyCertPtrType) ToKubernetesClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClientKeyCertPtrOutput)
}

type KubernetesClientKeyCertOutput struct{ *pulumi.OutputState }

func (KubernetesClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClientKeyCert)(nil)).Elem()
}

func (o KubernetesClientKeyCertOutput) ToKubernetesClientKeyCertOutput() KubernetesClientKeyCertOutput {
	return o
}

func (o KubernetesClientKeyCertOutput) ToKubernetesClientKeyCertOutputWithContext(ctx context.Context) KubernetesClientKeyCertOutput {
	return o
}

func (o KubernetesClientKeyCertOutput) ToKubernetesClientKeyCertPtrOutput() KubernetesClientKeyCertPtrOutput {
	return o.ToKubernetesClientKeyCertPtrOutputWithContext(context.Background())
}

func (o KubernetesClientKeyCertOutput) ToKubernetesClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesClientKeyCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClientKeyCert) *KubernetesClientKeyCert {
		return &v
	}).(KubernetesClientKeyCertPtrOutput)
}

// Reference to the secret containing the CA certificate for the connector.
func (o KubernetesClientKeyCertOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClientKeyCert) *string { return v.CaCertRef }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client certificate for the connector.
func (o KubernetesClientKeyCertOutput) ClientCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClientKeyCert) string { return v.ClientCertRef }).(pulumi.StringOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o KubernetesClientKeyCertOutput) ClientKeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClientKeyCert) string { return v.ClientKeyAlgorithm }).(pulumi.StringOutput)
}

// Reference to the secret containing the client key passphrase for the connector.
func (o KubernetesClientKeyCertOutput) ClientKeyPassphraseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClientKeyCert) *string { return v.ClientKeyPassphraseRef }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key for the connector.
func (o KubernetesClientKeyCertOutput) ClientKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClientKeyCert) string { return v.ClientKeyRef }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesClientKeyCertOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClientKeyCert) string { return v.MasterUrl }).(pulumi.StringOutput)
}

type KubernetesClientKeyCertPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClientKeyCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClientKeyCert)(nil)).Elem()
}

func (o KubernetesClientKeyCertPtrOutput) ToKubernetesClientKeyCertPtrOutput() KubernetesClientKeyCertPtrOutput {
	return o
}

func (o KubernetesClientKeyCertPtrOutput) ToKubernetesClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesClientKeyCertPtrOutput {
	return o
}

func (o KubernetesClientKeyCertPtrOutput) Elem() KubernetesClientKeyCertOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) KubernetesClientKeyCert {
		if v != nil {
			return *v
		}
		var ret KubernetesClientKeyCert
		return ret
	}).(KubernetesClientKeyCertOutput)
}

// Reference to the secret containing the CA certificate for the connector.
func (o KubernetesClientKeyCertPtrOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.CaCertRef
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client certificate for the connector.
func (o KubernetesClientKeyCertPtrOutput) ClientCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertRef
	}).(pulumi.StringPtrOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o KubernetesClientKeyCertPtrOutput) ClientKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key passphrase for the connector.
func (o KubernetesClientKeyCertPtrOutput) ClientKeyPassphraseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.ClientKeyPassphraseRef
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key for the connector.
func (o KubernetesClientKeyCertPtrOutput) ClientKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKeyRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesClientKeyCertPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

type KubernetesInheritFromDelegate struct {
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// KubernetesInheritFromDelegateInput is an input type that accepts KubernetesInheritFromDelegateArgs and KubernetesInheritFromDelegateOutput values.
// You can construct a concrete instance of `KubernetesInheritFromDelegateInput` via:
//
//	KubernetesInheritFromDelegateArgs{...}
type KubernetesInheritFromDelegateInput interface {
	pulumi.Input

	ToKubernetesInheritFromDelegateOutput() KubernetesInheritFromDelegateOutput
	ToKubernetesInheritFromDelegateOutputWithContext(context.Context) KubernetesInheritFromDelegateOutput
}

type KubernetesInheritFromDelegateArgs struct {
	// Selectors to use for the delegate.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (KubernetesInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesInheritFromDelegate)(nil)).Elem()
}

func (i KubernetesInheritFromDelegateArgs) ToKubernetesInheritFromDelegateOutput() KubernetesInheritFromDelegateOutput {
	return i.ToKubernetesInheritFromDelegateOutputWithContext(context.Background())
}

func (i KubernetesInheritFromDelegateArgs) ToKubernetesInheritFromDelegateOutputWithContext(ctx context.Context) KubernetesInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesInheritFromDelegateOutput)
}

func (i KubernetesInheritFromDelegateArgs) ToKubernetesInheritFromDelegatePtrOutput() KubernetesInheritFromDelegatePtrOutput {
	return i.ToKubernetesInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i KubernetesInheritFromDelegateArgs) ToKubernetesInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesInheritFromDelegateOutput).ToKubernetesInheritFromDelegatePtrOutputWithContext(ctx)
}

// KubernetesInheritFromDelegatePtrInput is an input type that accepts KubernetesInheritFromDelegateArgs, KubernetesInheritFromDelegatePtr and KubernetesInheritFromDelegatePtrOutput values.
// You can construct a concrete instance of `KubernetesInheritFromDelegatePtrInput` via:
//
//	        KubernetesInheritFromDelegateArgs{...}
//
//	or:
//
//	        nil
type KubernetesInheritFromDelegatePtrInput interface {
	pulumi.Input

	ToKubernetesInheritFromDelegatePtrOutput() KubernetesInheritFromDelegatePtrOutput
	ToKubernetesInheritFromDelegatePtrOutputWithContext(context.Context) KubernetesInheritFromDelegatePtrOutput
}

type kubernetesInheritFromDelegatePtrType KubernetesInheritFromDelegateArgs

func KubernetesInheritFromDelegatePtr(v *KubernetesInheritFromDelegateArgs) KubernetesInheritFromDelegatePtrInput {
	return (*kubernetesInheritFromDelegatePtrType)(v)
}

func (*kubernetesInheritFromDelegatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesInheritFromDelegate)(nil)).Elem()
}

func (i *kubernetesInheritFromDelegatePtrType) ToKubernetesInheritFromDelegatePtrOutput() KubernetesInheritFromDelegatePtrOutput {
	return i.ToKubernetesInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i *kubernetesInheritFromDelegatePtrType) ToKubernetesInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesInheritFromDelegatePtrOutput)
}

type KubernetesInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (KubernetesInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesInheritFromDelegate)(nil)).Elem()
}

func (o KubernetesInheritFromDelegateOutput) ToKubernetesInheritFromDelegateOutput() KubernetesInheritFromDelegateOutput {
	return o
}

func (o KubernetesInheritFromDelegateOutput) ToKubernetesInheritFromDelegateOutputWithContext(ctx context.Context) KubernetesInheritFromDelegateOutput {
	return o
}

func (o KubernetesInheritFromDelegateOutput) ToKubernetesInheritFromDelegatePtrOutput() KubernetesInheritFromDelegatePtrOutput {
	return o.ToKubernetesInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (o KubernetesInheritFromDelegateOutput) ToKubernetesInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesInheritFromDelegatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesInheritFromDelegate) *KubernetesInheritFromDelegate {
		return &v
	}).(KubernetesInheritFromDelegatePtrOutput)
}

// Selectors to use for the delegate.
func (o KubernetesInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type KubernetesInheritFromDelegatePtrOutput struct{ *pulumi.OutputState }

func (KubernetesInheritFromDelegatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesInheritFromDelegate)(nil)).Elem()
}

func (o KubernetesInheritFromDelegatePtrOutput) ToKubernetesInheritFromDelegatePtrOutput() KubernetesInheritFromDelegatePtrOutput {
	return o
}

func (o KubernetesInheritFromDelegatePtrOutput) ToKubernetesInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesInheritFromDelegatePtrOutput {
	return o
}

func (o KubernetesInheritFromDelegatePtrOutput) Elem() KubernetesInheritFromDelegateOutput {
	return o.ApplyT(func(v *KubernetesInheritFromDelegate) KubernetesInheritFromDelegate {
		if v != nil {
			return *v
		}
		var ret KubernetesInheritFromDelegate
		return ret
	}).(KubernetesInheritFromDelegateOutput)
}

// Selectors to use for the delegate.
func (o KubernetesInheritFromDelegatePtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesInheritFromDelegate) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type KubernetesOpenidConnect struct {
	// Reference to the secret containing the client ID for the connector.
	ClientIdRef string `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector.
	PasswordRef string `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes []string `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector.
	SecretRef *string `pulumi:"secretRef"`
	// Username for the connector.
	Username *string `pulumi:"username"`
	// Reference to the secret containing the username for the connector.
	UsernameRef *string `pulumi:"usernameRef"`
}

// KubernetesOpenidConnectInput is an input type that accepts KubernetesOpenidConnectArgs and KubernetesOpenidConnectOutput values.
// You can construct a concrete instance of `KubernetesOpenidConnectInput` via:
//
//	KubernetesOpenidConnectArgs{...}
type KubernetesOpenidConnectInput interface {
	pulumi.Input

	ToKubernetesOpenidConnectOutput() KubernetesOpenidConnectOutput
	ToKubernetesOpenidConnectOutputWithContext(context.Context) KubernetesOpenidConnectOutput
}

type KubernetesOpenidConnectArgs struct {
	// Reference to the secret containing the client ID for the connector.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Username for the connector.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (KubernetesOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesOpenidConnect)(nil)).Elem()
}

func (i KubernetesOpenidConnectArgs) ToKubernetesOpenidConnectOutput() KubernetesOpenidConnectOutput {
	return i.ToKubernetesOpenidConnectOutputWithContext(context.Background())
}

func (i KubernetesOpenidConnectArgs) ToKubernetesOpenidConnectOutputWithContext(ctx context.Context) KubernetesOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesOpenidConnectOutput)
}

func (i KubernetesOpenidConnectArgs) ToKubernetesOpenidConnectPtrOutput() KubernetesOpenidConnectPtrOutput {
	return i.ToKubernetesOpenidConnectPtrOutputWithContext(context.Background())
}

func (i KubernetesOpenidConnectArgs) ToKubernetesOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesOpenidConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesOpenidConnectOutput).ToKubernetesOpenidConnectPtrOutputWithContext(ctx)
}

// KubernetesOpenidConnectPtrInput is an input type that accepts KubernetesOpenidConnectArgs, KubernetesOpenidConnectPtr and KubernetesOpenidConnectPtrOutput values.
// You can construct a concrete instance of `KubernetesOpenidConnectPtrInput` via:
//
//	        KubernetesOpenidConnectArgs{...}
//
//	or:
//
//	        nil
type KubernetesOpenidConnectPtrInput interface {
	pulumi.Input

	ToKubernetesOpenidConnectPtrOutput() KubernetesOpenidConnectPtrOutput
	ToKubernetesOpenidConnectPtrOutputWithContext(context.Context) KubernetesOpenidConnectPtrOutput
}

type kubernetesOpenidConnectPtrType KubernetesOpenidConnectArgs

func KubernetesOpenidConnectPtr(v *KubernetesOpenidConnectArgs) KubernetesOpenidConnectPtrInput {
	return (*kubernetesOpenidConnectPtrType)(v)
}

func (*kubernetesOpenidConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesOpenidConnect)(nil)).Elem()
}

func (i *kubernetesOpenidConnectPtrType) ToKubernetesOpenidConnectPtrOutput() KubernetesOpenidConnectPtrOutput {
	return i.ToKubernetesOpenidConnectPtrOutputWithContext(context.Background())
}

func (i *kubernetesOpenidConnectPtrType) ToKubernetesOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesOpenidConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesOpenidConnectPtrOutput)
}

type KubernetesOpenidConnectOutput struct{ *pulumi.OutputState }

func (KubernetesOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesOpenidConnect)(nil)).Elem()
}

func (o KubernetesOpenidConnectOutput) ToKubernetesOpenidConnectOutput() KubernetesOpenidConnectOutput {
	return o
}

func (o KubernetesOpenidConnectOutput) ToKubernetesOpenidConnectOutputWithContext(ctx context.Context) KubernetesOpenidConnectOutput {
	return o
}

func (o KubernetesOpenidConnectOutput) ToKubernetesOpenidConnectPtrOutput() KubernetesOpenidConnectPtrOutput {
	return o.ToKubernetesOpenidConnectPtrOutputWithContext(context.Background())
}

func (o KubernetesOpenidConnectOutput) ToKubernetesOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesOpenidConnectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesOpenidConnect) *KubernetesOpenidConnect {
		return &v
	}).(KubernetesOpenidConnectPtrOutput)
}

// Reference to the secret containing the client ID for the connector.
func (o KubernetesOpenidConnectOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// The URL of the OpenID Connect issuer.
func (o KubernetesOpenidConnectOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesOpenidConnectOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector.
func (o KubernetesOpenidConnectOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Scopes to request for the connector.
func (o KubernetesOpenidConnectOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector.
func (o KubernetesOpenidConnectOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesOpenidConnectOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector.
func (o KubernetesOpenidConnectOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesOpenidConnect) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type KubernetesOpenidConnectPtrOutput struct{ *pulumi.OutputState }

func (KubernetesOpenidConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesOpenidConnect)(nil)).Elem()
}

func (o KubernetesOpenidConnectPtrOutput) ToKubernetesOpenidConnectPtrOutput() KubernetesOpenidConnectPtrOutput {
	return o
}

func (o KubernetesOpenidConnectPtrOutput) ToKubernetesOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesOpenidConnectPtrOutput {
	return o
}

func (o KubernetesOpenidConnectPtrOutput) Elem() KubernetesOpenidConnectOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) KubernetesOpenidConnect {
		if v != nil {
			return *v
		}
		var ret KubernetesOpenidConnect
		return ret
	}).(KubernetesOpenidConnectOutput)
}

// Reference to the secret containing the client ID for the connector.
func (o KubernetesOpenidConnectPtrOutput) ClientIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.ClientIdRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the OpenID Connect issuer.
func (o KubernetesOpenidConnectPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesOpenidConnectPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the password for the connector.
func (o KubernetesOpenidConnectPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Scopes to request for the connector.
func (o KubernetesOpenidConnectPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector.
func (o KubernetesOpenidConnectPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesOpenidConnectPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector.
func (o KubernetesOpenidConnectPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesServiceAccount struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector.
	ServiceAccountTokenRef string `pulumi:"serviceAccountTokenRef"`
}

// KubernetesServiceAccountInput is an input type that accepts KubernetesServiceAccountArgs and KubernetesServiceAccountOutput values.
// You can construct a concrete instance of `KubernetesServiceAccountInput` via:
//
//	KubernetesServiceAccountArgs{...}
type KubernetesServiceAccountInput interface {
	pulumi.Input

	ToKubernetesServiceAccountOutput() KubernetesServiceAccountOutput
	ToKubernetesServiceAccountOutputWithContext(context.Context) KubernetesServiceAccountOutput
}

type KubernetesServiceAccountArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector.
	ServiceAccountTokenRef pulumi.StringInput `pulumi:"serviceAccountTokenRef"`
}

func (KubernetesServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceAccount)(nil)).Elem()
}

func (i KubernetesServiceAccountArgs) ToKubernetesServiceAccountOutput() KubernetesServiceAccountOutput {
	return i.ToKubernetesServiceAccountOutputWithContext(context.Background())
}

func (i KubernetesServiceAccountArgs) ToKubernetesServiceAccountOutputWithContext(ctx context.Context) KubernetesServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceAccountOutput)
}

func (i KubernetesServiceAccountArgs) ToKubernetesServiceAccountPtrOutput() KubernetesServiceAccountPtrOutput {
	return i.ToKubernetesServiceAccountPtrOutputWithContext(context.Background())
}

func (i KubernetesServiceAccountArgs) ToKubernetesServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceAccountOutput).ToKubernetesServiceAccountPtrOutputWithContext(ctx)
}

// KubernetesServiceAccountPtrInput is an input type that accepts KubernetesServiceAccountArgs, KubernetesServiceAccountPtr and KubernetesServiceAccountPtrOutput values.
// You can construct a concrete instance of `KubernetesServiceAccountPtrInput` via:
//
//	        KubernetesServiceAccountArgs{...}
//
//	or:
//
//	        nil
type KubernetesServiceAccountPtrInput interface {
	pulumi.Input

	ToKubernetesServiceAccountPtrOutput() KubernetesServiceAccountPtrOutput
	ToKubernetesServiceAccountPtrOutputWithContext(context.Context) KubernetesServiceAccountPtrOutput
}

type kubernetesServiceAccountPtrType KubernetesServiceAccountArgs

func KubernetesServiceAccountPtr(v *KubernetesServiceAccountArgs) KubernetesServiceAccountPtrInput {
	return (*kubernetesServiceAccountPtrType)(v)
}

func (*kubernetesServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesServiceAccount)(nil)).Elem()
}

func (i *kubernetesServiceAccountPtrType) ToKubernetesServiceAccountPtrOutput() KubernetesServiceAccountPtrOutput {
	return i.ToKubernetesServiceAccountPtrOutputWithContext(context.Background())
}

func (i *kubernetesServiceAccountPtrType) ToKubernetesServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceAccountPtrOutput)
}

type KubernetesServiceAccountOutput struct{ *pulumi.OutputState }

func (KubernetesServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceAccount)(nil)).Elem()
}

func (o KubernetesServiceAccountOutput) ToKubernetesServiceAccountOutput() KubernetesServiceAccountOutput {
	return o
}

func (o KubernetesServiceAccountOutput) ToKubernetesServiceAccountOutputWithContext(ctx context.Context) KubernetesServiceAccountOutput {
	return o
}

func (o KubernetesServiceAccountOutput) ToKubernetesServiceAccountPtrOutput() KubernetesServiceAccountPtrOutput {
	return o.ToKubernetesServiceAccountPtrOutputWithContext(context.Background())
}

func (o KubernetesServiceAccountOutput) ToKubernetesServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesServiceAccount) *KubernetesServiceAccount {
		return &v
	}).(KubernetesServiceAccountPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesServiceAccountOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesServiceAccount) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the service account token for the connector.
func (o KubernetesServiceAccountOutput) ServiceAccountTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesServiceAccount) string { return v.ServiceAccountTokenRef }).(pulumi.StringOutput)
}

type KubernetesServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (KubernetesServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesServiceAccount)(nil)).Elem()
}

func (o KubernetesServiceAccountPtrOutput) ToKubernetesServiceAccountPtrOutput() KubernetesServiceAccountPtrOutput {
	return o
}

func (o KubernetesServiceAccountPtrOutput) ToKubernetesServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesServiceAccountPtrOutput {
	return o
}

func (o KubernetesServiceAccountPtrOutput) Elem() KubernetesServiceAccountOutput {
	return o.ApplyT(func(v *KubernetesServiceAccount) KubernetesServiceAccount {
		if v != nil {
			return *v
		}
		var ret KubernetesServiceAccount
		return ret
	}).(KubernetesServiceAccountOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesServiceAccountPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the service account token for the connector.
func (o KubernetesServiceAccountPtrOutput) ServiceAccountTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountTokenRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesUsernamePassword struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector.
	PasswordRef string `pulumi:"passwordRef"`
	// Username for the connector.
	Username *string `pulumi:"username"`
	// Reference to the secret containing the username for the connector.
	UsernameRef *string `pulumi:"usernameRef"`
}

// KubernetesUsernamePasswordInput is an input type that accepts KubernetesUsernamePasswordArgs and KubernetesUsernamePasswordOutput values.
// You can construct a concrete instance of `KubernetesUsernamePasswordInput` via:
//
//	KubernetesUsernamePasswordArgs{...}
type KubernetesUsernamePasswordInput interface {
	pulumi.Input

	ToKubernetesUsernamePasswordOutput() KubernetesUsernamePasswordOutput
	ToKubernetesUsernamePasswordOutputWithContext(context.Context) KubernetesUsernamePasswordOutput
}

type KubernetesUsernamePasswordArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username for the connector.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (KubernetesUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesUsernamePassword)(nil)).Elem()
}

func (i KubernetesUsernamePasswordArgs) ToKubernetesUsernamePasswordOutput() KubernetesUsernamePasswordOutput {
	return i.ToKubernetesUsernamePasswordOutputWithContext(context.Background())
}

func (i KubernetesUsernamePasswordArgs) ToKubernetesUsernamePasswordOutputWithContext(ctx context.Context) KubernetesUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesUsernamePasswordOutput)
}

func (i KubernetesUsernamePasswordArgs) ToKubernetesUsernamePasswordPtrOutput() KubernetesUsernamePasswordPtrOutput {
	return i.ToKubernetesUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i KubernetesUsernamePasswordArgs) ToKubernetesUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesUsernamePasswordOutput).ToKubernetesUsernamePasswordPtrOutputWithContext(ctx)
}

// KubernetesUsernamePasswordPtrInput is an input type that accepts KubernetesUsernamePasswordArgs, KubernetesUsernamePasswordPtr and KubernetesUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `KubernetesUsernamePasswordPtrInput` via:
//
//	        KubernetesUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type KubernetesUsernamePasswordPtrInput interface {
	pulumi.Input

	ToKubernetesUsernamePasswordPtrOutput() KubernetesUsernamePasswordPtrOutput
	ToKubernetesUsernamePasswordPtrOutputWithContext(context.Context) KubernetesUsernamePasswordPtrOutput
}

type kubernetesUsernamePasswordPtrType KubernetesUsernamePasswordArgs

func KubernetesUsernamePasswordPtr(v *KubernetesUsernamePasswordArgs) KubernetesUsernamePasswordPtrInput {
	return (*kubernetesUsernamePasswordPtrType)(v)
}

func (*kubernetesUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesUsernamePassword)(nil)).Elem()
}

func (i *kubernetesUsernamePasswordPtrType) ToKubernetesUsernamePasswordPtrOutput() KubernetesUsernamePasswordPtrOutput {
	return i.ToKubernetesUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *kubernetesUsernamePasswordPtrType) ToKubernetesUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesUsernamePasswordPtrOutput)
}

type KubernetesUsernamePasswordOutput struct{ *pulumi.OutputState }

func (KubernetesUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesUsernamePassword)(nil)).Elem()
}

func (o KubernetesUsernamePasswordOutput) ToKubernetesUsernamePasswordOutput() KubernetesUsernamePasswordOutput {
	return o
}

func (o KubernetesUsernamePasswordOutput) ToKubernetesUsernamePasswordOutputWithContext(ctx context.Context) KubernetesUsernamePasswordOutput {
	return o
}

func (o KubernetesUsernamePasswordOutput) ToKubernetesUsernamePasswordPtrOutput() KubernetesUsernamePasswordPtrOutput {
	return o.ToKubernetesUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o KubernetesUsernamePasswordOutput) ToKubernetesUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesUsernamePassword) *KubernetesUsernamePassword {
		return &v
	}).(KubernetesUsernamePasswordPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesUsernamePasswordOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesUsernamePassword) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector.
func (o KubernetesUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username for the connector.
func (o KubernetesUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector.
func (o KubernetesUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type KubernetesUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (KubernetesUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesUsernamePassword)(nil)).Elem()
}

func (o KubernetesUsernamePasswordPtrOutput) ToKubernetesUsernamePasswordPtrOutput() KubernetesUsernamePasswordPtrOutput {
	return o
}

func (o KubernetesUsernamePasswordPtrOutput) ToKubernetesUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesUsernamePasswordPtrOutput {
	return o
}

func (o KubernetesUsernamePasswordPtrOutput) Elem() KubernetesUsernamePasswordOutput {
	return o.ApplyT(func(v *KubernetesUsernamePassword) KubernetesUsernamePassword {
		if v != nil {
			return *v
		}
		var ret KubernetesUsernamePassword
		return ret
	}).(KubernetesUsernamePasswordOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesUsernamePasswordPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the password for the connector.
func (o KubernetesUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector.
func (o KubernetesUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type NexusCredentials struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef *string `pulumi:"usernameRef"`
}

// NexusCredentialsInput is an input type that accepts NexusCredentialsArgs and NexusCredentialsOutput values.
// You can construct a concrete instance of `NexusCredentialsInput` via:
//
//	NexusCredentialsArgs{...}
type NexusCredentialsInput interface {
	pulumi.Input

	ToNexusCredentialsOutput() NexusCredentialsOutput
	ToNexusCredentialsOutputWithContext(context.Context) NexusCredentialsOutput
}

type NexusCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (NexusCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NexusCredentials)(nil)).Elem()
}

func (i NexusCredentialsArgs) ToNexusCredentialsOutput() NexusCredentialsOutput {
	return i.ToNexusCredentialsOutputWithContext(context.Background())
}

func (i NexusCredentialsArgs) ToNexusCredentialsOutputWithContext(ctx context.Context) NexusCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusCredentialsOutput)
}

func (i NexusCredentialsArgs) ToNexusCredentialsPtrOutput() NexusCredentialsPtrOutput {
	return i.ToNexusCredentialsPtrOutputWithContext(context.Background())
}

func (i NexusCredentialsArgs) ToNexusCredentialsPtrOutputWithContext(ctx context.Context) NexusCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusCredentialsOutput).ToNexusCredentialsPtrOutputWithContext(ctx)
}

// NexusCredentialsPtrInput is an input type that accepts NexusCredentialsArgs, NexusCredentialsPtr and NexusCredentialsPtrOutput values.
// You can construct a concrete instance of `NexusCredentialsPtrInput` via:
//
//	        NexusCredentialsArgs{...}
//
//	or:
//
//	        nil
type NexusCredentialsPtrInput interface {
	pulumi.Input

	ToNexusCredentialsPtrOutput() NexusCredentialsPtrOutput
	ToNexusCredentialsPtrOutputWithContext(context.Context) NexusCredentialsPtrOutput
}

type nexusCredentialsPtrType NexusCredentialsArgs

func NexusCredentialsPtr(v *NexusCredentialsArgs) NexusCredentialsPtrInput {
	return (*nexusCredentialsPtrType)(v)
}

func (*nexusCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusCredentials)(nil)).Elem()
}

func (i *nexusCredentialsPtrType) ToNexusCredentialsPtrOutput() NexusCredentialsPtrOutput {
	return i.ToNexusCredentialsPtrOutputWithContext(context.Background())
}

func (i *nexusCredentialsPtrType) ToNexusCredentialsPtrOutputWithContext(ctx context.Context) NexusCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusCredentialsPtrOutput)
}

type NexusCredentialsOutput struct{ *pulumi.OutputState }

func (NexusCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NexusCredentials)(nil)).Elem()
}

func (o NexusCredentialsOutput) ToNexusCredentialsOutput() NexusCredentialsOutput {
	return o
}

func (o NexusCredentialsOutput) ToNexusCredentialsOutputWithContext(ctx context.Context) NexusCredentialsOutput {
	return o
}

func (o NexusCredentialsOutput) ToNexusCredentialsPtrOutput() NexusCredentialsPtrOutput {
	return o.ToNexusCredentialsPtrOutputWithContext(context.Background())
}

func (o NexusCredentialsOutput) ToNexusCredentialsPtrOutputWithContext(ctx context.Context) NexusCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NexusCredentials) *NexusCredentials {
		return &v
	}).(NexusCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o NexusCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v NexusCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o NexusCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NexusCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o NexusCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NexusCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type NexusCredentialsPtrOutput struct{ *pulumi.OutputState }

func (NexusCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusCredentials)(nil)).Elem()
}

func (o NexusCredentialsPtrOutput) ToNexusCredentialsPtrOutput() NexusCredentialsPtrOutput {
	return o
}

func (o NexusCredentialsPtrOutput) ToNexusCredentialsPtrOutputWithContext(ctx context.Context) NexusCredentialsPtrOutput {
	return o
}

func (o NexusCredentialsPtrOutput) Elem() NexusCredentialsOutput {
	return o.ApplyT(func(v *NexusCredentials) NexusCredentials {
		if v != nil {
			return *v
		}
		var ret NexusCredentials
		return ret
	}).(NexusCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o NexusCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o NexusCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication.
func (o NexusCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GetAppDynamicsApiToken struct {
	ClientId        string `pulumi:"clientId"`
	ClientSecretRef string `pulumi:"clientSecretRef"`
}

// GetAppDynamicsApiTokenInput is an input type that accepts GetAppDynamicsApiTokenArgs and GetAppDynamicsApiTokenOutput values.
// You can construct a concrete instance of `GetAppDynamicsApiTokenInput` via:
//
//	GetAppDynamicsApiTokenArgs{...}
type GetAppDynamicsApiTokenInput interface {
	pulumi.Input

	ToGetAppDynamicsApiTokenOutput() GetAppDynamicsApiTokenOutput
	ToGetAppDynamicsApiTokenOutputWithContext(context.Context) GetAppDynamicsApiTokenOutput
}

type GetAppDynamicsApiTokenArgs struct {
	ClientId        pulumi.StringInput `pulumi:"clientId"`
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
}

func (GetAppDynamicsApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsApiToken)(nil)).Elem()
}

func (i GetAppDynamicsApiTokenArgs) ToGetAppDynamicsApiTokenOutput() GetAppDynamicsApiTokenOutput {
	return i.ToGetAppDynamicsApiTokenOutputWithContext(context.Background())
}

func (i GetAppDynamicsApiTokenArgs) ToGetAppDynamicsApiTokenOutputWithContext(ctx context.Context) GetAppDynamicsApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsApiTokenOutput)
}

// GetAppDynamicsApiTokenArrayInput is an input type that accepts GetAppDynamicsApiTokenArray and GetAppDynamicsApiTokenArrayOutput values.
// You can construct a concrete instance of `GetAppDynamicsApiTokenArrayInput` via:
//
//	GetAppDynamicsApiTokenArray{ GetAppDynamicsApiTokenArgs{...} }
type GetAppDynamicsApiTokenArrayInput interface {
	pulumi.Input

	ToGetAppDynamicsApiTokenArrayOutput() GetAppDynamicsApiTokenArrayOutput
	ToGetAppDynamicsApiTokenArrayOutputWithContext(context.Context) GetAppDynamicsApiTokenArrayOutput
}

type GetAppDynamicsApiTokenArray []GetAppDynamicsApiTokenInput

func (GetAppDynamicsApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsApiToken)(nil)).Elem()
}

func (i GetAppDynamicsApiTokenArray) ToGetAppDynamicsApiTokenArrayOutput() GetAppDynamicsApiTokenArrayOutput {
	return i.ToGetAppDynamicsApiTokenArrayOutputWithContext(context.Background())
}

func (i GetAppDynamicsApiTokenArray) ToGetAppDynamicsApiTokenArrayOutputWithContext(ctx context.Context) GetAppDynamicsApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsApiTokenArrayOutput)
}

type GetAppDynamicsApiTokenOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsApiToken)(nil)).Elem()
}

func (o GetAppDynamicsApiTokenOutput) ToGetAppDynamicsApiTokenOutput() GetAppDynamicsApiTokenOutput {
	return o
}

func (o GetAppDynamicsApiTokenOutput) ToGetAppDynamicsApiTokenOutputWithContext(ctx context.Context) GetAppDynamicsApiTokenOutput {
	return o
}

func (o GetAppDynamicsApiTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsApiToken) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetAppDynamicsApiTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsApiToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

type GetAppDynamicsApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsApiToken)(nil)).Elem()
}

func (o GetAppDynamicsApiTokenArrayOutput) ToGetAppDynamicsApiTokenArrayOutput() GetAppDynamicsApiTokenArrayOutput {
	return o
}

func (o GetAppDynamicsApiTokenArrayOutput) ToGetAppDynamicsApiTokenArrayOutputWithContext(ctx context.Context) GetAppDynamicsApiTokenArrayOutput {
	return o
}

func (o GetAppDynamicsApiTokenArrayOutput) Index(i pulumi.IntInput) GetAppDynamicsApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDynamicsApiToken {
		return vs[0].([]GetAppDynamicsApiToken)[vs[1].(int)]
	}).(GetAppDynamicsApiTokenOutput)
}

type GetAppDynamicsUsernamePassword struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
}

// GetAppDynamicsUsernamePasswordInput is an input type that accepts GetAppDynamicsUsernamePasswordArgs and GetAppDynamicsUsernamePasswordOutput values.
// You can construct a concrete instance of `GetAppDynamicsUsernamePasswordInput` via:
//
//	GetAppDynamicsUsernamePasswordArgs{...}
type GetAppDynamicsUsernamePasswordInput interface {
	pulumi.Input

	ToGetAppDynamicsUsernamePasswordOutput() GetAppDynamicsUsernamePasswordOutput
	ToGetAppDynamicsUsernamePasswordOutputWithContext(context.Context) GetAppDynamicsUsernamePasswordOutput
}

type GetAppDynamicsUsernamePasswordArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (GetAppDynamicsUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsUsernamePassword)(nil)).Elem()
}

func (i GetAppDynamicsUsernamePasswordArgs) ToGetAppDynamicsUsernamePasswordOutput() GetAppDynamicsUsernamePasswordOutput {
	return i.ToGetAppDynamicsUsernamePasswordOutputWithContext(context.Background())
}

func (i GetAppDynamicsUsernamePasswordArgs) ToGetAppDynamicsUsernamePasswordOutputWithContext(ctx context.Context) GetAppDynamicsUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsUsernamePasswordOutput)
}

// GetAppDynamicsUsernamePasswordArrayInput is an input type that accepts GetAppDynamicsUsernamePasswordArray and GetAppDynamicsUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetAppDynamicsUsernamePasswordArrayInput` via:
//
//	GetAppDynamicsUsernamePasswordArray{ GetAppDynamicsUsernamePasswordArgs{...} }
type GetAppDynamicsUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetAppDynamicsUsernamePasswordArrayOutput() GetAppDynamicsUsernamePasswordArrayOutput
	ToGetAppDynamicsUsernamePasswordArrayOutputWithContext(context.Context) GetAppDynamicsUsernamePasswordArrayOutput
}

type GetAppDynamicsUsernamePasswordArray []GetAppDynamicsUsernamePasswordInput

func (GetAppDynamicsUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsUsernamePassword)(nil)).Elem()
}

func (i GetAppDynamicsUsernamePasswordArray) ToGetAppDynamicsUsernamePasswordArrayOutput() GetAppDynamicsUsernamePasswordArrayOutput {
	return i.ToGetAppDynamicsUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetAppDynamicsUsernamePasswordArray) ToGetAppDynamicsUsernamePasswordArrayOutputWithContext(ctx context.Context) GetAppDynamicsUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsUsernamePasswordArrayOutput)
}

type GetAppDynamicsUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsUsernamePassword)(nil)).Elem()
}

func (o GetAppDynamicsUsernamePasswordOutput) ToGetAppDynamicsUsernamePasswordOutput() GetAppDynamicsUsernamePasswordOutput {
	return o
}

func (o GetAppDynamicsUsernamePasswordOutput) ToGetAppDynamicsUsernamePasswordOutputWithContext(ctx context.Context) GetAppDynamicsUsernamePasswordOutput {
	return o
}

func (o GetAppDynamicsUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetAppDynamicsUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

type GetAppDynamicsUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsUsernamePassword)(nil)).Elem()
}

func (o GetAppDynamicsUsernamePasswordArrayOutput) ToGetAppDynamicsUsernamePasswordArrayOutput() GetAppDynamicsUsernamePasswordArrayOutput {
	return o
}

func (o GetAppDynamicsUsernamePasswordArrayOutput) ToGetAppDynamicsUsernamePasswordArrayOutputWithContext(ctx context.Context) GetAppDynamicsUsernamePasswordArrayOutput {
	return o
}

func (o GetAppDynamicsUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetAppDynamicsUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDynamicsUsernamePassword {
		return vs[0].([]GetAppDynamicsUsernamePassword)[vs[1].(int)]
	}).(GetAppDynamicsUsernamePasswordOutput)
}

type GetArtifactoryCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetArtifactoryCredentialInput is an input type that accepts GetArtifactoryCredentialArgs and GetArtifactoryCredentialOutput values.
// You can construct a concrete instance of `GetArtifactoryCredentialInput` via:
//
//	GetArtifactoryCredentialArgs{...}
type GetArtifactoryCredentialInput interface {
	pulumi.Input

	ToGetArtifactoryCredentialOutput() GetArtifactoryCredentialOutput
	ToGetArtifactoryCredentialOutputWithContext(context.Context) GetArtifactoryCredentialOutput
}

type GetArtifactoryCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetArtifactoryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArtifactoryCredential)(nil)).Elem()
}

func (i GetArtifactoryCredentialArgs) ToGetArtifactoryCredentialOutput() GetArtifactoryCredentialOutput {
	return i.ToGetArtifactoryCredentialOutputWithContext(context.Background())
}

func (i GetArtifactoryCredentialArgs) ToGetArtifactoryCredentialOutputWithContext(ctx context.Context) GetArtifactoryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArtifactoryCredentialOutput)
}

// GetArtifactoryCredentialArrayInput is an input type that accepts GetArtifactoryCredentialArray and GetArtifactoryCredentialArrayOutput values.
// You can construct a concrete instance of `GetArtifactoryCredentialArrayInput` via:
//
//	GetArtifactoryCredentialArray{ GetArtifactoryCredentialArgs{...} }
type GetArtifactoryCredentialArrayInput interface {
	pulumi.Input

	ToGetArtifactoryCredentialArrayOutput() GetArtifactoryCredentialArrayOutput
	ToGetArtifactoryCredentialArrayOutputWithContext(context.Context) GetArtifactoryCredentialArrayOutput
}

type GetArtifactoryCredentialArray []GetArtifactoryCredentialInput

func (GetArtifactoryCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArtifactoryCredential)(nil)).Elem()
}

func (i GetArtifactoryCredentialArray) ToGetArtifactoryCredentialArrayOutput() GetArtifactoryCredentialArrayOutput {
	return i.ToGetArtifactoryCredentialArrayOutputWithContext(context.Background())
}

func (i GetArtifactoryCredentialArray) ToGetArtifactoryCredentialArrayOutputWithContext(ctx context.Context) GetArtifactoryCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArtifactoryCredentialArrayOutput)
}

type GetArtifactoryCredentialOutput struct{ *pulumi.OutputState }

func (GetArtifactoryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArtifactoryCredential)(nil)).Elem()
}

func (o GetArtifactoryCredentialOutput) ToGetArtifactoryCredentialOutput() GetArtifactoryCredentialOutput {
	return o
}

func (o GetArtifactoryCredentialOutput) ToGetArtifactoryCredentialOutputWithContext(ctx context.Context) GetArtifactoryCredentialOutput {
	return o
}

func (o GetArtifactoryCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetArtifactoryCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetArtifactoryCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetArtifactoryCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetArtifactoryCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArtifactoryCredential)(nil)).Elem()
}

func (o GetArtifactoryCredentialArrayOutput) ToGetArtifactoryCredentialArrayOutput() GetArtifactoryCredentialArrayOutput {
	return o
}

func (o GetArtifactoryCredentialArrayOutput) ToGetArtifactoryCredentialArrayOutputWithContext(ctx context.Context) GetArtifactoryCredentialArrayOutput {
	return o
}

func (o GetArtifactoryCredentialArrayOutput) Index(i pulumi.IntInput) GetArtifactoryCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetArtifactoryCredential {
		return vs[0].([]GetArtifactoryCredential)[vs[1].(int)]
	}).(GetArtifactoryCredentialOutput)
}

type GetAwsCCCrossAccountAccess struct {
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsCCCrossAccountAccessInput is an input type that accepts GetAwsCCCrossAccountAccessArgs and GetAwsCCCrossAccountAccessOutput values.
// You can construct a concrete instance of `GetAwsCCCrossAccountAccessInput` via:
//
//	GetAwsCCCrossAccountAccessArgs{...}
type GetAwsCCCrossAccountAccessInput interface {
	pulumi.Input

	ToGetAwsCCCrossAccountAccessOutput() GetAwsCCCrossAccountAccessOutput
	ToGetAwsCCCrossAccountAccessOutputWithContext(context.Context) GetAwsCCCrossAccountAccessOutput
}

type GetAwsCCCrossAccountAccessArgs struct {
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsCCCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCCCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCCCrossAccountAccessArgs) ToGetAwsCCCrossAccountAccessOutput() GetAwsCCCrossAccountAccessOutput {
	return i.ToGetAwsCCCrossAccountAccessOutputWithContext(context.Background())
}

func (i GetAwsCCCrossAccountAccessArgs) ToGetAwsCCCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCCCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCCCrossAccountAccessOutput)
}

// GetAwsCCCrossAccountAccessArrayInput is an input type that accepts GetAwsCCCrossAccountAccessArray and GetAwsCCCrossAccountAccessArrayOutput values.
// You can construct a concrete instance of `GetAwsCCCrossAccountAccessArrayInput` via:
//
//	GetAwsCCCrossAccountAccessArray{ GetAwsCCCrossAccountAccessArgs{...} }
type GetAwsCCCrossAccountAccessArrayInput interface {
	pulumi.Input

	ToGetAwsCCCrossAccountAccessArrayOutput() GetAwsCCCrossAccountAccessArrayOutput
	ToGetAwsCCCrossAccountAccessArrayOutputWithContext(context.Context) GetAwsCCCrossAccountAccessArrayOutput
}

type GetAwsCCCrossAccountAccessArray []GetAwsCCCrossAccountAccessInput

func (GetAwsCCCrossAccountAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCCCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCCCrossAccountAccessArray) ToGetAwsCCCrossAccountAccessArrayOutput() GetAwsCCCrossAccountAccessArrayOutput {
	return i.ToGetAwsCCCrossAccountAccessArrayOutputWithContext(context.Background())
}

func (i GetAwsCCCrossAccountAccessArray) ToGetAwsCCCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCCCrossAccountAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCCCrossAccountAccessArrayOutput)
}

type GetAwsCCCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (GetAwsCCCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCCCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCCCrossAccountAccessOutput) ToGetAwsCCCrossAccountAccessOutput() GetAwsCCCrossAccountAccessOutput {
	return o
}

func (o GetAwsCCCrossAccountAccessOutput) ToGetAwsCCCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCCCrossAccountAccessOutput {
	return o
}

func (o GetAwsCCCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCCCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsCCCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCCCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsCCCrossAccountAccessArrayOutput struct{ *pulumi.OutputState }

func (GetAwsCCCrossAccountAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCCCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCCCrossAccountAccessArrayOutput) ToGetAwsCCCrossAccountAccessArrayOutput() GetAwsCCCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCCCrossAccountAccessArrayOutput) ToGetAwsCCCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCCCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCCCrossAccountAccessArrayOutput) Index(i pulumi.IntInput) GetAwsCCCrossAccountAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsCCCrossAccountAccess {
		return vs[0].([]GetAwsCCCrossAccountAccess)[vs[1].(int)]
	}).(GetAwsCCCrossAccountAccessOutput)
}

type GetAwsCrossAccountAccess struct {
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsCrossAccountAccessInput is an input type that accepts GetAwsCrossAccountAccessArgs and GetAwsCrossAccountAccessOutput values.
// You can construct a concrete instance of `GetAwsCrossAccountAccessInput` via:
//
//	GetAwsCrossAccountAccessArgs{...}
type GetAwsCrossAccountAccessInput interface {
	pulumi.Input

	ToGetAwsCrossAccountAccessOutput() GetAwsCrossAccountAccessOutput
	ToGetAwsCrossAccountAccessOutputWithContext(context.Context) GetAwsCrossAccountAccessOutput
}

type GetAwsCrossAccountAccessArgs struct {
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCrossAccountAccessArgs) ToGetAwsCrossAccountAccessOutput() GetAwsCrossAccountAccessOutput {
	return i.ToGetAwsCrossAccountAccessOutputWithContext(context.Background())
}

func (i GetAwsCrossAccountAccessArgs) ToGetAwsCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCrossAccountAccessOutput)
}

// GetAwsCrossAccountAccessArrayInput is an input type that accepts GetAwsCrossAccountAccessArray and GetAwsCrossAccountAccessArrayOutput values.
// You can construct a concrete instance of `GetAwsCrossAccountAccessArrayInput` via:
//
//	GetAwsCrossAccountAccessArray{ GetAwsCrossAccountAccessArgs{...} }
type GetAwsCrossAccountAccessArrayInput interface {
	pulumi.Input

	ToGetAwsCrossAccountAccessArrayOutput() GetAwsCrossAccountAccessArrayOutput
	ToGetAwsCrossAccountAccessArrayOutputWithContext(context.Context) GetAwsCrossAccountAccessArrayOutput
}

type GetAwsCrossAccountAccessArray []GetAwsCrossAccountAccessInput

func (GetAwsCrossAccountAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCrossAccountAccessArray) ToGetAwsCrossAccountAccessArrayOutput() GetAwsCrossAccountAccessArrayOutput {
	return i.ToGetAwsCrossAccountAccessArrayOutputWithContext(context.Background())
}

func (i GetAwsCrossAccountAccessArray) ToGetAwsCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCrossAccountAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCrossAccountAccessArrayOutput)
}

type GetAwsCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (GetAwsCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCrossAccountAccessOutput) ToGetAwsCrossAccountAccessOutput() GetAwsCrossAccountAccessOutput {
	return o
}

func (o GetAwsCrossAccountAccessOutput) ToGetAwsCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCrossAccountAccessOutput {
	return o
}

func (o GetAwsCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsCrossAccountAccessArrayOutput struct{ *pulumi.OutputState }

func (GetAwsCrossAccountAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCrossAccountAccessArrayOutput) ToGetAwsCrossAccountAccessArrayOutput() GetAwsCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCrossAccountAccessArrayOutput) ToGetAwsCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCrossAccountAccessArrayOutput) Index(i pulumi.IntInput) GetAwsCrossAccountAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsCrossAccountAccess {
		return vs[0].([]GetAwsCrossAccountAccess)[vs[1].(int)]
	}).(GetAwsCrossAccountAccessOutput)
}

type GetAwsInheritFromDelegate struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetAwsInheritFromDelegateInput is an input type that accepts GetAwsInheritFromDelegateArgs and GetAwsInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetAwsInheritFromDelegateInput` via:
//
//	GetAwsInheritFromDelegateArgs{...}
type GetAwsInheritFromDelegateInput interface {
	pulumi.Input

	ToGetAwsInheritFromDelegateOutput() GetAwsInheritFromDelegateOutput
	ToGetAwsInheritFromDelegateOutputWithContext(context.Context) GetAwsInheritFromDelegateOutput
}

type GetAwsInheritFromDelegateArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetAwsInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsInheritFromDelegate)(nil)).Elem()
}

func (i GetAwsInheritFromDelegateArgs) ToGetAwsInheritFromDelegateOutput() GetAwsInheritFromDelegateOutput {
	return i.ToGetAwsInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetAwsInheritFromDelegateArgs) ToGetAwsInheritFromDelegateOutputWithContext(ctx context.Context) GetAwsInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsInheritFromDelegateOutput)
}

// GetAwsInheritFromDelegateArrayInput is an input type that accepts GetAwsInheritFromDelegateArray and GetAwsInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetAwsInheritFromDelegateArrayInput` via:
//
//	GetAwsInheritFromDelegateArray{ GetAwsInheritFromDelegateArgs{...} }
type GetAwsInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetAwsInheritFromDelegateArrayOutput() GetAwsInheritFromDelegateArrayOutput
	ToGetAwsInheritFromDelegateArrayOutputWithContext(context.Context) GetAwsInheritFromDelegateArrayOutput
}

type GetAwsInheritFromDelegateArray []GetAwsInheritFromDelegateInput

func (GetAwsInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsInheritFromDelegate)(nil)).Elem()
}

func (i GetAwsInheritFromDelegateArray) ToGetAwsInheritFromDelegateArrayOutput() GetAwsInheritFromDelegateArrayOutput {
	return i.ToGetAwsInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetAwsInheritFromDelegateArray) ToGetAwsInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetAwsInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsInheritFromDelegateArrayOutput)
}

type GetAwsInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetAwsInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsInheritFromDelegate)(nil)).Elem()
}

func (o GetAwsInheritFromDelegateOutput) ToGetAwsInheritFromDelegateOutput() GetAwsInheritFromDelegateOutput {
	return o
}

func (o GetAwsInheritFromDelegateOutput) ToGetAwsInheritFromDelegateOutputWithContext(ctx context.Context) GetAwsInheritFromDelegateOutput {
	return o
}

func (o GetAwsInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetAwsInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetAwsInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsInheritFromDelegate)(nil)).Elem()
}

func (o GetAwsInheritFromDelegateArrayOutput) ToGetAwsInheritFromDelegateArrayOutput() GetAwsInheritFromDelegateArrayOutput {
	return o
}

func (o GetAwsInheritFromDelegateArrayOutput) ToGetAwsInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetAwsInheritFromDelegateArrayOutput {
	return o
}

func (o GetAwsInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetAwsInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsInheritFromDelegate {
		return vs[0].([]GetAwsInheritFromDelegate)[vs[1].(int)]
	}).(GetAwsInheritFromDelegateOutput)
}

type GetAwsIrsa struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetAwsIrsaInput is an input type that accepts GetAwsIrsaArgs and GetAwsIrsaOutput values.
// You can construct a concrete instance of `GetAwsIrsaInput` via:
//
//	GetAwsIrsaArgs{...}
type GetAwsIrsaInput interface {
	pulumi.Input

	ToGetAwsIrsaOutput() GetAwsIrsaOutput
	ToGetAwsIrsaOutputWithContext(context.Context) GetAwsIrsaOutput
}

type GetAwsIrsaArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetAwsIrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsIrsa)(nil)).Elem()
}

func (i GetAwsIrsaArgs) ToGetAwsIrsaOutput() GetAwsIrsaOutput {
	return i.ToGetAwsIrsaOutputWithContext(context.Background())
}

func (i GetAwsIrsaArgs) ToGetAwsIrsaOutputWithContext(ctx context.Context) GetAwsIrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsIrsaOutput)
}

// GetAwsIrsaArrayInput is an input type that accepts GetAwsIrsaArray and GetAwsIrsaArrayOutput values.
// You can construct a concrete instance of `GetAwsIrsaArrayInput` via:
//
//	GetAwsIrsaArray{ GetAwsIrsaArgs{...} }
type GetAwsIrsaArrayInput interface {
	pulumi.Input

	ToGetAwsIrsaArrayOutput() GetAwsIrsaArrayOutput
	ToGetAwsIrsaArrayOutputWithContext(context.Context) GetAwsIrsaArrayOutput
}

type GetAwsIrsaArray []GetAwsIrsaInput

func (GetAwsIrsaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsIrsa)(nil)).Elem()
}

func (i GetAwsIrsaArray) ToGetAwsIrsaArrayOutput() GetAwsIrsaArrayOutput {
	return i.ToGetAwsIrsaArrayOutputWithContext(context.Background())
}

func (i GetAwsIrsaArray) ToGetAwsIrsaArrayOutputWithContext(ctx context.Context) GetAwsIrsaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsIrsaArrayOutput)
}

type GetAwsIrsaOutput struct{ *pulumi.OutputState }

func (GetAwsIrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsIrsa)(nil)).Elem()
}

func (o GetAwsIrsaOutput) ToGetAwsIrsaOutput() GetAwsIrsaOutput {
	return o
}

func (o GetAwsIrsaOutput) ToGetAwsIrsaOutputWithContext(ctx context.Context) GetAwsIrsaOutput {
	return o
}

func (o GetAwsIrsaOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsIrsa) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetAwsIrsaArrayOutput struct{ *pulumi.OutputState }

func (GetAwsIrsaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsIrsa)(nil)).Elem()
}

func (o GetAwsIrsaArrayOutput) ToGetAwsIrsaArrayOutput() GetAwsIrsaArrayOutput {
	return o
}

func (o GetAwsIrsaArrayOutput) ToGetAwsIrsaArrayOutputWithContext(ctx context.Context) GetAwsIrsaArrayOutput {
	return o
}

func (o GetAwsIrsaArrayOutput) Index(i pulumi.IntInput) GetAwsIrsaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsIrsa {
		return vs[0].([]GetAwsIrsa)[vs[1].(int)]
	}).(GetAwsIrsaOutput)
}

type GetAwsKmsCredential struct {
	AssumeRoles         []GetAwsKmsCredentialAssumeRole `pulumi:"assumeRoles"`
	InheritFromDelegate bool                            `pulumi:"inheritFromDelegate"`
	Manuals             []GetAwsKmsCredentialManual     `pulumi:"manuals"`
}

// GetAwsKmsCredentialInput is an input type that accepts GetAwsKmsCredentialArgs and GetAwsKmsCredentialOutput values.
// You can construct a concrete instance of `GetAwsKmsCredentialInput` via:
//
//	GetAwsKmsCredentialArgs{...}
type GetAwsKmsCredentialInput interface {
	pulumi.Input

	ToGetAwsKmsCredentialOutput() GetAwsKmsCredentialOutput
	ToGetAwsKmsCredentialOutputWithContext(context.Context) GetAwsKmsCredentialOutput
}

type GetAwsKmsCredentialArgs struct {
	AssumeRoles         GetAwsKmsCredentialAssumeRoleArrayInput `pulumi:"assumeRoles"`
	InheritFromDelegate pulumi.BoolInput                        `pulumi:"inheritFromDelegate"`
	Manuals             GetAwsKmsCredentialManualArrayInput     `pulumi:"manuals"`
}

func (GetAwsKmsCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsCredential)(nil)).Elem()
}

func (i GetAwsKmsCredentialArgs) ToGetAwsKmsCredentialOutput() GetAwsKmsCredentialOutput {
	return i.ToGetAwsKmsCredentialOutputWithContext(context.Background())
}

func (i GetAwsKmsCredentialArgs) ToGetAwsKmsCredentialOutputWithContext(ctx context.Context) GetAwsKmsCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsCredentialOutput)
}

// GetAwsKmsCredentialArrayInput is an input type that accepts GetAwsKmsCredentialArray and GetAwsKmsCredentialArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsCredentialArrayInput` via:
//
//	GetAwsKmsCredentialArray{ GetAwsKmsCredentialArgs{...} }
type GetAwsKmsCredentialArrayInput interface {
	pulumi.Input

	ToGetAwsKmsCredentialArrayOutput() GetAwsKmsCredentialArrayOutput
	ToGetAwsKmsCredentialArrayOutputWithContext(context.Context) GetAwsKmsCredentialArrayOutput
}

type GetAwsKmsCredentialArray []GetAwsKmsCredentialInput

func (GetAwsKmsCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsCredential)(nil)).Elem()
}

func (i GetAwsKmsCredentialArray) ToGetAwsKmsCredentialArrayOutput() GetAwsKmsCredentialArrayOutput {
	return i.ToGetAwsKmsCredentialArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsCredentialArray) ToGetAwsKmsCredentialArrayOutputWithContext(ctx context.Context) GetAwsKmsCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsCredentialArrayOutput)
}

type GetAwsKmsCredentialOutput struct{ *pulumi.OutputState }

func (GetAwsKmsCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsCredential)(nil)).Elem()
}

func (o GetAwsKmsCredentialOutput) ToGetAwsKmsCredentialOutput() GetAwsKmsCredentialOutput {
	return o
}

func (o GetAwsKmsCredentialOutput) ToGetAwsKmsCredentialOutputWithContext(ctx context.Context) GetAwsKmsCredentialOutput {
	return o
}

func (o GetAwsKmsCredentialOutput) AssumeRoles() GetAwsKmsCredentialAssumeRoleArrayOutput {
	return o.ApplyT(func(v GetAwsKmsCredential) []GetAwsKmsCredentialAssumeRole { return v.AssumeRoles }).(GetAwsKmsCredentialAssumeRoleArrayOutput)
}

func (o GetAwsKmsCredentialOutput) InheritFromDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAwsKmsCredential) bool { return v.InheritFromDelegate }).(pulumi.BoolOutput)
}

func (o GetAwsKmsCredentialOutput) Manuals() GetAwsKmsCredentialManualArrayOutput {
	return o.ApplyT(func(v GetAwsKmsCredential) []GetAwsKmsCredentialManual { return v.Manuals }).(GetAwsKmsCredentialManualArrayOutput)
}

type GetAwsKmsCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsCredential)(nil)).Elem()
}

func (o GetAwsKmsCredentialArrayOutput) ToGetAwsKmsCredentialArrayOutput() GetAwsKmsCredentialArrayOutput {
	return o
}

func (o GetAwsKmsCredentialArrayOutput) ToGetAwsKmsCredentialArrayOutputWithContext(ctx context.Context) GetAwsKmsCredentialArrayOutput {
	return o
}

func (o GetAwsKmsCredentialArrayOutput) Index(i pulumi.IntInput) GetAwsKmsCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsCredential {
		return vs[0].([]GetAwsKmsCredential)[vs[1].(int)]
	}).(GetAwsKmsCredentialOutput)
}

type GetAwsKmsCredentialAssumeRole struct {
	Duration   int    `pulumi:"duration"`
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsKmsCredentialAssumeRoleInput is an input type that accepts GetAwsKmsCredentialAssumeRoleArgs and GetAwsKmsCredentialAssumeRoleOutput values.
// You can construct a concrete instance of `GetAwsKmsCredentialAssumeRoleInput` via:
//
//	GetAwsKmsCredentialAssumeRoleArgs{...}
type GetAwsKmsCredentialAssumeRoleInput interface {
	pulumi.Input

	ToGetAwsKmsCredentialAssumeRoleOutput() GetAwsKmsCredentialAssumeRoleOutput
	ToGetAwsKmsCredentialAssumeRoleOutputWithContext(context.Context) GetAwsKmsCredentialAssumeRoleOutput
}

type GetAwsKmsCredentialAssumeRoleArgs struct {
	Duration   pulumi.IntInput    `pulumi:"duration"`
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsKmsCredentialAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsKmsCredentialAssumeRoleArgs) ToGetAwsKmsCredentialAssumeRoleOutput() GetAwsKmsCredentialAssumeRoleOutput {
	return i.ToGetAwsKmsCredentialAssumeRoleOutputWithContext(context.Background())
}

func (i GetAwsKmsCredentialAssumeRoleArgs) ToGetAwsKmsCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsKmsCredentialAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsCredentialAssumeRoleOutput)
}

// GetAwsKmsCredentialAssumeRoleArrayInput is an input type that accepts GetAwsKmsCredentialAssumeRoleArray and GetAwsKmsCredentialAssumeRoleArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsCredentialAssumeRoleArrayInput` via:
//
//	GetAwsKmsCredentialAssumeRoleArray{ GetAwsKmsCredentialAssumeRoleArgs{...} }
type GetAwsKmsCredentialAssumeRoleArrayInput interface {
	pulumi.Input

	ToGetAwsKmsCredentialAssumeRoleArrayOutput() GetAwsKmsCredentialAssumeRoleArrayOutput
	ToGetAwsKmsCredentialAssumeRoleArrayOutputWithContext(context.Context) GetAwsKmsCredentialAssumeRoleArrayOutput
}

type GetAwsKmsCredentialAssumeRoleArray []GetAwsKmsCredentialAssumeRoleInput

func (GetAwsKmsCredentialAssumeRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsKmsCredentialAssumeRoleArray) ToGetAwsKmsCredentialAssumeRoleArrayOutput() GetAwsKmsCredentialAssumeRoleArrayOutput {
	return i.ToGetAwsKmsCredentialAssumeRoleArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsCredentialAssumeRoleArray) ToGetAwsKmsCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsKmsCredentialAssumeRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsCredentialAssumeRoleArrayOutput)
}

type GetAwsKmsCredentialAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetAwsKmsCredentialAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsKmsCredentialAssumeRoleOutput) ToGetAwsKmsCredentialAssumeRoleOutput() GetAwsKmsCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsKmsCredentialAssumeRoleOutput) ToGetAwsKmsCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsKmsCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsKmsCredentialAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsKmsCredentialAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetAwsKmsCredentialAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsCredentialAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsKmsCredentialAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsCredentialAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsKmsCredentialAssumeRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsCredentialAssumeRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsKmsCredentialAssumeRoleArrayOutput) ToGetAwsKmsCredentialAssumeRoleArrayOutput() GetAwsKmsCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsKmsCredentialAssumeRoleArrayOutput) ToGetAwsKmsCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsKmsCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsKmsCredentialAssumeRoleArrayOutput) Index(i pulumi.IntInput) GetAwsKmsCredentialAssumeRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsCredentialAssumeRole {
		return vs[0].([]GetAwsKmsCredentialAssumeRole)[vs[1].(int)]
	}).(GetAwsKmsCredentialAssumeRoleOutput)
}

type GetAwsKmsCredentialManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetAwsKmsCredentialManualInput is an input type that accepts GetAwsKmsCredentialManualArgs and GetAwsKmsCredentialManualOutput values.
// You can construct a concrete instance of `GetAwsKmsCredentialManualInput` via:
//
//	GetAwsKmsCredentialManualArgs{...}
type GetAwsKmsCredentialManualInput interface {
	pulumi.Input

	ToGetAwsKmsCredentialManualOutput() GetAwsKmsCredentialManualOutput
	ToGetAwsKmsCredentialManualOutputWithContext(context.Context) GetAwsKmsCredentialManualOutput
}

type GetAwsKmsCredentialManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetAwsKmsCredentialManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsCredentialManual)(nil)).Elem()
}

func (i GetAwsKmsCredentialManualArgs) ToGetAwsKmsCredentialManualOutput() GetAwsKmsCredentialManualOutput {
	return i.ToGetAwsKmsCredentialManualOutputWithContext(context.Background())
}

func (i GetAwsKmsCredentialManualArgs) ToGetAwsKmsCredentialManualOutputWithContext(ctx context.Context) GetAwsKmsCredentialManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsCredentialManualOutput)
}

// GetAwsKmsCredentialManualArrayInput is an input type that accepts GetAwsKmsCredentialManualArray and GetAwsKmsCredentialManualArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsCredentialManualArrayInput` via:
//
//	GetAwsKmsCredentialManualArray{ GetAwsKmsCredentialManualArgs{...} }
type GetAwsKmsCredentialManualArrayInput interface {
	pulumi.Input

	ToGetAwsKmsCredentialManualArrayOutput() GetAwsKmsCredentialManualArrayOutput
	ToGetAwsKmsCredentialManualArrayOutputWithContext(context.Context) GetAwsKmsCredentialManualArrayOutput
}

type GetAwsKmsCredentialManualArray []GetAwsKmsCredentialManualInput

func (GetAwsKmsCredentialManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsCredentialManual)(nil)).Elem()
}

func (i GetAwsKmsCredentialManualArray) ToGetAwsKmsCredentialManualArrayOutput() GetAwsKmsCredentialManualArrayOutput {
	return i.ToGetAwsKmsCredentialManualArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsCredentialManualArray) ToGetAwsKmsCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsKmsCredentialManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsCredentialManualArrayOutput)
}

type GetAwsKmsCredentialManualOutput struct{ *pulumi.OutputState }

func (GetAwsKmsCredentialManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsCredentialManual)(nil)).Elem()
}

func (o GetAwsKmsCredentialManualOutput) ToGetAwsKmsCredentialManualOutput() GetAwsKmsCredentialManualOutput {
	return o
}

func (o GetAwsKmsCredentialManualOutput) ToGetAwsKmsCredentialManualOutputWithContext(ctx context.Context) GetAwsKmsCredentialManualOutput {
	return o
}

func (o GetAwsKmsCredentialManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsCredentialManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o GetAwsKmsCredentialManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsCredentialManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsKmsCredentialManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsCredentialManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsCredentialManual)(nil)).Elem()
}

func (o GetAwsKmsCredentialManualArrayOutput) ToGetAwsKmsCredentialManualArrayOutput() GetAwsKmsCredentialManualArrayOutput {
	return o
}

func (o GetAwsKmsCredentialManualArrayOutput) ToGetAwsKmsCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsKmsCredentialManualArrayOutput {
	return o
}

func (o GetAwsKmsCredentialManualArrayOutput) Index(i pulumi.IntInput) GetAwsKmsCredentialManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsCredentialManual {
		return vs[0].([]GetAwsKmsCredentialManual)[vs[1].(int)]
	}).(GetAwsKmsCredentialManualOutput)
}

type GetAwsManual struct {
	AccessKey         string   `pulumi:"accessKey"`
	AccessKeyRef      string   `pulumi:"accessKeyRef"`
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	SecretKeyRef      string   `pulumi:"secretKeyRef"`
}

// GetAwsManualInput is an input type that accepts GetAwsManualArgs and GetAwsManualOutput values.
// You can construct a concrete instance of `GetAwsManualInput` via:
//
//	GetAwsManualArgs{...}
type GetAwsManualInput interface {
	pulumi.Input

	ToGetAwsManualOutput() GetAwsManualOutput
	ToGetAwsManualOutputWithContext(context.Context) GetAwsManualOutput
}

type GetAwsManualArgs struct {
	AccessKey         pulumi.StringInput      `pulumi:"accessKey"`
	AccessKeyRef      pulumi.StringInput      `pulumi:"accessKeyRef"`
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	SecretKeyRef      pulumi.StringInput      `pulumi:"secretKeyRef"`
}

func (GetAwsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsManual)(nil)).Elem()
}

func (i GetAwsManualArgs) ToGetAwsManualOutput() GetAwsManualOutput {
	return i.ToGetAwsManualOutputWithContext(context.Background())
}

func (i GetAwsManualArgs) ToGetAwsManualOutputWithContext(ctx context.Context) GetAwsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsManualOutput)
}

// GetAwsManualArrayInput is an input type that accepts GetAwsManualArray and GetAwsManualArrayOutput values.
// You can construct a concrete instance of `GetAwsManualArrayInput` via:
//
//	GetAwsManualArray{ GetAwsManualArgs{...} }
type GetAwsManualArrayInput interface {
	pulumi.Input

	ToGetAwsManualArrayOutput() GetAwsManualArrayOutput
	ToGetAwsManualArrayOutputWithContext(context.Context) GetAwsManualArrayOutput
}

type GetAwsManualArray []GetAwsManualInput

func (GetAwsManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsManual)(nil)).Elem()
}

func (i GetAwsManualArray) ToGetAwsManualArrayOutput() GetAwsManualArrayOutput {
	return i.ToGetAwsManualArrayOutputWithContext(context.Background())
}

func (i GetAwsManualArray) ToGetAwsManualArrayOutputWithContext(ctx context.Context) GetAwsManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsManualArrayOutput)
}

type GetAwsManualOutput struct{ *pulumi.OutputState }

func (GetAwsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsManual)(nil)).Elem()
}

func (o GetAwsManualOutput) ToGetAwsManualOutput() GetAwsManualOutput {
	return o
}

func (o GetAwsManualOutput) ToGetAwsManualOutputWithContext(ctx context.Context) GetAwsManualOutput {
	return o
}

func (o GetAwsManualOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsManual) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetAwsManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o GetAwsManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

func (o GetAwsManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsManual)(nil)).Elem()
}

func (o GetAwsManualArrayOutput) ToGetAwsManualArrayOutput() GetAwsManualArrayOutput {
	return o
}

func (o GetAwsManualArrayOutput) ToGetAwsManualArrayOutputWithContext(ctx context.Context) GetAwsManualArrayOutput {
	return o
}

func (o GetAwsManualArrayOutput) Index(i pulumi.IntInput) GetAwsManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsManual {
		return vs[0].([]GetAwsManual)[vs[1].(int)]
	}).(GetAwsManualOutput)
}

type GetAwsSecretManagerCredential struct {
	AssumeRoles         []GetAwsSecretManagerCredentialAssumeRole `pulumi:"assumeRoles"`
	InheritFromDelegate bool                                      `pulumi:"inheritFromDelegate"`
	Manuals             []GetAwsSecretManagerCredentialManual     `pulumi:"manuals"`
}

// GetAwsSecretManagerCredentialInput is an input type that accepts GetAwsSecretManagerCredentialArgs and GetAwsSecretManagerCredentialOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerCredentialInput` via:
//
//	GetAwsSecretManagerCredentialArgs{...}
type GetAwsSecretManagerCredentialInput interface {
	pulumi.Input

	ToGetAwsSecretManagerCredentialOutput() GetAwsSecretManagerCredentialOutput
	ToGetAwsSecretManagerCredentialOutputWithContext(context.Context) GetAwsSecretManagerCredentialOutput
}

type GetAwsSecretManagerCredentialArgs struct {
	AssumeRoles         GetAwsSecretManagerCredentialAssumeRoleArrayInput `pulumi:"assumeRoles"`
	InheritFromDelegate pulumi.BoolInput                                  `pulumi:"inheritFromDelegate"`
	Manuals             GetAwsSecretManagerCredentialManualArrayInput     `pulumi:"manuals"`
}

func (GetAwsSecretManagerCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerCredential)(nil)).Elem()
}

func (i GetAwsSecretManagerCredentialArgs) ToGetAwsSecretManagerCredentialOutput() GetAwsSecretManagerCredentialOutput {
	return i.ToGetAwsSecretManagerCredentialOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerCredentialArgs) ToGetAwsSecretManagerCredentialOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerCredentialOutput)
}

// GetAwsSecretManagerCredentialArrayInput is an input type that accepts GetAwsSecretManagerCredentialArray and GetAwsSecretManagerCredentialArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerCredentialArrayInput` via:
//
//	GetAwsSecretManagerCredentialArray{ GetAwsSecretManagerCredentialArgs{...} }
type GetAwsSecretManagerCredentialArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerCredentialArrayOutput() GetAwsSecretManagerCredentialArrayOutput
	ToGetAwsSecretManagerCredentialArrayOutputWithContext(context.Context) GetAwsSecretManagerCredentialArrayOutput
}

type GetAwsSecretManagerCredentialArray []GetAwsSecretManagerCredentialInput

func (GetAwsSecretManagerCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerCredential)(nil)).Elem()
}

func (i GetAwsSecretManagerCredentialArray) ToGetAwsSecretManagerCredentialArrayOutput() GetAwsSecretManagerCredentialArrayOutput {
	return i.ToGetAwsSecretManagerCredentialArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerCredentialArray) ToGetAwsSecretManagerCredentialArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerCredentialArrayOutput)
}

type GetAwsSecretManagerCredentialOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerCredential)(nil)).Elem()
}

func (o GetAwsSecretManagerCredentialOutput) ToGetAwsSecretManagerCredentialOutput() GetAwsSecretManagerCredentialOutput {
	return o
}

func (o GetAwsSecretManagerCredentialOutput) ToGetAwsSecretManagerCredentialOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialOutput {
	return o
}

func (o GetAwsSecretManagerCredentialOutput) AssumeRoles() GetAwsSecretManagerCredentialAssumeRoleArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredential) []GetAwsSecretManagerCredentialAssumeRole { return v.AssumeRoles }).(GetAwsSecretManagerCredentialAssumeRoleArrayOutput)
}

func (o GetAwsSecretManagerCredentialOutput) InheritFromDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredential) bool { return v.InheritFromDelegate }).(pulumi.BoolOutput)
}

func (o GetAwsSecretManagerCredentialOutput) Manuals() GetAwsSecretManagerCredentialManualArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredential) []GetAwsSecretManagerCredentialManual { return v.Manuals }).(GetAwsSecretManagerCredentialManualArrayOutput)
}

type GetAwsSecretManagerCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerCredential)(nil)).Elem()
}

func (o GetAwsSecretManagerCredentialArrayOutput) ToGetAwsSecretManagerCredentialArrayOutput() GetAwsSecretManagerCredentialArrayOutput {
	return o
}

func (o GetAwsSecretManagerCredentialArrayOutput) ToGetAwsSecretManagerCredentialArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialArrayOutput {
	return o
}

func (o GetAwsSecretManagerCredentialArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerCredential {
		return vs[0].([]GetAwsSecretManagerCredential)[vs[1].(int)]
	}).(GetAwsSecretManagerCredentialOutput)
}

type GetAwsSecretManagerCredentialAssumeRole struct {
	Duration   int    `pulumi:"duration"`
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsSecretManagerCredentialAssumeRoleInput is an input type that accepts GetAwsSecretManagerCredentialAssumeRoleArgs and GetAwsSecretManagerCredentialAssumeRoleOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerCredentialAssumeRoleInput` via:
//
//	GetAwsSecretManagerCredentialAssumeRoleArgs{...}
type GetAwsSecretManagerCredentialAssumeRoleInput interface {
	pulumi.Input

	ToGetAwsSecretManagerCredentialAssumeRoleOutput() GetAwsSecretManagerCredentialAssumeRoleOutput
	ToGetAwsSecretManagerCredentialAssumeRoleOutputWithContext(context.Context) GetAwsSecretManagerCredentialAssumeRoleOutput
}

type GetAwsSecretManagerCredentialAssumeRoleArgs struct {
	Duration   pulumi.IntInput    `pulumi:"duration"`
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsSecretManagerCredentialAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsSecretManagerCredentialAssumeRoleArgs) ToGetAwsSecretManagerCredentialAssumeRoleOutput() GetAwsSecretManagerCredentialAssumeRoleOutput {
	return i.ToGetAwsSecretManagerCredentialAssumeRoleOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerCredentialAssumeRoleArgs) ToGetAwsSecretManagerCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerCredentialAssumeRoleOutput)
}

// GetAwsSecretManagerCredentialAssumeRoleArrayInput is an input type that accepts GetAwsSecretManagerCredentialAssumeRoleArray and GetAwsSecretManagerCredentialAssumeRoleArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerCredentialAssumeRoleArrayInput` via:
//
//	GetAwsSecretManagerCredentialAssumeRoleArray{ GetAwsSecretManagerCredentialAssumeRoleArgs{...} }
type GetAwsSecretManagerCredentialAssumeRoleArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerCredentialAssumeRoleArrayOutput() GetAwsSecretManagerCredentialAssumeRoleArrayOutput
	ToGetAwsSecretManagerCredentialAssumeRoleArrayOutputWithContext(context.Context) GetAwsSecretManagerCredentialAssumeRoleArrayOutput
}

type GetAwsSecretManagerCredentialAssumeRoleArray []GetAwsSecretManagerCredentialAssumeRoleInput

func (GetAwsSecretManagerCredentialAssumeRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsSecretManagerCredentialAssumeRoleArray) ToGetAwsSecretManagerCredentialAssumeRoleArrayOutput() GetAwsSecretManagerCredentialAssumeRoleArrayOutput {
	return i.ToGetAwsSecretManagerCredentialAssumeRoleArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerCredentialAssumeRoleArray) ToGetAwsSecretManagerCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialAssumeRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerCredentialAssumeRoleArrayOutput)
}

type GetAwsSecretManagerCredentialAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerCredentialAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsSecretManagerCredentialAssumeRoleOutput) ToGetAwsSecretManagerCredentialAssumeRoleOutput() GetAwsSecretManagerCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsSecretManagerCredentialAssumeRoleOutput) ToGetAwsSecretManagerCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsSecretManagerCredentialAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredentialAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetAwsSecretManagerCredentialAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredentialAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsSecretManagerCredentialAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredentialAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsSecretManagerCredentialAssumeRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerCredentialAssumeRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsSecretManagerCredentialAssumeRoleArrayOutput) ToGetAwsSecretManagerCredentialAssumeRoleArrayOutput() GetAwsSecretManagerCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsSecretManagerCredentialAssumeRoleArrayOutput) ToGetAwsSecretManagerCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsSecretManagerCredentialAssumeRoleArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerCredentialAssumeRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerCredentialAssumeRole {
		return vs[0].([]GetAwsSecretManagerCredentialAssumeRole)[vs[1].(int)]
	}).(GetAwsSecretManagerCredentialAssumeRoleOutput)
}

type GetAwsSecretManagerCredentialManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetAwsSecretManagerCredentialManualInput is an input type that accepts GetAwsSecretManagerCredentialManualArgs and GetAwsSecretManagerCredentialManualOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerCredentialManualInput` via:
//
//	GetAwsSecretManagerCredentialManualArgs{...}
type GetAwsSecretManagerCredentialManualInput interface {
	pulumi.Input

	ToGetAwsSecretManagerCredentialManualOutput() GetAwsSecretManagerCredentialManualOutput
	ToGetAwsSecretManagerCredentialManualOutputWithContext(context.Context) GetAwsSecretManagerCredentialManualOutput
}

type GetAwsSecretManagerCredentialManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetAwsSecretManagerCredentialManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerCredentialManual)(nil)).Elem()
}

func (i GetAwsSecretManagerCredentialManualArgs) ToGetAwsSecretManagerCredentialManualOutput() GetAwsSecretManagerCredentialManualOutput {
	return i.ToGetAwsSecretManagerCredentialManualOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerCredentialManualArgs) ToGetAwsSecretManagerCredentialManualOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerCredentialManualOutput)
}

// GetAwsSecretManagerCredentialManualArrayInput is an input type that accepts GetAwsSecretManagerCredentialManualArray and GetAwsSecretManagerCredentialManualArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerCredentialManualArrayInput` via:
//
//	GetAwsSecretManagerCredentialManualArray{ GetAwsSecretManagerCredentialManualArgs{...} }
type GetAwsSecretManagerCredentialManualArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerCredentialManualArrayOutput() GetAwsSecretManagerCredentialManualArrayOutput
	ToGetAwsSecretManagerCredentialManualArrayOutputWithContext(context.Context) GetAwsSecretManagerCredentialManualArrayOutput
}

type GetAwsSecretManagerCredentialManualArray []GetAwsSecretManagerCredentialManualInput

func (GetAwsSecretManagerCredentialManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerCredentialManual)(nil)).Elem()
}

func (i GetAwsSecretManagerCredentialManualArray) ToGetAwsSecretManagerCredentialManualArrayOutput() GetAwsSecretManagerCredentialManualArrayOutput {
	return i.ToGetAwsSecretManagerCredentialManualArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerCredentialManualArray) ToGetAwsSecretManagerCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerCredentialManualArrayOutput)
}

type GetAwsSecretManagerCredentialManualOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerCredentialManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerCredentialManual)(nil)).Elem()
}

func (o GetAwsSecretManagerCredentialManualOutput) ToGetAwsSecretManagerCredentialManualOutput() GetAwsSecretManagerCredentialManualOutput {
	return o
}

func (o GetAwsSecretManagerCredentialManualOutput) ToGetAwsSecretManagerCredentialManualOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialManualOutput {
	return o
}

func (o GetAwsSecretManagerCredentialManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredentialManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o GetAwsSecretManagerCredentialManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerCredentialManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsSecretManagerCredentialManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerCredentialManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerCredentialManual)(nil)).Elem()
}

func (o GetAwsSecretManagerCredentialManualArrayOutput) ToGetAwsSecretManagerCredentialManualArrayOutput() GetAwsSecretManagerCredentialManualArrayOutput {
	return o
}

func (o GetAwsSecretManagerCredentialManualArrayOutput) ToGetAwsSecretManagerCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerCredentialManualArrayOutput {
	return o
}

func (o GetAwsSecretManagerCredentialManualArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerCredentialManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerCredentialManual {
		return vs[0].([]GetAwsSecretManagerCredentialManual)[vs[1].(int)]
	}).(GetAwsSecretManagerCredentialManualOutput)
}

type GetBitbucketApiAuthentication struct {
	TokenRef    string `pulumi:"tokenRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetBitbucketApiAuthenticationInput is an input type that accepts GetBitbucketApiAuthenticationArgs and GetBitbucketApiAuthenticationOutput values.
// You can construct a concrete instance of `GetBitbucketApiAuthenticationInput` via:
//
//	GetBitbucketApiAuthenticationArgs{...}
type GetBitbucketApiAuthenticationInput interface {
	pulumi.Input

	ToGetBitbucketApiAuthenticationOutput() GetBitbucketApiAuthenticationOutput
	ToGetBitbucketApiAuthenticationOutputWithContext(context.Context) GetBitbucketApiAuthenticationOutput
}

type GetBitbucketApiAuthenticationArgs struct {
	TokenRef    pulumi.StringInput `pulumi:"tokenRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetBitbucketApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketApiAuthentication)(nil)).Elem()
}

func (i GetBitbucketApiAuthenticationArgs) ToGetBitbucketApiAuthenticationOutput() GetBitbucketApiAuthenticationOutput {
	return i.ToGetBitbucketApiAuthenticationOutputWithContext(context.Background())
}

func (i GetBitbucketApiAuthenticationArgs) ToGetBitbucketApiAuthenticationOutputWithContext(ctx context.Context) GetBitbucketApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketApiAuthenticationOutput)
}

// GetBitbucketApiAuthenticationArrayInput is an input type that accepts GetBitbucketApiAuthenticationArray and GetBitbucketApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetBitbucketApiAuthenticationArrayInput` via:
//
//	GetBitbucketApiAuthenticationArray{ GetBitbucketApiAuthenticationArgs{...} }
type GetBitbucketApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetBitbucketApiAuthenticationArrayOutput() GetBitbucketApiAuthenticationArrayOutput
	ToGetBitbucketApiAuthenticationArrayOutputWithContext(context.Context) GetBitbucketApiAuthenticationArrayOutput
}

type GetBitbucketApiAuthenticationArray []GetBitbucketApiAuthenticationInput

func (GetBitbucketApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketApiAuthentication)(nil)).Elem()
}

func (i GetBitbucketApiAuthenticationArray) ToGetBitbucketApiAuthenticationArrayOutput() GetBitbucketApiAuthenticationArrayOutput {
	return i.ToGetBitbucketApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetBitbucketApiAuthenticationArray) ToGetBitbucketApiAuthenticationArrayOutputWithContext(ctx context.Context) GetBitbucketApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketApiAuthenticationArrayOutput)
}

type GetBitbucketApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetBitbucketApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketApiAuthentication)(nil)).Elem()
}

func (o GetBitbucketApiAuthenticationOutput) ToGetBitbucketApiAuthenticationOutput() GetBitbucketApiAuthenticationOutput {
	return o
}

func (o GetBitbucketApiAuthenticationOutput) ToGetBitbucketApiAuthenticationOutputWithContext(ctx context.Context) GetBitbucketApiAuthenticationOutput {
	return o
}

func (o GetBitbucketApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GetBitbucketApiAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketApiAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetBitbucketApiAuthenticationOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketApiAuthentication) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetBitbucketApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketApiAuthentication)(nil)).Elem()
}

func (o GetBitbucketApiAuthenticationArrayOutput) ToGetBitbucketApiAuthenticationArrayOutput() GetBitbucketApiAuthenticationArrayOutput {
	return o
}

func (o GetBitbucketApiAuthenticationArrayOutput) ToGetBitbucketApiAuthenticationArrayOutputWithContext(ctx context.Context) GetBitbucketApiAuthenticationArrayOutput {
	return o
}

func (o GetBitbucketApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetBitbucketApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketApiAuthentication {
		return vs[0].([]GetBitbucketApiAuthentication)[vs[1].(int)]
	}).(GetBitbucketApiAuthenticationOutput)
}

type GetBitbucketCredential struct {
	Https []GetBitbucketCredentialHttp `pulumi:"https"`
	Sshes []GetBitbucketCredentialSsh  `pulumi:"sshes"`
}

// GetBitbucketCredentialInput is an input type that accepts GetBitbucketCredentialArgs and GetBitbucketCredentialOutput values.
// You can construct a concrete instance of `GetBitbucketCredentialInput` via:
//
//	GetBitbucketCredentialArgs{...}
type GetBitbucketCredentialInput interface {
	pulumi.Input

	ToGetBitbucketCredentialOutput() GetBitbucketCredentialOutput
	ToGetBitbucketCredentialOutputWithContext(context.Context) GetBitbucketCredentialOutput
}

type GetBitbucketCredentialArgs struct {
	Https GetBitbucketCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetBitbucketCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetBitbucketCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCredential)(nil)).Elem()
}

func (i GetBitbucketCredentialArgs) ToGetBitbucketCredentialOutput() GetBitbucketCredentialOutput {
	return i.ToGetBitbucketCredentialOutputWithContext(context.Background())
}

func (i GetBitbucketCredentialArgs) ToGetBitbucketCredentialOutputWithContext(ctx context.Context) GetBitbucketCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketCredentialOutput)
}

// GetBitbucketCredentialArrayInput is an input type that accepts GetBitbucketCredentialArray and GetBitbucketCredentialArrayOutput values.
// You can construct a concrete instance of `GetBitbucketCredentialArrayInput` via:
//
//	GetBitbucketCredentialArray{ GetBitbucketCredentialArgs{...} }
type GetBitbucketCredentialArrayInput interface {
	pulumi.Input

	ToGetBitbucketCredentialArrayOutput() GetBitbucketCredentialArrayOutput
	ToGetBitbucketCredentialArrayOutputWithContext(context.Context) GetBitbucketCredentialArrayOutput
}

type GetBitbucketCredentialArray []GetBitbucketCredentialInput

func (GetBitbucketCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketCredential)(nil)).Elem()
}

func (i GetBitbucketCredentialArray) ToGetBitbucketCredentialArrayOutput() GetBitbucketCredentialArrayOutput {
	return i.ToGetBitbucketCredentialArrayOutputWithContext(context.Background())
}

func (i GetBitbucketCredentialArray) ToGetBitbucketCredentialArrayOutputWithContext(ctx context.Context) GetBitbucketCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketCredentialArrayOutput)
}

type GetBitbucketCredentialOutput struct{ *pulumi.OutputState }

func (GetBitbucketCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCredential)(nil)).Elem()
}

func (o GetBitbucketCredentialOutput) ToGetBitbucketCredentialOutput() GetBitbucketCredentialOutput {
	return o
}

func (o GetBitbucketCredentialOutput) ToGetBitbucketCredentialOutputWithContext(ctx context.Context) GetBitbucketCredentialOutput {
	return o
}

func (o GetBitbucketCredentialOutput) Https() GetBitbucketCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetBitbucketCredential) []GetBitbucketCredentialHttp { return v.Https }).(GetBitbucketCredentialHttpArrayOutput)
}

func (o GetBitbucketCredentialOutput) Sshes() GetBitbucketCredentialSshArrayOutput {
	return o.ApplyT(func(v GetBitbucketCredential) []GetBitbucketCredentialSsh { return v.Sshes }).(GetBitbucketCredentialSshArrayOutput)
}

type GetBitbucketCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketCredential)(nil)).Elem()
}

func (o GetBitbucketCredentialArrayOutput) ToGetBitbucketCredentialArrayOutput() GetBitbucketCredentialArrayOutput {
	return o
}

func (o GetBitbucketCredentialArrayOutput) ToGetBitbucketCredentialArrayOutputWithContext(ctx context.Context) GetBitbucketCredentialArrayOutput {
	return o
}

func (o GetBitbucketCredentialArrayOutput) Index(i pulumi.IntInput) GetBitbucketCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketCredential {
		return vs[0].([]GetBitbucketCredential)[vs[1].(int)]
	}).(GetBitbucketCredentialOutput)
}

type GetBitbucketCredentialHttp struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetBitbucketCredentialHttpInput is an input type that accepts GetBitbucketCredentialHttpArgs and GetBitbucketCredentialHttpOutput values.
// You can construct a concrete instance of `GetBitbucketCredentialHttpInput` via:
//
//	GetBitbucketCredentialHttpArgs{...}
type GetBitbucketCredentialHttpInput interface {
	pulumi.Input

	ToGetBitbucketCredentialHttpOutput() GetBitbucketCredentialHttpOutput
	ToGetBitbucketCredentialHttpOutputWithContext(context.Context) GetBitbucketCredentialHttpOutput
}

type GetBitbucketCredentialHttpArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetBitbucketCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCredentialHttp)(nil)).Elem()
}

func (i GetBitbucketCredentialHttpArgs) ToGetBitbucketCredentialHttpOutput() GetBitbucketCredentialHttpOutput {
	return i.ToGetBitbucketCredentialHttpOutputWithContext(context.Background())
}

func (i GetBitbucketCredentialHttpArgs) ToGetBitbucketCredentialHttpOutputWithContext(ctx context.Context) GetBitbucketCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketCredentialHttpOutput)
}

// GetBitbucketCredentialHttpArrayInput is an input type that accepts GetBitbucketCredentialHttpArray and GetBitbucketCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetBitbucketCredentialHttpArrayInput` via:
//
//	GetBitbucketCredentialHttpArray{ GetBitbucketCredentialHttpArgs{...} }
type GetBitbucketCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetBitbucketCredentialHttpArrayOutput() GetBitbucketCredentialHttpArrayOutput
	ToGetBitbucketCredentialHttpArrayOutputWithContext(context.Context) GetBitbucketCredentialHttpArrayOutput
}

type GetBitbucketCredentialHttpArray []GetBitbucketCredentialHttpInput

func (GetBitbucketCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketCredentialHttp)(nil)).Elem()
}

func (i GetBitbucketCredentialHttpArray) ToGetBitbucketCredentialHttpArrayOutput() GetBitbucketCredentialHttpArrayOutput {
	return i.ToGetBitbucketCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetBitbucketCredentialHttpArray) ToGetBitbucketCredentialHttpArrayOutputWithContext(ctx context.Context) GetBitbucketCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketCredentialHttpArrayOutput)
}

type GetBitbucketCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetBitbucketCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCredentialHttp)(nil)).Elem()
}

func (o GetBitbucketCredentialHttpOutput) ToGetBitbucketCredentialHttpOutput() GetBitbucketCredentialHttpOutput {
	return o
}

func (o GetBitbucketCredentialHttpOutput) ToGetBitbucketCredentialHttpOutputWithContext(ctx context.Context) GetBitbucketCredentialHttpOutput {
	return o
}

func (o GetBitbucketCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetBitbucketCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetBitbucketCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetBitbucketCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketCredentialHttp)(nil)).Elem()
}

func (o GetBitbucketCredentialHttpArrayOutput) ToGetBitbucketCredentialHttpArrayOutput() GetBitbucketCredentialHttpArrayOutput {
	return o
}

func (o GetBitbucketCredentialHttpArrayOutput) ToGetBitbucketCredentialHttpArrayOutputWithContext(ctx context.Context) GetBitbucketCredentialHttpArrayOutput {
	return o
}

func (o GetBitbucketCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetBitbucketCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketCredentialHttp {
		return vs[0].([]GetBitbucketCredentialHttp)[vs[1].(int)]
	}).(GetBitbucketCredentialHttpOutput)
}

type GetBitbucketCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetBitbucketCredentialSshInput is an input type that accepts GetBitbucketCredentialSshArgs and GetBitbucketCredentialSshOutput values.
// You can construct a concrete instance of `GetBitbucketCredentialSshInput` via:
//
//	GetBitbucketCredentialSshArgs{...}
type GetBitbucketCredentialSshInput interface {
	pulumi.Input

	ToGetBitbucketCredentialSshOutput() GetBitbucketCredentialSshOutput
	ToGetBitbucketCredentialSshOutputWithContext(context.Context) GetBitbucketCredentialSshOutput
}

type GetBitbucketCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetBitbucketCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCredentialSsh)(nil)).Elem()
}

func (i GetBitbucketCredentialSshArgs) ToGetBitbucketCredentialSshOutput() GetBitbucketCredentialSshOutput {
	return i.ToGetBitbucketCredentialSshOutputWithContext(context.Background())
}

func (i GetBitbucketCredentialSshArgs) ToGetBitbucketCredentialSshOutputWithContext(ctx context.Context) GetBitbucketCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketCredentialSshOutput)
}

// GetBitbucketCredentialSshArrayInput is an input type that accepts GetBitbucketCredentialSshArray and GetBitbucketCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetBitbucketCredentialSshArrayInput` via:
//
//	GetBitbucketCredentialSshArray{ GetBitbucketCredentialSshArgs{...} }
type GetBitbucketCredentialSshArrayInput interface {
	pulumi.Input

	ToGetBitbucketCredentialSshArrayOutput() GetBitbucketCredentialSshArrayOutput
	ToGetBitbucketCredentialSshArrayOutputWithContext(context.Context) GetBitbucketCredentialSshArrayOutput
}

type GetBitbucketCredentialSshArray []GetBitbucketCredentialSshInput

func (GetBitbucketCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketCredentialSsh)(nil)).Elem()
}

func (i GetBitbucketCredentialSshArray) ToGetBitbucketCredentialSshArrayOutput() GetBitbucketCredentialSshArrayOutput {
	return i.ToGetBitbucketCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetBitbucketCredentialSshArray) ToGetBitbucketCredentialSshArrayOutputWithContext(ctx context.Context) GetBitbucketCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketCredentialSshArrayOutput)
}

type GetBitbucketCredentialSshOutput struct{ *pulumi.OutputState }

func (GetBitbucketCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketCredentialSsh)(nil)).Elem()
}

func (o GetBitbucketCredentialSshOutput) ToGetBitbucketCredentialSshOutput() GetBitbucketCredentialSshOutput {
	return o
}

func (o GetBitbucketCredentialSshOutput) ToGetBitbucketCredentialSshOutputWithContext(ctx context.Context) GetBitbucketCredentialSshOutput {
	return o
}

func (o GetBitbucketCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetBitbucketCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketCredentialSsh)(nil)).Elem()
}

func (o GetBitbucketCredentialSshArrayOutput) ToGetBitbucketCredentialSshArrayOutput() GetBitbucketCredentialSshArrayOutput {
	return o
}

func (o GetBitbucketCredentialSshArrayOutput) ToGetBitbucketCredentialSshArrayOutputWithContext(ctx context.Context) GetBitbucketCredentialSshArrayOutput {
	return o
}

func (o GetBitbucketCredentialSshArrayOutput) Index(i pulumi.IntInput) GetBitbucketCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketCredentialSsh {
		return vs[0].([]GetBitbucketCredentialSsh)[vs[1].(int)]
	}).(GetBitbucketCredentialSshOutput)
}

type GetDockerCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetDockerCredentialInput is an input type that accepts GetDockerCredentialArgs and GetDockerCredentialOutput values.
// You can construct a concrete instance of `GetDockerCredentialInput` via:
//
//	GetDockerCredentialArgs{...}
type GetDockerCredentialInput interface {
	pulumi.Input

	ToGetDockerCredentialOutput() GetDockerCredentialOutput
	ToGetDockerCredentialOutputWithContext(context.Context) GetDockerCredentialOutput
}

type GetDockerCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetDockerCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDockerCredential)(nil)).Elem()
}

func (i GetDockerCredentialArgs) ToGetDockerCredentialOutput() GetDockerCredentialOutput {
	return i.ToGetDockerCredentialOutputWithContext(context.Background())
}

func (i GetDockerCredentialArgs) ToGetDockerCredentialOutputWithContext(ctx context.Context) GetDockerCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDockerCredentialOutput)
}

// GetDockerCredentialArrayInput is an input type that accepts GetDockerCredentialArray and GetDockerCredentialArrayOutput values.
// You can construct a concrete instance of `GetDockerCredentialArrayInput` via:
//
//	GetDockerCredentialArray{ GetDockerCredentialArgs{...} }
type GetDockerCredentialArrayInput interface {
	pulumi.Input

	ToGetDockerCredentialArrayOutput() GetDockerCredentialArrayOutput
	ToGetDockerCredentialArrayOutputWithContext(context.Context) GetDockerCredentialArrayOutput
}

type GetDockerCredentialArray []GetDockerCredentialInput

func (GetDockerCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDockerCredential)(nil)).Elem()
}

func (i GetDockerCredentialArray) ToGetDockerCredentialArrayOutput() GetDockerCredentialArrayOutput {
	return i.ToGetDockerCredentialArrayOutputWithContext(context.Background())
}

func (i GetDockerCredentialArray) ToGetDockerCredentialArrayOutputWithContext(ctx context.Context) GetDockerCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDockerCredentialArrayOutput)
}

type GetDockerCredentialOutput struct{ *pulumi.OutputState }

func (GetDockerCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDockerCredential)(nil)).Elem()
}

func (o GetDockerCredentialOutput) ToGetDockerCredentialOutput() GetDockerCredentialOutput {
	return o
}

func (o GetDockerCredentialOutput) ToGetDockerCredentialOutputWithContext(ctx context.Context) GetDockerCredentialOutput {
	return o
}

func (o GetDockerCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetDockerCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetDockerCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetDockerCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetDockerCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDockerCredential)(nil)).Elem()
}

func (o GetDockerCredentialArrayOutput) ToGetDockerCredentialArrayOutput() GetDockerCredentialArrayOutput {
	return o
}

func (o GetDockerCredentialArrayOutput) ToGetDockerCredentialArrayOutputWithContext(ctx context.Context) GetDockerCredentialArrayOutput {
	return o
}

func (o GetDockerCredentialArrayOutput) Index(i pulumi.IntInput) GetDockerCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDockerCredential {
		return vs[0].([]GetDockerCredential)[vs[1].(int)]
	}).(GetDockerCredentialOutput)
}

type GetGcpInheritFromDelegate struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetGcpInheritFromDelegateInput is an input type that accepts GetGcpInheritFromDelegateArgs and GetGcpInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetGcpInheritFromDelegateInput` via:
//
//	GetGcpInheritFromDelegateArgs{...}
type GetGcpInheritFromDelegateInput interface {
	pulumi.Input

	ToGetGcpInheritFromDelegateOutput() GetGcpInheritFromDelegateOutput
	ToGetGcpInheritFromDelegateOutputWithContext(context.Context) GetGcpInheritFromDelegateOutput
}

type GetGcpInheritFromDelegateArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetGcpInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpInheritFromDelegate)(nil)).Elem()
}

func (i GetGcpInheritFromDelegateArgs) ToGetGcpInheritFromDelegateOutput() GetGcpInheritFromDelegateOutput {
	return i.ToGetGcpInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetGcpInheritFromDelegateArgs) ToGetGcpInheritFromDelegateOutputWithContext(ctx context.Context) GetGcpInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpInheritFromDelegateOutput)
}

// GetGcpInheritFromDelegateArrayInput is an input type that accepts GetGcpInheritFromDelegateArray and GetGcpInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetGcpInheritFromDelegateArrayInput` via:
//
//	GetGcpInheritFromDelegateArray{ GetGcpInheritFromDelegateArgs{...} }
type GetGcpInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetGcpInheritFromDelegateArrayOutput() GetGcpInheritFromDelegateArrayOutput
	ToGetGcpInheritFromDelegateArrayOutputWithContext(context.Context) GetGcpInheritFromDelegateArrayOutput
}

type GetGcpInheritFromDelegateArray []GetGcpInheritFromDelegateInput

func (GetGcpInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpInheritFromDelegate)(nil)).Elem()
}

func (i GetGcpInheritFromDelegateArray) ToGetGcpInheritFromDelegateArrayOutput() GetGcpInheritFromDelegateArrayOutput {
	return i.ToGetGcpInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetGcpInheritFromDelegateArray) ToGetGcpInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetGcpInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpInheritFromDelegateArrayOutput)
}

type GetGcpInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetGcpInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpInheritFromDelegate)(nil)).Elem()
}

func (o GetGcpInheritFromDelegateOutput) ToGetGcpInheritFromDelegateOutput() GetGcpInheritFromDelegateOutput {
	return o
}

func (o GetGcpInheritFromDelegateOutput) ToGetGcpInheritFromDelegateOutputWithContext(ctx context.Context) GetGcpInheritFromDelegateOutput {
	return o
}

func (o GetGcpInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetGcpInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetGcpInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpInheritFromDelegate)(nil)).Elem()
}

func (o GetGcpInheritFromDelegateArrayOutput) ToGetGcpInheritFromDelegateArrayOutput() GetGcpInheritFromDelegateArrayOutput {
	return o
}

func (o GetGcpInheritFromDelegateArrayOutput) ToGetGcpInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetGcpInheritFromDelegateArrayOutput {
	return o
}

func (o GetGcpInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetGcpInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpInheritFromDelegate {
		return vs[0].([]GetGcpInheritFromDelegate)[vs[1].(int)]
	}).(GetGcpInheritFromDelegateOutput)
}

type GetGcpManual struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	SecretKeyRef      string   `pulumi:"secretKeyRef"`
}

// GetGcpManualInput is an input type that accepts GetGcpManualArgs and GetGcpManualOutput values.
// You can construct a concrete instance of `GetGcpManualInput` via:
//
//	GetGcpManualArgs{...}
type GetGcpManualInput interface {
	pulumi.Input

	ToGetGcpManualOutput() GetGcpManualOutput
	ToGetGcpManualOutputWithContext(context.Context) GetGcpManualOutput
}

type GetGcpManualArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	SecretKeyRef      pulumi.StringInput      `pulumi:"secretKeyRef"`
}

func (GetGcpManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpManual)(nil)).Elem()
}

func (i GetGcpManualArgs) ToGetGcpManualOutput() GetGcpManualOutput {
	return i.ToGetGcpManualOutputWithContext(context.Background())
}

func (i GetGcpManualArgs) ToGetGcpManualOutputWithContext(ctx context.Context) GetGcpManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpManualOutput)
}

// GetGcpManualArrayInput is an input type that accepts GetGcpManualArray and GetGcpManualArrayOutput values.
// You can construct a concrete instance of `GetGcpManualArrayInput` via:
//
//	GetGcpManualArray{ GetGcpManualArgs{...} }
type GetGcpManualArrayInput interface {
	pulumi.Input

	ToGetGcpManualArrayOutput() GetGcpManualArrayOutput
	ToGetGcpManualArrayOutputWithContext(context.Context) GetGcpManualArrayOutput
}

type GetGcpManualArray []GetGcpManualInput

func (GetGcpManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpManual)(nil)).Elem()
}

func (i GetGcpManualArray) ToGetGcpManualArrayOutput() GetGcpManualArrayOutput {
	return i.ToGetGcpManualArrayOutputWithContext(context.Background())
}

func (i GetGcpManualArray) ToGetGcpManualArrayOutputWithContext(ctx context.Context) GetGcpManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpManualArrayOutput)
}

type GetGcpManualOutput struct{ *pulumi.OutputState }

func (GetGcpManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpManual)(nil)).Elem()
}

func (o GetGcpManualOutput) ToGetGcpManualOutput() GetGcpManualOutput {
	return o
}

func (o GetGcpManualOutput) ToGetGcpManualOutputWithContext(ctx context.Context) GetGcpManualOutput {
	return o
}

func (o GetGcpManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

func (o GetGcpManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetGcpManualArrayOutput struct{ *pulumi.OutputState }

func (GetGcpManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpManual)(nil)).Elem()
}

func (o GetGcpManualArrayOutput) ToGetGcpManualArrayOutput() GetGcpManualArrayOutput {
	return o
}

func (o GetGcpManualArrayOutput) ToGetGcpManualArrayOutputWithContext(ctx context.Context) GetGcpManualArrayOutput {
	return o
}

func (o GetGcpManualArrayOutput) Index(i pulumi.IntInput) GetGcpManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpManual {
		return vs[0].([]GetGcpManual)[vs[1].(int)]
	}).(GetGcpManualOutput)
}

type GetGitCredential struct {
	Https []GetGitCredentialHttp `pulumi:"https"`
	Sshes []GetGitCredentialSsh  `pulumi:"sshes"`
}

// GetGitCredentialInput is an input type that accepts GetGitCredentialArgs and GetGitCredentialOutput values.
// You can construct a concrete instance of `GetGitCredentialInput` via:
//
//	GetGitCredentialArgs{...}
type GetGitCredentialInput interface {
	pulumi.Input

	ToGetGitCredentialOutput() GetGitCredentialOutput
	ToGetGitCredentialOutputWithContext(context.Context) GetGitCredentialOutput
}

type GetGitCredentialArgs struct {
	Https GetGitCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetGitCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetGitCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredential)(nil)).Elem()
}

func (i GetGitCredentialArgs) ToGetGitCredentialOutput() GetGitCredentialOutput {
	return i.ToGetGitCredentialOutputWithContext(context.Background())
}

func (i GetGitCredentialArgs) ToGetGitCredentialOutputWithContext(ctx context.Context) GetGitCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialOutput)
}

// GetGitCredentialArrayInput is an input type that accepts GetGitCredentialArray and GetGitCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitCredentialArrayInput` via:
//
//	GetGitCredentialArray{ GetGitCredentialArgs{...} }
type GetGitCredentialArrayInput interface {
	pulumi.Input

	ToGetGitCredentialArrayOutput() GetGitCredentialArrayOutput
	ToGetGitCredentialArrayOutputWithContext(context.Context) GetGitCredentialArrayOutput
}

type GetGitCredentialArray []GetGitCredentialInput

func (GetGitCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredential)(nil)).Elem()
}

func (i GetGitCredentialArray) ToGetGitCredentialArrayOutput() GetGitCredentialArrayOutput {
	return i.ToGetGitCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitCredentialArray) ToGetGitCredentialArrayOutputWithContext(ctx context.Context) GetGitCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialArrayOutput)
}

type GetGitCredentialOutput struct{ *pulumi.OutputState }

func (GetGitCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredential)(nil)).Elem()
}

func (o GetGitCredentialOutput) ToGetGitCredentialOutput() GetGitCredentialOutput {
	return o
}

func (o GetGitCredentialOutput) ToGetGitCredentialOutputWithContext(ctx context.Context) GetGitCredentialOutput {
	return o
}

func (o GetGitCredentialOutput) Https() GetGitCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGitCredential) []GetGitCredentialHttp { return v.Https }).(GetGitCredentialHttpArrayOutput)
}

func (o GetGitCredentialOutput) Sshes() GetGitCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGitCredential) []GetGitCredentialSsh { return v.Sshes }).(GetGitCredentialSshArrayOutput)
}

type GetGitCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredential)(nil)).Elem()
}

func (o GetGitCredentialArrayOutput) ToGetGitCredentialArrayOutput() GetGitCredentialArrayOutput {
	return o
}

func (o GetGitCredentialArrayOutput) ToGetGitCredentialArrayOutputWithContext(ctx context.Context) GetGitCredentialArrayOutput {
	return o
}

func (o GetGitCredentialArrayOutput) Index(i pulumi.IntInput) GetGitCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitCredential {
		return vs[0].([]GetGitCredential)[vs[1].(int)]
	}).(GetGitCredentialOutput)
}

type GetGitCredentialHttp struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGitCredentialHttpInput is an input type that accepts GetGitCredentialHttpArgs and GetGitCredentialHttpOutput values.
// You can construct a concrete instance of `GetGitCredentialHttpInput` via:
//
//	GetGitCredentialHttpArgs{...}
type GetGitCredentialHttpInput interface {
	pulumi.Input

	ToGetGitCredentialHttpOutput() GetGitCredentialHttpOutput
	ToGetGitCredentialHttpOutputWithContext(context.Context) GetGitCredentialHttpOutput
}

type GetGitCredentialHttpArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGitCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredentialHttp)(nil)).Elem()
}

func (i GetGitCredentialHttpArgs) ToGetGitCredentialHttpOutput() GetGitCredentialHttpOutput {
	return i.ToGetGitCredentialHttpOutputWithContext(context.Background())
}

func (i GetGitCredentialHttpArgs) ToGetGitCredentialHttpOutputWithContext(ctx context.Context) GetGitCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialHttpOutput)
}

// GetGitCredentialHttpArrayInput is an input type that accepts GetGitCredentialHttpArray and GetGitCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGitCredentialHttpArrayInput` via:
//
//	GetGitCredentialHttpArray{ GetGitCredentialHttpArgs{...} }
type GetGitCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGitCredentialHttpArrayOutput() GetGitCredentialHttpArrayOutput
	ToGetGitCredentialHttpArrayOutputWithContext(context.Context) GetGitCredentialHttpArrayOutput
}

type GetGitCredentialHttpArray []GetGitCredentialHttpInput

func (GetGitCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredentialHttp)(nil)).Elem()
}

func (i GetGitCredentialHttpArray) ToGetGitCredentialHttpArrayOutput() GetGitCredentialHttpArrayOutput {
	return i.ToGetGitCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGitCredentialHttpArray) ToGetGitCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialHttpArrayOutput)
}

type GetGitCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGitCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredentialHttp)(nil)).Elem()
}

func (o GetGitCredentialHttpOutput) ToGetGitCredentialHttpOutput() GetGitCredentialHttpOutput {
	return o
}

func (o GetGitCredentialHttpOutput) ToGetGitCredentialHttpOutputWithContext(ctx context.Context) GetGitCredentialHttpOutput {
	return o
}

func (o GetGitCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetGitCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGitCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGitCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGitCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredentialHttp)(nil)).Elem()
}

func (o GetGitCredentialHttpArrayOutput) ToGetGitCredentialHttpArrayOutput() GetGitCredentialHttpArrayOutput {
	return o
}

func (o GetGitCredentialHttpArrayOutput) ToGetGitCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitCredentialHttpArrayOutput {
	return o
}

func (o GetGitCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGitCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitCredentialHttp {
		return vs[0].([]GetGitCredentialHttp)[vs[1].(int)]
	}).(GetGitCredentialHttpOutput)
}

type GetGitCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGitCredentialSshInput is an input type that accepts GetGitCredentialSshArgs and GetGitCredentialSshOutput values.
// You can construct a concrete instance of `GetGitCredentialSshInput` via:
//
//	GetGitCredentialSshArgs{...}
type GetGitCredentialSshInput interface {
	pulumi.Input

	ToGetGitCredentialSshOutput() GetGitCredentialSshOutput
	ToGetGitCredentialSshOutputWithContext(context.Context) GetGitCredentialSshOutput
}

type GetGitCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGitCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredentialSsh)(nil)).Elem()
}

func (i GetGitCredentialSshArgs) ToGetGitCredentialSshOutput() GetGitCredentialSshOutput {
	return i.ToGetGitCredentialSshOutputWithContext(context.Background())
}

func (i GetGitCredentialSshArgs) ToGetGitCredentialSshOutputWithContext(ctx context.Context) GetGitCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialSshOutput)
}

// GetGitCredentialSshArrayInput is an input type that accepts GetGitCredentialSshArray and GetGitCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGitCredentialSshArrayInput` via:
//
//	GetGitCredentialSshArray{ GetGitCredentialSshArgs{...} }
type GetGitCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGitCredentialSshArrayOutput() GetGitCredentialSshArrayOutput
	ToGetGitCredentialSshArrayOutputWithContext(context.Context) GetGitCredentialSshArrayOutput
}

type GetGitCredentialSshArray []GetGitCredentialSshInput

func (GetGitCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredentialSsh)(nil)).Elem()
}

func (i GetGitCredentialSshArray) ToGetGitCredentialSshArrayOutput() GetGitCredentialSshArrayOutput {
	return i.ToGetGitCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGitCredentialSshArray) ToGetGitCredentialSshArrayOutputWithContext(ctx context.Context) GetGitCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitCredentialSshArrayOutput)
}

type GetGitCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGitCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitCredentialSsh)(nil)).Elem()
}

func (o GetGitCredentialSshOutput) ToGetGitCredentialSshOutput() GetGitCredentialSshOutput {
	return o
}

func (o GetGitCredentialSshOutput) ToGetGitCredentialSshOutputWithContext(ctx context.Context) GetGitCredentialSshOutput {
	return o
}

func (o GetGitCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGitCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGitCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitCredentialSsh)(nil)).Elem()
}

func (o GetGitCredentialSshArrayOutput) ToGetGitCredentialSshArrayOutput() GetGitCredentialSshArrayOutput {
	return o
}

func (o GetGitCredentialSshArrayOutput) ToGetGitCredentialSshArrayOutputWithContext(ctx context.Context) GetGitCredentialSshArrayOutput {
	return o
}

func (o GetGitCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGitCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitCredentialSsh {
		return vs[0].([]GetGitCredentialSsh)[vs[1].(int)]
	}).(GetGitCredentialSshOutput)
}

type GetGithubApiAuthentication struct {
	GithubApps []GetGithubApiAuthenticationGithubApp `pulumi:"githubApps"`
	TokenRef   string                                `pulumi:"tokenRef"`
}

// GetGithubApiAuthenticationInput is an input type that accepts GetGithubApiAuthenticationArgs and GetGithubApiAuthenticationOutput values.
// You can construct a concrete instance of `GetGithubApiAuthenticationInput` via:
//
//	GetGithubApiAuthenticationArgs{...}
type GetGithubApiAuthenticationInput interface {
	pulumi.Input

	ToGetGithubApiAuthenticationOutput() GetGithubApiAuthenticationOutput
	ToGetGithubApiAuthenticationOutputWithContext(context.Context) GetGithubApiAuthenticationOutput
}

type GetGithubApiAuthenticationArgs struct {
	GithubApps GetGithubApiAuthenticationGithubAppArrayInput `pulumi:"githubApps"`
	TokenRef   pulumi.StringInput                            `pulumi:"tokenRef"`
}

func (GetGithubApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubApiAuthentication)(nil)).Elem()
}

func (i GetGithubApiAuthenticationArgs) ToGetGithubApiAuthenticationOutput() GetGithubApiAuthenticationOutput {
	return i.ToGetGithubApiAuthenticationOutputWithContext(context.Background())
}

func (i GetGithubApiAuthenticationArgs) ToGetGithubApiAuthenticationOutputWithContext(ctx context.Context) GetGithubApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubApiAuthenticationOutput)
}

// GetGithubApiAuthenticationArrayInput is an input type that accepts GetGithubApiAuthenticationArray and GetGithubApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGithubApiAuthenticationArrayInput` via:
//
//	GetGithubApiAuthenticationArray{ GetGithubApiAuthenticationArgs{...} }
type GetGithubApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGithubApiAuthenticationArrayOutput() GetGithubApiAuthenticationArrayOutput
	ToGetGithubApiAuthenticationArrayOutputWithContext(context.Context) GetGithubApiAuthenticationArrayOutput
}

type GetGithubApiAuthenticationArray []GetGithubApiAuthenticationInput

func (GetGithubApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubApiAuthentication)(nil)).Elem()
}

func (i GetGithubApiAuthenticationArray) ToGetGithubApiAuthenticationArrayOutput() GetGithubApiAuthenticationArrayOutput {
	return i.ToGetGithubApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGithubApiAuthenticationArray) ToGetGithubApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGithubApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubApiAuthenticationArrayOutput)
}

type GetGithubApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGithubApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubApiAuthentication)(nil)).Elem()
}

func (o GetGithubApiAuthenticationOutput) ToGetGithubApiAuthenticationOutput() GetGithubApiAuthenticationOutput {
	return o
}

func (o GetGithubApiAuthenticationOutput) ToGetGithubApiAuthenticationOutputWithContext(ctx context.Context) GetGithubApiAuthenticationOutput {
	return o
}

func (o GetGithubApiAuthenticationOutput) GithubApps() GetGithubApiAuthenticationGithubAppArrayOutput {
	return o.ApplyT(func(v GetGithubApiAuthentication) []GetGithubApiAuthenticationGithubApp { return v.GithubApps }).(GetGithubApiAuthenticationGithubAppArrayOutput)
}

func (o GetGithubApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetGithubApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGithubApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubApiAuthentication)(nil)).Elem()
}

func (o GetGithubApiAuthenticationArrayOutput) ToGetGithubApiAuthenticationArrayOutput() GetGithubApiAuthenticationArrayOutput {
	return o
}

func (o GetGithubApiAuthenticationArrayOutput) ToGetGithubApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGithubApiAuthenticationArrayOutput {
	return o
}

func (o GetGithubApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGithubApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubApiAuthentication {
		return vs[0].([]GetGithubApiAuthentication)[vs[1].(int)]
	}).(GetGithubApiAuthenticationOutput)
}

type GetGithubApiAuthenticationGithubApp struct {
	ApplicationId  string `pulumi:"applicationId"`
	InstallationId string `pulumi:"installationId"`
	PrivateKeyRef  string `pulumi:"privateKeyRef"`
}

// GetGithubApiAuthenticationGithubAppInput is an input type that accepts GetGithubApiAuthenticationGithubAppArgs and GetGithubApiAuthenticationGithubAppOutput values.
// You can construct a concrete instance of `GetGithubApiAuthenticationGithubAppInput` via:
//
//	GetGithubApiAuthenticationGithubAppArgs{...}
type GetGithubApiAuthenticationGithubAppInput interface {
	pulumi.Input

	ToGetGithubApiAuthenticationGithubAppOutput() GetGithubApiAuthenticationGithubAppOutput
	ToGetGithubApiAuthenticationGithubAppOutputWithContext(context.Context) GetGithubApiAuthenticationGithubAppOutput
}

type GetGithubApiAuthenticationGithubAppArgs struct {
	ApplicationId  pulumi.StringInput `pulumi:"applicationId"`
	InstallationId pulumi.StringInput `pulumi:"installationId"`
	PrivateKeyRef  pulumi.StringInput `pulumi:"privateKeyRef"`
}

func (GetGithubApiAuthenticationGithubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GetGithubApiAuthenticationGithubAppArgs) ToGetGithubApiAuthenticationGithubAppOutput() GetGithubApiAuthenticationGithubAppOutput {
	return i.ToGetGithubApiAuthenticationGithubAppOutputWithContext(context.Background())
}

func (i GetGithubApiAuthenticationGithubAppArgs) ToGetGithubApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GetGithubApiAuthenticationGithubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubApiAuthenticationGithubAppOutput)
}

// GetGithubApiAuthenticationGithubAppArrayInput is an input type that accepts GetGithubApiAuthenticationGithubAppArray and GetGithubApiAuthenticationGithubAppArrayOutput values.
// You can construct a concrete instance of `GetGithubApiAuthenticationGithubAppArrayInput` via:
//
//	GetGithubApiAuthenticationGithubAppArray{ GetGithubApiAuthenticationGithubAppArgs{...} }
type GetGithubApiAuthenticationGithubAppArrayInput interface {
	pulumi.Input

	ToGetGithubApiAuthenticationGithubAppArrayOutput() GetGithubApiAuthenticationGithubAppArrayOutput
	ToGetGithubApiAuthenticationGithubAppArrayOutputWithContext(context.Context) GetGithubApiAuthenticationGithubAppArrayOutput
}

type GetGithubApiAuthenticationGithubAppArray []GetGithubApiAuthenticationGithubAppInput

func (GetGithubApiAuthenticationGithubAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GetGithubApiAuthenticationGithubAppArray) ToGetGithubApiAuthenticationGithubAppArrayOutput() GetGithubApiAuthenticationGithubAppArrayOutput {
	return i.ToGetGithubApiAuthenticationGithubAppArrayOutputWithContext(context.Background())
}

func (i GetGithubApiAuthenticationGithubAppArray) ToGetGithubApiAuthenticationGithubAppArrayOutputWithContext(ctx context.Context) GetGithubApiAuthenticationGithubAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubApiAuthenticationGithubAppArrayOutput)
}

type GetGithubApiAuthenticationGithubAppOutput struct{ *pulumi.OutputState }

func (GetGithubApiAuthenticationGithubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GetGithubApiAuthenticationGithubAppOutput) ToGetGithubApiAuthenticationGithubAppOutput() GetGithubApiAuthenticationGithubAppOutput {
	return o
}

func (o GetGithubApiAuthenticationGithubAppOutput) ToGetGithubApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GetGithubApiAuthenticationGithubAppOutput {
	return o
}

func (o GetGithubApiAuthenticationGithubAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubApiAuthenticationGithubApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o GetGithubApiAuthenticationGithubAppOutput) InstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubApiAuthenticationGithubApp) string { return v.InstallationId }).(pulumi.StringOutput)
}

func (o GetGithubApiAuthenticationGithubAppOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubApiAuthenticationGithubApp) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

type GetGithubApiAuthenticationGithubAppArrayOutput struct{ *pulumi.OutputState }

func (GetGithubApiAuthenticationGithubAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GetGithubApiAuthenticationGithubAppArrayOutput) ToGetGithubApiAuthenticationGithubAppArrayOutput() GetGithubApiAuthenticationGithubAppArrayOutput {
	return o
}

func (o GetGithubApiAuthenticationGithubAppArrayOutput) ToGetGithubApiAuthenticationGithubAppArrayOutputWithContext(ctx context.Context) GetGithubApiAuthenticationGithubAppArrayOutput {
	return o
}

func (o GetGithubApiAuthenticationGithubAppArrayOutput) Index(i pulumi.IntInput) GetGithubApiAuthenticationGithubAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubApiAuthenticationGithubApp {
		return vs[0].([]GetGithubApiAuthenticationGithubApp)[vs[1].(int)]
	}).(GetGithubApiAuthenticationGithubAppOutput)
}

type GetGithubCredential struct {
	Https []GetGithubCredentialHttp `pulumi:"https"`
	Sshes []GetGithubCredentialSsh  `pulumi:"sshes"`
}

// GetGithubCredentialInput is an input type that accepts GetGithubCredentialArgs and GetGithubCredentialOutput values.
// You can construct a concrete instance of `GetGithubCredentialInput` via:
//
//	GetGithubCredentialArgs{...}
type GetGithubCredentialInput interface {
	pulumi.Input

	ToGetGithubCredentialOutput() GetGithubCredentialOutput
	ToGetGithubCredentialOutputWithContext(context.Context) GetGithubCredentialOutput
}

type GetGithubCredentialArgs struct {
	Https GetGithubCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetGithubCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetGithubCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubCredential)(nil)).Elem()
}

func (i GetGithubCredentialArgs) ToGetGithubCredentialOutput() GetGithubCredentialOutput {
	return i.ToGetGithubCredentialOutputWithContext(context.Background())
}

func (i GetGithubCredentialArgs) ToGetGithubCredentialOutputWithContext(ctx context.Context) GetGithubCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubCredentialOutput)
}

// GetGithubCredentialArrayInput is an input type that accepts GetGithubCredentialArray and GetGithubCredentialArrayOutput values.
// You can construct a concrete instance of `GetGithubCredentialArrayInput` via:
//
//	GetGithubCredentialArray{ GetGithubCredentialArgs{...} }
type GetGithubCredentialArrayInput interface {
	pulumi.Input

	ToGetGithubCredentialArrayOutput() GetGithubCredentialArrayOutput
	ToGetGithubCredentialArrayOutputWithContext(context.Context) GetGithubCredentialArrayOutput
}

type GetGithubCredentialArray []GetGithubCredentialInput

func (GetGithubCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubCredential)(nil)).Elem()
}

func (i GetGithubCredentialArray) ToGetGithubCredentialArrayOutput() GetGithubCredentialArrayOutput {
	return i.ToGetGithubCredentialArrayOutputWithContext(context.Background())
}

func (i GetGithubCredentialArray) ToGetGithubCredentialArrayOutputWithContext(ctx context.Context) GetGithubCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubCredentialArrayOutput)
}

type GetGithubCredentialOutput struct{ *pulumi.OutputState }

func (GetGithubCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubCredential)(nil)).Elem()
}

func (o GetGithubCredentialOutput) ToGetGithubCredentialOutput() GetGithubCredentialOutput {
	return o
}

func (o GetGithubCredentialOutput) ToGetGithubCredentialOutputWithContext(ctx context.Context) GetGithubCredentialOutput {
	return o
}

func (o GetGithubCredentialOutput) Https() GetGithubCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGithubCredential) []GetGithubCredentialHttp { return v.Https }).(GetGithubCredentialHttpArrayOutput)
}

func (o GetGithubCredentialOutput) Sshes() GetGithubCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGithubCredential) []GetGithubCredentialSsh { return v.Sshes }).(GetGithubCredentialSshArrayOutput)
}

type GetGithubCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGithubCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubCredential)(nil)).Elem()
}

func (o GetGithubCredentialArrayOutput) ToGetGithubCredentialArrayOutput() GetGithubCredentialArrayOutput {
	return o
}

func (o GetGithubCredentialArrayOutput) ToGetGithubCredentialArrayOutputWithContext(ctx context.Context) GetGithubCredentialArrayOutput {
	return o
}

func (o GetGithubCredentialArrayOutput) Index(i pulumi.IntInput) GetGithubCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubCredential {
		return vs[0].([]GetGithubCredential)[vs[1].(int)]
	}).(GetGithubCredentialOutput)
}

type GetGithubCredentialHttp struct {
	TokenRef    string `pulumi:"tokenRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGithubCredentialHttpInput is an input type that accepts GetGithubCredentialHttpArgs and GetGithubCredentialHttpOutput values.
// You can construct a concrete instance of `GetGithubCredentialHttpInput` via:
//
//	GetGithubCredentialHttpArgs{...}
type GetGithubCredentialHttpInput interface {
	pulumi.Input

	ToGetGithubCredentialHttpOutput() GetGithubCredentialHttpOutput
	ToGetGithubCredentialHttpOutputWithContext(context.Context) GetGithubCredentialHttpOutput
}

type GetGithubCredentialHttpArgs struct {
	TokenRef    pulumi.StringInput `pulumi:"tokenRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGithubCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubCredentialHttp)(nil)).Elem()
}

func (i GetGithubCredentialHttpArgs) ToGetGithubCredentialHttpOutput() GetGithubCredentialHttpOutput {
	return i.ToGetGithubCredentialHttpOutputWithContext(context.Background())
}

func (i GetGithubCredentialHttpArgs) ToGetGithubCredentialHttpOutputWithContext(ctx context.Context) GetGithubCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubCredentialHttpOutput)
}

// GetGithubCredentialHttpArrayInput is an input type that accepts GetGithubCredentialHttpArray and GetGithubCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGithubCredentialHttpArrayInput` via:
//
//	GetGithubCredentialHttpArray{ GetGithubCredentialHttpArgs{...} }
type GetGithubCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGithubCredentialHttpArrayOutput() GetGithubCredentialHttpArrayOutput
	ToGetGithubCredentialHttpArrayOutputWithContext(context.Context) GetGithubCredentialHttpArrayOutput
}

type GetGithubCredentialHttpArray []GetGithubCredentialHttpInput

func (GetGithubCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubCredentialHttp)(nil)).Elem()
}

func (i GetGithubCredentialHttpArray) ToGetGithubCredentialHttpArrayOutput() GetGithubCredentialHttpArrayOutput {
	return i.ToGetGithubCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGithubCredentialHttpArray) ToGetGithubCredentialHttpArrayOutputWithContext(ctx context.Context) GetGithubCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubCredentialHttpArrayOutput)
}

type GetGithubCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGithubCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubCredentialHttp)(nil)).Elem()
}

func (o GetGithubCredentialHttpOutput) ToGetGithubCredentialHttpOutput() GetGithubCredentialHttpOutput {
	return o
}

func (o GetGithubCredentialHttpOutput) ToGetGithubCredentialHttpOutputWithContext(ctx context.Context) GetGithubCredentialHttpOutput {
	return o
}

func (o GetGithubCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GetGithubCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGithubCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGithubCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGithubCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubCredentialHttp)(nil)).Elem()
}

func (o GetGithubCredentialHttpArrayOutput) ToGetGithubCredentialHttpArrayOutput() GetGithubCredentialHttpArrayOutput {
	return o
}

func (o GetGithubCredentialHttpArrayOutput) ToGetGithubCredentialHttpArrayOutputWithContext(ctx context.Context) GetGithubCredentialHttpArrayOutput {
	return o
}

func (o GetGithubCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGithubCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubCredentialHttp {
		return vs[0].([]GetGithubCredentialHttp)[vs[1].(int)]
	}).(GetGithubCredentialHttpOutput)
}

type GetGithubCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGithubCredentialSshInput is an input type that accepts GetGithubCredentialSshArgs and GetGithubCredentialSshOutput values.
// You can construct a concrete instance of `GetGithubCredentialSshInput` via:
//
//	GetGithubCredentialSshArgs{...}
type GetGithubCredentialSshInput interface {
	pulumi.Input

	ToGetGithubCredentialSshOutput() GetGithubCredentialSshOutput
	ToGetGithubCredentialSshOutputWithContext(context.Context) GetGithubCredentialSshOutput
}

type GetGithubCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGithubCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubCredentialSsh)(nil)).Elem()
}

func (i GetGithubCredentialSshArgs) ToGetGithubCredentialSshOutput() GetGithubCredentialSshOutput {
	return i.ToGetGithubCredentialSshOutputWithContext(context.Background())
}

func (i GetGithubCredentialSshArgs) ToGetGithubCredentialSshOutputWithContext(ctx context.Context) GetGithubCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubCredentialSshOutput)
}

// GetGithubCredentialSshArrayInput is an input type that accepts GetGithubCredentialSshArray and GetGithubCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGithubCredentialSshArrayInput` via:
//
//	GetGithubCredentialSshArray{ GetGithubCredentialSshArgs{...} }
type GetGithubCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGithubCredentialSshArrayOutput() GetGithubCredentialSshArrayOutput
	ToGetGithubCredentialSshArrayOutputWithContext(context.Context) GetGithubCredentialSshArrayOutput
}

type GetGithubCredentialSshArray []GetGithubCredentialSshInput

func (GetGithubCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubCredentialSsh)(nil)).Elem()
}

func (i GetGithubCredentialSshArray) ToGetGithubCredentialSshArrayOutput() GetGithubCredentialSshArrayOutput {
	return i.ToGetGithubCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGithubCredentialSshArray) ToGetGithubCredentialSshArrayOutputWithContext(ctx context.Context) GetGithubCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubCredentialSshArrayOutput)
}

type GetGithubCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGithubCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubCredentialSsh)(nil)).Elem()
}

func (o GetGithubCredentialSshOutput) ToGetGithubCredentialSshOutput() GetGithubCredentialSshOutput {
	return o
}

func (o GetGithubCredentialSshOutput) ToGetGithubCredentialSshOutputWithContext(ctx context.Context) GetGithubCredentialSshOutput {
	return o
}

func (o GetGithubCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGithubCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGithubCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubCredentialSsh)(nil)).Elem()
}

func (o GetGithubCredentialSshArrayOutput) ToGetGithubCredentialSshArrayOutput() GetGithubCredentialSshArrayOutput {
	return o
}

func (o GetGithubCredentialSshArrayOutput) ToGetGithubCredentialSshArrayOutputWithContext(ctx context.Context) GetGithubCredentialSshArrayOutput {
	return o
}

func (o GetGithubCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGithubCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubCredentialSsh {
		return vs[0].([]GetGithubCredentialSsh)[vs[1].(int)]
	}).(GetGithubCredentialSshOutput)
}

type GetGitlabApiAuthentication struct {
	TokenRef string `pulumi:"tokenRef"`
}

// GetGitlabApiAuthenticationInput is an input type that accepts GetGitlabApiAuthenticationArgs and GetGitlabApiAuthenticationOutput values.
// You can construct a concrete instance of `GetGitlabApiAuthenticationInput` via:
//
//	GetGitlabApiAuthenticationArgs{...}
type GetGitlabApiAuthenticationInput interface {
	pulumi.Input

	ToGetGitlabApiAuthenticationOutput() GetGitlabApiAuthenticationOutput
	ToGetGitlabApiAuthenticationOutputWithContext(context.Context) GetGitlabApiAuthenticationOutput
}

type GetGitlabApiAuthenticationArgs struct {
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetGitlabApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabApiAuthentication)(nil)).Elem()
}

func (i GetGitlabApiAuthenticationArgs) ToGetGitlabApiAuthenticationOutput() GetGitlabApiAuthenticationOutput {
	return i.ToGetGitlabApiAuthenticationOutputWithContext(context.Background())
}

func (i GetGitlabApiAuthenticationArgs) ToGetGitlabApiAuthenticationOutputWithContext(ctx context.Context) GetGitlabApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabApiAuthenticationOutput)
}

// GetGitlabApiAuthenticationArrayInput is an input type that accepts GetGitlabApiAuthenticationArray and GetGitlabApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGitlabApiAuthenticationArrayInput` via:
//
//	GetGitlabApiAuthenticationArray{ GetGitlabApiAuthenticationArgs{...} }
type GetGitlabApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGitlabApiAuthenticationArrayOutput() GetGitlabApiAuthenticationArrayOutput
	ToGetGitlabApiAuthenticationArrayOutputWithContext(context.Context) GetGitlabApiAuthenticationArrayOutput
}

type GetGitlabApiAuthenticationArray []GetGitlabApiAuthenticationInput

func (GetGitlabApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabApiAuthentication)(nil)).Elem()
}

func (i GetGitlabApiAuthenticationArray) ToGetGitlabApiAuthenticationArrayOutput() GetGitlabApiAuthenticationArrayOutput {
	return i.ToGetGitlabApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGitlabApiAuthenticationArray) ToGetGitlabApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGitlabApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabApiAuthenticationArrayOutput)
}

type GetGitlabApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGitlabApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabApiAuthentication)(nil)).Elem()
}

func (o GetGitlabApiAuthenticationOutput) ToGetGitlabApiAuthenticationOutput() GetGitlabApiAuthenticationOutput {
	return o
}

func (o GetGitlabApiAuthenticationOutput) ToGetGitlabApiAuthenticationOutputWithContext(ctx context.Context) GetGitlabApiAuthenticationOutput {
	return o
}

func (o GetGitlabApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetGitlabApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabApiAuthentication)(nil)).Elem()
}

func (o GetGitlabApiAuthenticationArrayOutput) ToGetGitlabApiAuthenticationArrayOutput() GetGitlabApiAuthenticationArrayOutput {
	return o
}

func (o GetGitlabApiAuthenticationArrayOutput) ToGetGitlabApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGitlabApiAuthenticationArrayOutput {
	return o
}

func (o GetGitlabApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGitlabApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabApiAuthentication {
		return vs[0].([]GetGitlabApiAuthentication)[vs[1].(int)]
	}).(GetGitlabApiAuthenticationOutput)
}

type GetGitlabCredential struct {
	Https []GetGitlabCredentialHttp `pulumi:"https"`
	Sshes []GetGitlabCredentialSsh  `pulumi:"sshes"`
}

// GetGitlabCredentialInput is an input type that accepts GetGitlabCredentialArgs and GetGitlabCredentialOutput values.
// You can construct a concrete instance of `GetGitlabCredentialInput` via:
//
//	GetGitlabCredentialArgs{...}
type GetGitlabCredentialInput interface {
	pulumi.Input

	ToGetGitlabCredentialOutput() GetGitlabCredentialOutput
	ToGetGitlabCredentialOutputWithContext(context.Context) GetGitlabCredentialOutput
}

type GetGitlabCredentialArgs struct {
	Https GetGitlabCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetGitlabCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetGitlabCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabCredential)(nil)).Elem()
}

func (i GetGitlabCredentialArgs) ToGetGitlabCredentialOutput() GetGitlabCredentialOutput {
	return i.ToGetGitlabCredentialOutputWithContext(context.Background())
}

func (i GetGitlabCredentialArgs) ToGetGitlabCredentialOutputWithContext(ctx context.Context) GetGitlabCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabCredentialOutput)
}

// GetGitlabCredentialArrayInput is an input type that accepts GetGitlabCredentialArray and GetGitlabCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitlabCredentialArrayInput` via:
//
//	GetGitlabCredentialArray{ GetGitlabCredentialArgs{...} }
type GetGitlabCredentialArrayInput interface {
	pulumi.Input

	ToGetGitlabCredentialArrayOutput() GetGitlabCredentialArrayOutput
	ToGetGitlabCredentialArrayOutputWithContext(context.Context) GetGitlabCredentialArrayOutput
}

type GetGitlabCredentialArray []GetGitlabCredentialInput

func (GetGitlabCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabCredential)(nil)).Elem()
}

func (i GetGitlabCredentialArray) ToGetGitlabCredentialArrayOutput() GetGitlabCredentialArrayOutput {
	return i.ToGetGitlabCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitlabCredentialArray) ToGetGitlabCredentialArrayOutputWithContext(ctx context.Context) GetGitlabCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabCredentialArrayOutput)
}

type GetGitlabCredentialOutput struct{ *pulumi.OutputState }

func (GetGitlabCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabCredential)(nil)).Elem()
}

func (o GetGitlabCredentialOutput) ToGetGitlabCredentialOutput() GetGitlabCredentialOutput {
	return o
}

func (o GetGitlabCredentialOutput) ToGetGitlabCredentialOutputWithContext(ctx context.Context) GetGitlabCredentialOutput {
	return o
}

func (o GetGitlabCredentialOutput) Https() GetGitlabCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGitlabCredential) []GetGitlabCredentialHttp { return v.Https }).(GetGitlabCredentialHttpArrayOutput)
}

func (o GetGitlabCredentialOutput) Sshes() GetGitlabCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGitlabCredential) []GetGitlabCredentialSsh { return v.Sshes }).(GetGitlabCredentialSshArrayOutput)
}

type GetGitlabCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabCredential)(nil)).Elem()
}

func (o GetGitlabCredentialArrayOutput) ToGetGitlabCredentialArrayOutput() GetGitlabCredentialArrayOutput {
	return o
}

func (o GetGitlabCredentialArrayOutput) ToGetGitlabCredentialArrayOutputWithContext(ctx context.Context) GetGitlabCredentialArrayOutput {
	return o
}

func (o GetGitlabCredentialArrayOutput) Index(i pulumi.IntInput) GetGitlabCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabCredential {
		return vs[0].([]GetGitlabCredential)[vs[1].(int)]
	}).(GetGitlabCredentialOutput)
}

type GetGitlabCredentialHttp struct {
	PasswordRef string `pulumi:"passwordRef"`
	TokenRef    string `pulumi:"tokenRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGitlabCredentialHttpInput is an input type that accepts GetGitlabCredentialHttpArgs and GetGitlabCredentialHttpOutput values.
// You can construct a concrete instance of `GetGitlabCredentialHttpInput` via:
//
//	GetGitlabCredentialHttpArgs{...}
type GetGitlabCredentialHttpInput interface {
	pulumi.Input

	ToGetGitlabCredentialHttpOutput() GetGitlabCredentialHttpOutput
	ToGetGitlabCredentialHttpOutputWithContext(context.Context) GetGitlabCredentialHttpOutput
}

type GetGitlabCredentialHttpArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	TokenRef    pulumi.StringInput `pulumi:"tokenRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGitlabCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabCredentialHttp)(nil)).Elem()
}

func (i GetGitlabCredentialHttpArgs) ToGetGitlabCredentialHttpOutput() GetGitlabCredentialHttpOutput {
	return i.ToGetGitlabCredentialHttpOutputWithContext(context.Background())
}

func (i GetGitlabCredentialHttpArgs) ToGetGitlabCredentialHttpOutputWithContext(ctx context.Context) GetGitlabCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabCredentialHttpOutput)
}

// GetGitlabCredentialHttpArrayInput is an input type that accepts GetGitlabCredentialHttpArray and GetGitlabCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGitlabCredentialHttpArrayInput` via:
//
//	GetGitlabCredentialHttpArray{ GetGitlabCredentialHttpArgs{...} }
type GetGitlabCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGitlabCredentialHttpArrayOutput() GetGitlabCredentialHttpArrayOutput
	ToGetGitlabCredentialHttpArrayOutputWithContext(context.Context) GetGitlabCredentialHttpArrayOutput
}

type GetGitlabCredentialHttpArray []GetGitlabCredentialHttpInput

func (GetGitlabCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabCredentialHttp)(nil)).Elem()
}

func (i GetGitlabCredentialHttpArray) ToGetGitlabCredentialHttpArrayOutput() GetGitlabCredentialHttpArrayOutput {
	return i.ToGetGitlabCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGitlabCredentialHttpArray) ToGetGitlabCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitlabCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabCredentialHttpArrayOutput)
}

type GetGitlabCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGitlabCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabCredentialHttp)(nil)).Elem()
}

func (o GetGitlabCredentialHttpOutput) ToGetGitlabCredentialHttpOutput() GetGitlabCredentialHttpOutput {
	return o
}

func (o GetGitlabCredentialHttpOutput) ToGetGitlabCredentialHttpOutputWithContext(ctx context.Context) GetGitlabCredentialHttpOutput {
	return o
}

func (o GetGitlabCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetGitlabCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GetGitlabCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGitlabCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGitlabCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabCredentialHttp)(nil)).Elem()
}

func (o GetGitlabCredentialHttpArrayOutput) ToGetGitlabCredentialHttpArrayOutput() GetGitlabCredentialHttpArrayOutput {
	return o
}

func (o GetGitlabCredentialHttpArrayOutput) ToGetGitlabCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitlabCredentialHttpArrayOutput {
	return o
}

func (o GetGitlabCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGitlabCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabCredentialHttp {
		return vs[0].([]GetGitlabCredentialHttp)[vs[1].(int)]
	}).(GetGitlabCredentialHttpOutput)
}

type GetGitlabCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGitlabCredentialSshInput is an input type that accepts GetGitlabCredentialSshArgs and GetGitlabCredentialSshOutput values.
// You can construct a concrete instance of `GetGitlabCredentialSshInput` via:
//
//	GetGitlabCredentialSshArgs{...}
type GetGitlabCredentialSshInput interface {
	pulumi.Input

	ToGetGitlabCredentialSshOutput() GetGitlabCredentialSshOutput
	ToGetGitlabCredentialSshOutputWithContext(context.Context) GetGitlabCredentialSshOutput
}

type GetGitlabCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGitlabCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabCredentialSsh)(nil)).Elem()
}

func (i GetGitlabCredentialSshArgs) ToGetGitlabCredentialSshOutput() GetGitlabCredentialSshOutput {
	return i.ToGetGitlabCredentialSshOutputWithContext(context.Background())
}

func (i GetGitlabCredentialSshArgs) ToGetGitlabCredentialSshOutputWithContext(ctx context.Context) GetGitlabCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabCredentialSshOutput)
}

// GetGitlabCredentialSshArrayInput is an input type that accepts GetGitlabCredentialSshArray and GetGitlabCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGitlabCredentialSshArrayInput` via:
//
//	GetGitlabCredentialSshArray{ GetGitlabCredentialSshArgs{...} }
type GetGitlabCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGitlabCredentialSshArrayOutput() GetGitlabCredentialSshArrayOutput
	ToGetGitlabCredentialSshArrayOutputWithContext(context.Context) GetGitlabCredentialSshArrayOutput
}

type GetGitlabCredentialSshArray []GetGitlabCredentialSshInput

func (GetGitlabCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabCredentialSsh)(nil)).Elem()
}

func (i GetGitlabCredentialSshArray) ToGetGitlabCredentialSshArrayOutput() GetGitlabCredentialSshArrayOutput {
	return i.ToGetGitlabCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGitlabCredentialSshArray) ToGetGitlabCredentialSshArrayOutputWithContext(ctx context.Context) GetGitlabCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabCredentialSshArrayOutput)
}

type GetGitlabCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGitlabCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabCredentialSsh)(nil)).Elem()
}

func (o GetGitlabCredentialSshOutput) ToGetGitlabCredentialSshOutput() GetGitlabCredentialSshOutput {
	return o
}

func (o GetGitlabCredentialSshOutput) ToGetGitlabCredentialSshOutputWithContext(ctx context.Context) GetGitlabCredentialSshOutput {
	return o
}

func (o GetGitlabCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGitlabCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabCredentialSsh)(nil)).Elem()
}

func (o GetGitlabCredentialSshArrayOutput) ToGetGitlabCredentialSshArrayOutput() GetGitlabCredentialSshArrayOutput {
	return o
}

func (o GetGitlabCredentialSshArrayOutput) ToGetGitlabCredentialSshArrayOutputWithContext(ctx context.Context) GetGitlabCredentialSshArrayOutput {
	return o
}

func (o GetGitlabCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGitlabCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabCredentialSsh {
		return vs[0].([]GetGitlabCredentialSsh)[vs[1].(int)]
	}).(GetGitlabCredentialSshOutput)
}

type GetHelmCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetHelmCredentialInput is an input type that accepts GetHelmCredentialArgs and GetHelmCredentialOutput values.
// You can construct a concrete instance of `GetHelmCredentialInput` via:
//
//	GetHelmCredentialArgs{...}
type GetHelmCredentialInput interface {
	pulumi.Input

	ToGetHelmCredentialOutput() GetHelmCredentialOutput
	ToGetHelmCredentialOutputWithContext(context.Context) GetHelmCredentialOutput
}

type GetHelmCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetHelmCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmCredential)(nil)).Elem()
}

func (i GetHelmCredentialArgs) ToGetHelmCredentialOutput() GetHelmCredentialOutput {
	return i.ToGetHelmCredentialOutputWithContext(context.Background())
}

func (i GetHelmCredentialArgs) ToGetHelmCredentialOutputWithContext(ctx context.Context) GetHelmCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmCredentialOutput)
}

// GetHelmCredentialArrayInput is an input type that accepts GetHelmCredentialArray and GetHelmCredentialArrayOutput values.
// You can construct a concrete instance of `GetHelmCredentialArrayInput` via:
//
//	GetHelmCredentialArray{ GetHelmCredentialArgs{...} }
type GetHelmCredentialArrayInput interface {
	pulumi.Input

	ToGetHelmCredentialArrayOutput() GetHelmCredentialArrayOutput
	ToGetHelmCredentialArrayOutputWithContext(context.Context) GetHelmCredentialArrayOutput
}

type GetHelmCredentialArray []GetHelmCredentialInput

func (GetHelmCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmCredential)(nil)).Elem()
}

func (i GetHelmCredentialArray) ToGetHelmCredentialArrayOutput() GetHelmCredentialArrayOutput {
	return i.ToGetHelmCredentialArrayOutputWithContext(context.Background())
}

func (i GetHelmCredentialArray) ToGetHelmCredentialArrayOutputWithContext(ctx context.Context) GetHelmCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmCredentialArrayOutput)
}

type GetHelmCredentialOutput struct{ *pulumi.OutputState }

func (GetHelmCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmCredential)(nil)).Elem()
}

func (o GetHelmCredentialOutput) ToGetHelmCredentialOutput() GetHelmCredentialOutput {
	return o
}

func (o GetHelmCredentialOutput) ToGetHelmCredentialOutputWithContext(ctx context.Context) GetHelmCredentialOutput {
	return o
}

func (o GetHelmCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetHelmCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetHelmCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetHelmCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetHelmCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmCredential)(nil)).Elem()
}

func (o GetHelmCredentialArrayOutput) ToGetHelmCredentialArrayOutput() GetHelmCredentialArrayOutput {
	return o
}

func (o GetHelmCredentialArrayOutput) ToGetHelmCredentialArrayOutputWithContext(ctx context.Context) GetHelmCredentialArrayOutput {
	return o
}

func (o GetHelmCredentialArrayOutput) Index(i pulumi.IntInput) GetHelmCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmCredential {
		return vs[0].([]GetHelmCredential)[vs[1].(int)]
	}).(GetHelmCredentialOutput)
}

type GetKubernetesClientKeyCert struct {
	CaCertRef              string `pulumi:"caCertRef"`
	ClientCertRef          string `pulumi:"clientCertRef"`
	ClientKeyAlgorithm     string `pulumi:"clientKeyAlgorithm"`
	ClientKeyPassphraseRef string `pulumi:"clientKeyPassphraseRef"`
	ClientKeyRef           string `pulumi:"clientKeyRef"`
	MasterUrl              string `pulumi:"masterUrl"`
}

// GetKubernetesClientKeyCertInput is an input type that accepts GetKubernetesClientKeyCertArgs and GetKubernetesClientKeyCertOutput values.
// You can construct a concrete instance of `GetKubernetesClientKeyCertInput` via:
//
//	GetKubernetesClientKeyCertArgs{...}
type GetKubernetesClientKeyCertInput interface {
	pulumi.Input

	ToGetKubernetesClientKeyCertOutput() GetKubernetesClientKeyCertOutput
	ToGetKubernetesClientKeyCertOutputWithContext(context.Context) GetKubernetesClientKeyCertOutput
}

type GetKubernetesClientKeyCertArgs struct {
	CaCertRef              pulumi.StringInput `pulumi:"caCertRef"`
	ClientCertRef          pulumi.StringInput `pulumi:"clientCertRef"`
	ClientKeyAlgorithm     pulumi.StringInput `pulumi:"clientKeyAlgorithm"`
	ClientKeyPassphraseRef pulumi.StringInput `pulumi:"clientKeyPassphraseRef"`
	ClientKeyRef           pulumi.StringInput `pulumi:"clientKeyRef"`
	MasterUrl              pulumi.StringInput `pulumi:"masterUrl"`
}

func (GetKubernetesClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClientKeyCert)(nil)).Elem()
}

func (i GetKubernetesClientKeyCertArgs) ToGetKubernetesClientKeyCertOutput() GetKubernetesClientKeyCertOutput {
	return i.ToGetKubernetesClientKeyCertOutputWithContext(context.Background())
}

func (i GetKubernetesClientKeyCertArgs) ToGetKubernetesClientKeyCertOutputWithContext(ctx context.Context) GetKubernetesClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClientKeyCertOutput)
}

// GetKubernetesClientKeyCertArrayInput is an input type that accepts GetKubernetesClientKeyCertArray and GetKubernetesClientKeyCertArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClientKeyCertArrayInput` via:
//
//	GetKubernetesClientKeyCertArray{ GetKubernetesClientKeyCertArgs{...} }
type GetKubernetesClientKeyCertArrayInput interface {
	pulumi.Input

	ToGetKubernetesClientKeyCertArrayOutput() GetKubernetesClientKeyCertArrayOutput
	ToGetKubernetesClientKeyCertArrayOutputWithContext(context.Context) GetKubernetesClientKeyCertArrayOutput
}

type GetKubernetesClientKeyCertArray []GetKubernetesClientKeyCertInput

func (GetKubernetesClientKeyCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClientKeyCert)(nil)).Elem()
}

func (i GetKubernetesClientKeyCertArray) ToGetKubernetesClientKeyCertArrayOutput() GetKubernetesClientKeyCertArrayOutput {
	return i.ToGetKubernetesClientKeyCertArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClientKeyCertArray) ToGetKubernetesClientKeyCertArrayOutputWithContext(ctx context.Context) GetKubernetesClientKeyCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClientKeyCertArrayOutput)
}

type GetKubernetesClientKeyCertOutput struct{ *pulumi.OutputState }

func (GetKubernetesClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClientKeyCert)(nil)).Elem()
}

func (o GetKubernetesClientKeyCertOutput) ToGetKubernetesClientKeyCertOutput() GetKubernetesClientKeyCertOutput {
	return o
}

func (o GetKubernetesClientKeyCertOutput) ToGetKubernetesClientKeyCertOutputWithContext(ctx context.Context) GetKubernetesClientKeyCertOutput {
	return o
}

func (o GetKubernetesClientKeyCertOutput) CaCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClientKeyCert) string { return v.CaCertRef }).(pulumi.StringOutput)
}

func (o GetKubernetesClientKeyCertOutput) ClientCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClientKeyCert) string { return v.ClientCertRef }).(pulumi.StringOutput)
}

func (o GetKubernetesClientKeyCertOutput) ClientKeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClientKeyCert) string { return v.ClientKeyAlgorithm }).(pulumi.StringOutput)
}

func (o GetKubernetesClientKeyCertOutput) ClientKeyPassphraseRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClientKeyCert) string { return v.ClientKeyPassphraseRef }).(pulumi.StringOutput)
}

func (o GetKubernetesClientKeyCertOutput) ClientKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClientKeyCert) string { return v.ClientKeyRef }).(pulumi.StringOutput)
}

func (o GetKubernetesClientKeyCertOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClientKeyCert) string { return v.MasterUrl }).(pulumi.StringOutput)
}

type GetKubernetesClientKeyCertArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClientKeyCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClientKeyCert)(nil)).Elem()
}

func (o GetKubernetesClientKeyCertArrayOutput) ToGetKubernetesClientKeyCertArrayOutput() GetKubernetesClientKeyCertArrayOutput {
	return o
}

func (o GetKubernetesClientKeyCertArrayOutput) ToGetKubernetesClientKeyCertArrayOutputWithContext(ctx context.Context) GetKubernetesClientKeyCertArrayOutput {
	return o
}

func (o GetKubernetesClientKeyCertArrayOutput) Index(i pulumi.IntInput) GetKubernetesClientKeyCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClientKeyCert {
		return vs[0].([]GetKubernetesClientKeyCert)[vs[1].(int)]
	}).(GetKubernetesClientKeyCertOutput)
}

type GetKubernetesInheritFromDelegate struct {
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetKubernetesInheritFromDelegateInput is an input type that accepts GetKubernetesInheritFromDelegateArgs and GetKubernetesInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetKubernetesInheritFromDelegateInput` via:
//
//	GetKubernetesInheritFromDelegateArgs{...}
type GetKubernetesInheritFromDelegateInput interface {
	pulumi.Input

	ToGetKubernetesInheritFromDelegateOutput() GetKubernetesInheritFromDelegateOutput
	ToGetKubernetesInheritFromDelegateOutputWithContext(context.Context) GetKubernetesInheritFromDelegateOutput
}

type GetKubernetesInheritFromDelegateArgs struct {
	// Selectors to use for the delegate.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetKubernetesInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesInheritFromDelegate)(nil)).Elem()
}

func (i GetKubernetesInheritFromDelegateArgs) ToGetKubernetesInheritFromDelegateOutput() GetKubernetesInheritFromDelegateOutput {
	return i.ToGetKubernetesInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetKubernetesInheritFromDelegateArgs) ToGetKubernetesInheritFromDelegateOutputWithContext(ctx context.Context) GetKubernetesInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesInheritFromDelegateOutput)
}

// GetKubernetesInheritFromDelegateArrayInput is an input type that accepts GetKubernetesInheritFromDelegateArray and GetKubernetesInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetKubernetesInheritFromDelegateArrayInput` via:
//
//	GetKubernetesInheritFromDelegateArray{ GetKubernetesInheritFromDelegateArgs{...} }
type GetKubernetesInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetKubernetesInheritFromDelegateArrayOutput() GetKubernetesInheritFromDelegateArrayOutput
	ToGetKubernetesInheritFromDelegateArrayOutputWithContext(context.Context) GetKubernetesInheritFromDelegateArrayOutput
}

type GetKubernetesInheritFromDelegateArray []GetKubernetesInheritFromDelegateInput

func (GetKubernetesInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesInheritFromDelegate)(nil)).Elem()
}

func (i GetKubernetesInheritFromDelegateArray) ToGetKubernetesInheritFromDelegateArrayOutput() GetKubernetesInheritFromDelegateArrayOutput {
	return i.ToGetKubernetesInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetKubernetesInheritFromDelegateArray) ToGetKubernetesInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetKubernetesInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesInheritFromDelegateArrayOutput)
}

type GetKubernetesInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetKubernetesInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesInheritFromDelegate)(nil)).Elem()
}

func (o GetKubernetesInheritFromDelegateOutput) ToGetKubernetesInheritFromDelegateOutput() GetKubernetesInheritFromDelegateOutput {
	return o
}

func (o GetKubernetesInheritFromDelegateOutput) ToGetKubernetesInheritFromDelegateOutputWithContext(ctx context.Context) GetKubernetesInheritFromDelegateOutput {
	return o
}

// Selectors to use for the delegate.
func (o GetKubernetesInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetKubernetesInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesInheritFromDelegate)(nil)).Elem()
}

func (o GetKubernetesInheritFromDelegateArrayOutput) ToGetKubernetesInheritFromDelegateArrayOutput() GetKubernetesInheritFromDelegateArrayOutput {
	return o
}

func (o GetKubernetesInheritFromDelegateArrayOutput) ToGetKubernetesInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetKubernetesInheritFromDelegateArrayOutput {
	return o
}

func (o GetKubernetesInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetKubernetesInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesInheritFromDelegate {
		return vs[0].([]GetKubernetesInheritFromDelegate)[vs[1].(int)]
	}).(GetKubernetesInheritFromDelegateOutput)
}

type GetKubernetesOpenidConnect struct {
	ClientIdRef string   `pulumi:"clientIdRef"`
	IssuerUrl   string   `pulumi:"issuerUrl"`
	MasterUrl   string   `pulumi:"masterUrl"`
	PasswordRef string   `pulumi:"passwordRef"`
	Scopes      []string `pulumi:"scopes"`
	SecretRef   string   `pulumi:"secretRef"`
	Username    string   `pulumi:"username"`
	UsernameRef string   `pulumi:"usernameRef"`
}

// GetKubernetesOpenidConnectInput is an input type that accepts GetKubernetesOpenidConnectArgs and GetKubernetesOpenidConnectOutput values.
// You can construct a concrete instance of `GetKubernetesOpenidConnectInput` via:
//
//	GetKubernetesOpenidConnectArgs{...}
type GetKubernetesOpenidConnectInput interface {
	pulumi.Input

	ToGetKubernetesOpenidConnectOutput() GetKubernetesOpenidConnectOutput
	ToGetKubernetesOpenidConnectOutputWithContext(context.Context) GetKubernetesOpenidConnectOutput
}

type GetKubernetesOpenidConnectArgs struct {
	ClientIdRef pulumi.StringInput      `pulumi:"clientIdRef"`
	IssuerUrl   pulumi.StringInput      `pulumi:"issuerUrl"`
	MasterUrl   pulumi.StringInput      `pulumi:"masterUrl"`
	PasswordRef pulumi.StringInput      `pulumi:"passwordRef"`
	Scopes      pulumi.StringArrayInput `pulumi:"scopes"`
	SecretRef   pulumi.StringInput      `pulumi:"secretRef"`
	Username    pulumi.StringInput      `pulumi:"username"`
	UsernameRef pulumi.StringInput      `pulumi:"usernameRef"`
}

func (GetKubernetesOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesOpenidConnect)(nil)).Elem()
}

func (i GetKubernetesOpenidConnectArgs) ToGetKubernetesOpenidConnectOutput() GetKubernetesOpenidConnectOutput {
	return i.ToGetKubernetesOpenidConnectOutputWithContext(context.Background())
}

func (i GetKubernetesOpenidConnectArgs) ToGetKubernetesOpenidConnectOutputWithContext(ctx context.Context) GetKubernetesOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesOpenidConnectOutput)
}

// GetKubernetesOpenidConnectArrayInput is an input type that accepts GetKubernetesOpenidConnectArray and GetKubernetesOpenidConnectArrayOutput values.
// You can construct a concrete instance of `GetKubernetesOpenidConnectArrayInput` via:
//
//	GetKubernetesOpenidConnectArray{ GetKubernetesOpenidConnectArgs{...} }
type GetKubernetesOpenidConnectArrayInput interface {
	pulumi.Input

	ToGetKubernetesOpenidConnectArrayOutput() GetKubernetesOpenidConnectArrayOutput
	ToGetKubernetesOpenidConnectArrayOutputWithContext(context.Context) GetKubernetesOpenidConnectArrayOutput
}

type GetKubernetesOpenidConnectArray []GetKubernetesOpenidConnectInput

func (GetKubernetesOpenidConnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesOpenidConnect)(nil)).Elem()
}

func (i GetKubernetesOpenidConnectArray) ToGetKubernetesOpenidConnectArrayOutput() GetKubernetesOpenidConnectArrayOutput {
	return i.ToGetKubernetesOpenidConnectArrayOutputWithContext(context.Background())
}

func (i GetKubernetesOpenidConnectArray) ToGetKubernetesOpenidConnectArrayOutputWithContext(ctx context.Context) GetKubernetesOpenidConnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesOpenidConnectArrayOutput)
}

type GetKubernetesOpenidConnectOutput struct{ *pulumi.OutputState }

func (GetKubernetesOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesOpenidConnect)(nil)).Elem()
}

func (o GetKubernetesOpenidConnectOutput) ToGetKubernetesOpenidConnectOutput() GetKubernetesOpenidConnectOutput {
	return o
}

func (o GetKubernetesOpenidConnectOutput) ToGetKubernetesOpenidConnectOutputWithContext(ctx context.Context) GetKubernetesOpenidConnectOutput {
	return o
}

func (o GetKubernetesOpenidConnectOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

func (o GetKubernetesOpenidConnectOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesOpenidConnectOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.MasterUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesOpenidConnectOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetKubernetesOpenidConnectOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o GetKubernetesOpenidConnectOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.SecretRef }).(pulumi.StringOutput)
}

func (o GetKubernetesOpenidConnectOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetKubernetesOpenidConnectOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesOpenidConnect) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetKubernetesOpenidConnectArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesOpenidConnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesOpenidConnect)(nil)).Elem()
}

func (o GetKubernetesOpenidConnectArrayOutput) ToGetKubernetesOpenidConnectArrayOutput() GetKubernetesOpenidConnectArrayOutput {
	return o
}

func (o GetKubernetesOpenidConnectArrayOutput) ToGetKubernetesOpenidConnectArrayOutputWithContext(ctx context.Context) GetKubernetesOpenidConnectArrayOutput {
	return o
}

func (o GetKubernetesOpenidConnectArrayOutput) Index(i pulumi.IntInput) GetKubernetesOpenidConnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesOpenidConnect {
		return vs[0].([]GetKubernetesOpenidConnect)[vs[1].(int)]
	}).(GetKubernetesOpenidConnectOutput)
}

type GetKubernetesServiceAccount struct {
	MasterUrl              string `pulumi:"masterUrl"`
	ServiceAccountTokenRef string `pulumi:"serviceAccountTokenRef"`
}

// GetKubernetesServiceAccountInput is an input type that accepts GetKubernetesServiceAccountArgs and GetKubernetesServiceAccountOutput values.
// You can construct a concrete instance of `GetKubernetesServiceAccountInput` via:
//
//	GetKubernetesServiceAccountArgs{...}
type GetKubernetesServiceAccountInput interface {
	pulumi.Input

	ToGetKubernetesServiceAccountOutput() GetKubernetesServiceAccountOutput
	ToGetKubernetesServiceAccountOutputWithContext(context.Context) GetKubernetesServiceAccountOutput
}

type GetKubernetesServiceAccountArgs struct {
	MasterUrl              pulumi.StringInput `pulumi:"masterUrl"`
	ServiceAccountTokenRef pulumi.StringInput `pulumi:"serviceAccountTokenRef"`
}

func (GetKubernetesServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesServiceAccount)(nil)).Elem()
}

func (i GetKubernetesServiceAccountArgs) ToGetKubernetesServiceAccountOutput() GetKubernetesServiceAccountOutput {
	return i.ToGetKubernetesServiceAccountOutputWithContext(context.Background())
}

func (i GetKubernetesServiceAccountArgs) ToGetKubernetesServiceAccountOutputWithContext(ctx context.Context) GetKubernetesServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesServiceAccountOutput)
}

// GetKubernetesServiceAccountArrayInput is an input type that accepts GetKubernetesServiceAccountArray and GetKubernetesServiceAccountArrayOutput values.
// You can construct a concrete instance of `GetKubernetesServiceAccountArrayInput` via:
//
//	GetKubernetesServiceAccountArray{ GetKubernetesServiceAccountArgs{...} }
type GetKubernetesServiceAccountArrayInput interface {
	pulumi.Input

	ToGetKubernetesServiceAccountArrayOutput() GetKubernetesServiceAccountArrayOutput
	ToGetKubernetesServiceAccountArrayOutputWithContext(context.Context) GetKubernetesServiceAccountArrayOutput
}

type GetKubernetesServiceAccountArray []GetKubernetesServiceAccountInput

func (GetKubernetesServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesServiceAccount)(nil)).Elem()
}

func (i GetKubernetesServiceAccountArray) ToGetKubernetesServiceAccountArrayOutput() GetKubernetesServiceAccountArrayOutput {
	return i.ToGetKubernetesServiceAccountArrayOutputWithContext(context.Background())
}

func (i GetKubernetesServiceAccountArray) ToGetKubernetesServiceAccountArrayOutputWithContext(ctx context.Context) GetKubernetesServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesServiceAccountArrayOutput)
}

type GetKubernetesServiceAccountOutput struct{ *pulumi.OutputState }

func (GetKubernetesServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesServiceAccount)(nil)).Elem()
}

func (o GetKubernetesServiceAccountOutput) ToGetKubernetesServiceAccountOutput() GetKubernetesServiceAccountOutput {
	return o
}

func (o GetKubernetesServiceAccountOutput) ToGetKubernetesServiceAccountOutputWithContext(ctx context.Context) GetKubernetesServiceAccountOutput {
	return o
}

func (o GetKubernetesServiceAccountOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesServiceAccount) string { return v.MasterUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesServiceAccountOutput) ServiceAccountTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesServiceAccount) string { return v.ServiceAccountTokenRef }).(pulumi.StringOutput)
}

type GetKubernetesServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesServiceAccount)(nil)).Elem()
}

func (o GetKubernetesServiceAccountArrayOutput) ToGetKubernetesServiceAccountArrayOutput() GetKubernetesServiceAccountArrayOutput {
	return o
}

func (o GetKubernetesServiceAccountArrayOutput) ToGetKubernetesServiceAccountArrayOutputWithContext(ctx context.Context) GetKubernetesServiceAccountArrayOutput {
	return o
}

func (o GetKubernetesServiceAccountArrayOutput) Index(i pulumi.IntInput) GetKubernetesServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesServiceAccount {
		return vs[0].([]GetKubernetesServiceAccount)[vs[1].(int)]
	}).(GetKubernetesServiceAccountOutput)
}

type GetKubernetesUsernamePassword struct {
	MasterUrl   string `pulumi:"masterUrl"`
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetKubernetesUsernamePasswordInput is an input type that accepts GetKubernetesUsernamePasswordArgs and GetKubernetesUsernamePasswordOutput values.
// You can construct a concrete instance of `GetKubernetesUsernamePasswordInput` via:
//
//	GetKubernetesUsernamePasswordArgs{...}
type GetKubernetesUsernamePasswordInput interface {
	pulumi.Input

	ToGetKubernetesUsernamePasswordOutput() GetKubernetesUsernamePasswordOutput
	ToGetKubernetesUsernamePasswordOutputWithContext(context.Context) GetKubernetesUsernamePasswordOutput
}

type GetKubernetesUsernamePasswordArgs struct {
	MasterUrl   pulumi.StringInput `pulumi:"masterUrl"`
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetKubernetesUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesUsernamePassword)(nil)).Elem()
}

func (i GetKubernetesUsernamePasswordArgs) ToGetKubernetesUsernamePasswordOutput() GetKubernetesUsernamePasswordOutput {
	return i.ToGetKubernetesUsernamePasswordOutputWithContext(context.Background())
}

func (i GetKubernetesUsernamePasswordArgs) ToGetKubernetesUsernamePasswordOutputWithContext(ctx context.Context) GetKubernetesUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesUsernamePasswordOutput)
}

// GetKubernetesUsernamePasswordArrayInput is an input type that accepts GetKubernetesUsernamePasswordArray and GetKubernetesUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetKubernetesUsernamePasswordArrayInput` via:
//
//	GetKubernetesUsernamePasswordArray{ GetKubernetesUsernamePasswordArgs{...} }
type GetKubernetesUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetKubernetesUsernamePasswordArrayOutput() GetKubernetesUsernamePasswordArrayOutput
	ToGetKubernetesUsernamePasswordArrayOutputWithContext(context.Context) GetKubernetesUsernamePasswordArrayOutput
}

type GetKubernetesUsernamePasswordArray []GetKubernetesUsernamePasswordInput

func (GetKubernetesUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesUsernamePassword)(nil)).Elem()
}

func (i GetKubernetesUsernamePasswordArray) ToGetKubernetesUsernamePasswordArrayOutput() GetKubernetesUsernamePasswordArrayOutput {
	return i.ToGetKubernetesUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetKubernetesUsernamePasswordArray) ToGetKubernetesUsernamePasswordArrayOutputWithContext(ctx context.Context) GetKubernetesUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesUsernamePasswordArrayOutput)
}

type GetKubernetesUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetKubernetesUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesUsernamePassword)(nil)).Elem()
}

func (o GetKubernetesUsernamePasswordOutput) ToGetKubernetesUsernamePasswordOutput() GetKubernetesUsernamePasswordOutput {
	return o
}

func (o GetKubernetesUsernamePasswordOutput) ToGetKubernetesUsernamePasswordOutputWithContext(ctx context.Context) GetKubernetesUsernamePasswordOutput {
	return o
}

func (o GetKubernetesUsernamePasswordOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesUsernamePassword) string { return v.MasterUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetKubernetesUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetKubernetesUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetKubernetesUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesUsernamePassword)(nil)).Elem()
}

func (o GetKubernetesUsernamePasswordArrayOutput) ToGetKubernetesUsernamePasswordArrayOutput() GetKubernetesUsernamePasswordArrayOutput {
	return o
}

func (o GetKubernetesUsernamePasswordArrayOutput) ToGetKubernetesUsernamePasswordArrayOutputWithContext(ctx context.Context) GetKubernetesUsernamePasswordArrayOutput {
	return o
}

func (o GetKubernetesUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetKubernetesUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesUsernamePassword {
		return vs[0].([]GetKubernetesUsernamePassword)[vs[1].(int)]
	}).(GetKubernetesUsernamePasswordOutput)
}

type GetNexusCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetNexusCredentialInput is an input type that accepts GetNexusCredentialArgs and GetNexusCredentialOutput values.
// You can construct a concrete instance of `GetNexusCredentialInput` via:
//
//	GetNexusCredentialArgs{...}
type GetNexusCredentialInput interface {
	pulumi.Input

	ToGetNexusCredentialOutput() GetNexusCredentialOutput
	ToGetNexusCredentialOutputWithContext(context.Context) GetNexusCredentialOutput
}

type GetNexusCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetNexusCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNexusCredential)(nil)).Elem()
}

func (i GetNexusCredentialArgs) ToGetNexusCredentialOutput() GetNexusCredentialOutput {
	return i.ToGetNexusCredentialOutputWithContext(context.Background())
}

func (i GetNexusCredentialArgs) ToGetNexusCredentialOutputWithContext(ctx context.Context) GetNexusCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNexusCredentialOutput)
}

// GetNexusCredentialArrayInput is an input type that accepts GetNexusCredentialArray and GetNexusCredentialArrayOutput values.
// You can construct a concrete instance of `GetNexusCredentialArrayInput` via:
//
//	GetNexusCredentialArray{ GetNexusCredentialArgs{...} }
type GetNexusCredentialArrayInput interface {
	pulumi.Input

	ToGetNexusCredentialArrayOutput() GetNexusCredentialArrayOutput
	ToGetNexusCredentialArrayOutputWithContext(context.Context) GetNexusCredentialArrayOutput
}

type GetNexusCredentialArray []GetNexusCredentialInput

func (GetNexusCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNexusCredential)(nil)).Elem()
}

func (i GetNexusCredentialArray) ToGetNexusCredentialArrayOutput() GetNexusCredentialArrayOutput {
	return i.ToGetNexusCredentialArrayOutputWithContext(context.Background())
}

func (i GetNexusCredentialArray) ToGetNexusCredentialArrayOutputWithContext(ctx context.Context) GetNexusCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNexusCredentialArrayOutput)
}

type GetNexusCredentialOutput struct{ *pulumi.OutputState }

func (GetNexusCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNexusCredential)(nil)).Elem()
}

func (o GetNexusCredentialOutput) ToGetNexusCredentialOutput() GetNexusCredentialOutput {
	return o
}

func (o GetNexusCredentialOutput) ToGetNexusCredentialOutputWithContext(ctx context.Context) GetNexusCredentialOutput {
	return o
}

func (o GetNexusCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetNexusCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetNexusCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetNexusCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetNexusCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNexusCredential)(nil)).Elem()
}

func (o GetNexusCredentialArrayOutput) ToGetNexusCredentialArrayOutput() GetNexusCredentialArrayOutput {
	return o
}

func (o GetNexusCredentialArrayOutput) ToGetNexusCredentialArrayOutputWithContext(ctx context.Context) GetNexusCredentialArrayOutput {
	return o
}

func (o GetNexusCredentialArrayOutput) Index(i pulumi.IntInput) GetNexusCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNexusCredential {
		return vs[0].([]GetNexusCredential)[vs[1].(int)]
	}).(GetNexusCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsApiTokenInput)(nil)).Elem(), AppDynamicsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsApiTokenPtrInput)(nil)).Elem(), AppDynamicsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsUsernamePasswordInput)(nil)).Elem(), AppDynamicsUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsUsernamePasswordPtrInput)(nil)).Elem(), AppDynamicsUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryCredentialsInput)(nil)).Elem(), ArtifactoryCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryCredentialsPtrInput)(nil)).Elem(), ArtifactoryCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCCCrossAccountAccessInput)(nil)).Elem(), AwsCCCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCCCrossAccountAccessPtrInput)(nil)).Elem(), AwsCCCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCrossAccountAccessInput)(nil)).Elem(), AwsCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCrossAccountAccessPtrInput)(nil)).Elem(), AwsCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInheritFromDelegateInput)(nil)).Elem(), AwsInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsInheritFromDelegatePtrInput)(nil)).Elem(), AwsInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIrsaInput)(nil)).Elem(), AwsIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIrsaPtrInput)(nil)).Elem(), AwsIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsCredentialsInput)(nil)).Elem(), AwsKmsCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsCredentialsPtrInput)(nil)).Elem(), AwsKmsCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsCredentialsAssumeRoleInput)(nil)).Elem(), AwsKmsCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsCredentialsAssumeRolePtrInput)(nil)).Elem(), AwsKmsCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsCredentialsManualInput)(nil)).Elem(), AwsKmsCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsCredentialsManualPtrInput)(nil)).Elem(), AwsKmsCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsManualInput)(nil)).Elem(), AwsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsManualPtrInput)(nil)).Elem(), AwsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerCredentialsInput)(nil)).Elem(), AwsSecretManagerCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerCredentialsPtrInput)(nil)).Elem(), AwsSecretManagerCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerCredentialsAssumeRoleInput)(nil)).Elem(), AwsSecretManagerCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerCredentialsAssumeRolePtrInput)(nil)).Elem(), AwsSecretManagerCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerCredentialsManualInput)(nil)).Elem(), AwsSecretManagerCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerCredentialsManualPtrInput)(nil)).Elem(), AwsSecretManagerCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketApiAuthenticationInput)(nil)).Elem(), BitbucketApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketApiAuthenticationPtrInput)(nil)).Elem(), BitbucketApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketCredentialsInput)(nil)).Elem(), BitbucketCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketCredentialsPtrInput)(nil)).Elem(), BitbucketCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketCredentialsHttpInput)(nil)).Elem(), BitbucketCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketCredentialsHttpPtrInput)(nil)).Elem(), BitbucketCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketCredentialsSshInput)(nil)).Elem(), BitbucketCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketCredentialsSshPtrInput)(nil)).Elem(), BitbucketCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerCredentialsInput)(nil)).Elem(), DockerCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerCredentialsPtrInput)(nil)).Elem(), DockerCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpInheritFromDelegateInput)(nil)).Elem(), GcpInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpInheritFromDelegateArrayInput)(nil)).Elem(), GcpInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpManualInput)(nil)).Elem(), GcpManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpManualPtrInput)(nil)).Elem(), GcpManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitCredentialsInput)(nil)).Elem(), GitCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitCredentialsPtrInput)(nil)).Elem(), GitCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitCredentialsHttpInput)(nil)).Elem(), GitCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitCredentialsHttpPtrInput)(nil)).Elem(), GitCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitCredentialsSshInput)(nil)).Elem(), GitCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitCredentialsSshPtrInput)(nil)).Elem(), GitCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubApiAuthenticationInput)(nil)).Elem(), GithubApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubApiAuthenticationPtrInput)(nil)).Elem(), GithubApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubApiAuthenticationGithubAppInput)(nil)).Elem(), GithubApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubApiAuthenticationGithubAppPtrInput)(nil)).Elem(), GithubApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubCredentialsInput)(nil)).Elem(), GithubCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubCredentialsPtrInput)(nil)).Elem(), GithubCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubCredentialsHttpInput)(nil)).Elem(), GithubCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubCredentialsHttpPtrInput)(nil)).Elem(), GithubCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubCredentialsSshInput)(nil)).Elem(), GithubCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubCredentialsSshPtrInput)(nil)).Elem(), GithubCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabApiAuthenticationInput)(nil)).Elem(), GitlabApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabApiAuthenticationPtrInput)(nil)).Elem(), GitlabApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabCredentialsInput)(nil)).Elem(), GitlabCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabCredentialsPtrInput)(nil)).Elem(), GitlabCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabCredentialsHttpInput)(nil)).Elem(), GitlabCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabCredentialsHttpPtrInput)(nil)).Elem(), GitlabCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabCredentialsSshInput)(nil)).Elem(), GitlabCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabCredentialsSshPtrInput)(nil)).Elem(), GitlabCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmCredentialsInput)(nil)).Elem(), HelmCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmCredentialsPtrInput)(nil)).Elem(), HelmCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClientKeyCertInput)(nil)).Elem(), KubernetesClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClientKeyCertPtrInput)(nil)).Elem(), KubernetesClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesInheritFromDelegateInput)(nil)).Elem(), KubernetesInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesInheritFromDelegatePtrInput)(nil)).Elem(), KubernetesInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesOpenidConnectInput)(nil)).Elem(), KubernetesOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesOpenidConnectPtrInput)(nil)).Elem(), KubernetesOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesServiceAccountInput)(nil)).Elem(), KubernetesServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesServiceAccountPtrInput)(nil)).Elem(), KubernetesServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesUsernamePasswordInput)(nil)).Elem(), KubernetesUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesUsernamePasswordPtrInput)(nil)).Elem(), KubernetesUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusCredentialsInput)(nil)).Elem(), NexusCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusCredentialsPtrInput)(nil)).Elem(), NexusCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsApiTokenInput)(nil)).Elem(), GetAppDynamicsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsApiTokenArrayInput)(nil)).Elem(), GetAppDynamicsApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsUsernamePasswordInput)(nil)).Elem(), GetAppDynamicsUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsUsernamePasswordArrayInput)(nil)).Elem(), GetAppDynamicsUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetArtifactoryCredentialInput)(nil)).Elem(), GetArtifactoryCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetArtifactoryCredentialArrayInput)(nil)).Elem(), GetArtifactoryCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCCCrossAccountAccessInput)(nil)).Elem(), GetAwsCCCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCCCrossAccountAccessArrayInput)(nil)).Elem(), GetAwsCCCrossAccountAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCrossAccountAccessInput)(nil)).Elem(), GetAwsCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCrossAccountAccessArrayInput)(nil)).Elem(), GetAwsCrossAccountAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsInheritFromDelegateInput)(nil)).Elem(), GetAwsInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsInheritFromDelegateArrayInput)(nil)).Elem(), GetAwsInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsIrsaInput)(nil)).Elem(), GetAwsIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsIrsaArrayInput)(nil)).Elem(), GetAwsIrsaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsCredentialInput)(nil)).Elem(), GetAwsKmsCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsCredentialArrayInput)(nil)).Elem(), GetAwsKmsCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsCredentialAssumeRoleInput)(nil)).Elem(), GetAwsKmsCredentialAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsCredentialAssumeRoleArrayInput)(nil)).Elem(), GetAwsKmsCredentialAssumeRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsCredentialManualInput)(nil)).Elem(), GetAwsKmsCredentialManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsCredentialManualArrayInput)(nil)).Elem(), GetAwsKmsCredentialManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsManualInput)(nil)).Elem(), GetAwsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsManualArrayInput)(nil)).Elem(), GetAwsManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerCredentialInput)(nil)).Elem(), GetAwsSecretManagerCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerCredentialArrayInput)(nil)).Elem(), GetAwsSecretManagerCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerCredentialAssumeRoleInput)(nil)).Elem(), GetAwsSecretManagerCredentialAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerCredentialAssumeRoleArrayInput)(nil)).Elem(), GetAwsSecretManagerCredentialAssumeRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerCredentialManualInput)(nil)).Elem(), GetAwsSecretManagerCredentialManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerCredentialManualArrayInput)(nil)).Elem(), GetAwsSecretManagerCredentialManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketApiAuthenticationInput)(nil)).Elem(), GetBitbucketApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketApiAuthenticationArrayInput)(nil)).Elem(), GetBitbucketApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketCredentialInput)(nil)).Elem(), GetBitbucketCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketCredentialArrayInput)(nil)).Elem(), GetBitbucketCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketCredentialHttpInput)(nil)).Elem(), GetBitbucketCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketCredentialHttpArrayInput)(nil)).Elem(), GetBitbucketCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketCredentialSshInput)(nil)).Elem(), GetBitbucketCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketCredentialSshArrayInput)(nil)).Elem(), GetBitbucketCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDockerCredentialInput)(nil)).Elem(), GetDockerCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDockerCredentialArrayInput)(nil)).Elem(), GetDockerCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpInheritFromDelegateInput)(nil)).Elem(), GetGcpInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpInheritFromDelegateArrayInput)(nil)).Elem(), GetGcpInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpManualInput)(nil)).Elem(), GetGcpManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpManualArrayInput)(nil)).Elem(), GetGcpManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialInput)(nil)).Elem(), GetGitCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialArrayInput)(nil)).Elem(), GetGitCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialHttpInput)(nil)).Elem(), GetGitCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialHttpArrayInput)(nil)).Elem(), GetGitCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialSshInput)(nil)).Elem(), GetGitCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitCredentialSshArrayInput)(nil)).Elem(), GetGitCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubApiAuthenticationInput)(nil)).Elem(), GetGithubApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubApiAuthenticationArrayInput)(nil)).Elem(), GetGithubApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubApiAuthenticationGithubAppInput)(nil)).Elem(), GetGithubApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubApiAuthenticationGithubAppArrayInput)(nil)).Elem(), GetGithubApiAuthenticationGithubAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubCredentialInput)(nil)).Elem(), GetGithubCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubCredentialArrayInput)(nil)).Elem(), GetGithubCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubCredentialHttpInput)(nil)).Elem(), GetGithubCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubCredentialHttpArrayInput)(nil)).Elem(), GetGithubCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubCredentialSshInput)(nil)).Elem(), GetGithubCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubCredentialSshArrayInput)(nil)).Elem(), GetGithubCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabApiAuthenticationInput)(nil)).Elem(), GetGitlabApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabApiAuthenticationArrayInput)(nil)).Elem(), GetGitlabApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabCredentialInput)(nil)).Elem(), GetGitlabCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabCredentialArrayInput)(nil)).Elem(), GetGitlabCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabCredentialHttpInput)(nil)).Elem(), GetGitlabCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabCredentialHttpArrayInput)(nil)).Elem(), GetGitlabCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabCredentialSshInput)(nil)).Elem(), GetGitlabCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabCredentialSshArrayInput)(nil)).Elem(), GetGitlabCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmCredentialInput)(nil)).Elem(), GetHelmCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmCredentialArrayInput)(nil)).Elem(), GetHelmCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClientKeyCertInput)(nil)).Elem(), GetKubernetesClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClientKeyCertArrayInput)(nil)).Elem(), GetKubernetesClientKeyCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesInheritFromDelegateInput)(nil)).Elem(), GetKubernetesInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesInheritFromDelegateArrayInput)(nil)).Elem(), GetKubernetesInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesOpenidConnectInput)(nil)).Elem(), GetKubernetesOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesOpenidConnectArrayInput)(nil)).Elem(), GetKubernetesOpenidConnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesServiceAccountInput)(nil)).Elem(), GetKubernetesServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesServiceAccountArrayInput)(nil)).Elem(), GetKubernetesServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesUsernamePasswordInput)(nil)).Elem(), GetKubernetesUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesUsernamePasswordArrayInput)(nil)).Elem(), GetKubernetesUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNexusCredentialInput)(nil)).Elem(), GetNexusCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNexusCredentialArrayInput)(nil)).Elem(), GetNexusCredentialArray{})
	pulumi.RegisterOutputType(AppDynamicsApiTokenOutput{})
	pulumi.RegisterOutputType(AppDynamicsApiTokenPtrOutput{})
	pulumi.RegisterOutputType(AppDynamicsUsernamePasswordOutput{})
	pulumi.RegisterOutputType(AppDynamicsUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ArtifactoryCredentialsOutput{})
	pulumi.RegisterOutputType(ArtifactoryCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AwsCCCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(AwsCCCrossAccountAccessPtrOutput{})
	pulumi.RegisterOutputType(AwsCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(AwsCrossAccountAccessPtrOutput{})
	pulumi.RegisterOutputType(AwsInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(AwsInheritFromDelegatePtrOutput{})
	pulumi.RegisterOutputType(AwsIrsaOutput{})
	pulumi.RegisterOutputType(AwsIrsaPtrOutput{})
	pulumi.RegisterOutputType(AwsKmsCredentialsOutput{})
	pulumi.RegisterOutputType(AwsKmsCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AwsKmsCredentialsAssumeRoleOutput{})
	pulumi.RegisterOutputType(AwsKmsCredentialsAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(AwsKmsCredentialsManualOutput{})
	pulumi.RegisterOutputType(AwsKmsCredentialsManualPtrOutput{})
	pulumi.RegisterOutputType(AwsManualOutput{})
	pulumi.RegisterOutputType(AwsManualPtrOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerCredentialsOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerCredentialsAssumeRoleOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerCredentialsAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerCredentialsManualOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerCredentialsManualPtrOutput{})
	pulumi.RegisterOutputType(BitbucketApiAuthenticationOutput{})
	pulumi.RegisterOutputType(BitbucketApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(BitbucketCredentialsOutput{})
	pulumi.RegisterOutputType(BitbucketCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BitbucketCredentialsHttpOutput{})
	pulumi.RegisterOutputType(BitbucketCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(BitbucketCredentialsSshOutput{})
	pulumi.RegisterOutputType(BitbucketCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(DockerCredentialsOutput{})
	pulumi.RegisterOutputType(DockerCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GcpInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GcpInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GcpManualOutput{})
	pulumi.RegisterOutputType(GcpManualPtrOutput{})
	pulumi.RegisterOutputType(GitCredentialsOutput{})
	pulumi.RegisterOutputType(GitCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GitCredentialsHttpOutput{})
	pulumi.RegisterOutputType(GitCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(GitCredentialsSshOutput{})
	pulumi.RegisterOutputType(GitCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(GithubApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GithubApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GithubApiAuthenticationGithubAppOutput{})
	pulumi.RegisterOutputType(GithubApiAuthenticationGithubAppPtrOutput{})
	pulumi.RegisterOutputType(GithubCredentialsOutput{})
	pulumi.RegisterOutputType(GithubCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GithubCredentialsHttpOutput{})
	pulumi.RegisterOutputType(GithubCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(GithubCredentialsSshOutput{})
	pulumi.RegisterOutputType(GithubCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(GitlabApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GitlabApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GitlabCredentialsOutput{})
	pulumi.RegisterOutputType(GitlabCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GitlabCredentialsHttpOutput{})
	pulumi.RegisterOutputType(GitlabCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(GitlabCredentialsSshOutput{})
	pulumi.RegisterOutputType(GitlabCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(HelmCredentialsOutput{})
	pulumi.RegisterOutputType(HelmCredentialsPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClientKeyCertOutput{})
	pulumi.RegisterOutputType(KubernetesClientKeyCertPtrOutput{})
	pulumi.RegisterOutputType(KubernetesInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(KubernetesInheritFromDelegatePtrOutput{})
	pulumi.RegisterOutputType(KubernetesOpenidConnectOutput{})
	pulumi.RegisterOutputType(KubernetesOpenidConnectPtrOutput{})
	pulumi.RegisterOutputType(KubernetesServiceAccountOutput{})
	pulumi.RegisterOutputType(KubernetesServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(KubernetesUsernamePasswordOutput{})
	pulumi.RegisterOutputType(KubernetesUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(NexusCredentialsOutput{})
	pulumi.RegisterOutputType(NexusCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsApiTokenOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetArtifactoryCredentialOutput{})
	pulumi.RegisterOutputType(GetArtifactoryCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsCCCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(GetAwsCCCrossAccountAccessArrayOutput{})
	pulumi.RegisterOutputType(GetAwsCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(GetAwsCrossAccountAccessArrayOutput{})
	pulumi.RegisterOutputType(GetAwsInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetAwsInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetAwsIrsaOutput{})
	pulumi.RegisterOutputType(GetAwsIrsaArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsCredentialOutput{})
	pulumi.RegisterOutputType(GetAwsKmsCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsCredentialAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetAwsKmsCredentialAssumeRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsCredentialManualOutput{})
	pulumi.RegisterOutputType(GetAwsKmsCredentialManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsManualOutput{})
	pulumi.RegisterOutputType(GetAwsManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerCredentialOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerCredentialAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerCredentialAssumeRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerCredentialManualOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerCredentialManualArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetBitbucketApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketCredentialOutput{})
	pulumi.RegisterOutputType(GetBitbucketCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetBitbucketCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketCredentialSshOutput{})
	pulumi.RegisterOutputType(GetBitbucketCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetDockerCredentialOutput{})
	pulumi.RegisterOutputType(GetDockerCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGcpInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetGcpInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetGcpManualOutput{})
	pulumi.RegisterOutputType(GetGcpManualArrayOutput{})
	pulumi.RegisterOutputType(GetGitCredentialOutput{})
	pulumi.RegisterOutputType(GetGitCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGitCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGitCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGitCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGitCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGithubApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGithubApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGithubApiAuthenticationGithubAppOutput{})
	pulumi.RegisterOutputType(GetGithubApiAuthenticationGithubAppArrayOutput{})
	pulumi.RegisterOutputType(GetGithubCredentialOutput{})
	pulumi.RegisterOutputType(GetGithubCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGithubCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGithubCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGithubCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGithubCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGitlabApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabCredentialOutput{})
	pulumi.RegisterOutputType(GetGitlabCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGitlabCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGitlabCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetHelmCredentialOutput{})
	pulumi.RegisterOutputType(GetHelmCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClientKeyCertOutput{})
	pulumi.RegisterOutputType(GetKubernetesClientKeyCertArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetKubernetesInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesOpenidConnectOutput{})
	pulumi.RegisterOutputType(GetKubernetesOpenidConnectArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesServiceAccountOutput{})
	pulumi.RegisterOutputType(GetKubernetesServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetKubernetesUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetNexusCredentialOutput{})
	pulumi.RegisterOutputType(GetNexusCredentialArrayOutput{})
}
