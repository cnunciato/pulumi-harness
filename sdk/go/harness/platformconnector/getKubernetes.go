// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platformconnector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a Kubernetes connector.
func LookupKubernetes(ctx *pulumi.Context, args *LookupKubernetesArgs, opts ...pulumi.InvokeOption) (*LookupKubernetesResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupKubernetesResult
	err := ctx.Invoke("harness:PlatformConnector/getKubernetes:getKubernetes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetes.
type LookupKubernetesArgs struct {
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getKubernetes.
type LookupKubernetesResult struct {
	// Client key and certificate config for the connector.
	ClientKeyCerts []GetKubernetesClientKeyCert `pulumi:"clientKeyCerts"`
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Credentials are inherited from the delegate.
	InheritFromDelegates []GetKubernetesInheritFromDelegate `pulumi:"inheritFromDelegates"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// OpenID configuration for the connector.
	OpenidConnects []GetKubernetesOpenidConnect `pulumi:"openidConnects"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Service account for the connector.
	ServiceAccounts []GetKubernetesServiceAccount `pulumi:"serviceAccounts"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
	// Username and password for the connector.
	UsernamePasswords []GetKubernetesUsernamePassword `pulumi:"usernamePasswords"`
}

func LookupKubernetesOutput(ctx *pulumi.Context, args LookupKubernetesOutputArgs, opts ...pulumi.InvokeOption) LookupKubernetesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKubernetesResult, error) {
			args := v.(LookupKubernetesArgs)
			r, err := LookupKubernetes(ctx, &args, opts...)
			var s LookupKubernetesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKubernetesResultOutput)
}

// A collection of arguments for invoking getKubernetes.
type LookupKubernetesOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupKubernetesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesArgs)(nil)).Elem()
}

// A collection of values returned by getKubernetes.
type LookupKubernetesResultOutput struct{ *pulumi.OutputState }

func (LookupKubernetesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKubernetesResult)(nil)).Elem()
}

func (o LookupKubernetesResultOutput) ToLookupKubernetesResultOutput() LookupKubernetesResultOutput {
	return o
}

func (o LookupKubernetesResultOutput) ToLookupKubernetesResultOutputWithContext(ctx context.Context) LookupKubernetesResultOutput {
	return o
}

// Client key and certificate config for the connector.
func (o LookupKubernetesResultOutput) ClientKeyCerts() GetKubernetesClientKeyCertArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []GetKubernetesClientKeyCert { return v.ClientKeyCerts }).(GetKubernetesClientKeyCertArrayOutput)
}

// Selectors to use for the delegate.
func (o LookupKubernetesResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupKubernetesResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupKubernetesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKubernetesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupKubernetesResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Credentials are inherited from the delegate.
func (o LookupKubernetesResultOutput) InheritFromDelegates() GetKubernetesInheritFromDelegateArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []GetKubernetesInheritFromDelegate { return v.InheritFromDelegates }).(GetKubernetesInheritFromDelegateArrayOutput)
}

// Name of the resource.
func (o LookupKubernetesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// OpenID configuration for the connector.
func (o LookupKubernetesResultOutput) OpenidConnects() GetKubernetesOpenidConnectArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []GetKubernetesOpenidConnect { return v.OpenidConnects }).(GetKubernetesOpenidConnectArrayOutput)
}

// Unique identifier of the organization.
func (o LookupKubernetesResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupKubernetesResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKubernetesResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Service account for the connector.
func (o LookupKubernetesResultOutput) ServiceAccounts() GetKubernetesServiceAccountArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []GetKubernetesServiceAccount { return v.ServiceAccounts }).(GetKubernetesServiceAccountArrayOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o LookupKubernetesResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Username and password for the connector.
func (o LookupKubernetesResultOutput) UsernamePasswords() GetKubernetesUsernamePasswordArrayOutput {
	return o.ApplyT(func(v LookupKubernetesResult) []GetKubernetesUsernamePassword { return v.UsernamePasswords }).(GetKubernetesUsernamePasswordArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKubernetesResultOutput{})
}
