// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a OCI Helm connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupConnectorOciHelm(ctx, &platform.LookupConnectorOciHelmArgs{
//				Identifier: "identifier",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConnectorOciHelm(ctx *pulumi.Context, args *LookupConnectorOciHelmArgs, opts ...pulumi.InvokeOption) (*LookupConnectorOciHelmResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupConnectorOciHelmResult
	err := ctx.Invoke("harness:platform/getConnectorOciHelm:getConnectorOciHelm", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectorOciHelm.
type LookupConnectorOciHelmArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getConnectorOciHelm.
type LookupConnectorOciHelmResult struct {
	// Credentials to use for authentication.
	Credentials []GetConnectorOciHelmCredential `pulumi:"credentials"`
	// Tags to filter delegates for connection.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// URL of the helm server.
	Url string `pulumi:"url"`
}

func LookupConnectorOciHelmOutput(ctx *pulumi.Context, args LookupConnectorOciHelmOutputArgs, opts ...pulumi.InvokeOption) LookupConnectorOciHelmResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectorOciHelmResult, error) {
			args := v.(LookupConnectorOciHelmArgs)
			r, err := LookupConnectorOciHelm(ctx, &args, opts...)
			var s LookupConnectorOciHelmResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectorOciHelmResultOutput)
}

// A collection of arguments for invoking getConnectorOciHelm.
type LookupConnectorOciHelmOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupConnectorOciHelmOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorOciHelmArgs)(nil)).Elem()
}

// A collection of values returned by getConnectorOciHelm.
type LookupConnectorOciHelmResultOutput struct{ *pulumi.OutputState }

func (LookupConnectorOciHelmResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorOciHelmResult)(nil)).Elem()
}

func (o LookupConnectorOciHelmResultOutput) ToLookupConnectorOciHelmResultOutput() LookupConnectorOciHelmResultOutput {
	return o
}

func (o LookupConnectorOciHelmResultOutput) ToLookupConnectorOciHelmResultOutputWithContext(ctx context.Context) LookupConnectorOciHelmResultOutput {
	return o
}

// Credentials to use for authentication.
func (o LookupConnectorOciHelmResultOutput) Credentials() GetConnectorOciHelmCredentialArrayOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) []GetConnectorOciHelmCredential { return v.Credentials }).(GetConnectorOciHelmCredentialArrayOutput)
}

// Tags to filter delegates for connection.
func (o LookupConnectorOciHelmResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupConnectorOciHelmResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectorOciHelmResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupConnectorOciHelmResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupConnectorOciHelmResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupConnectorOciHelmResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupConnectorOciHelmResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o LookupConnectorOciHelmResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// URL of the helm server.
func (o LookupConnectorOciHelmResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorOciHelmResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectorOciHelmResultOutput{})
}
