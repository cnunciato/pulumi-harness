// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a Datadog connector.
func LookupDatadogConnector(ctx *pulumi.Context, args *LookupDatadogConnectorArgs, opts ...pulumi.InvokeOption) (*LookupDatadogConnectorResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupDatadogConnectorResult
	err := ctx.Invoke("harness:platform/getDatadogConnector:getDatadogConnector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatadogConnector.
type LookupDatadogConnectorArgs struct {
	// Connect using only the delegates which have these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the Organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the Project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getDatadogConnector.
type LookupDatadogConnectorResult struct {
	// Reference to the Harness secret containing the api key.
	ApiKeyRef string `pulumi:"apiKeyRef"`
	// Reference to the Harness secret containing the application key.
	ApplicationKeyRef string `pulumi:"applicationKeyRef"`
	// Connect using only the delegates which have these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the Organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the Project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
	// Url of the Datadog server.
	Url string `pulumi:"url"`
}

func LookupDatadogConnectorOutput(ctx *pulumi.Context, args LookupDatadogConnectorOutputArgs, opts ...pulumi.InvokeOption) LookupDatadogConnectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatadogConnectorResult, error) {
			args := v.(LookupDatadogConnectorArgs)
			r, err := LookupDatadogConnector(ctx, &args, opts...)
			var s LookupDatadogConnectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatadogConnectorResultOutput)
}

// A collection of arguments for invoking getDatadogConnector.
type LookupDatadogConnectorOutputArgs struct {
	// Connect using only the delegates which have these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the Organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the Project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupDatadogConnectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatadogConnectorArgs)(nil)).Elem()
}

// A collection of values returned by getDatadogConnector.
type LookupDatadogConnectorResultOutput struct{ *pulumi.OutputState }

func (LookupDatadogConnectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatadogConnectorResult)(nil)).Elem()
}

func (o LookupDatadogConnectorResultOutput) ToLookupDatadogConnectorResultOutput() LookupDatadogConnectorResultOutput {
	return o
}

func (o LookupDatadogConnectorResultOutput) ToLookupDatadogConnectorResultOutputWithContext(ctx context.Context) LookupDatadogConnectorResultOutput {
	return o
}

// Reference to the Harness secret containing the api key.
func (o LookupDatadogConnectorResultOutput) ApiKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) string { return v.ApiKeyRef }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the application key.
func (o LookupDatadogConnectorResultOutput) ApplicationKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) string { return v.ApplicationKeyRef }).(pulumi.StringOutput)
}

// Connect using only the delegates which have these tags.
func (o LookupDatadogConnectorResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupDatadogConnectorResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDatadogConnectorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupDatadogConnectorResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o LookupDatadogConnectorResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the Organization.
func (o LookupDatadogConnectorResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the Project.
func (o LookupDatadogConnectorResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o LookupDatadogConnectorResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Url of the Datadog server.
func (o LookupDatadogConnectorResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDatadogConnectorResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatadogConnectorResultOutput{})
}
