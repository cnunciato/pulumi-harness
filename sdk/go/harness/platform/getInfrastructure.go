// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for retrieving a Harness Infrastructure.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = platform.LookupInfrastructure(ctx, &platform.LookupInfrastructureArgs{
//				EnvId:      "env_id",
//				Identifier: pulumi.StringRef("identifier"),
//				Name:       pulumi.StringRef("name"),
//				OrgId:      "org_id",
//				ProjectId:  "project_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInfrastructure(ctx *pulumi.Context, args *LookupInfrastructureArgs, opts ...pulumi.InvokeOption) (*LookupInfrastructureResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupInfrastructureResult
	err := ctx.Invoke("harness:platform/getInfrastructure:getInfrastructure", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInfrastructure.
type LookupInfrastructureArgs struct {
	// environment identifier.
	EnvId string `pulumi:"envId"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the Organization.
	OrgId string `pulumi:"orgId"`
	// Unique identifier of the Project.
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getInfrastructure.
type LookupInfrastructureResult struct {
	// Infrastructure deployment type. Valid values are KUBERNETES*DIRECT, KUBERNETES*GCP, SERVERLESS*AWS*LAMBDA, PDC, KUBERNETES*AZURE, SSH*WINRM*AZURE, SSH*WINRM*AWS, AZURE*WEB*APP, ECS, GITOPS, CUSTOM*DEPLOYMENT.
	DeploymentType string `pulumi:"deploymentType"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// environment identifier.
	EnvId string `pulumi:"envId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the Organization.
	OrgId string `pulumi:"orgId"`
	// Unique identifier of the Project.
	ProjectId string `pulumi:"projectId"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
	// Type of Infrastructure. Valid values are KUBERNETES*DIRECT, KUBERNETES*GCP, SERVERLESS*AWS*LAMBDA, PDC, KUBERNETES*AZURE, SSH*WINRM*AZURE, SSH*WINRM*AWS, AZURE*WEB*APP, ECS, GITOPS, CUSTOM*DEPLOYMENT.
	Type string `pulumi:"type"`
	// Infrastructure YAML
	Yaml string `pulumi:"yaml"`
}

func LookupInfrastructureOutput(ctx *pulumi.Context, args LookupInfrastructureOutputArgs, opts ...pulumi.InvokeOption) LookupInfrastructureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupInfrastructureResult, error) {
			args := v.(LookupInfrastructureArgs)
			r, err := LookupInfrastructure(ctx, &args, opts...)
			var s LookupInfrastructureResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupInfrastructureResultOutput)
}

// A collection of arguments for invoking getInfrastructure.
type LookupInfrastructureOutputArgs struct {
	// environment identifier.
	EnvId pulumi.StringInput `pulumi:"envId"`
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the Organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Unique identifier of the Project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupInfrastructureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfrastructureArgs)(nil)).Elem()
}

// A collection of values returned by getInfrastructure.
type LookupInfrastructureResultOutput struct{ *pulumi.OutputState }

func (LookupInfrastructureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInfrastructureResult)(nil)).Elem()
}

func (o LookupInfrastructureResultOutput) ToLookupInfrastructureResultOutput() LookupInfrastructureResultOutput {
	return o
}

func (o LookupInfrastructureResultOutput) ToLookupInfrastructureResultOutputWithContext(ctx context.Context) LookupInfrastructureResultOutput {
	return o
}

// Infrastructure deployment type. Valid values are KUBERNETES*DIRECT, KUBERNETES*GCP, SERVERLESS*AWS*LAMBDA, PDC, KUBERNETES*AZURE, SSH*WINRM*AZURE, SSH*WINRM*AWS, AZURE*WEB*APP, ECS, GITOPS, CUSTOM*DEPLOYMENT.
func (o LookupInfrastructureResultOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// Description of the resource.
func (o LookupInfrastructureResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.Description }).(pulumi.StringOutput)
}

// environment identifier.
func (o LookupInfrastructureResultOutput) EnvId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.EnvId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInfrastructureResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupInfrastructureResultOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Name of the resource.
func (o LookupInfrastructureResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the Organization.
func (o LookupInfrastructureResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// Unique identifier of the Project.
func (o LookupInfrastructureResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o LookupInfrastructureResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Type of Infrastructure. Valid values are KUBERNETES*DIRECT, KUBERNETES*GCP, SERVERLESS*AWS*LAMBDA, PDC, KUBERNETES*AZURE, SSH*WINRM*AZURE, SSH*WINRM*AWS, AZURE*WEB*APP, ECS, GITOPS, CUSTOM*DEPLOYMENT.
func (o LookupInfrastructureResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.Type }).(pulumi.StringOutput)
}

// Infrastructure YAML
func (o LookupInfrastructureResultOutput) Yaml() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInfrastructureResult) string { return v.Yaml }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInfrastructureResultOutput{})
}
