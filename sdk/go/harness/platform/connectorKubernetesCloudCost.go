// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating a Kubernetes Cloud Cost connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.NewConnectorKubernetesCloudCost(ctx, "example", &platform.ConnectorKubernetesCloudCostArgs{
//				ConnectorRef: pulumi.String("connector_ref"),
//				Description:  pulumi.String("example"),
//				FeaturesEnableds: pulumi.StringArray{
//					pulumi.String("VISIBILITY"),
//					pulumi.String("OPTIMIZATION"),
//				},
//				Identifier: pulumi.String("identifier"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import account level kubernetes cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorKubernetesCloudCost:ConnectorKubernetesCloudCost example <connector_id>
//
// ```
//
//	Import org level kubernetes cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorKubernetesCloudCost:ConnectorKubernetesCloudCost example <ord_id>/<connector_id>
//
// ```
//
//	Import project level kubernetes cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorKubernetesCloudCost:ConnectorKubernetesCloudCost example <org_id>/<project_id>/<connector_id>
//
// ```
type ConnectorKubernetesCloudCost struct {
	pulumi.CustomResourceState

	// Reference of the Connector. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringOutput `pulumi:"connectorRef"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayOutput `pulumi:"featuresEnableds"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewConnectorKubernetesCloudCost registers a new resource with the given unique name, arguments, and options.
func NewConnectorKubernetesCloudCost(ctx *pulumi.Context,
	name string, args *ConnectorKubernetesCloudCostArgs, opts ...pulumi.ResourceOption) (*ConnectorKubernetesCloudCost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectorRef == nil {
		return nil, errors.New("invalid value for required argument 'ConnectorRef'")
	}
	if args.FeaturesEnableds == nil {
		return nil, errors.New("invalid value for required argument 'FeaturesEnableds'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectorKubernetesCloudCost
	err := ctx.RegisterResource("harness:platform/connectorKubernetesCloudCost:ConnectorKubernetesCloudCost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectorKubernetesCloudCost gets an existing ConnectorKubernetesCloudCost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectorKubernetesCloudCost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectorKubernetesCloudCostState, opts ...pulumi.ResourceOption) (*ConnectorKubernetesCloudCost, error) {
	var resource ConnectorKubernetesCloudCost
	err := ctx.ReadResource("harness:platform/connectorKubernetesCloudCost:ConnectorKubernetesCloudCost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectorKubernetesCloudCost resources.
type connectorKubernetesCloudCostState struct {
	// Reference of the Connector. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

type ConnectorKubernetesCloudCostState struct {
	// Reference of the Connector. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (ConnectorKubernetesCloudCostState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorKubernetesCloudCostState)(nil)).Elem()
}

type connectorKubernetesCloudCostArgs struct {
	// Reference of the Connector. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef string `pulumi:"connectorRef"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a ConnectorKubernetesCloudCost resource.
type ConnectorKubernetesCloudCostArgs struct {
	// Reference of the Connector. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (ConnectorKubernetesCloudCostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorKubernetesCloudCostArgs)(nil)).Elem()
}

type ConnectorKubernetesCloudCostInput interface {
	pulumi.Input

	ToConnectorKubernetesCloudCostOutput() ConnectorKubernetesCloudCostOutput
	ToConnectorKubernetesCloudCostOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostOutput
}

func (*ConnectorKubernetesCloudCost) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKubernetesCloudCost)(nil)).Elem()
}

func (i *ConnectorKubernetesCloudCost) ToConnectorKubernetesCloudCostOutput() ConnectorKubernetesCloudCostOutput {
	return i.ToConnectorKubernetesCloudCostOutputWithContext(context.Background())
}

func (i *ConnectorKubernetesCloudCost) ToConnectorKubernetesCloudCostOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKubernetesCloudCostOutput)
}

// ConnectorKubernetesCloudCostArrayInput is an input type that accepts ConnectorKubernetesCloudCostArray and ConnectorKubernetesCloudCostArrayOutput values.
// You can construct a concrete instance of `ConnectorKubernetesCloudCostArrayInput` via:
//
//	ConnectorKubernetesCloudCostArray{ ConnectorKubernetesCloudCostArgs{...} }
type ConnectorKubernetesCloudCostArrayInput interface {
	pulumi.Input

	ToConnectorKubernetesCloudCostArrayOutput() ConnectorKubernetesCloudCostArrayOutput
	ToConnectorKubernetesCloudCostArrayOutputWithContext(context.Context) ConnectorKubernetesCloudCostArrayOutput
}

type ConnectorKubernetesCloudCostArray []ConnectorKubernetesCloudCostInput

func (ConnectorKubernetesCloudCostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorKubernetesCloudCost)(nil)).Elem()
}

func (i ConnectorKubernetesCloudCostArray) ToConnectorKubernetesCloudCostArrayOutput() ConnectorKubernetesCloudCostArrayOutput {
	return i.ToConnectorKubernetesCloudCostArrayOutputWithContext(context.Background())
}

func (i ConnectorKubernetesCloudCostArray) ToConnectorKubernetesCloudCostArrayOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKubernetesCloudCostArrayOutput)
}

// ConnectorKubernetesCloudCostMapInput is an input type that accepts ConnectorKubernetesCloudCostMap and ConnectorKubernetesCloudCostMapOutput values.
// You can construct a concrete instance of `ConnectorKubernetesCloudCostMapInput` via:
//
//	ConnectorKubernetesCloudCostMap{ "key": ConnectorKubernetesCloudCostArgs{...} }
type ConnectorKubernetesCloudCostMapInput interface {
	pulumi.Input

	ToConnectorKubernetesCloudCostMapOutput() ConnectorKubernetesCloudCostMapOutput
	ToConnectorKubernetesCloudCostMapOutputWithContext(context.Context) ConnectorKubernetesCloudCostMapOutput
}

type ConnectorKubernetesCloudCostMap map[string]ConnectorKubernetesCloudCostInput

func (ConnectorKubernetesCloudCostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorKubernetesCloudCost)(nil)).Elem()
}

func (i ConnectorKubernetesCloudCostMap) ToConnectorKubernetesCloudCostMapOutput() ConnectorKubernetesCloudCostMapOutput {
	return i.ToConnectorKubernetesCloudCostMapOutputWithContext(context.Background())
}

func (i ConnectorKubernetesCloudCostMap) ToConnectorKubernetesCloudCostMapOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKubernetesCloudCostMapOutput)
}

type ConnectorKubernetesCloudCostOutput struct{ *pulumi.OutputState }

func (ConnectorKubernetesCloudCostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKubernetesCloudCost)(nil)).Elem()
}

func (o ConnectorKubernetesCloudCostOutput) ToConnectorKubernetesCloudCostOutput() ConnectorKubernetesCloudCostOutput {
	return o
}

func (o ConnectorKubernetesCloudCostOutput) ToConnectorKubernetesCloudCostOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostOutput {
	return o
}

// Reference of the Connector. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorKubernetesCloudCostOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringOutput { return v.ConnectorRef }).(pulumi.StringOutput)
}

// Description of the resource.
func (o ConnectorKubernetesCloudCostOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates which feature to enable among Billing, Optimization, and Visibility.
func (o ConnectorKubernetesCloudCostOutput) FeaturesEnableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringArrayOutput { return v.FeaturesEnableds }).(pulumi.StringArrayOutput)
}

// Unique identifier of the resource.
func (o ConnectorKubernetesCloudCostOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o ConnectorKubernetesCloudCostOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o ConnectorKubernetesCloudCostOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o ConnectorKubernetesCloudCostOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o ConnectorKubernetesCloudCostOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorKubernetesCloudCost) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type ConnectorKubernetesCloudCostArrayOutput struct{ *pulumi.OutputState }

func (ConnectorKubernetesCloudCostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorKubernetesCloudCost)(nil)).Elem()
}

func (o ConnectorKubernetesCloudCostArrayOutput) ToConnectorKubernetesCloudCostArrayOutput() ConnectorKubernetesCloudCostArrayOutput {
	return o
}

func (o ConnectorKubernetesCloudCostArrayOutput) ToConnectorKubernetesCloudCostArrayOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostArrayOutput {
	return o
}

func (o ConnectorKubernetesCloudCostArrayOutput) Index(i pulumi.IntInput) ConnectorKubernetesCloudCostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectorKubernetesCloudCost {
		return vs[0].([]*ConnectorKubernetesCloudCost)[vs[1].(int)]
	}).(ConnectorKubernetesCloudCostOutput)
}

type ConnectorKubernetesCloudCostMapOutput struct{ *pulumi.OutputState }

func (ConnectorKubernetesCloudCostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorKubernetesCloudCost)(nil)).Elem()
}

func (o ConnectorKubernetesCloudCostMapOutput) ToConnectorKubernetesCloudCostMapOutput() ConnectorKubernetesCloudCostMapOutput {
	return o
}

func (o ConnectorKubernetesCloudCostMapOutput) ToConnectorKubernetesCloudCostMapOutputWithContext(ctx context.Context) ConnectorKubernetesCloudCostMapOutput {
	return o
}

func (o ConnectorKubernetesCloudCostMapOutput) MapIndex(k pulumi.StringInput) ConnectorKubernetesCloudCostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectorKubernetesCloudCost {
		return vs[0].(map[string]*ConnectorKubernetesCloudCost)[vs[1].(string)]
	}).(ConnectorKubernetesCloudCostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKubernetesCloudCostInput)(nil)).Elem(), &ConnectorKubernetesCloudCost{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKubernetesCloudCostArrayInput)(nil)).Elem(), ConnectorKubernetesCloudCostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKubernetesCloudCostMapInput)(nil)).Elem(), ConnectorKubernetesCloudCostMap{})
	pulumi.RegisterOutputType(ConnectorKubernetesCloudCostOutput{})
	pulumi.RegisterOutputType(ConnectorKubernetesCloudCostArrayOutput{})
	pulumi.RegisterOutputType(ConnectorKubernetesCloudCostMapOutput{})
}
