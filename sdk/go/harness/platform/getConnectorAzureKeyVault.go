// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for looking up an Azure key vault connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupConnectorAzureKeyVault(ctx, &platform.LookupConnectorAzureKeyVaultArgs{
//				Identifier: "identifier",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConnectorAzureKeyVault(ctx *pulumi.Context, args *LookupConnectorAzureKeyVaultArgs, opts ...pulumi.InvokeOption) (*LookupConnectorAzureKeyVaultResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupConnectorAzureKeyVaultResult
	err := ctx.Invoke("harness:platform/getConnectorAzureKeyVault:getConnectorAzureKeyVault", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectorAzureKeyVault.
type LookupConnectorAzureKeyVaultArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getConnectorAzureKeyVault.
type LookupConnectorAzureKeyVaultResult struct {
	// Azure environment type. Possible values: AZURE or AZURE*US*GOVERNMENT. Default value: AZURE
	AzureEnvironmentType string `pulumi:"azureEnvironmentType"`
	// Application ID of the Azure App.
	ClientId string `pulumi:"clientId"`
	// Connect using only the delegates which have these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Specifies whether or not is the default value.
	IsDefault bool `pulumi:"isDefault"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// The Harness text secret with the Azure authentication key as its value.
	SecretKey string `pulumi:"secretKey"`
	// Azure subscription ID.
	Subscription string `pulumi:"subscription"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// The Azure Active Directory (AAD) directory ID where you created your application.
	TenantId string `pulumi:"tenantId"`
	// Name of the vault.
	VaultName string `pulumi:"vaultName"`
}

func LookupConnectorAzureKeyVaultOutput(ctx *pulumi.Context, args LookupConnectorAzureKeyVaultOutputArgs, opts ...pulumi.InvokeOption) LookupConnectorAzureKeyVaultResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectorAzureKeyVaultResult, error) {
			args := v.(LookupConnectorAzureKeyVaultArgs)
			r, err := LookupConnectorAzureKeyVault(ctx, &args, opts...)
			var s LookupConnectorAzureKeyVaultResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectorAzureKeyVaultResultOutput)
}

// A collection of arguments for invoking getConnectorAzureKeyVault.
type LookupConnectorAzureKeyVaultOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupConnectorAzureKeyVaultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorAzureKeyVaultArgs)(nil)).Elem()
}

// A collection of values returned by getConnectorAzureKeyVault.
type LookupConnectorAzureKeyVaultResultOutput struct{ *pulumi.OutputState }

func (LookupConnectorAzureKeyVaultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorAzureKeyVaultResult)(nil)).Elem()
}

func (o LookupConnectorAzureKeyVaultResultOutput) ToLookupConnectorAzureKeyVaultResultOutput() LookupConnectorAzureKeyVaultResultOutput {
	return o
}

func (o LookupConnectorAzureKeyVaultResultOutput) ToLookupConnectorAzureKeyVaultResultOutputWithContext(ctx context.Context) LookupConnectorAzureKeyVaultResultOutput {
	return o
}

// Azure environment type. Possible values: AZURE or AZURE*US*GOVERNMENT. Default value: AZURE
func (o LookupConnectorAzureKeyVaultResultOutput) AzureEnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.AzureEnvironmentType }).(pulumi.StringOutput)
}

// Application ID of the Azure App.
func (o LookupConnectorAzureKeyVaultResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.ClientId }).(pulumi.StringOutput)
}

// Connect using only the delegates which have these tags.
func (o LookupConnectorAzureKeyVaultResultOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o LookupConnectorAzureKeyVaultResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectorAzureKeyVaultResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupConnectorAzureKeyVaultResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Specifies whether or not is the default value.
func (o LookupConnectorAzureKeyVaultResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// Name of the resource.
func (o LookupConnectorAzureKeyVaultResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupConnectorAzureKeyVaultResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupConnectorAzureKeyVaultResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// The Harness text secret with the Azure authentication key as its value.
func (o LookupConnectorAzureKeyVaultResultOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.SecretKey }).(pulumi.StringOutput)
}

// Azure subscription ID.
func (o LookupConnectorAzureKeyVaultResultOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.Subscription }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o LookupConnectorAzureKeyVaultResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The Azure Active Directory (AAD) directory ID where you created your application.
func (o LookupConnectorAzureKeyVaultResultOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.TenantId }).(pulumi.StringOutput)
}

// Name of the vault.
func (o LookupConnectorAzureKeyVaultResultOutput) VaultName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorAzureKeyVaultResult) string { return v.VaultName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectorAzureKeyVaultResultOutput{})
}
