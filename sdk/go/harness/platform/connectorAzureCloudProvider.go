// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating an Azure Cloud Provider in Harness.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.NewConnectorAzureCloudProvider(ctx, "manualConfigSecret", &platform.ConnectorAzureCloudProviderArgs{
//				AzureEnvironmentType: pulumi.String("AZURE"),
//				Credentials: &platform.ConnectorAzureCloudProviderCredentialsArgs{
//					AzureManualDetails: &platform.ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs{
//						ApplicationId: pulumi.String("application_id"),
//						Auth: &platform.ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs{
//							AzureClientSecretKey: &platform.ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs{
//								SecretRef: pulumi.String(fmt.Sprintf("account.%v", harness_platform_secret_text.Test.Id)),
//							},
//							Type: pulumi.String("Secret"),
//						},
//						TenantId: pulumi.String("tenant_id"),
//					},
//					Type: pulumi.String("ManualConfig"),
//				},
//				DelegateSelectors: pulumi.StringArray{
//					pulumi.String("harness-delegate"),
//				},
//				Description: pulumi.String("example"),
//				Identifier:  pulumi.String("identifier"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = platform.NewConnectorAzureCloudProvider(ctx, "manualConfigCertificate", &platform.ConnectorAzureCloudProviderArgs{
//				AzureEnvironmentType: pulumi.String("AZURE"),
//				Credentials: &platform.ConnectorAzureCloudProviderCredentialsArgs{
//					AzureManualDetails: &platform.ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs{
//						ApplicationId: pulumi.String("application_id"),
//						Auth: &platform.ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs{
//							AzureClientKeyCert: &platform.ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs{
//								CertificateRef: pulumi.String(fmt.Sprintf("account.%v", harness_platform_secret_text.Test.Id)),
//							},
//							Type: pulumi.String("Certificate"),
//						},
//						TenantId: pulumi.String("tenant_id"),
//					},
//					Type: pulumi.String("ManualConfig"),
//				},
//				DelegateSelectors: pulumi.StringArray{
//					pulumi.String("harness-delegate"),
//				},
//				Description: pulumi.String("example"),
//				Identifier:  pulumi.String("identifier"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = platform.NewConnectorAzureCloudProvider(ctx, "inheritFromDelegateUserAssignedManagedIdentity", &platform.ConnectorAzureCloudProviderArgs{
//				AzureEnvironmentType: pulumi.String("AZURE"),
//				Credentials: &platform.ConnectorAzureCloudProviderCredentialsArgs{
//					AzureInheritFromDelegateDetails: &platform.ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs{
//						Auth: &platform.ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs{
//							AzureMsiAuthUa: &platform.ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs{
//								ClientId: pulumi.String("client_id"),
//							},
//							Type: pulumi.String("UserAssignedManagedIdentity"),
//						},
//					},
//					Type: pulumi.String("InheritFromDelegate"),
//				},
//				DelegateSelectors: pulumi.StringArray{
//					pulumi.String("harness-delegate"),
//				},
//				Description: pulumi.String("example"),
//				Identifier:  pulumi.String("identifier"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = platform.NewConnectorAzureCloudProvider(ctx, "inheritFromDelegateSystemAssignedManagedIdentity", &platform.ConnectorAzureCloudProviderArgs{
//				AzureEnvironmentType: pulumi.String("AZURE"),
//				Credentials: &platform.ConnectorAzureCloudProviderCredentialsArgs{
//					AzureInheritFromDelegateDetails: &platform.ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs{
//						Auth: &platform.ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs{
//							Type: pulumi.String("SystemAssignedManagedIdentity"),
//						},
//					},
//					Type: pulumi.String("InheritFromDelegate"),
//				},
//				DelegateSelectors: pulumi.StringArray{
//					pulumi.String("harness-delegate"),
//				},
//				Description: pulumi.String("example"),
//				Identifier:  pulumi.String("identifier"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import account level azure cloud provider connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorAzureCloudProvider:ConnectorAzureCloudProvider example <connector_id>
//
// ```
//
//	Import org level azure cloud provider connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorAzureCloudProvider:ConnectorAzureCloudProvider example <ord_id>/<connector_id>
//
// ```
//
//	Import project level azure cloud provider connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorAzureCloudProvider:ConnectorAzureCloudProvider example <org_id>/<project_id>/<connector_id>
//
// ```
type ConnectorAzureCloudProvider struct {
	pulumi.CustomResourceState

	// Specifies the Azure Environment type, which is AZURE by default. Can either be AZURE or AZURE*US*GOVERNMENT
	AzureEnvironmentType pulumi.StringOutput `pulumi:"azureEnvironmentType"`
	// Contains Azure connector credentials.
	Credentials ConnectorAzureCloudProviderCredentialsOutput `pulumi:"credentials"`
	// Tags to filter delegates for connection.
	DelegateSelectors pulumi.StringArrayOutput `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrOutput `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewConnectorAzureCloudProvider registers a new resource with the given unique name, arguments, and options.
func NewConnectorAzureCloudProvider(ctx *pulumi.Context,
	name string, args *ConnectorAzureCloudProviderArgs, opts ...pulumi.ResourceOption) (*ConnectorAzureCloudProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectorAzureCloudProvider
	err := ctx.RegisterResource("harness:platform/connectorAzureCloudProvider:ConnectorAzureCloudProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectorAzureCloudProvider gets an existing ConnectorAzureCloudProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectorAzureCloudProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectorAzureCloudProviderState, opts ...pulumi.ResourceOption) (*ConnectorAzureCloudProvider, error) {
	var resource ConnectorAzureCloudProvider
	err := ctx.ReadResource("harness:platform/connectorAzureCloudProvider:ConnectorAzureCloudProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectorAzureCloudProvider resources.
type connectorAzureCloudProviderState struct {
	// Specifies the Azure Environment type, which is AZURE by default. Can either be AZURE or AZURE*US*GOVERNMENT
	AzureEnvironmentType *string `pulumi:"azureEnvironmentType"`
	// Contains Azure connector credentials.
	Credentials *ConnectorAzureCloudProviderCredentials `pulumi:"credentials"`
	// Tags to filter delegates for connection.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Execute on delegate or not.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

type ConnectorAzureCloudProviderState struct {
	// Specifies the Azure Environment type, which is AZURE by default. Can either be AZURE or AZURE*US*GOVERNMENT
	AzureEnvironmentType pulumi.StringPtrInput
	// Contains Azure connector credentials.
	Credentials ConnectorAzureCloudProviderCredentialsPtrInput
	// Tags to filter delegates for connection.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (ConnectorAzureCloudProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorAzureCloudProviderState)(nil)).Elem()
}

type connectorAzureCloudProviderArgs struct {
	// Specifies the Azure Environment type, which is AZURE by default. Can either be AZURE or AZURE*US*GOVERNMENT
	AzureEnvironmentType *string `pulumi:"azureEnvironmentType"`
	// Contains Azure connector credentials.
	Credentials ConnectorAzureCloudProviderCredentials `pulumi:"credentials"`
	// Tags to filter delegates for connection.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Execute on delegate or not.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a ConnectorAzureCloudProvider resource.
type ConnectorAzureCloudProviderArgs struct {
	// Specifies the Azure Environment type, which is AZURE by default. Can either be AZURE or AZURE*US*GOVERNMENT
	AzureEnvironmentType pulumi.StringPtrInput
	// Contains Azure connector credentials.
	Credentials ConnectorAzureCloudProviderCredentialsInput
	// Tags to filter delegates for connection.
	DelegateSelectors pulumi.StringArrayInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (ConnectorAzureCloudProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorAzureCloudProviderArgs)(nil)).Elem()
}

type ConnectorAzureCloudProviderInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderOutput() ConnectorAzureCloudProviderOutput
	ToConnectorAzureCloudProviderOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderOutput
}

func (*ConnectorAzureCloudProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProvider)(nil)).Elem()
}

func (i *ConnectorAzureCloudProvider) ToConnectorAzureCloudProviderOutput() ConnectorAzureCloudProviderOutput {
	return i.ToConnectorAzureCloudProviderOutputWithContext(context.Background())
}

func (i *ConnectorAzureCloudProvider) ToConnectorAzureCloudProviderOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderOutput)
}

// ConnectorAzureCloudProviderArrayInput is an input type that accepts ConnectorAzureCloudProviderArray and ConnectorAzureCloudProviderArrayOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderArrayInput` via:
//
//	ConnectorAzureCloudProviderArray{ ConnectorAzureCloudProviderArgs{...} }
type ConnectorAzureCloudProviderArrayInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderArrayOutput() ConnectorAzureCloudProviderArrayOutput
	ToConnectorAzureCloudProviderArrayOutputWithContext(context.Context) ConnectorAzureCloudProviderArrayOutput
}

type ConnectorAzureCloudProviderArray []ConnectorAzureCloudProviderInput

func (ConnectorAzureCloudProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorAzureCloudProvider)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderArray) ToConnectorAzureCloudProviderArrayOutput() ConnectorAzureCloudProviderArrayOutput {
	return i.ToConnectorAzureCloudProviderArrayOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderArray) ToConnectorAzureCloudProviderArrayOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderArrayOutput)
}

// ConnectorAzureCloudProviderMapInput is an input type that accepts ConnectorAzureCloudProviderMap and ConnectorAzureCloudProviderMapOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderMapInput` via:
//
//	ConnectorAzureCloudProviderMap{ "key": ConnectorAzureCloudProviderArgs{...} }
type ConnectorAzureCloudProviderMapInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderMapOutput() ConnectorAzureCloudProviderMapOutput
	ToConnectorAzureCloudProviderMapOutputWithContext(context.Context) ConnectorAzureCloudProviderMapOutput
}

type ConnectorAzureCloudProviderMap map[string]ConnectorAzureCloudProviderInput

func (ConnectorAzureCloudProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorAzureCloudProvider)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderMap) ToConnectorAzureCloudProviderMapOutput() ConnectorAzureCloudProviderMapOutput {
	return i.ToConnectorAzureCloudProviderMapOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderMap) ToConnectorAzureCloudProviderMapOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderMapOutput)
}

type ConnectorAzureCloudProviderOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProvider)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderOutput) ToConnectorAzureCloudProviderOutput() ConnectorAzureCloudProviderOutput {
	return o
}

func (o ConnectorAzureCloudProviderOutput) ToConnectorAzureCloudProviderOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderOutput {
	return o
}

// Specifies the Azure Environment type, which is AZURE by default. Can either be AZURE or AZURE*US*GOVERNMENT
func (o ConnectorAzureCloudProviderOutput) AzureEnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringOutput { return v.AzureEnvironmentType }).(pulumi.StringOutput)
}

// Contains Azure connector credentials.
func (o ConnectorAzureCloudProviderOutput) Credentials() ConnectorAzureCloudProviderCredentialsOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) ConnectorAzureCloudProviderCredentialsOutput {
		return v.Credentials
	}).(ConnectorAzureCloudProviderCredentialsOutput)
}

// Tags to filter delegates for connection.
func (o ConnectorAzureCloudProviderOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringArrayOutput { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Description of the resource.
func (o ConnectorAzureCloudProviderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Execute on delegate or not.
func (o ConnectorAzureCloudProviderOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.BoolPtrOutput { return v.ExecuteOnDelegate }).(pulumi.BoolPtrOutput)
}

// Unique identifier of the resource.
func (o ConnectorAzureCloudProviderOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o ConnectorAzureCloudProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o ConnectorAzureCloudProviderOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o ConnectorAzureCloudProviderOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource.
func (o ConnectorAzureCloudProviderOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProvider) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type ConnectorAzureCloudProviderArrayOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorAzureCloudProvider)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderArrayOutput) ToConnectorAzureCloudProviderArrayOutput() ConnectorAzureCloudProviderArrayOutput {
	return o
}

func (o ConnectorAzureCloudProviderArrayOutput) ToConnectorAzureCloudProviderArrayOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderArrayOutput {
	return o
}

func (o ConnectorAzureCloudProviderArrayOutput) Index(i pulumi.IntInput) ConnectorAzureCloudProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectorAzureCloudProvider {
		return vs[0].([]*ConnectorAzureCloudProvider)[vs[1].(int)]
	}).(ConnectorAzureCloudProviderOutput)
}

type ConnectorAzureCloudProviderMapOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorAzureCloudProvider)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderMapOutput) ToConnectorAzureCloudProviderMapOutput() ConnectorAzureCloudProviderMapOutput {
	return o
}

func (o ConnectorAzureCloudProviderMapOutput) ToConnectorAzureCloudProviderMapOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderMapOutput {
	return o
}

func (o ConnectorAzureCloudProviderMapOutput) MapIndex(k pulumi.StringInput) ConnectorAzureCloudProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectorAzureCloudProvider {
		return vs[0].(map[string]*ConnectorAzureCloudProvider)[vs[1].(string)]
	}).(ConnectorAzureCloudProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderInput)(nil)).Elem(), &ConnectorAzureCloudProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderArrayInput)(nil)).Elem(), ConnectorAzureCloudProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderMapInput)(nil)).Elem(), ConnectorAzureCloudProviderMap{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderArrayOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderMapOutput{})
}
