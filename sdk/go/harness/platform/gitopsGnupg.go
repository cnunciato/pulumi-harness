// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GPG public key in the server's configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.NewGitopsGnupg(ctx, "example", &platform.GitopsGnupgArgs{
//				AccountId: pulumi.String("account_id"),
//				AgentId:   pulumi.String("agent_id"),
//				Requests: platform.GitopsGnupgRequestArray{
//					&platform.GitopsGnupgRequestArgs{
//						Upsert: pulumi.Bool(true),
//						Publickeys: platform.GitopsGnupgRequestPublickeyArray{
//							&platform.GitopsGnupgRequestPublickeyArgs{
//								KeyData: pulumi.String("-----BEGIN PGP PUBLIC KEY BLOCK-----XXXXXX-----END PGP PUBLIC KEY BLOCK-----"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import a Account level Gitops Cluster
//
// ```sh
//
//	$ pulumi import harness:platform/gitopsGnupg:GitopsGnupg example <agent_id>/<key_id>
//
// ```
//
//	Import a Project level Gitops Cluster
//
// ```sh
//
//	$ pulumi import harness:platform/gitopsGnupg:GitopsGnupg example <organization_id>/<project_id>/<agent_id>/<key_id>
//
// ```
type GitopsGnupg struct {
	pulumi.CustomResourceState

	// Account Identifier for the GnuPG Key.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Agent identifier for the GnuPG Key.
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// Identifier for the GnuPG Key.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Organization Identifier for the GnuPG Key.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Project Identifier for the GnuPG Key.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// GnuPGPublicKey is a representation of a GnuPG public key
	Requests GitopsGnupgRequestArrayOutput `pulumi:"requests"`
}

// NewGitopsGnupg registers a new resource with the given unique name, arguments, and options.
func NewGitopsGnupg(ctx *pulumi.Context,
	name string, args *GitopsGnupgArgs, opts ...pulumi.ResourceOption) (*GitopsGnupg, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.Requests == nil {
		return nil, errors.New("invalid value for required argument 'Requests'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource GitopsGnupg
	err := ctx.RegisterResource("harness:platform/gitopsGnupg:GitopsGnupg", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGitopsGnupg gets an existing GitopsGnupg resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGitopsGnupg(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GitopsGnupgState, opts ...pulumi.ResourceOption) (*GitopsGnupg, error) {
	var resource GitopsGnupg
	err := ctx.ReadResource("harness:platform/gitopsGnupg:GitopsGnupg", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GitopsGnupg resources.
type gitopsGnupgState struct {
	// Account Identifier for the GnuPG Key.
	AccountId *string `pulumi:"accountId"`
	// Agent identifier for the GnuPG Key.
	AgentId *string `pulumi:"agentId"`
	// Identifier for the GnuPG Key.
	Identifier *string `pulumi:"identifier"`
	// Organization Identifier for the GnuPG Key.
	OrgId *string `pulumi:"orgId"`
	// Project Identifier for the GnuPG Key.
	ProjectId *string `pulumi:"projectId"`
	// GnuPGPublicKey is a representation of a GnuPG public key
	Requests []GitopsGnupgRequest `pulumi:"requests"`
}

type GitopsGnupgState struct {
	// Account Identifier for the GnuPG Key.
	AccountId pulumi.StringPtrInput
	// Agent identifier for the GnuPG Key.
	AgentId pulumi.StringPtrInput
	// Identifier for the GnuPG Key.
	Identifier pulumi.StringPtrInput
	// Organization Identifier for the GnuPG Key.
	OrgId pulumi.StringPtrInput
	// Project Identifier for the GnuPG Key.
	ProjectId pulumi.StringPtrInput
	// GnuPGPublicKey is a representation of a GnuPG public key
	Requests GitopsGnupgRequestArrayInput
}

func (GitopsGnupgState) ElementType() reflect.Type {
	return reflect.TypeOf((*gitopsGnupgState)(nil)).Elem()
}

type gitopsGnupgArgs struct {
	// Account Identifier for the GnuPG Key.
	AccountId string `pulumi:"accountId"`
	// Agent identifier for the GnuPG Key.
	AgentId string `pulumi:"agentId"`
	// Organization Identifier for the GnuPG Key.
	OrgId *string `pulumi:"orgId"`
	// Project Identifier for the GnuPG Key.
	ProjectId *string `pulumi:"projectId"`
	// GnuPGPublicKey is a representation of a GnuPG public key
	Requests []GitopsGnupgRequest `pulumi:"requests"`
}

// The set of arguments for constructing a GitopsGnupg resource.
type GitopsGnupgArgs struct {
	// Account Identifier for the GnuPG Key.
	AccountId pulumi.StringInput
	// Agent identifier for the GnuPG Key.
	AgentId pulumi.StringInput
	// Organization Identifier for the GnuPG Key.
	OrgId pulumi.StringPtrInput
	// Project Identifier for the GnuPG Key.
	ProjectId pulumi.StringPtrInput
	// GnuPGPublicKey is a representation of a GnuPG public key
	Requests GitopsGnupgRequestArrayInput
}

func (GitopsGnupgArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gitopsGnupgArgs)(nil)).Elem()
}

type GitopsGnupgInput interface {
	pulumi.Input

	ToGitopsGnupgOutput() GitopsGnupgOutput
	ToGitopsGnupgOutputWithContext(ctx context.Context) GitopsGnupgOutput
}

func (*GitopsGnupg) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsGnupg)(nil)).Elem()
}

func (i *GitopsGnupg) ToGitopsGnupgOutput() GitopsGnupgOutput {
	return i.ToGitopsGnupgOutputWithContext(context.Background())
}

func (i *GitopsGnupg) ToGitopsGnupgOutputWithContext(ctx context.Context) GitopsGnupgOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgOutput)
}

// GitopsGnupgArrayInput is an input type that accepts GitopsGnupgArray and GitopsGnupgArrayOutput values.
// You can construct a concrete instance of `GitopsGnupgArrayInput` via:
//
//	GitopsGnupgArray{ GitopsGnupgArgs{...} }
type GitopsGnupgArrayInput interface {
	pulumi.Input

	ToGitopsGnupgArrayOutput() GitopsGnupgArrayOutput
	ToGitopsGnupgArrayOutputWithContext(context.Context) GitopsGnupgArrayOutput
}

type GitopsGnupgArray []GitopsGnupgInput

func (GitopsGnupgArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GitopsGnupg)(nil)).Elem()
}

func (i GitopsGnupgArray) ToGitopsGnupgArrayOutput() GitopsGnupgArrayOutput {
	return i.ToGitopsGnupgArrayOutputWithContext(context.Background())
}

func (i GitopsGnupgArray) ToGitopsGnupgArrayOutputWithContext(ctx context.Context) GitopsGnupgArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgArrayOutput)
}

// GitopsGnupgMapInput is an input type that accepts GitopsGnupgMap and GitopsGnupgMapOutput values.
// You can construct a concrete instance of `GitopsGnupgMapInput` via:
//
//	GitopsGnupgMap{ "key": GitopsGnupgArgs{...} }
type GitopsGnupgMapInput interface {
	pulumi.Input

	ToGitopsGnupgMapOutput() GitopsGnupgMapOutput
	ToGitopsGnupgMapOutputWithContext(context.Context) GitopsGnupgMapOutput
}

type GitopsGnupgMap map[string]GitopsGnupgInput

func (GitopsGnupgMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GitopsGnupg)(nil)).Elem()
}

func (i GitopsGnupgMap) ToGitopsGnupgMapOutput() GitopsGnupgMapOutput {
	return i.ToGitopsGnupgMapOutputWithContext(context.Background())
}

func (i GitopsGnupgMap) ToGitopsGnupgMapOutputWithContext(ctx context.Context) GitopsGnupgMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgMapOutput)
}

type GitopsGnupgOutput struct{ *pulumi.OutputState }

func (GitopsGnupgOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitopsGnupg)(nil)).Elem()
}

func (o GitopsGnupgOutput) ToGitopsGnupgOutput() GitopsGnupgOutput {
	return o
}

func (o GitopsGnupgOutput) ToGitopsGnupgOutputWithContext(ctx context.Context) GitopsGnupgOutput {
	return o
}

// Account Identifier for the GnuPG Key.
func (o GitopsGnupgOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *GitopsGnupg) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Agent identifier for the GnuPG Key.
func (o GitopsGnupgOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *GitopsGnupg) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// Identifier for the GnuPG Key.
func (o GitopsGnupgOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *GitopsGnupg) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Organization Identifier for the GnuPG Key.
func (o GitopsGnupgOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsGnupg) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project Identifier for the GnuPG Key.
func (o GitopsGnupgOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitopsGnupg) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// GnuPGPublicKey is a representation of a GnuPG public key
func (o GitopsGnupgOutput) Requests() GitopsGnupgRequestArrayOutput {
	return o.ApplyT(func(v *GitopsGnupg) GitopsGnupgRequestArrayOutput { return v.Requests }).(GitopsGnupgRequestArrayOutput)
}

type GitopsGnupgArrayOutput struct{ *pulumi.OutputState }

func (GitopsGnupgArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GitopsGnupg)(nil)).Elem()
}

func (o GitopsGnupgArrayOutput) ToGitopsGnupgArrayOutput() GitopsGnupgArrayOutput {
	return o
}

func (o GitopsGnupgArrayOutput) ToGitopsGnupgArrayOutputWithContext(ctx context.Context) GitopsGnupgArrayOutput {
	return o
}

func (o GitopsGnupgArrayOutput) Index(i pulumi.IntInput) GitopsGnupgOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GitopsGnupg {
		return vs[0].([]*GitopsGnupg)[vs[1].(int)]
	}).(GitopsGnupgOutput)
}

type GitopsGnupgMapOutput struct{ *pulumi.OutputState }

func (GitopsGnupgMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GitopsGnupg)(nil)).Elem()
}

func (o GitopsGnupgMapOutput) ToGitopsGnupgMapOutput() GitopsGnupgMapOutput {
	return o
}

func (o GitopsGnupgMapOutput) ToGitopsGnupgMapOutputWithContext(ctx context.Context) GitopsGnupgMapOutput {
	return o
}

func (o GitopsGnupgMapOutput) MapIndex(k pulumi.StringInput) GitopsGnupgOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GitopsGnupg {
		return vs[0].(map[string]*GitopsGnupg)[vs[1].(string)]
	}).(GitopsGnupgOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgInput)(nil)).Elem(), &GitopsGnupg{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgArrayInput)(nil)).Elem(), GitopsGnupgArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgMapInput)(nil)).Elem(), GitopsGnupgMap{})
	pulumi.RegisterOutputType(GitopsGnupgOutput{})
	pulumi.RegisterOutputType(GitopsGnupgArrayOutput{})
	pulumi.RegisterOutputType(GitopsGnupgMapOutput{})
}
