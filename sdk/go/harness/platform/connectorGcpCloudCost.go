// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating a GCP Cloud Cost connector in Harness.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.NewConnectorGcpCloudCost(ctx, "test", &platform.ConnectorGcpCloudCostArgs{
//				BillingExportSpec: &platform.ConnectorGcpCloudCostBillingExportSpecArgs{
//					DataSetId: pulumi.String("data_set_id"),
//					TableId:   pulumi.String("table_id"),
//				},
//				Description: pulumi.String("test"),
//				FeaturesEnableds: pulumi.StringArray{
//					pulumi.String("BILLING"),
//					pulumi.String("VISIBILITY"),
//					pulumi.String("OPTIMIZATION"),
//				},
//				GcpProjectId:        pulumi.String("gcp_project_id"),
//				Identifier:          pulumi.String("identifier"),
//				ServiceAccountEmail: pulumi.String("service_account_email"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import account level gcp cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorGcpCloudCost:ConnectorGcpCloudCost example <connector_id>
//
// ```
//
//	Import org level gcp cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorGcpCloudCost:ConnectorGcpCloudCost example <ord_id>/<connector_id>
//
// ```
//
//	Import project level gcp cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorGcpCloudCost:ConnectorGcpCloudCost example <org_id>/<project_id>/<connector_id>
//
// ```
type ConnectorGcpCloudCost struct {
	pulumi.CustomResourceState

	// Returns billing details.
	BillingExportSpec ConnectorGcpCloudCostBillingExportSpecPtrOutput `pulumi:"billingExportSpec"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates which features to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayOutput `pulumi:"featuresEnableds"`
	// GCP Project Id.
	GcpProjectId pulumi.StringOutput `pulumi:"gcpProjectId"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Email corresponding to the Service Account.
	ServiceAccountEmail pulumi.StringOutput `pulumi:"serviceAccountEmail"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewConnectorGcpCloudCost registers a new resource with the given unique name, arguments, and options.
func NewConnectorGcpCloudCost(ctx *pulumi.Context,
	name string, args *ConnectorGcpCloudCostArgs, opts ...pulumi.ResourceOption) (*ConnectorGcpCloudCost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeaturesEnableds == nil {
		return nil, errors.New("invalid value for required argument 'FeaturesEnableds'")
	}
	if args.GcpProjectId == nil {
		return nil, errors.New("invalid value for required argument 'GcpProjectId'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.ServiceAccountEmail == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountEmail'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectorGcpCloudCost
	err := ctx.RegisterResource("harness:platform/connectorGcpCloudCost:ConnectorGcpCloudCost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectorGcpCloudCost gets an existing ConnectorGcpCloudCost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectorGcpCloudCost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectorGcpCloudCostState, opts ...pulumi.ResourceOption) (*ConnectorGcpCloudCost, error) {
	var resource ConnectorGcpCloudCost
	err := ctx.ReadResource("harness:platform/connectorGcpCloudCost:ConnectorGcpCloudCost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectorGcpCloudCost resources.
type connectorGcpCloudCostState struct {
	// Returns billing details.
	BillingExportSpec *ConnectorGcpCloudCostBillingExportSpec `pulumi:"billingExportSpec"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Indicates which features to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// GCP Project Id.
	GcpProjectId *string `pulumi:"gcpProjectId"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Email corresponding to the Service Account.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

type ConnectorGcpCloudCostState struct {
	// Returns billing details.
	BillingExportSpec ConnectorGcpCloudCostBillingExportSpecPtrInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Indicates which features to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayInput
	// GCP Project Id.
	GcpProjectId pulumi.StringPtrInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Email corresponding to the Service Account.
	ServiceAccountEmail pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (ConnectorGcpCloudCostState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorGcpCloudCostState)(nil)).Elem()
}

type connectorGcpCloudCostArgs struct {
	// Returns billing details.
	BillingExportSpec *ConnectorGcpCloudCostBillingExportSpec `pulumi:"billingExportSpec"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Indicates which features to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// GCP Project Id.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Email corresponding to the Service Account.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a ConnectorGcpCloudCost resource.
type ConnectorGcpCloudCostArgs struct {
	// Returns billing details.
	BillingExportSpec ConnectorGcpCloudCostBillingExportSpecPtrInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Indicates which features to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayInput
	// GCP Project Id.
	GcpProjectId pulumi.StringInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Email corresponding to the Service Account.
	ServiceAccountEmail pulumi.StringInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
}

func (ConnectorGcpCloudCostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorGcpCloudCostArgs)(nil)).Elem()
}

type ConnectorGcpCloudCostInput interface {
	pulumi.Input

	ToConnectorGcpCloudCostOutput() ConnectorGcpCloudCostOutput
	ToConnectorGcpCloudCostOutputWithContext(ctx context.Context) ConnectorGcpCloudCostOutput
}

func (*ConnectorGcpCloudCost) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorGcpCloudCost)(nil)).Elem()
}

func (i *ConnectorGcpCloudCost) ToConnectorGcpCloudCostOutput() ConnectorGcpCloudCostOutput {
	return i.ToConnectorGcpCloudCostOutputWithContext(context.Background())
}

func (i *ConnectorGcpCloudCost) ToConnectorGcpCloudCostOutputWithContext(ctx context.Context) ConnectorGcpCloudCostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorGcpCloudCostOutput)
}

// ConnectorGcpCloudCostArrayInput is an input type that accepts ConnectorGcpCloudCostArray and ConnectorGcpCloudCostArrayOutput values.
// You can construct a concrete instance of `ConnectorGcpCloudCostArrayInput` via:
//
//	ConnectorGcpCloudCostArray{ ConnectorGcpCloudCostArgs{...} }
type ConnectorGcpCloudCostArrayInput interface {
	pulumi.Input

	ToConnectorGcpCloudCostArrayOutput() ConnectorGcpCloudCostArrayOutput
	ToConnectorGcpCloudCostArrayOutputWithContext(context.Context) ConnectorGcpCloudCostArrayOutput
}

type ConnectorGcpCloudCostArray []ConnectorGcpCloudCostInput

func (ConnectorGcpCloudCostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorGcpCloudCost)(nil)).Elem()
}

func (i ConnectorGcpCloudCostArray) ToConnectorGcpCloudCostArrayOutput() ConnectorGcpCloudCostArrayOutput {
	return i.ToConnectorGcpCloudCostArrayOutputWithContext(context.Background())
}

func (i ConnectorGcpCloudCostArray) ToConnectorGcpCloudCostArrayOutputWithContext(ctx context.Context) ConnectorGcpCloudCostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorGcpCloudCostArrayOutput)
}

// ConnectorGcpCloudCostMapInput is an input type that accepts ConnectorGcpCloudCostMap and ConnectorGcpCloudCostMapOutput values.
// You can construct a concrete instance of `ConnectorGcpCloudCostMapInput` via:
//
//	ConnectorGcpCloudCostMap{ "key": ConnectorGcpCloudCostArgs{...} }
type ConnectorGcpCloudCostMapInput interface {
	pulumi.Input

	ToConnectorGcpCloudCostMapOutput() ConnectorGcpCloudCostMapOutput
	ToConnectorGcpCloudCostMapOutputWithContext(context.Context) ConnectorGcpCloudCostMapOutput
}

type ConnectorGcpCloudCostMap map[string]ConnectorGcpCloudCostInput

func (ConnectorGcpCloudCostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorGcpCloudCost)(nil)).Elem()
}

func (i ConnectorGcpCloudCostMap) ToConnectorGcpCloudCostMapOutput() ConnectorGcpCloudCostMapOutput {
	return i.ToConnectorGcpCloudCostMapOutputWithContext(context.Background())
}

func (i ConnectorGcpCloudCostMap) ToConnectorGcpCloudCostMapOutputWithContext(ctx context.Context) ConnectorGcpCloudCostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorGcpCloudCostMapOutput)
}

type ConnectorGcpCloudCostOutput struct{ *pulumi.OutputState }

func (ConnectorGcpCloudCostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorGcpCloudCost)(nil)).Elem()
}

func (o ConnectorGcpCloudCostOutput) ToConnectorGcpCloudCostOutput() ConnectorGcpCloudCostOutput {
	return o
}

func (o ConnectorGcpCloudCostOutput) ToConnectorGcpCloudCostOutputWithContext(ctx context.Context) ConnectorGcpCloudCostOutput {
	return o
}

// Returns billing details.
func (o ConnectorGcpCloudCostOutput) BillingExportSpec() ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) ConnectorGcpCloudCostBillingExportSpecPtrOutput {
		return v.BillingExportSpec
	}).(ConnectorGcpCloudCostBillingExportSpecPtrOutput)
}

// Description of the resource.
func (o ConnectorGcpCloudCostOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates which features to enable among Billing, Optimization, and Visibility.
func (o ConnectorGcpCloudCostOutput) FeaturesEnableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringArrayOutput { return v.FeaturesEnableds }).(pulumi.StringArrayOutput)
}

// GCP Project Id.
func (o ConnectorGcpCloudCostOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringOutput { return v.GcpProjectId }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o ConnectorGcpCloudCostOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o ConnectorGcpCloudCostOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o ConnectorGcpCloudCostOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o ConnectorGcpCloudCostOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Email corresponding to the Service Account.
func (o ConnectorGcpCloudCostOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o ConnectorGcpCloudCostOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCost) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type ConnectorGcpCloudCostArrayOutput struct{ *pulumi.OutputState }

func (ConnectorGcpCloudCostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorGcpCloudCost)(nil)).Elem()
}

func (o ConnectorGcpCloudCostArrayOutput) ToConnectorGcpCloudCostArrayOutput() ConnectorGcpCloudCostArrayOutput {
	return o
}

func (o ConnectorGcpCloudCostArrayOutput) ToConnectorGcpCloudCostArrayOutputWithContext(ctx context.Context) ConnectorGcpCloudCostArrayOutput {
	return o
}

func (o ConnectorGcpCloudCostArrayOutput) Index(i pulumi.IntInput) ConnectorGcpCloudCostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectorGcpCloudCost {
		return vs[0].([]*ConnectorGcpCloudCost)[vs[1].(int)]
	}).(ConnectorGcpCloudCostOutput)
}

type ConnectorGcpCloudCostMapOutput struct{ *pulumi.OutputState }

func (ConnectorGcpCloudCostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorGcpCloudCost)(nil)).Elem()
}

func (o ConnectorGcpCloudCostMapOutput) ToConnectorGcpCloudCostMapOutput() ConnectorGcpCloudCostMapOutput {
	return o
}

func (o ConnectorGcpCloudCostMapOutput) ToConnectorGcpCloudCostMapOutputWithContext(ctx context.Context) ConnectorGcpCloudCostMapOutput {
	return o
}

func (o ConnectorGcpCloudCostMapOutput) MapIndex(k pulumi.StringInput) ConnectorGcpCloudCostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectorGcpCloudCost {
		return vs[0].(map[string]*ConnectorGcpCloudCost)[vs[1].(string)]
	}).(ConnectorGcpCloudCostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorGcpCloudCostInput)(nil)).Elem(), &ConnectorGcpCloudCost{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorGcpCloudCostArrayInput)(nil)).Elem(), ConnectorGcpCloudCostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorGcpCloudCostMapInput)(nil)).Elem(), ConnectorGcpCloudCostMap{})
	pulumi.RegisterOutputType(ConnectorGcpCloudCostOutput{})
	pulumi.RegisterOutputType(ConnectorGcpCloudCostArrayOutput{})
	pulumi.RegisterOutputType(ConnectorGcpCloudCostMapOutput{})
}
