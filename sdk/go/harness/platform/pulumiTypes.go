// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceGroupIncludedScope struct {
	// Account Identifier of the account
	AccountId *string `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
	Filter string `pulumi:"filter"`
	// Organization Identifier
	OrgId *string `pulumi:"orgId"`
	// Project Identifier
	ProjectId *string `pulumi:"projectId"`
}

// ResourceGroupIncludedScopeInput is an input type that accepts ResourceGroupIncludedScopeArgs and ResourceGroupIncludedScopeOutput values.
// You can construct a concrete instance of `ResourceGroupIncludedScopeInput` via:
//
//	ResourceGroupIncludedScopeArgs{...}
type ResourceGroupIncludedScopeInput interface {
	pulumi.Input

	ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput
	ToResourceGroupIncludedScopeOutputWithContext(context.Context) ResourceGroupIncludedScopeOutput
}

type ResourceGroupIncludedScopeArgs struct {
	// Account Identifier of the account
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
	Filter pulumi.StringInput `pulumi:"filter"`
	// Organization Identifier
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Project Identifier
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (ResourceGroupIncludedScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupIncludedScope)(nil)).Elem()
}

func (i ResourceGroupIncludedScopeArgs) ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput {
	return i.ToResourceGroupIncludedScopeOutputWithContext(context.Background())
}

func (i ResourceGroupIncludedScopeArgs) ToResourceGroupIncludedScopeOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupIncludedScopeOutput)
}

// ResourceGroupIncludedScopeArrayInput is an input type that accepts ResourceGroupIncludedScopeArray and ResourceGroupIncludedScopeArrayOutput values.
// You can construct a concrete instance of `ResourceGroupIncludedScopeArrayInput` via:
//
//	ResourceGroupIncludedScopeArray{ ResourceGroupIncludedScopeArgs{...} }
type ResourceGroupIncludedScopeArrayInput interface {
	pulumi.Input

	ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput
	ToResourceGroupIncludedScopeArrayOutputWithContext(context.Context) ResourceGroupIncludedScopeArrayOutput
}

type ResourceGroupIncludedScopeArray []ResourceGroupIncludedScopeInput

func (ResourceGroupIncludedScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupIncludedScope)(nil)).Elem()
}

func (i ResourceGroupIncludedScopeArray) ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput {
	return i.ToResourceGroupIncludedScopeArrayOutputWithContext(context.Background())
}

func (i ResourceGroupIncludedScopeArray) ToResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupIncludedScopeArrayOutput)
}

type ResourceGroupIncludedScopeOutput struct{ *pulumi.OutputState }

func (ResourceGroupIncludedScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupIncludedScope)(nil)).Elem()
}

func (o ResourceGroupIncludedScopeOutput) ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput {
	return o
}

func (o ResourceGroupIncludedScopeOutput) ToResourceGroupIncludedScopeOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeOutput {
	return o
}

// Account Identifier of the account
func (o ResourceGroupIncludedScopeOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
func (o ResourceGroupIncludedScopeOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) string { return v.Filter }).(pulumi.StringOutput)
}

// Organization Identifier
func (o ResourceGroupIncludedScopeOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project Identifier
func (o ResourceGroupIncludedScopeOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

type ResourceGroupIncludedScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupIncludedScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupIncludedScope)(nil)).Elem()
}

func (o ResourceGroupIncludedScopeArrayOutput) ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o ResourceGroupIncludedScopeArrayOutput) ToResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o ResourceGroupIncludedScopeArrayOutput) Index(i pulumi.IntInput) ResourceGroupIncludedScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupIncludedScope {
		return vs[0].([]ResourceGroupIncludedScope)[vs[1].(int)]
	}).(ResourceGroupIncludedScopeOutput)
}

type ResourceGroupResourceFilter struct {
	// Include all resource or not
	IncludeAllResources *bool `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources []ResourceGroupResourceFilterResource `pulumi:"resources"`
}

// ResourceGroupResourceFilterInput is an input type that accepts ResourceGroupResourceFilterArgs and ResourceGroupResourceFilterOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterInput` via:
//
//	ResourceGroupResourceFilterArgs{...}
type ResourceGroupResourceFilterInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput
	ToResourceGroupResourceFilterOutputWithContext(context.Context) ResourceGroupResourceFilterOutput
}

type ResourceGroupResourceFilterArgs struct {
	// Include all resource or not
	IncludeAllResources pulumi.BoolPtrInput `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources ResourceGroupResourceFilterResourceArrayInput `pulumi:"resources"`
}

func (ResourceGroupResourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterArgs) ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput {
	return i.ToResourceGroupResourceFilterOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterArgs) ToResourceGroupResourceFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterOutput)
}

// ResourceGroupResourceFilterArrayInput is an input type that accepts ResourceGroupResourceFilterArray and ResourceGroupResourceFilterArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterArrayInput` via:
//
//	ResourceGroupResourceFilterArray{ ResourceGroupResourceFilterArgs{...} }
type ResourceGroupResourceFilterArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput
	ToResourceGroupResourceFilterArrayOutputWithContext(context.Context) ResourceGroupResourceFilterArrayOutput
}

type ResourceGroupResourceFilterArray []ResourceGroupResourceFilterInput

func (ResourceGroupResourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterArray) ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput {
	return i.ToResourceGroupResourceFilterArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterArray) ToResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterArrayOutput)
}

type ResourceGroupResourceFilterOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterOutput) ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterOutput) ToResourceGroupResourceFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterOutput {
	return o
}

// Include all resource or not
func (o ResourceGroupResourceFilterOutput) IncludeAllResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilter) *bool { return v.IncludeAllResources }).(pulumi.BoolPtrOutput)
}

// Resources for a resource group
func (o ResourceGroupResourceFilterOutput) Resources() ResourceGroupResourceFilterResourceArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilter) []ResourceGroupResourceFilterResource { return v.Resources }).(ResourceGroupResourceFilterResourceArrayOutput)
}

type ResourceGroupResourceFilterArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterArrayOutput) ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterArrayOutput) ToResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilter {
		return vs[0].([]ResourceGroupResourceFilter)[vs[1].(int)]
	}).(ResourceGroupResourceFilterOutput)
}

type ResourceGroupResourceFilterResource struct {
	AttributeFilters []ResourceGroupResourceFilterResourceAttributeFilter `pulumi:"attributeFilters"`
	Identifiers      []string                                             `pulumi:"identifiers"`
	ResourceType     string                                               `pulumi:"resourceType"`
}

// ResourceGroupResourceFilterResourceInput is an input type that accepts ResourceGroupResourceFilterResourceArgs and ResourceGroupResourceFilterResourceOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceInput` via:
//
//	ResourceGroupResourceFilterResourceArgs{...}
type ResourceGroupResourceFilterResourceInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput
	ToResourceGroupResourceFilterResourceOutputWithContext(context.Context) ResourceGroupResourceFilterResourceOutput
}

type ResourceGroupResourceFilterResourceArgs struct {
	AttributeFilters ResourceGroupResourceFilterResourceAttributeFilterArrayInput `pulumi:"attributeFilters"`
	Identifiers      pulumi.StringArrayInput                                      `pulumi:"identifiers"`
	ResourceType     pulumi.StringInput                                           `pulumi:"resourceType"`
}

func (ResourceGroupResourceFilterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceArgs) ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput {
	return i.ToResourceGroupResourceFilterResourceOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceArgs) ToResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceOutput)
}

// ResourceGroupResourceFilterResourceArrayInput is an input type that accepts ResourceGroupResourceFilterResourceArray and ResourceGroupResourceFilterResourceArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceArrayInput` via:
//
//	ResourceGroupResourceFilterResourceArray{ ResourceGroupResourceFilterResourceArgs{...} }
type ResourceGroupResourceFilterResourceArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput
	ToResourceGroupResourceFilterResourceArrayOutputWithContext(context.Context) ResourceGroupResourceFilterResourceArrayOutput
}

type ResourceGroupResourceFilterResourceArray []ResourceGroupResourceFilterResourceInput

func (ResourceGroupResourceFilterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceArray) ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput {
	return i.ToResourceGroupResourceFilterResourceArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceArray) ToResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceArrayOutput)
}

type ResourceGroupResourceFilterResourceOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceOutput) ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceOutput) ToResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceOutput) AttributeFilters() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) []ResourceGroupResourceFilterResourceAttributeFilter {
		return v.AttributeFilters
	}).(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

func (o ResourceGroupResourceFilterResourceOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

func (o ResourceGroupResourceFilterResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ResourceGroupResourceFilterResourceArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceArrayOutput) ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceArrayOutput) ToResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilterResource {
		return vs[0].([]ResourceGroupResourceFilterResource)[vs[1].(int)]
	}).(ResourceGroupResourceFilterResourceOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilter struct {
	AttributeName   *string  `pulumi:"attributeName"`
	AttributeValues []string `pulumi:"attributeValues"`
}

// ResourceGroupResourceFilterResourceAttributeFilterInput is an input type that accepts ResourceGroupResourceFilterResourceAttributeFilterArgs and ResourceGroupResourceFilterResourceAttributeFilterOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceAttributeFilterInput` via:
//
//	ResourceGroupResourceFilterResourceAttributeFilterArgs{...}
type ResourceGroupResourceFilterResourceAttributeFilterInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput
	ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput
}

type ResourceGroupResourceFilterResourceAttributeFilterArgs struct {
	AttributeName   pulumi.StringPtrInput   `pulumi:"attributeName"`
	AttributeValues pulumi.StringArrayInput `pulumi:"attributeValues"`
}

func (ResourceGroupResourceFilterResourceAttributeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArgs) ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return i.ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArgs) ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceAttributeFilterOutput)
}

// ResourceGroupResourceFilterResourceAttributeFilterArrayInput is an input type that accepts ResourceGroupResourceFilterResourceAttributeFilterArray and ResourceGroupResourceFilterResourceAttributeFilterArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceAttributeFilterArrayInput` via:
//
//	ResourceGroupResourceFilterResourceAttributeFilterArray{ ResourceGroupResourceFilterResourceAttributeFilterArgs{...} }
type ResourceGroupResourceFilterResourceAttributeFilterArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput
	ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput
}

type ResourceGroupResourceFilterResourceAttributeFilterArray []ResourceGroupResourceFilterResourceAttributeFilterInput

func (ResourceGroupResourceFilterResourceAttributeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArray) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return i.ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArray) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilterOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceAttributeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResourceAttributeFilter) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResourceAttributeFilter) []string { return v.AttributeValues }).(pulumi.StringArrayOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilterArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilterResourceAttributeFilter {
		return vs[0].([]ResourceGroupResourceFilterResourceAttributeFilter)[vs[1].(int)]
	}).(ResourceGroupResourceFilterResourceAttributeFilterOutput)
}

type SecretSshkeyKerberos struct {
	// Username to use for authentication.
	Principal string `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm string `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod *string `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpec *SecretSshkeyKerberosTgtKeyTabFilePathSpec `pulumi:"tgtKeyTabFilePathSpec"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpec *SecretSshkeyKerberosTgtPasswordSpec `pulumi:"tgtPasswordSpec"`
}

// SecretSshkeyKerberosInput is an input type that accepts SecretSshkeyKerberosArgs and SecretSshkeyKerberosOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosInput` via:
//
//	SecretSshkeyKerberosArgs{...}
type SecretSshkeyKerberosInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput
	ToSecretSshkeyKerberosOutputWithContext(context.Context) SecretSshkeyKerberosOutput
}

type SecretSshkeyKerberosArgs struct {
	// Username to use for authentication.
	Principal pulumi.StringInput `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm pulumi.StringInput `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod pulumi.StringPtrInput `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpec SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput `pulumi:"tgtKeyTabFilePathSpec"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpec SecretSshkeyKerberosTgtPasswordSpecPtrInput `pulumi:"tgtPasswordSpec"`
}

func (SecretSshkeyKerberosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberos)(nil)).Elem()
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput {
	return i.ToSecretSshkeyKerberosOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosOutputWithContext(ctx context.Context) SecretSshkeyKerberosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosOutput)
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return i.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosOutput).ToSecretSshkeyKerberosPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosPtrInput is an input type that accepts SecretSshkeyKerberosArgs, SecretSshkeyKerberosPtr and SecretSshkeyKerberosPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosPtrInput` via:
//
//	        SecretSshkeyKerberosArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput
	ToSecretSshkeyKerberosPtrOutputWithContext(context.Context) SecretSshkeyKerberosPtrOutput
}

type secretSshkeyKerberosPtrType SecretSshkeyKerberosArgs

func SecretSshkeyKerberosPtr(v *SecretSshkeyKerberosArgs) SecretSshkeyKerberosPtrInput {
	return (*secretSshkeyKerberosPtrType)(v)
}

func (*secretSshkeyKerberosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberos)(nil)).Elem()
}

func (i *secretSshkeyKerberosPtrType) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return i.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosPtrType) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosPtrOutput)
}

type SecretSshkeyKerberosOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberos)(nil)).Elem()
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput {
	return o
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosOutputWithContext(ctx context.Context) SecretSshkeyKerberosOutput {
	return o
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return o.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberos) *SecretSshkeyKerberos {
		return &v
	}).(SecretSshkeyKerberosPtrOutput)
}

// Username to use for authentication.
func (o SecretSshkeyKerberosOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) string { return v.Principal }).(pulumi.StringOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o SecretSshkeyKerberosOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) string { return v.Realm }).(pulumi.StringOutput)
}

// Method to generate tgt
func (o SecretSshkeyKerberosOutput) TgtGenerationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *string { return v.TgtGenerationMethod }).(pulumi.StringPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosOutput) TgtKeyTabFilePathSpec() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		return v.TgtKeyTabFilePathSpec
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosOutput) TgtPasswordSpec() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *SecretSshkeyKerberosTgtPasswordSpec { return v.TgtPasswordSpec }).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberos)(nil)).Elem()
}

func (o SecretSshkeyKerberosPtrOutput) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return o
}

func (o SecretSshkeyKerberosPtrOutput) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return o
}

func (o SecretSshkeyKerberosPtrOutput) Elem() SecretSshkeyKerberosOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) SecretSshkeyKerberos {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberos
		return ret
	}).(SecretSshkeyKerberosOutput)
}

// Username to use for authentication.
func (o SecretSshkeyKerberosPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return &v.Principal
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o SecretSshkeyKerberosPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

// Method to generate tgt
func (o SecretSshkeyKerberosPtrOutput) TgtGenerationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return v.TgtGenerationMethod
	}).(pulumi.StringPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosPtrOutput) TgtKeyTabFilePathSpec() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		if v == nil {
			return nil
		}
		return v.TgtKeyTabFilePathSpec
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosPtrOutput) TgtPasswordSpec() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *SecretSshkeyKerberosTgtPasswordSpec {
		if v == nil {
			return nil
		}
		return v.TgtPasswordSpec
	}).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpec struct {
	KeyPath *string `pulumi:"keyPath"`
}

// SecretSshkeyKerberosTgtKeyTabFilePathSpecInput is an input type that accepts SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs and SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtKeyTabFilePathSpecInput` via:
//
//	SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{...}
type SecretSshkeyKerberosTgtKeyTabFilePathSpecInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput
	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs struct {
	KeyPath pulumi.StringPtrInput `pulumi:"keyPath"`
}

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput)
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput).ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput is an input type that accepts SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs, SecretSshkeyKerberosTgtKeyTabFilePathSpecPtr and SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput` via:
//
//	        SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput
	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput
}

type secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs

func SecretSshkeyKerberosTgtKeyTabFilePathSpecPtr(v *SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput {
	return (*secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType)(v)
}

func (*secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i *secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberosTgtKeyTabFilePathSpec) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		return &v
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberosTgtKeyTabFilePathSpec) *string { return v.KeyPath }).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) Elem() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtKeyTabFilePathSpec) SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberosTgtKeyTabFilePathSpec
		return ret
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput)
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtKeyTabFilePathSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyPath
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpec struct {
	Password *string `pulumi:"password"`
}

// SecretSshkeyKerberosTgtPasswordSpecInput is an input type that accepts SecretSshkeyKerberosTgtPasswordSpecArgs and SecretSshkeyKerberosTgtPasswordSpecOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtPasswordSpecInput` via:
//
//	SecretSshkeyKerberosTgtPasswordSpecArgs{...}
type SecretSshkeyKerberosTgtPasswordSpecInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput
	ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput
}

type SecretSshkeyKerberosTgtPasswordSpecArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (SecretSshkeyKerberosTgtPasswordSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecOutput)
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecOutput).ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosTgtPasswordSpecPtrInput is an input type that accepts SecretSshkeyKerberosTgtPasswordSpecArgs, SecretSshkeyKerberosTgtPasswordSpecPtr and SecretSshkeyKerberosTgtPasswordSpecPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtPasswordSpecPtrInput` via:
//
//	        SecretSshkeyKerberosTgtPasswordSpecArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosTgtPasswordSpecPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput
	ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput
}

type secretSshkeyKerberosTgtPasswordSpecPtrType SecretSshkeyKerberosTgtPasswordSpecArgs

func SecretSshkeyKerberosTgtPasswordSpecPtr(v *SecretSshkeyKerberosTgtPasswordSpecArgs) SecretSshkeyKerberosTgtPasswordSpecPtrInput {
	return (*secretSshkeyKerberosTgtPasswordSpecPtrType)(v)
}

func (*secretSshkeyKerberosTgtPasswordSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (i *secretSshkeyKerberosTgtPasswordSpecPtrType) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosTgtPasswordSpecPtrType) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpecOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtPasswordSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberosTgtPasswordSpec) *SecretSshkeyKerberosTgtPasswordSpec {
		return &v
	}).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberosTgtPasswordSpec) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) Elem() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtPasswordSpec) SecretSshkeyKerberosTgtPasswordSpec {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberosTgtPasswordSpec
		return ret
	}).(SecretSshkeyKerberosTgtPasswordSpecOutput)
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtPasswordSpec) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySsh struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType string `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredential *SecretSshkeySshSshPasswordCredential `pulumi:"sshPasswordCredential"`
	// SSH credential of type keyPath
	SshkeyPathCredential *SecretSshkeySshSshkeyPathCredential `pulumi:"sshkeyPathCredential"`
	// SSH credential of type keyReference
	SshkeyReferenceCredential *SecretSshkeySshSshkeyReferenceCredential `pulumi:"sshkeyReferenceCredential"`
}

// SecretSshkeySshInput is an input type that accepts SecretSshkeySshArgs and SecretSshkeySshOutput values.
// You can construct a concrete instance of `SecretSshkeySshInput` via:
//
//	SecretSshkeySshArgs{...}
type SecretSshkeySshInput interface {
	pulumi.Input

	ToSecretSshkeySshOutput() SecretSshkeySshOutput
	ToSecretSshkeySshOutputWithContext(context.Context) SecretSshkeySshOutput
}

type SecretSshkeySshArgs struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType pulumi.StringInput `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredential SecretSshkeySshSshPasswordCredentialPtrInput `pulumi:"sshPasswordCredential"`
	// SSH credential of type keyPath
	SshkeyPathCredential SecretSshkeySshSshkeyPathCredentialPtrInput `pulumi:"sshkeyPathCredential"`
	// SSH credential of type keyReference
	SshkeyReferenceCredential SecretSshkeySshSshkeyReferenceCredentialPtrInput `pulumi:"sshkeyReferenceCredential"`
}

func (SecretSshkeySshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySsh)(nil)).Elem()
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshOutput() SecretSshkeySshOutput {
	return i.ToSecretSshkeySshOutputWithContext(context.Background())
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshOutputWithContext(ctx context.Context) SecretSshkeySshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshOutput)
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return i.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshOutput).ToSecretSshkeySshPtrOutputWithContext(ctx)
}

// SecretSshkeySshPtrInput is an input type that accepts SecretSshkeySshArgs, SecretSshkeySshPtr and SecretSshkeySshPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshPtrInput` via:
//
//	        SecretSshkeySshArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput
	ToSecretSshkeySshPtrOutputWithContext(context.Context) SecretSshkeySshPtrOutput
}

type secretSshkeySshPtrType SecretSshkeySshArgs

func SecretSshkeySshPtr(v *SecretSshkeySshArgs) SecretSshkeySshPtrInput {
	return (*secretSshkeySshPtrType)(v)
}

func (*secretSshkeySshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySsh)(nil)).Elem()
}

func (i *secretSshkeySshPtrType) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return i.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshPtrType) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshPtrOutput)
}

type SecretSshkeySshOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySsh)(nil)).Elem()
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshOutput() SecretSshkeySshOutput {
	return o
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshOutputWithContext(ctx context.Context) SecretSshkeySshOutput {
	return o
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return o.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySsh) *SecretSshkeySsh {
		return &v
	}).(SecretSshkeySshPtrOutput)
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o SecretSshkeySshOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySsh) string { return v.CredentialType }).(pulumi.StringOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshOutput) SshPasswordCredential() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshPasswordCredential { return v.SshPasswordCredential }).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH credential of type keyPath
func (o SecretSshkeySshOutput) SshkeyPathCredential() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshkeyPathCredential { return v.SshkeyPathCredential }).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshOutput) SshkeyReferenceCredential() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshkeyReferenceCredential { return v.SshkeyReferenceCredential }).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySsh)(nil)).Elem()
}

func (o SecretSshkeySshPtrOutput) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return o
}

func (o SecretSshkeySshPtrOutput) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return o
}

func (o SecretSshkeySshPtrOutput) Elem() SecretSshkeySshOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) SecretSshkeySsh {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySsh
		return ret
	}).(SecretSshkeySshOutput)
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o SecretSshkeySshPtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshPtrOutput) SshPasswordCredential() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshPasswordCredential {
		if v == nil {
			return nil
		}
		return v.SshPasswordCredential
	}).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH credential of type keyPath
func (o SecretSshkeySshPtrOutput) SshkeyPathCredential() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshkeyPathCredential {
		if v == nil {
			return nil
		}
		return v.SshkeyPathCredential
	}).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshPtrOutput) SshkeyReferenceCredential() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshkeyReferenceCredential {
		if v == nil {
			return nil
		}
		return v.SshkeyReferenceCredential
	}).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshSshPasswordCredential struct {
	Password string `pulumi:"password"`
	UserName string `pulumi:"userName"`
}

// SecretSshkeySshSshPasswordCredentialInput is an input type that accepts SecretSshkeySshSshPasswordCredentialArgs and SecretSshkeySshSshPasswordCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshPasswordCredentialInput` via:
//
//	SecretSshkeySshSshPasswordCredentialArgs{...}
type SecretSshkeySshSshPasswordCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput
	ToSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Context) SecretSshkeySshSshPasswordCredentialOutput
}

type SecretSshkeySshSshPasswordCredentialArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SecretSshkeySshSshPasswordCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialOutput)
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialOutput).ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshPasswordCredentialPtrInput is an input type that accepts SecretSshkeySshSshPasswordCredentialArgs, SecretSshkeySshSshPasswordCredentialPtr and SecretSshkeySshSshPasswordCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshPasswordCredentialPtrInput` via:
//
//	        SecretSshkeySshSshPasswordCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshPasswordCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput
	ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput
}

type secretSshkeySshSshPasswordCredentialPtrType SecretSshkeySshSshPasswordCredentialArgs

func SecretSshkeySshSshPasswordCredentialPtr(v *SecretSshkeySshSshPasswordCredentialArgs) SecretSshkeySshSshPasswordCredentialPtrInput {
	return (*secretSshkeySshSshPasswordCredentialPtrType)(v)
}

func (*secretSshkeySshSshPasswordCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshPasswordCredentialPtrType) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshPasswordCredentialPtrType) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

type SecretSshkeySshSshPasswordCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshPasswordCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshPasswordCredential) *SecretSshkeySshSshPasswordCredential {
		return &v
	}).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

func (o SecretSshkeySshSshPasswordCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshPasswordCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o SecretSshkeySshSshPasswordCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshPasswordCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshPasswordCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshPasswordCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) Elem() SecretSshkeySshSshPasswordCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) SecretSshkeySshSshPasswordCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshPasswordCredential
		return ret
	}).(SecretSshkeySshSshPasswordCredentialOutput)
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySshSshkeyPathCredential struct {
	EncryptedPassphrase *string `pulumi:"encryptedPassphrase"`
	KeyPath             string  `pulumi:"keyPath"`
	UserName            string  `pulumi:"userName"`
}

// SecretSshkeySshSshkeyPathCredentialInput is an input type that accepts SecretSshkeySshSshkeyPathCredentialArgs and SecretSshkeySshSshkeyPathCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyPathCredentialInput` via:
//
//	SecretSshkeySshSshkeyPathCredentialArgs{...}
type SecretSshkeySshSshkeyPathCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput
	ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Context) SecretSshkeySshSshkeyPathCredentialOutput
}

type SecretSshkeySshSshkeyPathCredentialArgs struct {
	EncryptedPassphrase pulumi.StringPtrInput `pulumi:"encryptedPassphrase"`
	KeyPath             pulumi.StringInput    `pulumi:"keyPath"`
	UserName            pulumi.StringInput    `pulumi:"userName"`
}

func (SecretSshkeySshSshkeyPathCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialOutput)
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialOutput).ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshkeyPathCredentialPtrInput is an input type that accepts SecretSshkeySshSshkeyPathCredentialArgs, SecretSshkeySshSshkeyPathCredentialPtr and SecretSshkeySshSshkeyPathCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyPathCredentialPtrInput` via:
//
//	        SecretSshkeySshSshkeyPathCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshkeyPathCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput
	ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput
}

type secretSshkeySshSshkeyPathCredentialPtrType SecretSshkeySshSshkeyPathCredentialArgs

func SecretSshkeySshSshkeyPathCredentialPtr(v *SecretSshkeySshSshkeyPathCredentialArgs) SecretSshkeySshSshkeyPathCredentialPtrInput {
	return (*secretSshkeySshSshkeyPathCredentialPtrType)(v)
}

func (*secretSshkeySshSshkeyPathCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshkeyPathCredentialPtrType) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshkeyPathCredentialPtrType) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

type SecretSshkeySshSshkeyPathCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyPathCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshkeyPathCredential) *SecretSshkeySshSshkeyPathCredential {
		return &v
	}).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) *string { return v.EncryptedPassphrase }).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) string { return v.KeyPath }).(pulumi.StringOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshkeyPathCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyPathCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) Elem() SecretSshkeySshSshkeyPathCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) SecretSshkeySshSshkeyPathCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshkeyPathCredential
		return ret
	}).(SecretSshkeySshSshkeyPathCredentialOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return v.EncryptedPassphrase
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return &v.KeyPath
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySshSshkeyReferenceCredential struct {
	EncryptedPassphrase *string `pulumi:"encryptedPassphrase"`
	Key                 *string `pulumi:"key"`
	UserName            string  `pulumi:"userName"`
}

// SecretSshkeySshSshkeyReferenceCredentialInput is an input type that accepts SecretSshkeySshSshkeyReferenceCredentialArgs and SecretSshkeySshSshkeyReferenceCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyReferenceCredentialInput` via:
//
//	SecretSshkeySshSshkeyReferenceCredentialArgs{...}
type SecretSshkeySshSshkeyReferenceCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput
	ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput
}

type SecretSshkeySshSshkeyReferenceCredentialArgs struct {
	EncryptedPassphrase pulumi.StringPtrInput `pulumi:"encryptedPassphrase"`
	Key                 pulumi.StringPtrInput `pulumi:"key"`
	UserName            pulumi.StringInput    `pulumi:"userName"`
}

func (SecretSshkeySshSshkeyReferenceCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialOutput)
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialOutput).ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshkeyReferenceCredentialPtrInput is an input type that accepts SecretSshkeySshSshkeyReferenceCredentialArgs, SecretSshkeySshSshkeyReferenceCredentialPtr and SecretSshkeySshSshkeyReferenceCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyReferenceCredentialPtrInput` via:
//
//	        SecretSshkeySshSshkeyReferenceCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshkeyReferenceCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput
	ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput
}

type secretSshkeySshSshkeyReferenceCredentialPtrType SecretSshkeySshSshkeyReferenceCredentialArgs

func SecretSshkeySshSshkeyReferenceCredentialPtr(v *SecretSshkeySshSshkeyReferenceCredentialArgs) SecretSshkeySshSshkeyReferenceCredentialPtrInput {
	return (*secretSshkeySshSshkeyReferenceCredentialPtrType)(v)
}

func (*secretSshkeySshSshkeyReferenceCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshkeyReferenceCredentialPtrType) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshkeyReferenceCredentialPtrType) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshSshkeyReferenceCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyReferenceCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshkeyReferenceCredential) *SecretSshkeySshSshkeyReferenceCredential {
		return &v
	}).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) *string { return v.EncryptedPassphrase }).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshkeyReferenceCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) Elem() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) SecretSshkeySshSshkeyReferenceCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshkeyReferenceCredential
		return ret
	}).(SecretSshkeySshSshkeyReferenceCredentialOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return v.EncryptedPassphrase
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type UsergroupNotificationConfig struct {
	// Group email
	GroupEmail *string `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key
	PagerDutyKey *string `pulumi:"pagerDutyKey"`
	// Url of slack webhook
	SlackWebhookUrl *string `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
	Type *string `pulumi:"type"`
}

// UsergroupNotificationConfigInput is an input type that accepts UsergroupNotificationConfigArgs and UsergroupNotificationConfigOutput values.
// You can construct a concrete instance of `UsergroupNotificationConfigInput` via:
//
//	UsergroupNotificationConfigArgs{...}
type UsergroupNotificationConfigInput interface {
	pulumi.Input

	ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput
	ToUsergroupNotificationConfigOutputWithContext(context.Context) UsergroupNotificationConfigOutput
}

type UsergroupNotificationConfigArgs struct {
	// Group email
	GroupEmail pulumi.StringPtrInput `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key
	PagerDutyKey pulumi.StringPtrInput `pulumi:"pagerDutyKey"`
	// Url of slack webhook
	SlackWebhookUrl pulumi.StringPtrInput `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (UsergroupNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsergroupNotificationConfig)(nil)).Elem()
}

func (i UsergroupNotificationConfigArgs) ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput {
	return i.ToUsergroupNotificationConfigOutputWithContext(context.Background())
}

func (i UsergroupNotificationConfigArgs) ToUsergroupNotificationConfigOutputWithContext(ctx context.Context) UsergroupNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupNotificationConfigOutput)
}

// UsergroupNotificationConfigArrayInput is an input type that accepts UsergroupNotificationConfigArray and UsergroupNotificationConfigArrayOutput values.
// You can construct a concrete instance of `UsergroupNotificationConfigArrayInput` via:
//
//	UsergroupNotificationConfigArray{ UsergroupNotificationConfigArgs{...} }
type UsergroupNotificationConfigArrayInput interface {
	pulumi.Input

	ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput
	ToUsergroupNotificationConfigArrayOutputWithContext(context.Context) UsergroupNotificationConfigArrayOutput
}

type UsergroupNotificationConfigArray []UsergroupNotificationConfigInput

func (UsergroupNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsergroupNotificationConfig)(nil)).Elem()
}

func (i UsergroupNotificationConfigArray) ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput {
	return i.ToUsergroupNotificationConfigArrayOutputWithContext(context.Background())
}

func (i UsergroupNotificationConfigArray) ToUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) UsergroupNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupNotificationConfigArrayOutput)
}

type UsergroupNotificationConfigOutput struct{ *pulumi.OutputState }

func (UsergroupNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsergroupNotificationConfig)(nil)).Elem()
}

func (o UsergroupNotificationConfigOutput) ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput {
	return o
}

func (o UsergroupNotificationConfigOutput) ToUsergroupNotificationConfigOutputWithContext(ctx context.Context) UsergroupNotificationConfigOutput {
	return o
}

// Group email
func (o UsergroupNotificationConfigOutput) GroupEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.GroupEmail }).(pulumi.StringPtrOutput)
}

// Url of Microsoft teams webhook
func (o UsergroupNotificationConfigOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Pager duty key
func (o UsergroupNotificationConfigOutput) PagerDutyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.PagerDutyKey }).(pulumi.StringPtrOutput)
}

// Url of slack webhook
func (o UsergroupNotificationConfigOutput) SlackWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.SlackWebhookUrl }).(pulumi.StringPtrOutput)
}

// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
func (o UsergroupNotificationConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type UsergroupNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (UsergroupNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsergroupNotificationConfig)(nil)).Elem()
}

func (o UsergroupNotificationConfigArrayOutput) ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput {
	return o
}

func (o UsergroupNotificationConfigArrayOutput) ToUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) UsergroupNotificationConfigArrayOutput {
	return o
}

func (o UsergroupNotificationConfigArrayOutput) Index(i pulumi.IntInput) UsergroupNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsergroupNotificationConfig {
		return vs[0].([]UsergroupNotificationConfig)[vs[1].(int)]
	}).(UsergroupNotificationConfigOutput)
}

type GetResourceGroupIncludedScope struct {
	// Account Identifier of the account
	AccountId string `pulumi:"accountId"`
	Filter    string `pulumi:"filter"`
	// Unique identifier of the organization.
	OrgId string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId string `pulumi:"projectId"`
}

// GetResourceGroupIncludedScopeInput is an input type that accepts GetResourceGroupIncludedScopeArgs and GetResourceGroupIncludedScopeOutput values.
// You can construct a concrete instance of `GetResourceGroupIncludedScopeInput` via:
//
//	GetResourceGroupIncludedScopeArgs{...}
type GetResourceGroupIncludedScopeInput interface {
	pulumi.Input

	ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput
	ToGetResourceGroupIncludedScopeOutputWithContext(context.Context) GetResourceGroupIncludedScopeOutput
}

type GetResourceGroupIncludedScopeArgs struct {
	// Account Identifier of the account
	AccountId pulumi.StringInput `pulumi:"accountId"`
	Filter    pulumi.StringInput `pulumi:"filter"`
	// Unique identifier of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetResourceGroupIncludedScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupIncludedScope)(nil)).Elem()
}

func (i GetResourceGroupIncludedScopeArgs) ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput {
	return i.ToGetResourceGroupIncludedScopeOutputWithContext(context.Background())
}

func (i GetResourceGroupIncludedScopeArgs) ToGetResourceGroupIncludedScopeOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupIncludedScopeOutput)
}

// GetResourceGroupIncludedScopeArrayInput is an input type that accepts GetResourceGroupIncludedScopeArray and GetResourceGroupIncludedScopeArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupIncludedScopeArrayInput` via:
//
//	GetResourceGroupIncludedScopeArray{ GetResourceGroupIncludedScopeArgs{...} }
type GetResourceGroupIncludedScopeArrayInput interface {
	pulumi.Input

	ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput
	ToGetResourceGroupIncludedScopeArrayOutputWithContext(context.Context) GetResourceGroupIncludedScopeArrayOutput
}

type GetResourceGroupIncludedScopeArray []GetResourceGroupIncludedScopeInput

func (GetResourceGroupIncludedScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupIncludedScope)(nil)).Elem()
}

func (i GetResourceGroupIncludedScopeArray) ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput {
	return i.ToGetResourceGroupIncludedScopeArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupIncludedScopeArray) ToGetResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupIncludedScopeArrayOutput)
}

type GetResourceGroupIncludedScopeOutput struct{ *pulumi.OutputState }

func (GetResourceGroupIncludedScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupIncludedScope)(nil)).Elem()
}

func (o GetResourceGroupIncludedScopeOutput) ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput {
	return o
}

func (o GetResourceGroupIncludedScopeOutput) ToGetResourceGroupIncludedScopeOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeOutput {
	return o
}

// Account Identifier of the account
func (o GetResourceGroupIncludedScopeOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetResourceGroupIncludedScopeOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.Filter }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o GetResourceGroupIncludedScopeOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.OrgId }).(pulumi.StringOutput)
}

// Unique identifier of the project.
func (o GetResourceGroupIncludedScopeOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetResourceGroupIncludedScopeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupIncludedScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupIncludedScope)(nil)).Elem()
}

func (o GetResourceGroupIncludedScopeArrayOutput) ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o GetResourceGroupIncludedScopeArrayOutput) ToGetResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o GetResourceGroupIncludedScopeArrayOutput) Index(i pulumi.IntInput) GetResourceGroupIncludedScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupIncludedScope {
		return vs[0].([]GetResourceGroupIncludedScope)[vs[1].(int)]
	}).(GetResourceGroupIncludedScopeOutput)
}

type GetResourceGroupResourceFilter struct {
	IncludeAllResources bool                                     `pulumi:"includeAllResources"`
	Resources           []GetResourceGroupResourceFilterResource `pulumi:"resources"`
}

// GetResourceGroupResourceFilterInput is an input type that accepts GetResourceGroupResourceFilterArgs and GetResourceGroupResourceFilterOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterInput` via:
//
//	GetResourceGroupResourceFilterArgs{...}
type GetResourceGroupResourceFilterInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput
	ToGetResourceGroupResourceFilterOutputWithContext(context.Context) GetResourceGroupResourceFilterOutput
}

type GetResourceGroupResourceFilterArgs struct {
	IncludeAllResources pulumi.BoolInput                                 `pulumi:"includeAllResources"`
	Resources           GetResourceGroupResourceFilterResourceArrayInput `pulumi:"resources"`
}

func (GetResourceGroupResourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterArgs) ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput {
	return i.ToGetResourceGroupResourceFilterOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterArgs) ToGetResourceGroupResourceFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterOutput)
}

// GetResourceGroupResourceFilterArrayInput is an input type that accepts GetResourceGroupResourceFilterArray and GetResourceGroupResourceFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterArrayInput` via:
//
//	GetResourceGroupResourceFilterArray{ GetResourceGroupResourceFilterArgs{...} }
type GetResourceGroupResourceFilterArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput
	ToGetResourceGroupResourceFilterArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterArrayOutput
}

type GetResourceGroupResourceFilterArray []GetResourceGroupResourceFilterInput

func (GetResourceGroupResourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterArray) ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput {
	return i.ToGetResourceGroupResourceFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterArray) ToGetResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterArrayOutput)
}

type GetResourceGroupResourceFilterOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterOutput) ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterOutput) ToGetResourceGroupResourceFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterOutput) IncludeAllResources() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilter) bool { return v.IncludeAllResources }).(pulumi.BoolOutput)
}

func (o GetResourceGroupResourceFilterOutput) Resources() GetResourceGroupResourceFilterResourceArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilter) []GetResourceGroupResourceFilterResource { return v.Resources }).(GetResourceGroupResourceFilterResourceArrayOutput)
}

type GetResourceGroupResourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterArrayOutput) ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterArrayOutput) ToGetResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilter {
		return vs[0].([]GetResourceGroupResourceFilter)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterOutput)
}

type GetResourceGroupResourceFilterResource struct {
	AttributeFilters []GetResourceGroupResourceFilterResourceAttributeFilter `pulumi:"attributeFilters"`
	Identifiers      []string                                                `pulumi:"identifiers"`
	ResourceType     string                                                  `pulumi:"resourceType"`
}

// GetResourceGroupResourceFilterResourceInput is an input type that accepts GetResourceGroupResourceFilterResourceArgs and GetResourceGroupResourceFilterResourceOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceInput` via:
//
//	GetResourceGroupResourceFilterResourceArgs{...}
type GetResourceGroupResourceFilterResourceInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput
	ToGetResourceGroupResourceFilterResourceOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceOutput
}

type GetResourceGroupResourceFilterResourceArgs struct {
	AttributeFilters GetResourceGroupResourceFilterResourceAttributeFilterArrayInput `pulumi:"attributeFilters"`
	Identifiers      pulumi.StringArrayInput                                         `pulumi:"identifiers"`
	ResourceType     pulumi.StringInput                                              `pulumi:"resourceType"`
}

func (GetResourceGroupResourceFilterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceArgs) ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput {
	return i.ToGetResourceGroupResourceFilterResourceOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceArgs) ToGetResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceOutput)
}

// GetResourceGroupResourceFilterResourceArrayInput is an input type that accepts GetResourceGroupResourceFilterResourceArray and GetResourceGroupResourceFilterResourceArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceArrayInput` via:
//
//	GetResourceGroupResourceFilterResourceArray{ GetResourceGroupResourceFilterResourceArgs{...} }
type GetResourceGroupResourceFilterResourceArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput
	ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceArrayOutput
}

type GetResourceGroupResourceFilterResourceArray []GetResourceGroupResourceFilterResourceInput

func (GetResourceGroupResourceFilterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceArray) ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput {
	return i.ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceArray) ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceArrayOutput)
}

type GetResourceGroupResourceFilterResourceOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceOutput) ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceOutput) ToGetResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceOutput) AttributeFilters() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) []GetResourceGroupResourceFilterResourceAttributeFilter {
		return v.AttributeFilters
	}).(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

func (o GetResourceGroupResourceFilterResourceOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

func (o GetResourceGroupResourceFilterResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetResourceGroupResourceFilterResourceArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilterResource {
		return vs[0].([]GetResourceGroupResourceFilterResource)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterResourceOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilter struct {
	AttributeName   string   `pulumi:"attributeName"`
	AttributeValues []string `pulumi:"attributeValues"`
}

// GetResourceGroupResourceFilterResourceAttributeFilterInput is an input type that accepts GetResourceGroupResourceFilterResourceAttributeFilterArgs and GetResourceGroupResourceFilterResourceAttributeFilterOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceAttributeFilterInput` via:
//
//	GetResourceGroupResourceFilterResourceAttributeFilterArgs{...}
type GetResourceGroupResourceFilterResourceAttributeFilterInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput
	ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput
}

type GetResourceGroupResourceFilterResourceAttributeFilterArgs struct {
	AttributeName   pulumi.StringInput      `pulumi:"attributeName"`
	AttributeValues pulumi.StringArrayInput `pulumi:"attributeValues"`
}

func (GetResourceGroupResourceFilterResourceAttributeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArgs) ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return i.ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArgs) ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceAttributeFilterOutput)
}

// GetResourceGroupResourceFilterResourceAttributeFilterArrayInput is an input type that accepts GetResourceGroupResourceFilterResourceAttributeFilterArray and GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceAttributeFilterArrayInput` via:
//
//	GetResourceGroupResourceFilterResourceAttributeFilterArray{ GetResourceGroupResourceFilterResourceAttributeFilterArgs{...} }
type GetResourceGroupResourceFilterResourceAttributeFilterArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput
	ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput
}

type GetResourceGroupResourceFilterResourceAttributeFilterArray []GetResourceGroupResourceFilterResourceAttributeFilterInput

func (GetResourceGroupResourceFilterResourceAttributeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArray) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return i.ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArray) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilterOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceAttributeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResourceAttributeFilter) string { return v.AttributeName }).(pulumi.StringOutput)
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResourceAttributeFilter) []string { return v.AttributeValues }).(pulumi.StringArrayOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilterResourceAttributeFilter {
		return vs[0].([]GetResourceGroupResourceFilterResourceAttributeFilter)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterResourceAttributeFilterOutput)
}

type GetSecretSshkeyKerbero struct {
	Principal              string                                        `pulumi:"principal"`
	Realm                  string                                        `pulumi:"realm"`
	TgtGenerationMethod    string                                        `pulumi:"tgtGenerationMethod"`
	TgtKeyTabFilePathSpecs []GetSecretSshkeyKerberoTgtKeyTabFilePathSpec `pulumi:"tgtKeyTabFilePathSpecs"`
	TgtPasswordSpecs       []GetSecretSshkeyKerberoTgtPasswordSpec       `pulumi:"tgtPasswordSpecs"`
}

// GetSecretSshkeyKerberoInput is an input type that accepts GetSecretSshkeyKerberoArgs and GetSecretSshkeyKerberoOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoInput` via:
//
//	GetSecretSshkeyKerberoArgs{...}
type GetSecretSshkeyKerberoInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput
	ToGetSecretSshkeyKerberoOutputWithContext(context.Context) GetSecretSshkeyKerberoOutput
}

type GetSecretSshkeyKerberoArgs struct {
	Principal              pulumi.StringInput                                    `pulumi:"principal"`
	Realm                  pulumi.StringInput                                    `pulumi:"realm"`
	TgtGenerationMethod    pulumi.StringInput                                    `pulumi:"tgtGenerationMethod"`
	TgtKeyTabFilePathSpecs GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput `pulumi:"tgtKeyTabFilePathSpecs"`
	TgtPasswordSpecs       GetSecretSshkeyKerberoTgtPasswordSpecArrayInput       `pulumi:"tgtPasswordSpecs"`
}

func (GetSecretSshkeyKerberoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerbero)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoArgs) ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput {
	return i.ToGetSecretSshkeyKerberoOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoArgs) ToGetSecretSshkeyKerberoOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoOutput)
}

// GetSecretSshkeyKerberoArrayInput is an input type that accepts GetSecretSshkeyKerberoArray and GetSecretSshkeyKerberoArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoArrayInput` via:
//
//	GetSecretSshkeyKerberoArray{ GetSecretSshkeyKerberoArgs{...} }
type GetSecretSshkeyKerberoArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput
	ToGetSecretSshkeyKerberoArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoArrayOutput
}

type GetSecretSshkeyKerberoArray []GetSecretSshkeyKerberoInput

func (GetSecretSshkeyKerberoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerbero)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoArray) ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput {
	return i.ToGetSecretSshkeyKerberoArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoArray) ToGetSecretSshkeyKerberoArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoArrayOutput)
}

type GetSecretSshkeyKerberoOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerbero)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoOutput) ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput {
	return o
}

func (o GetSecretSshkeyKerberoOutput) ToGetSecretSshkeyKerberoOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoOutput {
	return o
}

func (o GetSecretSshkeyKerberoOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.Principal }).(pulumi.StringOutput)
}

func (o GetSecretSshkeyKerberoOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.Realm }).(pulumi.StringOutput)
}

func (o GetSecretSshkeyKerberoOutput) TgtGenerationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.TgtGenerationMethod }).(pulumi.StringOutput)
}

func (o GetSecretSshkeyKerberoOutput) TgtKeyTabFilePathSpecs() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) []GetSecretSshkeyKerberoTgtKeyTabFilePathSpec {
		return v.TgtKeyTabFilePathSpecs
	}).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput)
}

func (o GetSecretSshkeyKerberoOutput) TgtPasswordSpecs() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) []GetSecretSshkeyKerberoTgtPasswordSpec { return v.TgtPasswordSpecs }).(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput)
}

type GetSecretSshkeyKerberoArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerbero)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoArrayOutput) ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoArrayOutput) ToGetSecretSshkeyKerberoArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerbero {
		return vs[0].([]GetSecretSshkeyKerbero)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpec struct {
	KeyPath string `pulumi:"keyPath"`
}

// GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput is an input type that accepts GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs and GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput` via:
//
//	GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{...}
type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput
	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs struct {
	KeyPath pulumi.StringInput `pulumi:"keyPath"`
}

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return i.ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput)
}

// GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput is an input type that accepts GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray and GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput` via:
//
//	GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray{ GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{...} }
type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput
	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray []GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return i.ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerberoTgtKeyTabFilePathSpec) string { return v.KeyPath }).(pulumi.StringOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerberoTgtKeyTabFilePathSpec {
		return vs[0].([]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpec struct {
	Password string `pulumi:"password"`
}

// GetSecretSshkeyKerberoTgtPasswordSpecInput is an input type that accepts GetSecretSshkeyKerberoTgtPasswordSpecArgs and GetSecretSshkeyKerberoTgtPasswordSpecOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtPasswordSpecInput` via:
//
//	GetSecretSshkeyKerberoTgtPasswordSpecArgs{...}
type GetSecretSshkeyKerberoTgtPasswordSpecInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput
	ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput
}

type GetSecretSshkeyKerberoTgtPasswordSpecArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
}

func (GetSecretSshkeyKerberoTgtPasswordSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArgs) ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return i.ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArgs) ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtPasswordSpecOutput)
}

// GetSecretSshkeyKerberoTgtPasswordSpecArrayInput is an input type that accepts GetSecretSshkeyKerberoTgtPasswordSpecArray and GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtPasswordSpecArrayInput` via:
//
//	GetSecretSshkeyKerberoTgtPasswordSpecArray{ GetSecretSshkeyKerberoTgtPasswordSpecArgs{...} }
type GetSecretSshkeyKerberoTgtPasswordSpecArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput
	ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput
}

type GetSecretSshkeyKerberoTgtPasswordSpecArray []GetSecretSshkeyKerberoTgtPasswordSpecInput

func (GetSecretSshkeyKerberoTgtPasswordSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArray) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return i.ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArray) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpecOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtPasswordSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerberoTgtPasswordSpec) string { return v.Password }).(pulumi.StringOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerberoTgtPasswordSpec {
		return vs[0].([]GetSecretSshkeyKerberoTgtPasswordSpec)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoTgtPasswordSpecOutput)
}

type GetSecretSshkeySsh struct {
	CredentialType             string                                        `pulumi:"credentialType"`
	SshPasswordCredentials     []GetSecretSshkeySshSshPasswordCredential     `pulumi:"sshPasswordCredentials"`
	SshkeyPathCredentials      []GetSecretSshkeySshSshkeyPathCredential      `pulumi:"sshkeyPathCredentials"`
	SshkeyReferenceCredentials []GetSecretSshkeySshSshkeyReferenceCredential `pulumi:"sshkeyReferenceCredentials"`
}

// GetSecretSshkeySshInput is an input type that accepts GetSecretSshkeySshArgs and GetSecretSshkeySshOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshInput` via:
//
//	GetSecretSshkeySshArgs{...}
type GetSecretSshkeySshInput interface {
	pulumi.Input

	ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput
	ToGetSecretSshkeySshOutputWithContext(context.Context) GetSecretSshkeySshOutput
}

type GetSecretSshkeySshArgs struct {
	CredentialType             pulumi.StringInput                                    `pulumi:"credentialType"`
	SshPasswordCredentials     GetSecretSshkeySshSshPasswordCredentialArrayInput     `pulumi:"sshPasswordCredentials"`
	SshkeyPathCredentials      GetSecretSshkeySshSshkeyPathCredentialArrayInput      `pulumi:"sshkeyPathCredentials"`
	SshkeyReferenceCredentials GetSecretSshkeySshSshkeyReferenceCredentialArrayInput `pulumi:"sshkeyReferenceCredentials"`
}

func (GetSecretSshkeySshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySsh)(nil)).Elem()
}

func (i GetSecretSshkeySshArgs) ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput {
	return i.ToGetSecretSshkeySshOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshArgs) ToGetSecretSshkeySshOutputWithContext(ctx context.Context) GetSecretSshkeySshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshOutput)
}

// GetSecretSshkeySshArrayInput is an input type that accepts GetSecretSshkeySshArray and GetSecretSshkeySshArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshArrayInput` via:
//
//	GetSecretSshkeySshArray{ GetSecretSshkeySshArgs{...} }
type GetSecretSshkeySshArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput
	ToGetSecretSshkeySshArrayOutputWithContext(context.Context) GetSecretSshkeySshArrayOutput
}

type GetSecretSshkeySshArray []GetSecretSshkeySshInput

func (GetSecretSshkeySshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySsh)(nil)).Elem()
}

func (i GetSecretSshkeySshArray) ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput {
	return i.ToGetSecretSshkeySshArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshArray) ToGetSecretSshkeySshArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshArrayOutput)
}

type GetSecretSshkeySshOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySsh)(nil)).Elem()
}

func (o GetSecretSshkeySshOutput) ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput {
	return o
}

func (o GetSecretSshkeySshOutput) ToGetSecretSshkeySshOutputWithContext(ctx context.Context) GetSecretSshkeySshOutput {
	return o
}

func (o GetSecretSshkeySshOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) string { return v.CredentialType }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshOutput) SshPasswordCredentials() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshPasswordCredential { return v.SshPasswordCredentials }).(GetSecretSshkeySshSshPasswordCredentialArrayOutput)
}

func (o GetSecretSshkeySshOutput) SshkeyPathCredentials() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshkeyPathCredential { return v.SshkeyPathCredentials }).(GetSecretSshkeySshSshkeyPathCredentialArrayOutput)
}

func (o GetSecretSshkeySshOutput) SshkeyReferenceCredentials() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshkeyReferenceCredential {
		return v.SshkeyReferenceCredentials
	}).(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput)
}

type GetSecretSshkeySshArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySsh)(nil)).Elem()
}

func (o GetSecretSshkeySshArrayOutput) ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput {
	return o
}

func (o GetSecretSshkeySshArrayOutput) ToGetSecretSshkeySshArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshArrayOutput {
	return o
}

func (o GetSecretSshkeySshArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySsh {
		return vs[0].([]GetSecretSshkeySsh)[vs[1].(int)]
	}).(GetSecretSshkeySshOutput)
}

type GetSecretSshkeySshSshPasswordCredential struct {
	Password string `pulumi:"password"`
	UserName string `pulumi:"userName"`
}

// GetSecretSshkeySshSshPasswordCredentialInput is an input type that accepts GetSecretSshkeySshSshPasswordCredentialArgs and GetSecretSshkeySshSshPasswordCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshPasswordCredentialInput` via:
//
//	GetSecretSshkeySshSshPasswordCredentialArgs{...}
type GetSecretSshkeySshSshPasswordCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput
	ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshPasswordCredentialOutput
}

type GetSecretSshkeySshSshPasswordCredentialArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshPasswordCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshPasswordCredentialArgs) ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput {
	return i.ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshPasswordCredentialArgs) ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshPasswordCredentialOutput)
}

// GetSecretSshkeySshSshPasswordCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshPasswordCredentialArray and GetSecretSshkeySshSshPasswordCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshPasswordCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshPasswordCredentialArray{ GetSecretSshkeySshSshPasswordCredentialArgs{...} }
type GetSecretSshkeySshSshPasswordCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput
	ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput
}

type GetSecretSshkeySshSshPasswordCredentialArray []GetSecretSshkeySshSshPasswordCredentialInput

func (GetSecretSshkeySshSshPasswordCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshPasswordCredentialArray) ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshPasswordCredentialArray) ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshPasswordCredentialArrayOutput)
}

type GetSecretSshkeySshSshPasswordCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshPasswordCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshPasswordCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshPasswordCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshPasswordCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshPasswordCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshPasswordCredential {
		return vs[0].([]GetSecretSshkeySshSshPasswordCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshPasswordCredentialOutput)
}

type GetSecretSshkeySshSshkeyPathCredential struct {
	EncryptedPassphrase string `pulumi:"encryptedPassphrase"`
	KeyPath             string `pulumi:"keyPath"`
	UserName            string `pulumi:"userName"`
}

// GetSecretSshkeySshSshkeyPathCredentialInput is an input type that accepts GetSecretSshkeySshSshkeyPathCredentialArgs and GetSecretSshkeySshSshkeyPathCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyPathCredentialInput` via:
//
//	GetSecretSshkeySshSshkeyPathCredentialArgs{...}
type GetSecretSshkeySshSshkeyPathCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput
	ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput
}

type GetSecretSshkeySshSshkeyPathCredentialArgs struct {
	EncryptedPassphrase pulumi.StringInput `pulumi:"encryptedPassphrase"`
	KeyPath             pulumi.StringInput `pulumi:"keyPath"`
	UserName            pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshkeyPathCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyPathCredentialArgs) ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput {
	return i.ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyPathCredentialArgs) ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyPathCredentialOutput)
}

// GetSecretSshkeySshSshkeyPathCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshkeyPathCredentialArray and GetSecretSshkeySshSshkeyPathCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyPathCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshkeyPathCredentialArray{ GetSecretSshkeySshSshkeyPathCredentialArgs{...} }
type GetSecretSshkeySshSshkeyPathCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput
	ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput
}

type GetSecretSshkeySshSshkeyPathCredentialArray []GetSecretSshkeySshSshkeyPathCredentialInput

func (GetSecretSshkeySshSshkeyPathCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyPathCredentialArray) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyPathCredentialArray) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyPathCredentialArrayOutput)
}

type GetSecretSshkeySshSshkeyPathCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyPathCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) EncryptedPassphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.EncryptedPassphrase }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.KeyPath }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshkeyPathCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshkeyPathCredential {
		return vs[0].([]GetSecretSshkeySshSshkeyPathCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshkeyPathCredentialOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredential struct {
	EncryptedAssphrase string `pulumi:"encryptedAssphrase"`
	Key                string `pulumi:"key"`
	UserName           string `pulumi:"userName"`
}

// GetSecretSshkeySshSshkeyReferenceCredentialInput is an input type that accepts GetSecretSshkeySshSshkeyReferenceCredentialArgs and GetSecretSshkeySshSshkeyReferenceCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyReferenceCredentialInput` via:
//
//	GetSecretSshkeySshSshkeyReferenceCredentialArgs{...}
type GetSecretSshkeySshSshkeyReferenceCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput
	ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput
}

type GetSecretSshkeySshSshkeyReferenceCredentialArgs struct {
	EncryptedAssphrase pulumi.StringInput `pulumi:"encryptedAssphrase"`
	Key                pulumi.StringInput `pulumi:"key"`
	UserName           pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshkeyReferenceCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArgs) ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return i.ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArgs) ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyReferenceCredentialOutput)
}

// GetSecretSshkeySshSshkeyReferenceCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshkeyReferenceCredentialArray and GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyReferenceCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshkeyReferenceCredentialArray{ GetSecretSshkeySshSshkeyReferenceCredentialArgs{...} }
type GetSecretSshkeySshSshkeyReferenceCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput
	ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput
}

type GetSecretSshkeySshSshkeyReferenceCredentialArray []GetSecretSshkeySshSshkeyReferenceCredentialInput

func (GetSecretSshkeySshSshkeyReferenceCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArray) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArray) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyReferenceCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) EncryptedAssphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.EncryptedAssphrase }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshkeyReferenceCredential {
		return vs[0].([]GetSecretSshkeySshSshkeyReferenceCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshkeyReferenceCredentialOutput)
}

type GetUsergroupNotificationConfig struct {
	// Group email
	GroupEmail string `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook
	MicrosoftTeamsWebhookUrl string `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key
	PagerDutyKey string `pulumi:"pagerDutyKey"`
	// Url of slack webhook
	SlackWebhookUrl string `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
	Type string `pulumi:"type"`
}

// GetUsergroupNotificationConfigInput is an input type that accepts GetUsergroupNotificationConfigArgs and GetUsergroupNotificationConfigOutput values.
// You can construct a concrete instance of `GetUsergroupNotificationConfigInput` via:
//
//	GetUsergroupNotificationConfigArgs{...}
type GetUsergroupNotificationConfigInput interface {
	pulumi.Input

	ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput
	ToGetUsergroupNotificationConfigOutputWithContext(context.Context) GetUsergroupNotificationConfigOutput
}

type GetUsergroupNotificationConfigArgs struct {
	// Group email
	GroupEmail pulumi.StringInput `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook
	MicrosoftTeamsWebhookUrl pulumi.StringInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key
	PagerDutyKey pulumi.StringInput `pulumi:"pagerDutyKey"`
	// Url of slack webhook
	SlackWebhookUrl pulumi.StringInput `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetUsergroupNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsergroupNotificationConfig)(nil)).Elem()
}

func (i GetUsergroupNotificationConfigArgs) ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput {
	return i.ToGetUsergroupNotificationConfigOutputWithContext(context.Background())
}

func (i GetUsergroupNotificationConfigArgs) ToGetUsergroupNotificationConfigOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsergroupNotificationConfigOutput)
}

// GetUsergroupNotificationConfigArrayInput is an input type that accepts GetUsergroupNotificationConfigArray and GetUsergroupNotificationConfigArrayOutput values.
// You can construct a concrete instance of `GetUsergroupNotificationConfigArrayInput` via:
//
//	GetUsergroupNotificationConfigArray{ GetUsergroupNotificationConfigArgs{...} }
type GetUsergroupNotificationConfigArrayInput interface {
	pulumi.Input

	ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput
	ToGetUsergroupNotificationConfigArrayOutputWithContext(context.Context) GetUsergroupNotificationConfigArrayOutput
}

type GetUsergroupNotificationConfigArray []GetUsergroupNotificationConfigInput

func (GetUsergroupNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsergroupNotificationConfig)(nil)).Elem()
}

func (i GetUsergroupNotificationConfigArray) ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput {
	return i.ToGetUsergroupNotificationConfigArrayOutputWithContext(context.Background())
}

func (i GetUsergroupNotificationConfigArray) ToGetUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsergroupNotificationConfigArrayOutput)
}

type GetUsergroupNotificationConfigOutput struct{ *pulumi.OutputState }

func (GetUsergroupNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsergroupNotificationConfig)(nil)).Elem()
}

func (o GetUsergroupNotificationConfigOutput) ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput {
	return o
}

func (o GetUsergroupNotificationConfigOutput) ToGetUsergroupNotificationConfigOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigOutput {
	return o
}

// Group email
func (o GetUsergroupNotificationConfigOutput) GroupEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.GroupEmail }).(pulumi.StringOutput)
}

// Url of Microsoft teams webhook
func (o GetUsergroupNotificationConfigOutput) MicrosoftTeamsWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringOutput)
}

// Pager duty key
func (o GetUsergroupNotificationConfigOutput) PagerDutyKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.PagerDutyKey }).(pulumi.StringOutput)
}

// Url of slack webhook
func (o GetUsergroupNotificationConfigOutput) SlackWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.SlackWebhookUrl }).(pulumi.StringOutput)
}

// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS
func (o GetUsergroupNotificationConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetUsergroupNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetUsergroupNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsergroupNotificationConfig)(nil)).Elem()
}

func (o GetUsergroupNotificationConfigArrayOutput) ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput {
	return o
}

func (o GetUsergroupNotificationConfigArrayOutput) ToGetUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigArrayOutput {
	return o
}

func (o GetUsergroupNotificationConfigArrayOutput) Index(i pulumi.IntInput) GetUsergroupNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsergroupNotificationConfig {
		return vs[0].([]GetUsergroupNotificationConfig)[vs[1].(int)]
	}).(GetUsergroupNotificationConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupIncludedScopeInput)(nil)).Elem(), ResourceGroupIncludedScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupIncludedScopeArrayInput)(nil)).Elem(), ResourceGroupIncludedScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterInput)(nil)).Elem(), ResourceGroupResourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterArrayInput)(nil)).Elem(), ResourceGroupResourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceInput)(nil)).Elem(), ResourceGroupResourceFilterResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceArrayInput)(nil)).Elem(), ResourceGroupResourceFilterResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilterInput)(nil)).Elem(), ResourceGroupResourceFilterResourceAttributeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilterArrayInput)(nil)).Elem(), ResourceGroupResourceFilterResourceAttributeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosInput)(nil)).Elem(), SecretSshkeyKerberosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosPtrInput)(nil)).Elem(), SecretSshkeyKerberosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpecInput)(nil)).Elem(), SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput)(nil)).Elem(), SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpecInput)(nil)).Elem(), SecretSshkeyKerberosTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpecPtrInput)(nil)).Elem(), SecretSshkeyKerberosTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshInput)(nil)).Elem(), SecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshPtrInput)(nil)).Elem(), SecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshPasswordCredentialInput)(nil)).Elem(), SecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshPasswordCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyPathCredentialInput)(nil)).Elem(), SecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyPathCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredentialInput)(nil)).Elem(), SecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupNotificationConfigInput)(nil)).Elem(), UsergroupNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupNotificationConfigArrayInput)(nil)).Elem(), UsergroupNotificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupIncludedScopeInput)(nil)).Elem(), GetResourceGroupIncludedScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupIncludedScopeArrayInput)(nil)).Elem(), GetResourceGroupIncludedScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterInput)(nil)).Elem(), GetResourceGroupResourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilterInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceAttributeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilterArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceAttributeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoInput)(nil)).Elem(), GetSecretSshkeyKerberoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpecInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpecArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtPasswordSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshInput)(nil)).Elem(), GetSecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshArrayInput)(nil)).Elem(), GetSecretSshkeySshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshPasswordCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshkeyPathCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshkeyReferenceCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsergroupNotificationConfigInput)(nil)).Elem(), GetUsergroupNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsergroupNotificationConfigArrayInput)(nil)).Elem(), GetUsergroupNotificationConfigArray{})
	pulumi.RegisterOutputType(ResourceGroupIncludedScopeOutput{})
	pulumi.RegisterOutputType(ResourceGroupIncludedScopeArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceAttributeFilterOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtPasswordSpecOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtPasswordSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshPasswordCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshPasswordCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyPathCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyPathCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyReferenceCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyReferenceCredentialPtrOutput{})
	pulumi.RegisterOutputType(UsergroupNotificationConfigOutput{})
	pulumi.RegisterOutputType(UsergroupNotificationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupIncludedScopeOutput{})
	pulumi.RegisterOutputType(GetResourceGroupIncludedScopeArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceAttributeFilterOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtPasswordSpecOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshPasswordCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshPasswordCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyPathCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyPathCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyReferenceCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetUsergroupNotificationConfigOutput{})
	pulumi.RegisterOutputType(GetUsergroupNotificationConfigArrayOutput{})
}
