// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppDynamicsConnectorApiToken struct {
	// The client id used for connecting to App Dynamics.
	ClientId string `pulumi:"clientId"`
	// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef string `pulumi:"clientSecretRef"`
}

// AppDynamicsConnectorApiTokenInput is an input type that accepts AppDynamicsConnectorApiTokenArgs and AppDynamicsConnectorApiTokenOutput values.
// You can construct a concrete instance of `AppDynamicsConnectorApiTokenInput` via:
//
//	AppDynamicsConnectorApiTokenArgs{...}
type AppDynamicsConnectorApiTokenInput interface {
	pulumi.Input

	ToAppDynamicsConnectorApiTokenOutput() AppDynamicsConnectorApiTokenOutput
	ToAppDynamicsConnectorApiTokenOutputWithContext(context.Context) AppDynamicsConnectorApiTokenOutput
}

type AppDynamicsConnectorApiTokenArgs struct {
	// The client id used for connecting to App Dynamics.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
}

func (AppDynamicsConnectorApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsConnectorApiToken)(nil)).Elem()
}

func (i AppDynamicsConnectorApiTokenArgs) ToAppDynamicsConnectorApiTokenOutput() AppDynamicsConnectorApiTokenOutput {
	return i.ToAppDynamicsConnectorApiTokenOutputWithContext(context.Background())
}

func (i AppDynamicsConnectorApiTokenArgs) ToAppDynamicsConnectorApiTokenOutputWithContext(ctx context.Context) AppDynamicsConnectorApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsConnectorApiTokenOutput)
}

func (i AppDynamicsConnectorApiTokenArgs) ToAppDynamicsConnectorApiTokenPtrOutput() AppDynamicsConnectorApiTokenPtrOutput {
	return i.ToAppDynamicsConnectorApiTokenPtrOutputWithContext(context.Background())
}

func (i AppDynamicsConnectorApiTokenArgs) ToAppDynamicsConnectorApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsConnectorApiTokenOutput).ToAppDynamicsConnectorApiTokenPtrOutputWithContext(ctx)
}

// AppDynamicsConnectorApiTokenPtrInput is an input type that accepts AppDynamicsConnectorApiTokenArgs, AppDynamicsConnectorApiTokenPtr and AppDynamicsConnectorApiTokenPtrOutput values.
// You can construct a concrete instance of `AppDynamicsConnectorApiTokenPtrInput` via:
//
//	        AppDynamicsConnectorApiTokenArgs{...}
//
//	or:
//
//	        nil
type AppDynamicsConnectorApiTokenPtrInput interface {
	pulumi.Input

	ToAppDynamicsConnectorApiTokenPtrOutput() AppDynamicsConnectorApiTokenPtrOutput
	ToAppDynamicsConnectorApiTokenPtrOutputWithContext(context.Context) AppDynamicsConnectorApiTokenPtrOutput
}

type appDynamicsConnectorApiTokenPtrType AppDynamicsConnectorApiTokenArgs

func AppDynamicsConnectorApiTokenPtr(v *AppDynamicsConnectorApiTokenArgs) AppDynamicsConnectorApiTokenPtrInput {
	return (*appDynamicsConnectorApiTokenPtrType)(v)
}

func (*appDynamicsConnectorApiTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsConnectorApiToken)(nil)).Elem()
}

func (i *appDynamicsConnectorApiTokenPtrType) ToAppDynamicsConnectorApiTokenPtrOutput() AppDynamicsConnectorApiTokenPtrOutput {
	return i.ToAppDynamicsConnectorApiTokenPtrOutputWithContext(context.Background())
}

func (i *appDynamicsConnectorApiTokenPtrType) ToAppDynamicsConnectorApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsConnectorApiTokenPtrOutput)
}

type AppDynamicsConnectorApiTokenOutput struct{ *pulumi.OutputState }

func (AppDynamicsConnectorApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsConnectorApiToken)(nil)).Elem()
}

func (o AppDynamicsConnectorApiTokenOutput) ToAppDynamicsConnectorApiTokenOutput() AppDynamicsConnectorApiTokenOutput {
	return o
}

func (o AppDynamicsConnectorApiTokenOutput) ToAppDynamicsConnectorApiTokenOutputWithContext(ctx context.Context) AppDynamicsConnectorApiTokenOutput {
	return o
}

func (o AppDynamicsConnectorApiTokenOutput) ToAppDynamicsConnectorApiTokenPtrOutput() AppDynamicsConnectorApiTokenPtrOutput {
	return o.ToAppDynamicsConnectorApiTokenPtrOutputWithContext(context.Background())
}

func (o AppDynamicsConnectorApiTokenOutput) ToAppDynamicsConnectorApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorApiTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDynamicsConnectorApiToken) *AppDynamicsConnectorApiToken {
		return &v
	}).(AppDynamicsConnectorApiTokenPtrOutput)
}

// The client id used for connecting to App Dynamics.
func (o AppDynamicsConnectorApiTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsConnectorApiToken) string { return v.ClientId }).(pulumi.StringOutput)
}

// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AppDynamicsConnectorApiTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsConnectorApiToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

type AppDynamicsConnectorApiTokenPtrOutput struct{ *pulumi.OutputState }

func (AppDynamicsConnectorApiTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsConnectorApiToken)(nil)).Elem()
}

func (o AppDynamicsConnectorApiTokenPtrOutput) ToAppDynamicsConnectorApiTokenPtrOutput() AppDynamicsConnectorApiTokenPtrOutput {
	return o
}

func (o AppDynamicsConnectorApiTokenPtrOutput) ToAppDynamicsConnectorApiTokenPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorApiTokenPtrOutput {
	return o
}

func (o AppDynamicsConnectorApiTokenPtrOutput) Elem() AppDynamicsConnectorApiTokenOutput {
	return o.ApplyT(func(v *AppDynamicsConnectorApiToken) AppDynamicsConnectorApiToken {
		if v != nil {
			return *v
		}
		var ret AppDynamicsConnectorApiToken
		return ret
	}).(AppDynamicsConnectorApiTokenOutput)
}

// The client id used for connecting to App Dynamics.
func (o AppDynamicsConnectorApiTokenPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsConnectorApiToken) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the App Dynamics client secret. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AppDynamicsConnectorApiTokenPtrOutput) ClientSecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsConnectorApiToken) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecretRef
	}).(pulumi.StringPtrOutput)
}

type AppDynamicsConnectorUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
}

// AppDynamicsConnectorUsernamePasswordInput is an input type that accepts AppDynamicsConnectorUsernamePasswordArgs and AppDynamicsConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `AppDynamicsConnectorUsernamePasswordInput` via:
//
//	AppDynamicsConnectorUsernamePasswordArgs{...}
type AppDynamicsConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToAppDynamicsConnectorUsernamePasswordOutput() AppDynamicsConnectorUsernamePasswordOutput
	ToAppDynamicsConnectorUsernamePasswordOutputWithContext(context.Context) AppDynamicsConnectorUsernamePasswordOutput
}

type AppDynamicsConnectorUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
}

func (AppDynamicsConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (i AppDynamicsConnectorUsernamePasswordArgs) ToAppDynamicsConnectorUsernamePasswordOutput() AppDynamicsConnectorUsernamePasswordOutput {
	return i.ToAppDynamicsConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i AppDynamicsConnectorUsernamePasswordArgs) ToAppDynamicsConnectorUsernamePasswordOutputWithContext(ctx context.Context) AppDynamicsConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsConnectorUsernamePasswordOutput)
}

func (i AppDynamicsConnectorUsernamePasswordArgs) ToAppDynamicsConnectorUsernamePasswordPtrOutput() AppDynamicsConnectorUsernamePasswordPtrOutput {
	return i.ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i AppDynamicsConnectorUsernamePasswordArgs) ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsConnectorUsernamePasswordOutput).ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(ctx)
}

// AppDynamicsConnectorUsernamePasswordPtrInput is an input type that accepts AppDynamicsConnectorUsernamePasswordArgs, AppDynamicsConnectorUsernamePasswordPtr and AppDynamicsConnectorUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `AppDynamicsConnectorUsernamePasswordPtrInput` via:
//
//	        AppDynamicsConnectorUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type AppDynamicsConnectorUsernamePasswordPtrInput interface {
	pulumi.Input

	ToAppDynamicsConnectorUsernamePasswordPtrOutput() AppDynamicsConnectorUsernamePasswordPtrOutput
	ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(context.Context) AppDynamicsConnectorUsernamePasswordPtrOutput
}

type appDynamicsConnectorUsernamePasswordPtrType AppDynamicsConnectorUsernamePasswordArgs

func AppDynamicsConnectorUsernamePasswordPtr(v *AppDynamicsConnectorUsernamePasswordArgs) AppDynamicsConnectorUsernamePasswordPtrInput {
	return (*appDynamicsConnectorUsernamePasswordPtrType)(v)
}

func (*appDynamicsConnectorUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (i *appDynamicsConnectorUsernamePasswordPtrType) ToAppDynamicsConnectorUsernamePasswordPtrOutput() AppDynamicsConnectorUsernamePasswordPtrOutput {
	return i.ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *appDynamicsConnectorUsernamePasswordPtrType) ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDynamicsConnectorUsernamePasswordPtrOutput)
}

type AppDynamicsConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (AppDynamicsConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (o AppDynamicsConnectorUsernamePasswordOutput) ToAppDynamicsConnectorUsernamePasswordOutput() AppDynamicsConnectorUsernamePasswordOutput {
	return o
}

func (o AppDynamicsConnectorUsernamePasswordOutput) ToAppDynamicsConnectorUsernamePasswordOutputWithContext(ctx context.Context) AppDynamicsConnectorUsernamePasswordOutput {
	return o
}

func (o AppDynamicsConnectorUsernamePasswordOutput) ToAppDynamicsConnectorUsernamePasswordPtrOutput() AppDynamicsConnectorUsernamePasswordPtrOutput {
	return o.ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o AppDynamicsConnectorUsernamePasswordOutput) ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppDynamicsConnectorUsernamePassword) *AppDynamicsConnectorUsernamePassword {
		return &v
	}).(AppDynamicsConnectorUsernamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AppDynamicsConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o AppDynamicsConnectorUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v AppDynamicsConnectorUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

type AppDynamicsConnectorUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (AppDynamicsConnectorUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (o AppDynamicsConnectorUsernamePasswordPtrOutput) ToAppDynamicsConnectorUsernamePasswordPtrOutput() AppDynamicsConnectorUsernamePasswordPtrOutput {
	return o
}

func (o AppDynamicsConnectorUsernamePasswordPtrOutput) ToAppDynamicsConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) AppDynamicsConnectorUsernamePasswordPtrOutput {
	return o
}

func (o AppDynamicsConnectorUsernamePasswordPtrOutput) Elem() AppDynamicsConnectorUsernamePasswordOutput {
	return o.ApplyT(func(v *AppDynamicsConnectorUsernamePassword) AppDynamicsConnectorUsernamePassword {
		if v != nil {
			return *v
		}
		var ret AppDynamicsConnectorUsernamePassword
		return ret
	}).(AppDynamicsConnectorUsernamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AppDynamicsConnectorUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o AppDynamicsConnectorUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDynamicsConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ArtifactoryConnectorCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// ArtifactoryConnectorCredentialsInput is an input type that accepts ArtifactoryConnectorCredentialsArgs and ArtifactoryConnectorCredentialsOutput values.
// You can construct a concrete instance of `ArtifactoryConnectorCredentialsInput` via:
//
//	ArtifactoryConnectorCredentialsArgs{...}
type ArtifactoryConnectorCredentialsInput interface {
	pulumi.Input

	ToArtifactoryConnectorCredentialsOutput() ArtifactoryConnectorCredentialsOutput
	ToArtifactoryConnectorCredentialsOutputWithContext(context.Context) ArtifactoryConnectorCredentialsOutput
}

type ArtifactoryConnectorCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ArtifactoryConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactoryConnectorCredentials)(nil)).Elem()
}

func (i ArtifactoryConnectorCredentialsArgs) ToArtifactoryConnectorCredentialsOutput() ArtifactoryConnectorCredentialsOutput {
	return i.ToArtifactoryConnectorCredentialsOutputWithContext(context.Background())
}

func (i ArtifactoryConnectorCredentialsArgs) ToArtifactoryConnectorCredentialsOutputWithContext(ctx context.Context) ArtifactoryConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryConnectorCredentialsOutput)
}

func (i ArtifactoryConnectorCredentialsArgs) ToArtifactoryConnectorCredentialsPtrOutput() ArtifactoryConnectorCredentialsPtrOutput {
	return i.ToArtifactoryConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i ArtifactoryConnectorCredentialsArgs) ToArtifactoryConnectorCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryConnectorCredentialsOutput).ToArtifactoryConnectorCredentialsPtrOutputWithContext(ctx)
}

// ArtifactoryConnectorCredentialsPtrInput is an input type that accepts ArtifactoryConnectorCredentialsArgs, ArtifactoryConnectorCredentialsPtr and ArtifactoryConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `ArtifactoryConnectorCredentialsPtrInput` via:
//
//	        ArtifactoryConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type ArtifactoryConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToArtifactoryConnectorCredentialsPtrOutput() ArtifactoryConnectorCredentialsPtrOutput
	ToArtifactoryConnectorCredentialsPtrOutputWithContext(context.Context) ArtifactoryConnectorCredentialsPtrOutput
}

type artifactoryConnectorCredentialsPtrType ArtifactoryConnectorCredentialsArgs

func ArtifactoryConnectorCredentialsPtr(v *ArtifactoryConnectorCredentialsArgs) ArtifactoryConnectorCredentialsPtrInput {
	return (*artifactoryConnectorCredentialsPtrType)(v)
}

func (*artifactoryConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactoryConnectorCredentials)(nil)).Elem()
}

func (i *artifactoryConnectorCredentialsPtrType) ToArtifactoryConnectorCredentialsPtrOutput() ArtifactoryConnectorCredentialsPtrOutput {
	return i.ToArtifactoryConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *artifactoryConnectorCredentialsPtrType) ToArtifactoryConnectorCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactoryConnectorCredentialsPtrOutput)
}

type ArtifactoryConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (ArtifactoryConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ArtifactoryConnectorCredentials)(nil)).Elem()
}

func (o ArtifactoryConnectorCredentialsOutput) ToArtifactoryConnectorCredentialsOutput() ArtifactoryConnectorCredentialsOutput {
	return o
}

func (o ArtifactoryConnectorCredentialsOutput) ToArtifactoryConnectorCredentialsOutputWithContext(ctx context.Context) ArtifactoryConnectorCredentialsOutput {
	return o
}

func (o ArtifactoryConnectorCredentialsOutput) ToArtifactoryConnectorCredentialsPtrOutput() ArtifactoryConnectorCredentialsPtrOutput {
	return o.ToArtifactoryConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o ArtifactoryConnectorCredentialsOutput) ToArtifactoryConnectorCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ArtifactoryConnectorCredentials) *ArtifactoryConnectorCredentials {
		return &v
	}).(ArtifactoryConnectorCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ArtifactoryConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ArtifactoryConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o ArtifactoryConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactoryConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ArtifactoryConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ArtifactoryConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ArtifactoryConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ArtifactoryConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactoryConnectorCredentials)(nil)).Elem()
}

func (o ArtifactoryConnectorCredentialsPtrOutput) ToArtifactoryConnectorCredentialsPtrOutput() ArtifactoryConnectorCredentialsPtrOutput {
	return o
}

func (o ArtifactoryConnectorCredentialsPtrOutput) ToArtifactoryConnectorCredentialsPtrOutputWithContext(ctx context.Context) ArtifactoryConnectorCredentialsPtrOutput {
	return o
}

func (o ArtifactoryConnectorCredentialsPtrOutput) Elem() ArtifactoryConnectorCredentialsOutput {
	return o.ApplyT(func(v *ArtifactoryConnectorCredentials) ArtifactoryConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret ArtifactoryConnectorCredentials
		return ret
	}).(ArtifactoryConnectorCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ArtifactoryConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o ArtifactoryConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ArtifactoryConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactoryConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type AwsCCConnectorCrossAccountAccess struct {
	// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
	ExternalId string `pulumi:"externalId"`
	// The ARN of the role to use for cross-account access.
	RoleArn string `pulumi:"roleArn"`
}

// AwsCCConnectorCrossAccountAccessInput is an input type that accepts AwsCCConnectorCrossAccountAccessArgs and AwsCCConnectorCrossAccountAccessOutput values.
// You can construct a concrete instance of `AwsCCConnectorCrossAccountAccessInput` via:
//
//	AwsCCConnectorCrossAccountAccessArgs{...}
type AwsCCConnectorCrossAccountAccessInput interface {
	pulumi.Input

	ToAwsCCConnectorCrossAccountAccessOutput() AwsCCConnectorCrossAccountAccessOutput
	ToAwsCCConnectorCrossAccountAccessOutputWithContext(context.Context) AwsCCConnectorCrossAccountAccessOutput
}

type AwsCCConnectorCrossAccountAccessArgs struct {
	// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of the role to use for cross-account access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AwsCCConnectorCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (i AwsCCConnectorCrossAccountAccessArgs) ToAwsCCConnectorCrossAccountAccessOutput() AwsCCConnectorCrossAccountAccessOutput {
	return i.ToAwsCCConnectorCrossAccountAccessOutputWithContext(context.Background())
}

func (i AwsCCConnectorCrossAccountAccessArgs) ToAwsCCConnectorCrossAccountAccessOutputWithContext(ctx context.Context) AwsCCConnectorCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCCConnectorCrossAccountAccessOutput)
}

func (i AwsCCConnectorCrossAccountAccessArgs) ToAwsCCConnectorCrossAccountAccessPtrOutput() AwsCCConnectorCrossAccountAccessPtrOutput {
	return i.ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i AwsCCConnectorCrossAccountAccessArgs) ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCConnectorCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCCConnectorCrossAccountAccessOutput).ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(ctx)
}

// AwsCCConnectorCrossAccountAccessPtrInput is an input type that accepts AwsCCConnectorCrossAccountAccessArgs, AwsCCConnectorCrossAccountAccessPtr and AwsCCConnectorCrossAccountAccessPtrOutput values.
// You can construct a concrete instance of `AwsCCConnectorCrossAccountAccessPtrInput` via:
//
//	        AwsCCConnectorCrossAccountAccessArgs{...}
//
//	or:
//
//	        nil
type AwsCCConnectorCrossAccountAccessPtrInput interface {
	pulumi.Input

	ToAwsCCConnectorCrossAccountAccessPtrOutput() AwsCCConnectorCrossAccountAccessPtrOutput
	ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(context.Context) AwsCCConnectorCrossAccountAccessPtrOutput
}

type awsCCConnectorCrossAccountAccessPtrType AwsCCConnectorCrossAccountAccessArgs

func AwsCCConnectorCrossAccountAccessPtr(v *AwsCCConnectorCrossAccountAccessArgs) AwsCCConnectorCrossAccountAccessPtrInput {
	return (*awsCCConnectorCrossAccountAccessPtrType)(v)
}

func (*awsCCConnectorCrossAccountAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (i *awsCCConnectorCrossAccountAccessPtrType) ToAwsCCConnectorCrossAccountAccessPtrOutput() AwsCCConnectorCrossAccountAccessPtrOutput {
	return i.ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i *awsCCConnectorCrossAccountAccessPtrType) ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCConnectorCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCCConnectorCrossAccountAccessPtrOutput)
}

type AwsCCConnectorCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (AwsCCConnectorCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (o AwsCCConnectorCrossAccountAccessOutput) ToAwsCCConnectorCrossAccountAccessOutput() AwsCCConnectorCrossAccountAccessOutput {
	return o
}

func (o AwsCCConnectorCrossAccountAccessOutput) ToAwsCCConnectorCrossAccountAccessOutputWithContext(ctx context.Context) AwsCCConnectorCrossAccountAccessOutput {
	return o
}

func (o AwsCCConnectorCrossAccountAccessOutput) ToAwsCCConnectorCrossAccountAccessPtrOutput() AwsCCConnectorCrossAccountAccessPtrOutput {
	return o.ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (o AwsCCConnectorCrossAccountAccessOutput) ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCConnectorCrossAccountAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsCCConnectorCrossAccountAccess) *AwsCCConnectorCrossAccountAccess {
		return &v
	}).(AwsCCConnectorCrossAccountAccessPtrOutput)
}

// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
func (o AwsCCConnectorCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCCConnectorCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the role to use for cross-account access.
func (o AwsCCConnectorCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsCCConnectorCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsCCConnectorCrossAccountAccessPtrOutput struct{ *pulumi.OutputState }

func (AwsCCConnectorCrossAccountAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (o AwsCCConnectorCrossAccountAccessPtrOutput) ToAwsCCConnectorCrossAccountAccessPtrOutput() AwsCCConnectorCrossAccountAccessPtrOutput {
	return o
}

func (o AwsCCConnectorCrossAccountAccessPtrOutput) ToAwsCCConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsCCConnectorCrossAccountAccessPtrOutput {
	return o
}

func (o AwsCCConnectorCrossAccountAccessPtrOutput) Elem() AwsCCConnectorCrossAccountAccessOutput {
	return o.ApplyT(func(v *AwsCCConnectorCrossAccountAccess) AwsCCConnectorCrossAccountAccess {
		if v != nil {
			return *v
		}
		var ret AwsCCConnectorCrossAccountAccess
		return ret
	}).(AwsCCConnectorCrossAccountAccessOutput)
}

// The external id of the role to use for cross-account access. This is a random unique value to provide additional secure authentication.
func (o AwsCCConnectorCrossAccountAccessPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCCConnectorCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role to use for cross-account access.
func (o AwsCCConnectorCrossAccountAccessPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCCConnectorCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsConnectorCrossAccountAccess struct {
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId *string `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
	RoleArn string `pulumi:"roleArn"`
}

// AwsConnectorCrossAccountAccessInput is an input type that accepts AwsConnectorCrossAccountAccessArgs and AwsConnectorCrossAccountAccessOutput values.
// You can construct a concrete instance of `AwsConnectorCrossAccountAccessInput` via:
//
//	AwsConnectorCrossAccountAccessArgs{...}
type AwsConnectorCrossAccountAccessInput interface {
	pulumi.Input

	ToAwsConnectorCrossAccountAccessOutput() AwsConnectorCrossAccountAccessOutput
	ToAwsConnectorCrossAccountAccessOutputWithContext(context.Context) AwsConnectorCrossAccountAccessOutput
}

type AwsConnectorCrossAccountAccessArgs struct {
	// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (AwsConnectorCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (i AwsConnectorCrossAccountAccessArgs) ToAwsConnectorCrossAccountAccessOutput() AwsConnectorCrossAccountAccessOutput {
	return i.ToAwsConnectorCrossAccountAccessOutputWithContext(context.Background())
}

func (i AwsConnectorCrossAccountAccessArgs) ToAwsConnectorCrossAccountAccessOutputWithContext(ctx context.Context) AwsConnectorCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorCrossAccountAccessOutput)
}

func (i AwsConnectorCrossAccountAccessArgs) ToAwsConnectorCrossAccountAccessPtrOutput() AwsConnectorCrossAccountAccessPtrOutput {
	return i.ToAwsConnectorCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i AwsConnectorCrossAccountAccessArgs) ToAwsConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsConnectorCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorCrossAccountAccessOutput).ToAwsConnectorCrossAccountAccessPtrOutputWithContext(ctx)
}

// AwsConnectorCrossAccountAccessPtrInput is an input type that accepts AwsConnectorCrossAccountAccessArgs, AwsConnectorCrossAccountAccessPtr and AwsConnectorCrossAccountAccessPtrOutput values.
// You can construct a concrete instance of `AwsConnectorCrossAccountAccessPtrInput` via:
//
//	        AwsConnectorCrossAccountAccessArgs{...}
//
//	or:
//
//	        nil
type AwsConnectorCrossAccountAccessPtrInput interface {
	pulumi.Input

	ToAwsConnectorCrossAccountAccessPtrOutput() AwsConnectorCrossAccountAccessPtrOutput
	ToAwsConnectorCrossAccountAccessPtrOutputWithContext(context.Context) AwsConnectorCrossAccountAccessPtrOutput
}

type awsConnectorCrossAccountAccessPtrType AwsConnectorCrossAccountAccessArgs

func AwsConnectorCrossAccountAccessPtr(v *AwsConnectorCrossAccountAccessArgs) AwsConnectorCrossAccountAccessPtrInput {
	return (*awsConnectorCrossAccountAccessPtrType)(v)
}

func (*awsConnectorCrossAccountAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (i *awsConnectorCrossAccountAccessPtrType) ToAwsConnectorCrossAccountAccessPtrOutput() AwsConnectorCrossAccountAccessPtrOutput {
	return i.ToAwsConnectorCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (i *awsConnectorCrossAccountAccessPtrType) ToAwsConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsConnectorCrossAccountAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorCrossAccountAccessPtrOutput)
}

type AwsConnectorCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (AwsConnectorCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (o AwsConnectorCrossAccountAccessOutput) ToAwsConnectorCrossAccountAccessOutput() AwsConnectorCrossAccountAccessOutput {
	return o
}

func (o AwsConnectorCrossAccountAccessOutput) ToAwsConnectorCrossAccountAccessOutputWithContext(ctx context.Context) AwsConnectorCrossAccountAccessOutput {
	return o
}

func (o AwsConnectorCrossAccountAccessOutput) ToAwsConnectorCrossAccountAccessPtrOutput() AwsConnectorCrossAccountAccessPtrOutput {
	return o.ToAwsConnectorCrossAccountAccessPtrOutputWithContext(context.Background())
}

func (o AwsConnectorCrossAccountAccessOutput) ToAwsConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsConnectorCrossAccountAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsConnectorCrossAccountAccess) *AwsConnectorCrossAccountAccess {
		return &v
	}).(AwsConnectorCrossAccountAccessPtrOutput)
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o AwsConnectorCrossAccountAccessOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConnectorCrossAccountAccess) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
func (o AwsConnectorCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsConnectorCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsConnectorCrossAccountAccessPtrOutput struct{ *pulumi.OutputState }

func (AwsConnectorCrossAccountAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (o AwsConnectorCrossAccountAccessPtrOutput) ToAwsConnectorCrossAccountAccessPtrOutput() AwsConnectorCrossAccountAccessPtrOutput {
	return o
}

func (o AwsConnectorCrossAccountAccessPtrOutput) ToAwsConnectorCrossAccountAccessPtrOutputWithContext(ctx context.Context) AwsConnectorCrossAccountAccessPtrOutput {
	return o
}

func (o AwsConnectorCrossAccountAccessPtrOutput) Elem() AwsConnectorCrossAccountAccessOutput {
	return o.ApplyT(func(v *AwsConnectorCrossAccountAccess) AwsConnectorCrossAccountAccess {
		if v != nil {
			return *v
		}
		var ret AwsConnectorCrossAccountAccess
		return ret
	}).(AwsConnectorCrossAccountAccessOutput)
}

// If the administrator of the account to which the role belongs provided you with an external ID, then enter that value.
func (o AwsConnectorCrossAccountAccessPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsConnectorCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the role that you want to assume. This is an IAM role in the target AWS account.
func (o AwsConnectorCrossAccountAccessPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsConnectorCrossAccountAccess) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsConnectorInheritFromDelegate struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// AwsConnectorInheritFromDelegateInput is an input type that accepts AwsConnectorInheritFromDelegateArgs and AwsConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `AwsConnectorInheritFromDelegateInput` via:
//
//	AwsConnectorInheritFromDelegateArgs{...}
type AwsConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToAwsConnectorInheritFromDelegateOutput() AwsConnectorInheritFromDelegateOutput
	ToAwsConnectorInheritFromDelegateOutputWithContext(context.Context) AwsConnectorInheritFromDelegateOutput
}

type AwsConnectorInheritFromDelegateArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (AwsConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (i AwsConnectorInheritFromDelegateArgs) ToAwsConnectorInheritFromDelegateOutput() AwsConnectorInheritFromDelegateOutput {
	return i.ToAwsConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i AwsConnectorInheritFromDelegateArgs) ToAwsConnectorInheritFromDelegateOutputWithContext(ctx context.Context) AwsConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorInheritFromDelegateOutput)
}

func (i AwsConnectorInheritFromDelegateArgs) ToAwsConnectorInheritFromDelegatePtrOutput() AwsConnectorInheritFromDelegatePtrOutput {
	return i.ToAwsConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i AwsConnectorInheritFromDelegateArgs) ToAwsConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsConnectorInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorInheritFromDelegateOutput).ToAwsConnectorInheritFromDelegatePtrOutputWithContext(ctx)
}

// AwsConnectorInheritFromDelegatePtrInput is an input type that accepts AwsConnectorInheritFromDelegateArgs, AwsConnectorInheritFromDelegatePtr and AwsConnectorInheritFromDelegatePtrOutput values.
// You can construct a concrete instance of `AwsConnectorInheritFromDelegatePtrInput` via:
//
//	        AwsConnectorInheritFromDelegateArgs{...}
//
//	or:
//
//	        nil
type AwsConnectorInheritFromDelegatePtrInput interface {
	pulumi.Input

	ToAwsConnectorInheritFromDelegatePtrOutput() AwsConnectorInheritFromDelegatePtrOutput
	ToAwsConnectorInheritFromDelegatePtrOutputWithContext(context.Context) AwsConnectorInheritFromDelegatePtrOutput
}

type awsConnectorInheritFromDelegatePtrType AwsConnectorInheritFromDelegateArgs

func AwsConnectorInheritFromDelegatePtr(v *AwsConnectorInheritFromDelegateArgs) AwsConnectorInheritFromDelegatePtrInput {
	return (*awsConnectorInheritFromDelegatePtrType)(v)
}

func (*awsConnectorInheritFromDelegatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (i *awsConnectorInheritFromDelegatePtrType) ToAwsConnectorInheritFromDelegatePtrOutput() AwsConnectorInheritFromDelegatePtrOutput {
	return i.ToAwsConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i *awsConnectorInheritFromDelegatePtrType) ToAwsConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsConnectorInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorInheritFromDelegatePtrOutput)
}

type AwsConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (AwsConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (o AwsConnectorInheritFromDelegateOutput) ToAwsConnectorInheritFromDelegateOutput() AwsConnectorInheritFromDelegateOutput {
	return o
}

func (o AwsConnectorInheritFromDelegateOutput) ToAwsConnectorInheritFromDelegateOutputWithContext(ctx context.Context) AwsConnectorInheritFromDelegateOutput {
	return o
}

func (o AwsConnectorInheritFromDelegateOutput) ToAwsConnectorInheritFromDelegatePtrOutput() AwsConnectorInheritFromDelegatePtrOutput {
	return o.ToAwsConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (o AwsConnectorInheritFromDelegateOutput) ToAwsConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsConnectorInheritFromDelegatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsConnectorInheritFromDelegate) *AwsConnectorInheritFromDelegate {
		return &v
	}).(AwsConnectorInheritFromDelegatePtrOutput)
}

// The delegates to inherit the credentials from.
func (o AwsConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type AwsConnectorInheritFromDelegatePtrOutput struct{ *pulumi.OutputState }

func (AwsConnectorInheritFromDelegatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (o AwsConnectorInheritFromDelegatePtrOutput) ToAwsConnectorInheritFromDelegatePtrOutput() AwsConnectorInheritFromDelegatePtrOutput {
	return o
}

func (o AwsConnectorInheritFromDelegatePtrOutput) ToAwsConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) AwsConnectorInheritFromDelegatePtrOutput {
	return o
}

func (o AwsConnectorInheritFromDelegatePtrOutput) Elem() AwsConnectorInheritFromDelegateOutput {
	return o.ApplyT(func(v *AwsConnectorInheritFromDelegate) AwsConnectorInheritFromDelegate {
		if v != nil {
			return *v
		}
		var ret AwsConnectorInheritFromDelegate
		return ret
	}).(AwsConnectorInheritFromDelegateOutput)
}

// The delegates to inherit the credentials from.
func (o AwsConnectorInheritFromDelegatePtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsConnectorInheritFromDelegate) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type AwsConnectorIrsa struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// AwsConnectorIrsaInput is an input type that accepts AwsConnectorIrsaArgs and AwsConnectorIrsaOutput values.
// You can construct a concrete instance of `AwsConnectorIrsaInput` via:
//
//	AwsConnectorIrsaArgs{...}
type AwsConnectorIrsaInput interface {
	pulumi.Input

	ToAwsConnectorIrsaOutput() AwsConnectorIrsaOutput
	ToAwsConnectorIrsaOutputWithContext(context.Context) AwsConnectorIrsaOutput
}

type AwsConnectorIrsaArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (AwsConnectorIrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorIrsa)(nil)).Elem()
}

func (i AwsConnectorIrsaArgs) ToAwsConnectorIrsaOutput() AwsConnectorIrsaOutput {
	return i.ToAwsConnectorIrsaOutputWithContext(context.Background())
}

func (i AwsConnectorIrsaArgs) ToAwsConnectorIrsaOutputWithContext(ctx context.Context) AwsConnectorIrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorIrsaOutput)
}

func (i AwsConnectorIrsaArgs) ToAwsConnectorIrsaPtrOutput() AwsConnectorIrsaPtrOutput {
	return i.ToAwsConnectorIrsaPtrOutputWithContext(context.Background())
}

func (i AwsConnectorIrsaArgs) ToAwsConnectorIrsaPtrOutputWithContext(ctx context.Context) AwsConnectorIrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorIrsaOutput).ToAwsConnectorIrsaPtrOutputWithContext(ctx)
}

// AwsConnectorIrsaPtrInput is an input type that accepts AwsConnectorIrsaArgs, AwsConnectorIrsaPtr and AwsConnectorIrsaPtrOutput values.
// You can construct a concrete instance of `AwsConnectorIrsaPtrInput` via:
//
//	        AwsConnectorIrsaArgs{...}
//
//	or:
//
//	        nil
type AwsConnectorIrsaPtrInput interface {
	pulumi.Input

	ToAwsConnectorIrsaPtrOutput() AwsConnectorIrsaPtrOutput
	ToAwsConnectorIrsaPtrOutputWithContext(context.Context) AwsConnectorIrsaPtrOutput
}

type awsConnectorIrsaPtrType AwsConnectorIrsaArgs

func AwsConnectorIrsaPtr(v *AwsConnectorIrsaArgs) AwsConnectorIrsaPtrInput {
	return (*awsConnectorIrsaPtrType)(v)
}

func (*awsConnectorIrsaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorIrsa)(nil)).Elem()
}

func (i *awsConnectorIrsaPtrType) ToAwsConnectorIrsaPtrOutput() AwsConnectorIrsaPtrOutput {
	return i.ToAwsConnectorIrsaPtrOutputWithContext(context.Background())
}

func (i *awsConnectorIrsaPtrType) ToAwsConnectorIrsaPtrOutputWithContext(ctx context.Context) AwsConnectorIrsaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorIrsaPtrOutput)
}

type AwsConnectorIrsaOutput struct{ *pulumi.OutputState }

func (AwsConnectorIrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorIrsa)(nil)).Elem()
}

func (o AwsConnectorIrsaOutput) ToAwsConnectorIrsaOutput() AwsConnectorIrsaOutput {
	return o
}

func (o AwsConnectorIrsaOutput) ToAwsConnectorIrsaOutputWithContext(ctx context.Context) AwsConnectorIrsaOutput {
	return o
}

func (o AwsConnectorIrsaOutput) ToAwsConnectorIrsaPtrOutput() AwsConnectorIrsaPtrOutput {
	return o.ToAwsConnectorIrsaPtrOutputWithContext(context.Background())
}

func (o AwsConnectorIrsaOutput) ToAwsConnectorIrsaPtrOutputWithContext(ctx context.Context) AwsConnectorIrsaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsConnectorIrsa) *AwsConnectorIrsa {
		return &v
	}).(AwsConnectorIrsaPtrOutput)
}

// The delegates to inherit the credentials from.
func (o AwsConnectorIrsaOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsConnectorIrsa) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type AwsConnectorIrsaPtrOutput struct{ *pulumi.OutputState }

func (AwsConnectorIrsaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorIrsa)(nil)).Elem()
}

func (o AwsConnectorIrsaPtrOutput) ToAwsConnectorIrsaPtrOutput() AwsConnectorIrsaPtrOutput {
	return o
}

func (o AwsConnectorIrsaPtrOutput) ToAwsConnectorIrsaPtrOutputWithContext(ctx context.Context) AwsConnectorIrsaPtrOutput {
	return o
}

func (o AwsConnectorIrsaPtrOutput) Elem() AwsConnectorIrsaOutput {
	return o.ApplyT(func(v *AwsConnectorIrsa) AwsConnectorIrsa {
		if v != nil {
			return *v
		}
		var ret AwsConnectorIrsa
		return ret
	}).(AwsConnectorIrsaOutput)
}

// The delegates to inherit the credentials from.
func (o AwsConnectorIrsaPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsConnectorIrsa) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type AwsConnectorManual struct {
	// AWS access key.
	AccessKey *string `pulumi:"accessKey"`
	// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef *string `pulumi:"accessKeyRef"`
	// Connect only use delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// AwsConnectorManualInput is an input type that accepts AwsConnectorManualArgs and AwsConnectorManualOutput values.
// You can construct a concrete instance of `AwsConnectorManualInput` via:
//
//	AwsConnectorManualArgs{...}
type AwsConnectorManualInput interface {
	pulumi.Input

	ToAwsConnectorManualOutput() AwsConnectorManualOutput
	ToAwsConnectorManualOutputWithContext(context.Context) AwsConnectorManualOutput
}

type AwsConnectorManualArgs struct {
	// AWS access key.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	AccessKeyRef pulumi.StringPtrInput `pulumi:"accessKeyRef"`
	// Connect only use delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (AwsConnectorManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorManual)(nil)).Elem()
}

func (i AwsConnectorManualArgs) ToAwsConnectorManualOutput() AwsConnectorManualOutput {
	return i.ToAwsConnectorManualOutputWithContext(context.Background())
}

func (i AwsConnectorManualArgs) ToAwsConnectorManualOutputWithContext(ctx context.Context) AwsConnectorManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorManualOutput)
}

func (i AwsConnectorManualArgs) ToAwsConnectorManualPtrOutput() AwsConnectorManualPtrOutput {
	return i.ToAwsConnectorManualPtrOutputWithContext(context.Background())
}

func (i AwsConnectorManualArgs) ToAwsConnectorManualPtrOutputWithContext(ctx context.Context) AwsConnectorManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorManualOutput).ToAwsConnectorManualPtrOutputWithContext(ctx)
}

// AwsConnectorManualPtrInput is an input type that accepts AwsConnectorManualArgs, AwsConnectorManualPtr and AwsConnectorManualPtrOutput values.
// You can construct a concrete instance of `AwsConnectorManualPtrInput` via:
//
//	        AwsConnectorManualArgs{...}
//
//	or:
//
//	        nil
type AwsConnectorManualPtrInput interface {
	pulumi.Input

	ToAwsConnectorManualPtrOutput() AwsConnectorManualPtrOutput
	ToAwsConnectorManualPtrOutputWithContext(context.Context) AwsConnectorManualPtrOutput
}

type awsConnectorManualPtrType AwsConnectorManualArgs

func AwsConnectorManualPtr(v *AwsConnectorManualArgs) AwsConnectorManualPtrInput {
	return (*awsConnectorManualPtrType)(v)
}

func (*awsConnectorManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorManual)(nil)).Elem()
}

func (i *awsConnectorManualPtrType) ToAwsConnectorManualPtrOutput() AwsConnectorManualPtrOutput {
	return i.ToAwsConnectorManualPtrOutputWithContext(context.Background())
}

func (i *awsConnectorManualPtrType) ToAwsConnectorManualPtrOutputWithContext(ctx context.Context) AwsConnectorManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsConnectorManualPtrOutput)
}

type AwsConnectorManualOutput struct{ *pulumi.OutputState }

func (AwsConnectorManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsConnectorManual)(nil)).Elem()
}

func (o AwsConnectorManualOutput) ToAwsConnectorManualOutput() AwsConnectorManualOutput {
	return o
}

func (o AwsConnectorManualOutput) ToAwsConnectorManualOutputWithContext(ctx context.Context) AwsConnectorManualOutput {
	return o
}

func (o AwsConnectorManualOutput) ToAwsConnectorManualPtrOutput() AwsConnectorManualPtrOutput {
	return o.ToAwsConnectorManualPtrOutputWithContext(context.Background())
}

func (o AwsConnectorManualOutput) ToAwsConnectorManualPtrOutputWithContext(ctx context.Context) AwsConnectorManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsConnectorManual) *AwsConnectorManual {
		return &v
	}).(AwsConnectorManualPtrOutput)
}

// AWS access key.
func (o AwsConnectorManualOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConnectorManual) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AwsConnectorManualOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsConnectorManual) *string { return v.AccessKeyRef }).(pulumi.StringPtrOutput)
}

// Connect only use delegates with these tags.
func (o AwsConnectorManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsConnectorManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AwsConnectorManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsConnectorManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type AwsConnectorManualPtrOutput struct{ *pulumi.OutputState }

func (AwsConnectorManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsConnectorManual)(nil)).Elem()
}

func (o AwsConnectorManualPtrOutput) ToAwsConnectorManualPtrOutput() AwsConnectorManualPtrOutput {
	return o
}

func (o AwsConnectorManualPtrOutput) ToAwsConnectorManualPtrOutputWithContext(ctx context.Context) AwsConnectorManualPtrOutput {
	return o
}

func (o AwsConnectorManualPtrOutput) Elem() AwsConnectorManualOutput {
	return o.ApplyT(func(v *AwsConnectorManual) AwsConnectorManual {
		if v != nil {
			return *v
		}
		var ret AwsConnectorManual
		return ret
	}).(AwsConnectorManualOutput)
}

// AWS access key.
func (o AwsConnectorManualPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsConnectorManual) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the aws access key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AwsConnectorManualPtrOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsConnectorManual) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyRef
	}).(pulumi.StringPtrOutput)
}

// Connect only use delegates with these tags.
func (o AwsConnectorManualPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsConnectorManual) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the aws secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o AwsConnectorManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsConnectorManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type AwsKmsConnectorCredentials struct {
	// Connect using STS assume role.
	AssumeRole *AwsKmsConnectorCredentialsAssumeRole `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate *bool `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual *AwsKmsConnectorCredentialsManual `pulumi:"manual"`
}

// AwsKmsConnectorCredentialsInput is an input type that accepts AwsKmsConnectorCredentialsArgs and AwsKmsConnectorCredentialsOutput values.
// You can construct a concrete instance of `AwsKmsConnectorCredentialsInput` via:
//
//	AwsKmsConnectorCredentialsArgs{...}
type AwsKmsConnectorCredentialsInput interface {
	pulumi.Input

	ToAwsKmsConnectorCredentialsOutput() AwsKmsConnectorCredentialsOutput
	ToAwsKmsConnectorCredentialsOutputWithContext(context.Context) AwsKmsConnectorCredentialsOutput
}

type AwsKmsConnectorCredentialsArgs struct {
	// Connect using STS assume role.
	AssumeRole AwsKmsConnectorCredentialsAssumeRolePtrInput `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate pulumi.BoolPtrInput `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual AwsKmsConnectorCredentialsManualPtrInput `pulumi:"manual"`
}

func (AwsKmsConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsConnectorCredentials)(nil)).Elem()
}

func (i AwsKmsConnectorCredentialsArgs) ToAwsKmsConnectorCredentialsOutput() AwsKmsConnectorCredentialsOutput {
	return i.ToAwsKmsConnectorCredentialsOutputWithContext(context.Background())
}

func (i AwsKmsConnectorCredentialsArgs) ToAwsKmsConnectorCredentialsOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsOutput)
}

func (i AwsKmsConnectorCredentialsArgs) ToAwsKmsConnectorCredentialsPtrOutput() AwsKmsConnectorCredentialsPtrOutput {
	return i.ToAwsKmsConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i AwsKmsConnectorCredentialsArgs) ToAwsKmsConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsOutput).ToAwsKmsConnectorCredentialsPtrOutputWithContext(ctx)
}

// AwsKmsConnectorCredentialsPtrInput is an input type that accepts AwsKmsConnectorCredentialsArgs, AwsKmsConnectorCredentialsPtr and AwsKmsConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `AwsKmsConnectorCredentialsPtrInput` via:
//
//	        AwsKmsConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type AwsKmsConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToAwsKmsConnectorCredentialsPtrOutput() AwsKmsConnectorCredentialsPtrOutput
	ToAwsKmsConnectorCredentialsPtrOutputWithContext(context.Context) AwsKmsConnectorCredentialsPtrOutput
}

type awsKmsConnectorCredentialsPtrType AwsKmsConnectorCredentialsArgs

func AwsKmsConnectorCredentialsPtr(v *AwsKmsConnectorCredentialsArgs) AwsKmsConnectorCredentialsPtrInput {
	return (*awsKmsConnectorCredentialsPtrType)(v)
}

func (*awsKmsConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnectorCredentials)(nil)).Elem()
}

func (i *awsKmsConnectorCredentialsPtrType) ToAwsKmsConnectorCredentialsPtrOutput() AwsKmsConnectorCredentialsPtrOutput {
	return i.ToAwsKmsConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *awsKmsConnectorCredentialsPtrType) ToAwsKmsConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsPtrOutput)
}

type AwsKmsConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsConnectorCredentials)(nil)).Elem()
}

func (o AwsKmsConnectorCredentialsOutput) ToAwsKmsConnectorCredentialsOutput() AwsKmsConnectorCredentialsOutput {
	return o
}

func (o AwsKmsConnectorCredentialsOutput) ToAwsKmsConnectorCredentialsOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsOutput {
	return o
}

func (o AwsKmsConnectorCredentialsOutput) ToAwsKmsConnectorCredentialsPtrOutput() AwsKmsConnectorCredentialsPtrOutput {
	return o.ToAwsKmsConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o AwsKmsConnectorCredentialsOutput) ToAwsKmsConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsKmsConnectorCredentials) *AwsKmsConnectorCredentials {
		return &v
	}).(AwsKmsConnectorCredentialsPtrOutput)
}

// Connect using STS assume role.
func (o AwsKmsConnectorCredentialsOutput) AssumeRole() AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentials) *AwsKmsConnectorCredentialsAssumeRole { return v.AssumeRole }).(AwsKmsConnectorCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsKmsConnectorCredentialsOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentials) *bool { return v.InheritFromDelegate }).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsKmsConnectorCredentialsOutput) Manual() AwsKmsConnectorCredentialsManualPtrOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentials) *AwsKmsConnectorCredentialsManual { return v.Manual }).(AwsKmsConnectorCredentialsManualPtrOutput)
}

type AwsKmsConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnectorCredentials)(nil)).Elem()
}

func (o AwsKmsConnectorCredentialsPtrOutput) ToAwsKmsConnectorCredentialsPtrOutput() AwsKmsConnectorCredentialsPtrOutput {
	return o
}

func (o AwsKmsConnectorCredentialsPtrOutput) ToAwsKmsConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsPtrOutput {
	return o
}

func (o AwsKmsConnectorCredentialsPtrOutput) Elem() AwsKmsConnectorCredentialsOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentials) AwsKmsConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret AwsKmsConnectorCredentials
		return ret
	}).(AwsKmsConnectorCredentialsOutput)
}

// Connect using STS assume role.
func (o AwsKmsConnectorCredentialsPtrOutput) AssumeRole() AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentials) *AwsKmsConnectorCredentialsAssumeRole {
		if v == nil {
			return nil
		}
		return v.AssumeRole
	}).(AwsKmsConnectorCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsKmsConnectorCredentialsPtrOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromDelegate
	}).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsKmsConnectorCredentialsPtrOutput) Manual() AwsKmsConnectorCredentialsManualPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentials) *AwsKmsConnectorCredentialsManual {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(AwsKmsConnectorCredentialsManualPtrOutput)
}

type AwsKmsConnectorCredentialsAssumeRole struct {
	Duration   int     `pulumi:"duration"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    string  `pulumi:"roleArn"`
}

// AwsKmsConnectorCredentialsAssumeRoleInput is an input type that accepts AwsKmsConnectorCredentialsAssumeRoleArgs and AwsKmsConnectorCredentialsAssumeRoleOutput values.
// You can construct a concrete instance of `AwsKmsConnectorCredentialsAssumeRoleInput` via:
//
//	AwsKmsConnectorCredentialsAssumeRoleArgs{...}
type AwsKmsConnectorCredentialsAssumeRoleInput interface {
	pulumi.Input

	ToAwsKmsConnectorCredentialsAssumeRoleOutput() AwsKmsConnectorCredentialsAssumeRoleOutput
	ToAwsKmsConnectorCredentialsAssumeRoleOutputWithContext(context.Context) AwsKmsConnectorCredentialsAssumeRoleOutput
}

type AwsKmsConnectorCredentialsAssumeRoleArgs struct {
	Duration   pulumi.IntInput       `pulumi:"duration"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput    `pulumi:"roleArn"`
}

func (AwsKmsConnectorCredentialsAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (i AwsKmsConnectorCredentialsAssumeRoleArgs) ToAwsKmsConnectorCredentialsAssumeRoleOutput() AwsKmsConnectorCredentialsAssumeRoleOutput {
	return i.ToAwsKmsConnectorCredentialsAssumeRoleOutputWithContext(context.Background())
}

func (i AwsKmsConnectorCredentialsAssumeRoleArgs) ToAwsKmsConnectorCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsAssumeRoleOutput)
}

func (i AwsKmsConnectorCredentialsAssumeRoleArgs) ToAwsKmsConnectorCredentialsAssumeRolePtrOutput() AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return i.ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i AwsKmsConnectorCredentialsAssumeRoleArgs) ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsAssumeRoleOutput).ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(ctx)
}

// AwsKmsConnectorCredentialsAssumeRolePtrInput is an input type that accepts AwsKmsConnectorCredentialsAssumeRoleArgs, AwsKmsConnectorCredentialsAssumeRolePtr and AwsKmsConnectorCredentialsAssumeRolePtrOutput values.
// You can construct a concrete instance of `AwsKmsConnectorCredentialsAssumeRolePtrInput` via:
//
//	        AwsKmsConnectorCredentialsAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type AwsKmsConnectorCredentialsAssumeRolePtrInput interface {
	pulumi.Input

	ToAwsKmsConnectorCredentialsAssumeRolePtrOutput() AwsKmsConnectorCredentialsAssumeRolePtrOutput
	ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(context.Context) AwsKmsConnectorCredentialsAssumeRolePtrOutput
}

type awsKmsConnectorCredentialsAssumeRolePtrType AwsKmsConnectorCredentialsAssumeRoleArgs

func AwsKmsConnectorCredentialsAssumeRolePtr(v *AwsKmsConnectorCredentialsAssumeRoleArgs) AwsKmsConnectorCredentialsAssumeRolePtrInput {
	return (*awsKmsConnectorCredentialsAssumeRolePtrType)(v)
}

func (*awsKmsConnectorCredentialsAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (i *awsKmsConnectorCredentialsAssumeRolePtrType) ToAwsKmsConnectorCredentialsAssumeRolePtrOutput() AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return i.ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i *awsKmsConnectorCredentialsAssumeRolePtrType) ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsAssumeRolePtrOutput)
}

type AwsKmsConnectorCredentialsAssumeRoleOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorCredentialsAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) ToAwsKmsConnectorCredentialsAssumeRoleOutput() AwsKmsConnectorCredentialsAssumeRoleOutput {
	return o
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) ToAwsKmsConnectorCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsAssumeRoleOutput {
	return o
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) ToAwsKmsConnectorCredentialsAssumeRolePtrOutput() AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return o.ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsKmsConnectorCredentialsAssumeRole) *AwsKmsConnectorCredentialsAssumeRole {
		return &v
	}).(AwsKmsConnectorCredentialsAssumeRolePtrOutput)
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentialsAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentialsAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o AwsKmsConnectorCredentialsAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentialsAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsKmsConnectorCredentialsAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorCredentialsAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsKmsConnectorCredentialsAssumeRolePtrOutput) ToAwsKmsConnectorCredentialsAssumeRolePtrOutput() AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsKmsConnectorCredentialsAssumeRolePtrOutput) ToAwsKmsConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsKmsConnectorCredentialsAssumeRolePtrOutput) Elem() AwsKmsConnectorCredentialsAssumeRoleOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsAssumeRole) AwsKmsConnectorCredentialsAssumeRole {
		if v != nil {
			return *v
		}
		var ret AwsKmsConnectorCredentialsAssumeRole
		return ret
	}).(AwsKmsConnectorCredentialsAssumeRoleOutput)
}

func (o AwsKmsConnectorCredentialsAssumeRolePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsAssumeRole) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o AwsKmsConnectorCredentialsAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o AwsKmsConnectorCredentialsAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsKmsConnectorCredentialsManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// AwsKmsConnectorCredentialsManualInput is an input type that accepts AwsKmsConnectorCredentialsManualArgs and AwsKmsConnectorCredentialsManualOutput values.
// You can construct a concrete instance of `AwsKmsConnectorCredentialsManualInput` via:
//
//	AwsKmsConnectorCredentialsManualArgs{...}
type AwsKmsConnectorCredentialsManualInput interface {
	pulumi.Input

	ToAwsKmsConnectorCredentialsManualOutput() AwsKmsConnectorCredentialsManualOutput
	ToAwsKmsConnectorCredentialsManualOutputWithContext(context.Context) AwsKmsConnectorCredentialsManualOutput
}

type AwsKmsConnectorCredentialsManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (AwsKmsConnectorCredentialsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsConnectorCredentialsManual)(nil)).Elem()
}

func (i AwsKmsConnectorCredentialsManualArgs) ToAwsKmsConnectorCredentialsManualOutput() AwsKmsConnectorCredentialsManualOutput {
	return i.ToAwsKmsConnectorCredentialsManualOutputWithContext(context.Background())
}

func (i AwsKmsConnectorCredentialsManualArgs) ToAwsKmsConnectorCredentialsManualOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsManualOutput)
}

func (i AwsKmsConnectorCredentialsManualArgs) ToAwsKmsConnectorCredentialsManualPtrOutput() AwsKmsConnectorCredentialsManualPtrOutput {
	return i.ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(context.Background())
}

func (i AwsKmsConnectorCredentialsManualArgs) ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsManualOutput).ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(ctx)
}

// AwsKmsConnectorCredentialsManualPtrInput is an input type that accepts AwsKmsConnectorCredentialsManualArgs, AwsKmsConnectorCredentialsManualPtr and AwsKmsConnectorCredentialsManualPtrOutput values.
// You can construct a concrete instance of `AwsKmsConnectorCredentialsManualPtrInput` via:
//
//	        AwsKmsConnectorCredentialsManualArgs{...}
//
//	or:
//
//	        nil
type AwsKmsConnectorCredentialsManualPtrInput interface {
	pulumi.Input

	ToAwsKmsConnectorCredentialsManualPtrOutput() AwsKmsConnectorCredentialsManualPtrOutput
	ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(context.Context) AwsKmsConnectorCredentialsManualPtrOutput
}

type awsKmsConnectorCredentialsManualPtrType AwsKmsConnectorCredentialsManualArgs

func AwsKmsConnectorCredentialsManualPtr(v *AwsKmsConnectorCredentialsManualArgs) AwsKmsConnectorCredentialsManualPtrInput {
	return (*awsKmsConnectorCredentialsManualPtrType)(v)
}

func (*awsKmsConnectorCredentialsManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnectorCredentialsManual)(nil)).Elem()
}

func (i *awsKmsConnectorCredentialsManualPtrType) ToAwsKmsConnectorCredentialsManualPtrOutput() AwsKmsConnectorCredentialsManualPtrOutput {
	return i.ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(context.Background())
}

func (i *awsKmsConnectorCredentialsManualPtrType) ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsKmsConnectorCredentialsManualPtrOutput)
}

type AwsKmsConnectorCredentialsManualOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorCredentialsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsKmsConnectorCredentialsManual)(nil)).Elem()
}

func (o AwsKmsConnectorCredentialsManualOutput) ToAwsKmsConnectorCredentialsManualOutput() AwsKmsConnectorCredentialsManualOutput {
	return o
}

func (o AwsKmsConnectorCredentialsManualOutput) ToAwsKmsConnectorCredentialsManualOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsManualOutput {
	return o
}

func (o AwsKmsConnectorCredentialsManualOutput) ToAwsKmsConnectorCredentialsManualPtrOutput() AwsKmsConnectorCredentialsManualPtrOutput {
	return o.ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(context.Background())
}

func (o AwsKmsConnectorCredentialsManualOutput) ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsKmsConnectorCredentialsManual) *AwsKmsConnectorCredentialsManual {
		return &v
	}).(AwsKmsConnectorCredentialsManualPtrOutput)
}

func (o AwsKmsConnectorCredentialsManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentialsManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o AwsKmsConnectorCredentialsManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsKmsConnectorCredentialsManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type AwsKmsConnectorCredentialsManualPtrOutput struct{ *pulumi.OutputState }

func (AwsKmsConnectorCredentialsManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsKmsConnectorCredentialsManual)(nil)).Elem()
}

func (o AwsKmsConnectorCredentialsManualPtrOutput) ToAwsKmsConnectorCredentialsManualPtrOutput() AwsKmsConnectorCredentialsManualPtrOutput {
	return o
}

func (o AwsKmsConnectorCredentialsManualPtrOutput) ToAwsKmsConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsKmsConnectorCredentialsManualPtrOutput {
	return o
}

func (o AwsKmsConnectorCredentialsManualPtrOutput) Elem() AwsKmsConnectorCredentialsManualOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsManual) AwsKmsConnectorCredentialsManual {
		if v != nil {
			return *v
		}
		var ret AwsKmsConnectorCredentialsManual
		return ret
	}).(AwsKmsConnectorCredentialsManualOutput)
}

func (o AwsKmsConnectorCredentialsManualPtrOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyRef
	}).(pulumi.StringPtrOutput)
}

func (o AwsKmsConnectorCredentialsManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsKmsConnectorCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type AwsSecretManagerConnectorCredentials struct {
	// Connect using STS assume role.
	AssumeRole *AwsSecretManagerConnectorCredentialsAssumeRole `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate *bool `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual *AwsSecretManagerConnectorCredentialsManual `pulumi:"manual"`
}

// AwsSecretManagerConnectorCredentialsInput is an input type that accepts AwsSecretManagerConnectorCredentialsArgs and AwsSecretManagerConnectorCredentialsOutput values.
// You can construct a concrete instance of `AwsSecretManagerConnectorCredentialsInput` via:
//
//	AwsSecretManagerConnectorCredentialsArgs{...}
type AwsSecretManagerConnectorCredentialsInput interface {
	pulumi.Input

	ToAwsSecretManagerConnectorCredentialsOutput() AwsSecretManagerConnectorCredentialsOutput
	ToAwsSecretManagerConnectorCredentialsOutputWithContext(context.Context) AwsSecretManagerConnectorCredentialsOutput
}

type AwsSecretManagerConnectorCredentialsArgs struct {
	// Connect using STS assume role.
	AssumeRole AwsSecretManagerConnectorCredentialsAssumeRolePtrInput `pulumi:"assumeRole"`
	// Inherit the credentials from from the delegate.
	InheritFromDelegate pulumi.BoolPtrInput `pulumi:"inheritFromDelegate"`
	// Specify the AWS key and secret used for authenticating.
	Manual AwsSecretManagerConnectorCredentialsManualPtrInput `pulumi:"manual"`
}

func (AwsSecretManagerConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerConnectorCredentials)(nil)).Elem()
}

func (i AwsSecretManagerConnectorCredentialsArgs) ToAwsSecretManagerConnectorCredentialsOutput() AwsSecretManagerConnectorCredentialsOutput {
	return i.ToAwsSecretManagerConnectorCredentialsOutputWithContext(context.Background())
}

func (i AwsSecretManagerConnectorCredentialsArgs) ToAwsSecretManagerConnectorCredentialsOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsOutput)
}

func (i AwsSecretManagerConnectorCredentialsArgs) ToAwsSecretManagerConnectorCredentialsPtrOutput() AwsSecretManagerConnectorCredentialsPtrOutput {
	return i.ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i AwsSecretManagerConnectorCredentialsArgs) ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsOutput).ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(ctx)
}

// AwsSecretManagerConnectorCredentialsPtrInput is an input type that accepts AwsSecretManagerConnectorCredentialsArgs, AwsSecretManagerConnectorCredentialsPtr and AwsSecretManagerConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `AwsSecretManagerConnectorCredentialsPtrInput` via:
//
//	        AwsSecretManagerConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type AwsSecretManagerConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToAwsSecretManagerConnectorCredentialsPtrOutput() AwsSecretManagerConnectorCredentialsPtrOutput
	ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(context.Context) AwsSecretManagerConnectorCredentialsPtrOutput
}

type awsSecretManagerConnectorCredentialsPtrType AwsSecretManagerConnectorCredentialsArgs

func AwsSecretManagerConnectorCredentialsPtr(v *AwsSecretManagerConnectorCredentialsArgs) AwsSecretManagerConnectorCredentialsPtrInput {
	return (*awsSecretManagerConnectorCredentialsPtrType)(v)
}

func (*awsSecretManagerConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerConnectorCredentials)(nil)).Elem()
}

func (i *awsSecretManagerConnectorCredentialsPtrType) ToAwsSecretManagerConnectorCredentialsPtrOutput() AwsSecretManagerConnectorCredentialsPtrOutput {
	return i.ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *awsSecretManagerConnectorCredentialsPtrType) ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsPtrOutput)
}

type AwsSecretManagerConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerConnectorCredentials)(nil)).Elem()
}

func (o AwsSecretManagerConnectorCredentialsOutput) ToAwsSecretManagerConnectorCredentialsOutput() AwsSecretManagerConnectorCredentialsOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsOutput) ToAwsSecretManagerConnectorCredentialsOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsOutput) ToAwsSecretManagerConnectorCredentialsPtrOutput() AwsSecretManagerConnectorCredentialsPtrOutput {
	return o.ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o AwsSecretManagerConnectorCredentialsOutput) ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsSecretManagerConnectorCredentials) *AwsSecretManagerConnectorCredentials {
		return &v
	}).(AwsSecretManagerConnectorCredentialsPtrOutput)
}

// Connect using STS assume role.
func (o AwsSecretManagerConnectorCredentialsOutput) AssumeRole() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentials) *AwsSecretManagerConnectorCredentialsAssumeRole {
		return v.AssumeRole
	}).(AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsSecretManagerConnectorCredentialsOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentials) *bool { return v.InheritFromDelegate }).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsSecretManagerConnectorCredentialsOutput) Manual() AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentials) *AwsSecretManagerConnectorCredentialsManual {
		return v.Manual
	}).(AwsSecretManagerConnectorCredentialsManualPtrOutput)
}

type AwsSecretManagerConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerConnectorCredentials)(nil)).Elem()
}

func (o AwsSecretManagerConnectorCredentialsPtrOutput) ToAwsSecretManagerConnectorCredentialsPtrOutput() AwsSecretManagerConnectorCredentialsPtrOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsPtrOutput) ToAwsSecretManagerConnectorCredentialsPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsPtrOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsPtrOutput) Elem() AwsSecretManagerConnectorCredentialsOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentials) AwsSecretManagerConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret AwsSecretManagerConnectorCredentials
		return ret
	}).(AwsSecretManagerConnectorCredentialsOutput)
}

// Connect using STS assume role.
func (o AwsSecretManagerConnectorCredentialsPtrOutput) AssumeRole() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentials) *AwsSecretManagerConnectorCredentialsAssumeRole {
		if v == nil {
			return nil
		}
		return v.AssumeRole
	}).(AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput)
}

// Inherit the credentials from from the delegate.
func (o AwsSecretManagerConnectorCredentialsPtrOutput) InheritFromDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentials) *bool {
		if v == nil {
			return nil
		}
		return v.InheritFromDelegate
	}).(pulumi.BoolPtrOutput)
}

// Specify the AWS key and secret used for authenticating.
func (o AwsSecretManagerConnectorCredentialsPtrOutput) Manual() AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentials) *AwsSecretManagerConnectorCredentialsManual {
		if v == nil {
			return nil
		}
		return v.Manual
	}).(AwsSecretManagerConnectorCredentialsManualPtrOutput)
}

type AwsSecretManagerConnectorCredentialsAssumeRole struct {
	Duration   int     `pulumi:"duration"`
	ExternalId *string `pulumi:"externalId"`
	RoleArn    string  `pulumi:"roleArn"`
}

// AwsSecretManagerConnectorCredentialsAssumeRoleInput is an input type that accepts AwsSecretManagerConnectorCredentialsAssumeRoleArgs and AwsSecretManagerConnectorCredentialsAssumeRoleOutput values.
// You can construct a concrete instance of `AwsSecretManagerConnectorCredentialsAssumeRoleInput` via:
//
//	AwsSecretManagerConnectorCredentialsAssumeRoleArgs{...}
type AwsSecretManagerConnectorCredentialsAssumeRoleInput interface {
	pulumi.Input

	ToAwsSecretManagerConnectorCredentialsAssumeRoleOutput() AwsSecretManagerConnectorCredentialsAssumeRoleOutput
	ToAwsSecretManagerConnectorCredentialsAssumeRoleOutputWithContext(context.Context) AwsSecretManagerConnectorCredentialsAssumeRoleOutput
}

type AwsSecretManagerConnectorCredentialsAssumeRoleArgs struct {
	Duration   pulumi.IntInput       `pulumi:"duration"`
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput    `pulumi:"roleArn"`
}

func (AwsSecretManagerConnectorCredentialsAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (i AwsSecretManagerConnectorCredentialsAssumeRoleArgs) ToAwsSecretManagerConnectorCredentialsAssumeRoleOutput() AwsSecretManagerConnectorCredentialsAssumeRoleOutput {
	return i.ToAwsSecretManagerConnectorCredentialsAssumeRoleOutputWithContext(context.Background())
}

func (i AwsSecretManagerConnectorCredentialsAssumeRoleArgs) ToAwsSecretManagerConnectorCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsAssumeRoleOutput)
}

func (i AwsSecretManagerConnectorCredentialsAssumeRoleArgs) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutput() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return i.ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i AwsSecretManagerConnectorCredentialsAssumeRoleArgs) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsAssumeRoleOutput).ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(ctx)
}

// AwsSecretManagerConnectorCredentialsAssumeRolePtrInput is an input type that accepts AwsSecretManagerConnectorCredentialsAssumeRoleArgs, AwsSecretManagerConnectorCredentialsAssumeRolePtr and AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput values.
// You can construct a concrete instance of `AwsSecretManagerConnectorCredentialsAssumeRolePtrInput` via:
//
//	        AwsSecretManagerConnectorCredentialsAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type AwsSecretManagerConnectorCredentialsAssumeRolePtrInput interface {
	pulumi.Input

	ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutput() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput
	ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(context.Context) AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput
}

type awsSecretManagerConnectorCredentialsAssumeRolePtrType AwsSecretManagerConnectorCredentialsAssumeRoleArgs

func AwsSecretManagerConnectorCredentialsAssumeRolePtr(v *AwsSecretManagerConnectorCredentialsAssumeRoleArgs) AwsSecretManagerConnectorCredentialsAssumeRolePtrInput {
	return (*awsSecretManagerConnectorCredentialsAssumeRolePtrType)(v)
}

func (*awsSecretManagerConnectorCredentialsAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (i *awsSecretManagerConnectorCredentialsAssumeRolePtrType) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutput() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return i.ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (i *awsSecretManagerConnectorCredentialsAssumeRolePtrType) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput)
}

type AwsSecretManagerConnectorCredentialsAssumeRoleOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerConnectorCredentialsAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) ToAwsSecretManagerConnectorCredentialsAssumeRoleOutput() AwsSecretManagerConnectorCredentialsAssumeRoleOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) ToAwsSecretManagerConnectorCredentialsAssumeRoleOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsAssumeRoleOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutput() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return o.ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(context.Background())
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsSecretManagerConnectorCredentialsAssumeRole) *AwsSecretManagerConnectorCredentialsAssumeRole {
		return &v
	}).(AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput)
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentialsAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentialsAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o AwsSecretManagerConnectorCredentialsAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentialsAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerConnectorCredentialsAssumeRole)(nil)).Elem()
}

func (o AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutput() AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) ToAwsSecretManagerConnectorCredentialsAssumeRolePtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) Elem() AwsSecretManagerConnectorCredentialsAssumeRoleOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsAssumeRole) AwsSecretManagerConnectorCredentialsAssumeRole {
		if v != nil {
			return *v
		}
		var ret AwsSecretManagerConnectorCredentialsAssumeRole
		return ret
	}).(AwsSecretManagerConnectorCredentialsAssumeRoleOutput)
}

func (o AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsAssumeRole) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type AwsSecretManagerConnectorCredentialsManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// AwsSecretManagerConnectorCredentialsManualInput is an input type that accepts AwsSecretManagerConnectorCredentialsManualArgs and AwsSecretManagerConnectorCredentialsManualOutput values.
// You can construct a concrete instance of `AwsSecretManagerConnectorCredentialsManualInput` via:
//
//	AwsSecretManagerConnectorCredentialsManualArgs{...}
type AwsSecretManagerConnectorCredentialsManualInput interface {
	pulumi.Input

	ToAwsSecretManagerConnectorCredentialsManualOutput() AwsSecretManagerConnectorCredentialsManualOutput
	ToAwsSecretManagerConnectorCredentialsManualOutputWithContext(context.Context) AwsSecretManagerConnectorCredentialsManualOutput
}

type AwsSecretManagerConnectorCredentialsManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (AwsSecretManagerConnectorCredentialsManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerConnectorCredentialsManual)(nil)).Elem()
}

func (i AwsSecretManagerConnectorCredentialsManualArgs) ToAwsSecretManagerConnectorCredentialsManualOutput() AwsSecretManagerConnectorCredentialsManualOutput {
	return i.ToAwsSecretManagerConnectorCredentialsManualOutputWithContext(context.Background())
}

func (i AwsSecretManagerConnectorCredentialsManualArgs) ToAwsSecretManagerConnectorCredentialsManualOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsManualOutput)
}

func (i AwsSecretManagerConnectorCredentialsManualArgs) ToAwsSecretManagerConnectorCredentialsManualPtrOutput() AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return i.ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(context.Background())
}

func (i AwsSecretManagerConnectorCredentialsManualArgs) ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsManualOutput).ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(ctx)
}

// AwsSecretManagerConnectorCredentialsManualPtrInput is an input type that accepts AwsSecretManagerConnectorCredentialsManualArgs, AwsSecretManagerConnectorCredentialsManualPtr and AwsSecretManagerConnectorCredentialsManualPtrOutput values.
// You can construct a concrete instance of `AwsSecretManagerConnectorCredentialsManualPtrInput` via:
//
//	        AwsSecretManagerConnectorCredentialsManualArgs{...}
//
//	or:
//
//	        nil
type AwsSecretManagerConnectorCredentialsManualPtrInput interface {
	pulumi.Input

	ToAwsSecretManagerConnectorCredentialsManualPtrOutput() AwsSecretManagerConnectorCredentialsManualPtrOutput
	ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(context.Context) AwsSecretManagerConnectorCredentialsManualPtrOutput
}

type awsSecretManagerConnectorCredentialsManualPtrType AwsSecretManagerConnectorCredentialsManualArgs

func AwsSecretManagerConnectorCredentialsManualPtr(v *AwsSecretManagerConnectorCredentialsManualArgs) AwsSecretManagerConnectorCredentialsManualPtrInput {
	return (*awsSecretManagerConnectorCredentialsManualPtrType)(v)
}

func (*awsSecretManagerConnectorCredentialsManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerConnectorCredentialsManual)(nil)).Elem()
}

func (i *awsSecretManagerConnectorCredentialsManualPtrType) ToAwsSecretManagerConnectorCredentialsManualPtrOutput() AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return i.ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(context.Background())
}

func (i *awsSecretManagerConnectorCredentialsManualPtrType) ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsSecretManagerConnectorCredentialsManualPtrOutput)
}

type AwsSecretManagerConnectorCredentialsManualOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerConnectorCredentialsManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsSecretManagerConnectorCredentialsManual)(nil)).Elem()
}

func (o AwsSecretManagerConnectorCredentialsManualOutput) ToAwsSecretManagerConnectorCredentialsManualOutput() AwsSecretManagerConnectorCredentialsManualOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsManualOutput) ToAwsSecretManagerConnectorCredentialsManualOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsManualOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsManualOutput) ToAwsSecretManagerConnectorCredentialsManualPtrOutput() AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return o.ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(context.Background())
}

func (o AwsSecretManagerConnectorCredentialsManualOutput) ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsSecretManagerConnectorCredentialsManual) *AwsSecretManagerConnectorCredentialsManual {
		return &v
	}).(AwsSecretManagerConnectorCredentialsManualPtrOutput)
}

func (o AwsSecretManagerConnectorCredentialsManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentialsManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o AwsSecretManagerConnectorCredentialsManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v AwsSecretManagerConnectorCredentialsManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type AwsSecretManagerConnectorCredentialsManualPtrOutput struct{ *pulumi.OutputState }

func (AwsSecretManagerConnectorCredentialsManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsSecretManagerConnectorCredentialsManual)(nil)).Elem()
}

func (o AwsSecretManagerConnectorCredentialsManualPtrOutput) ToAwsSecretManagerConnectorCredentialsManualPtrOutput() AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsManualPtrOutput) ToAwsSecretManagerConnectorCredentialsManualPtrOutputWithContext(ctx context.Context) AwsSecretManagerConnectorCredentialsManualPtrOutput {
	return o
}

func (o AwsSecretManagerConnectorCredentialsManualPtrOutput) Elem() AwsSecretManagerConnectorCredentialsManualOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsManual) AwsSecretManagerConnectorCredentialsManual {
		if v != nil {
			return *v
		}
		var ret AwsSecretManagerConnectorCredentialsManual
		return ret
	}).(AwsSecretManagerConnectorCredentialsManualOutput)
}

func (o AwsSecretManagerConnectorCredentialsManualPtrOutput) AccessKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.AccessKeyRef
	}).(pulumi.StringPtrOutput)
}

func (o AwsSecretManagerConnectorCredentialsManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsSecretManagerConnectorCredentialsManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type BitbucketConnectorApiAuthentication struct {
	// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
	// The username used for connecting to the api.
	Username *string `pulumi:"username"`
	// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// BitbucketConnectorApiAuthenticationInput is an input type that accepts BitbucketConnectorApiAuthenticationArgs and BitbucketConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `BitbucketConnectorApiAuthenticationInput` via:
//
//	BitbucketConnectorApiAuthenticationArgs{...}
type BitbucketConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToBitbucketConnectorApiAuthenticationOutput() BitbucketConnectorApiAuthenticationOutput
	ToBitbucketConnectorApiAuthenticationOutputWithContext(context.Context) BitbucketConnectorApiAuthenticationOutput
}

type BitbucketConnectorApiAuthenticationArgs struct {
	// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
	// The username used for connecting to the api.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (BitbucketConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (i BitbucketConnectorApiAuthenticationArgs) ToBitbucketConnectorApiAuthenticationOutput() BitbucketConnectorApiAuthenticationOutput {
	return i.ToBitbucketConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i BitbucketConnectorApiAuthenticationArgs) ToBitbucketConnectorApiAuthenticationOutputWithContext(ctx context.Context) BitbucketConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorApiAuthenticationOutput)
}

func (i BitbucketConnectorApiAuthenticationArgs) ToBitbucketConnectorApiAuthenticationPtrOutput() BitbucketConnectorApiAuthenticationPtrOutput {
	return i.ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i BitbucketConnectorApiAuthenticationArgs) ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketConnectorApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorApiAuthenticationOutput).ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(ctx)
}

// BitbucketConnectorApiAuthenticationPtrInput is an input type that accepts BitbucketConnectorApiAuthenticationArgs, BitbucketConnectorApiAuthenticationPtr and BitbucketConnectorApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `BitbucketConnectorApiAuthenticationPtrInput` via:
//
//	        BitbucketConnectorApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type BitbucketConnectorApiAuthenticationPtrInput interface {
	pulumi.Input

	ToBitbucketConnectorApiAuthenticationPtrOutput() BitbucketConnectorApiAuthenticationPtrOutput
	ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(context.Context) BitbucketConnectorApiAuthenticationPtrOutput
}

type bitbucketConnectorApiAuthenticationPtrType BitbucketConnectorApiAuthenticationArgs

func BitbucketConnectorApiAuthenticationPtr(v *BitbucketConnectorApiAuthenticationArgs) BitbucketConnectorApiAuthenticationPtrInput {
	return (*bitbucketConnectorApiAuthenticationPtrType)(v)
}

func (*bitbucketConnectorApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (i *bitbucketConnectorApiAuthenticationPtrType) ToBitbucketConnectorApiAuthenticationPtrOutput() BitbucketConnectorApiAuthenticationPtrOutput {
	return i.ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *bitbucketConnectorApiAuthenticationPtrType) ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketConnectorApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorApiAuthenticationPtrOutput)
}

type BitbucketConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (o BitbucketConnectorApiAuthenticationOutput) ToBitbucketConnectorApiAuthenticationOutput() BitbucketConnectorApiAuthenticationOutput {
	return o
}

func (o BitbucketConnectorApiAuthenticationOutput) ToBitbucketConnectorApiAuthenticationOutputWithContext(ctx context.Context) BitbucketConnectorApiAuthenticationOutput {
	return o
}

func (o BitbucketConnectorApiAuthenticationOutput) ToBitbucketConnectorApiAuthenticationPtrOutput() BitbucketConnectorApiAuthenticationPtrOutput {
	return o.ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o BitbucketConnectorApiAuthenticationOutput) ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketConnectorApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketConnectorApiAuthentication) *BitbucketConnectorApiAuthentication {
		return &v
	}).(BitbucketConnectorApiAuthenticationPtrOutput)
}

// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o BitbucketConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v BitbucketConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

// The username used for connecting to the api.
func (o BitbucketConnectorApiAuthenticationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorApiAuthentication) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o BitbucketConnectorApiAuthenticationOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorApiAuthentication) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type BitbucketConnectorApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (o BitbucketConnectorApiAuthenticationPtrOutput) ToBitbucketConnectorApiAuthenticationPtrOutput() BitbucketConnectorApiAuthenticationPtrOutput {
	return o
}

func (o BitbucketConnectorApiAuthenticationPtrOutput) ToBitbucketConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) BitbucketConnectorApiAuthenticationPtrOutput {
	return o
}

func (o BitbucketConnectorApiAuthenticationPtrOutput) Elem() BitbucketConnectorApiAuthenticationOutput {
	return o.ApplyT(func(v *BitbucketConnectorApiAuthentication) BitbucketConnectorApiAuthentication {
		if v != nil {
			return *v
		}
		var ret BitbucketConnectorApiAuthentication
		return ret
	}).(BitbucketConnectorApiAuthenticationOutput)
}

// Personal access token for interacting with the BitBucket api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o BitbucketConnectorApiAuthenticationPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

// The username used for connecting to the api.
func (o BitbucketConnectorApiAuthenticationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The name of the Harness secret containing the username. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o BitbucketConnectorApiAuthenticationPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type BitbucketConnectorCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *BitbucketConnectorCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *BitbucketConnectorCredentialsSsh `pulumi:"ssh"`
}

// BitbucketConnectorCredentialsInput is an input type that accepts BitbucketConnectorCredentialsArgs and BitbucketConnectorCredentialsOutput values.
// You can construct a concrete instance of `BitbucketConnectorCredentialsInput` via:
//
//	BitbucketConnectorCredentialsArgs{...}
type BitbucketConnectorCredentialsInput interface {
	pulumi.Input

	ToBitbucketConnectorCredentialsOutput() BitbucketConnectorCredentialsOutput
	ToBitbucketConnectorCredentialsOutputWithContext(context.Context) BitbucketConnectorCredentialsOutput
}

type BitbucketConnectorCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http BitbucketConnectorCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh BitbucketConnectorCredentialsSshPtrInput `pulumi:"ssh"`
}

func (BitbucketConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorCredentials)(nil)).Elem()
}

func (i BitbucketConnectorCredentialsArgs) ToBitbucketConnectorCredentialsOutput() BitbucketConnectorCredentialsOutput {
	return i.ToBitbucketConnectorCredentialsOutputWithContext(context.Background())
}

func (i BitbucketConnectorCredentialsArgs) ToBitbucketConnectorCredentialsOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsOutput)
}

func (i BitbucketConnectorCredentialsArgs) ToBitbucketConnectorCredentialsPtrOutput() BitbucketConnectorCredentialsPtrOutput {
	return i.ToBitbucketConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i BitbucketConnectorCredentialsArgs) ToBitbucketConnectorCredentialsPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsOutput).ToBitbucketConnectorCredentialsPtrOutputWithContext(ctx)
}

// BitbucketConnectorCredentialsPtrInput is an input type that accepts BitbucketConnectorCredentialsArgs, BitbucketConnectorCredentialsPtr and BitbucketConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `BitbucketConnectorCredentialsPtrInput` via:
//
//	        BitbucketConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type BitbucketConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToBitbucketConnectorCredentialsPtrOutput() BitbucketConnectorCredentialsPtrOutput
	ToBitbucketConnectorCredentialsPtrOutputWithContext(context.Context) BitbucketConnectorCredentialsPtrOutput
}

type bitbucketConnectorCredentialsPtrType BitbucketConnectorCredentialsArgs

func BitbucketConnectorCredentialsPtr(v *BitbucketConnectorCredentialsArgs) BitbucketConnectorCredentialsPtrInput {
	return (*bitbucketConnectorCredentialsPtrType)(v)
}

func (*bitbucketConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorCredentials)(nil)).Elem()
}

func (i *bitbucketConnectorCredentialsPtrType) ToBitbucketConnectorCredentialsPtrOutput() BitbucketConnectorCredentialsPtrOutput {
	return i.ToBitbucketConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *bitbucketConnectorCredentialsPtrType) ToBitbucketConnectorCredentialsPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsPtrOutput)
}

type BitbucketConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorCredentials)(nil)).Elem()
}

func (o BitbucketConnectorCredentialsOutput) ToBitbucketConnectorCredentialsOutput() BitbucketConnectorCredentialsOutput {
	return o
}

func (o BitbucketConnectorCredentialsOutput) ToBitbucketConnectorCredentialsOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsOutput {
	return o
}

func (o BitbucketConnectorCredentialsOutput) ToBitbucketConnectorCredentialsPtrOutput() BitbucketConnectorCredentialsPtrOutput {
	return o.ToBitbucketConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o BitbucketConnectorCredentialsOutput) ToBitbucketConnectorCredentialsPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketConnectorCredentials) *BitbucketConnectorCredentials {
		return &v
	}).(BitbucketConnectorCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o BitbucketConnectorCredentialsOutput) Http() BitbucketConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorCredentials) *BitbucketConnectorCredentialsHttp { return v.Http }).(BitbucketConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o BitbucketConnectorCredentialsOutput) Ssh() BitbucketConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorCredentials) *BitbucketConnectorCredentialsSsh { return v.Ssh }).(BitbucketConnectorCredentialsSshPtrOutput)
}

type BitbucketConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorCredentials)(nil)).Elem()
}

func (o BitbucketConnectorCredentialsPtrOutput) ToBitbucketConnectorCredentialsPtrOutput() BitbucketConnectorCredentialsPtrOutput {
	return o
}

func (o BitbucketConnectorCredentialsPtrOutput) ToBitbucketConnectorCredentialsPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsPtrOutput {
	return o
}

func (o BitbucketConnectorCredentialsPtrOutput) Elem() BitbucketConnectorCredentialsOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentials) BitbucketConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret BitbucketConnectorCredentials
		return ret
	}).(BitbucketConnectorCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o BitbucketConnectorCredentialsPtrOutput) Http() BitbucketConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentials) *BitbucketConnectorCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(BitbucketConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o BitbucketConnectorCredentialsPtrOutput) Ssh() BitbucketConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentials) *BitbucketConnectorCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(BitbucketConnectorCredentialsSshPtrOutput)
}

type BitbucketConnectorCredentialsHttp struct {
	PasswordRef *string `pulumi:"passwordRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// BitbucketConnectorCredentialsHttpInput is an input type that accepts BitbucketConnectorCredentialsHttpArgs and BitbucketConnectorCredentialsHttpOutput values.
// You can construct a concrete instance of `BitbucketConnectorCredentialsHttpInput` via:
//
//	BitbucketConnectorCredentialsHttpArgs{...}
type BitbucketConnectorCredentialsHttpInput interface {
	pulumi.Input

	ToBitbucketConnectorCredentialsHttpOutput() BitbucketConnectorCredentialsHttpOutput
	ToBitbucketConnectorCredentialsHttpOutputWithContext(context.Context) BitbucketConnectorCredentialsHttpOutput
}

type BitbucketConnectorCredentialsHttpArgs struct {
	PasswordRef pulumi.StringPtrInput `pulumi:"passwordRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (BitbucketConnectorCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorCredentialsHttp)(nil)).Elem()
}

func (i BitbucketConnectorCredentialsHttpArgs) ToBitbucketConnectorCredentialsHttpOutput() BitbucketConnectorCredentialsHttpOutput {
	return i.ToBitbucketConnectorCredentialsHttpOutputWithContext(context.Background())
}

func (i BitbucketConnectorCredentialsHttpArgs) ToBitbucketConnectorCredentialsHttpOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsHttpOutput)
}

func (i BitbucketConnectorCredentialsHttpArgs) ToBitbucketConnectorCredentialsHttpPtrOutput() BitbucketConnectorCredentialsHttpPtrOutput {
	return i.ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i BitbucketConnectorCredentialsHttpArgs) ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsHttpOutput).ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(ctx)
}

// BitbucketConnectorCredentialsHttpPtrInput is an input type that accepts BitbucketConnectorCredentialsHttpArgs, BitbucketConnectorCredentialsHttpPtr and BitbucketConnectorCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `BitbucketConnectorCredentialsHttpPtrInput` via:
//
//	        BitbucketConnectorCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type BitbucketConnectorCredentialsHttpPtrInput interface {
	pulumi.Input

	ToBitbucketConnectorCredentialsHttpPtrOutput() BitbucketConnectorCredentialsHttpPtrOutput
	ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(context.Context) BitbucketConnectorCredentialsHttpPtrOutput
}

type bitbucketConnectorCredentialsHttpPtrType BitbucketConnectorCredentialsHttpArgs

func BitbucketConnectorCredentialsHttpPtr(v *BitbucketConnectorCredentialsHttpArgs) BitbucketConnectorCredentialsHttpPtrInput {
	return (*bitbucketConnectorCredentialsHttpPtrType)(v)
}

func (*bitbucketConnectorCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorCredentialsHttp)(nil)).Elem()
}

func (i *bitbucketConnectorCredentialsHttpPtrType) ToBitbucketConnectorCredentialsHttpPtrOutput() BitbucketConnectorCredentialsHttpPtrOutput {
	return i.ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *bitbucketConnectorCredentialsHttpPtrType) ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsHttpPtrOutput)
}

type BitbucketConnectorCredentialsHttpOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorCredentialsHttp)(nil)).Elem()
}

func (o BitbucketConnectorCredentialsHttpOutput) ToBitbucketConnectorCredentialsHttpOutput() BitbucketConnectorCredentialsHttpOutput {
	return o
}

func (o BitbucketConnectorCredentialsHttpOutput) ToBitbucketConnectorCredentialsHttpOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsHttpOutput {
	return o
}

func (o BitbucketConnectorCredentialsHttpOutput) ToBitbucketConnectorCredentialsHttpPtrOutput() BitbucketConnectorCredentialsHttpPtrOutput {
	return o.ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o BitbucketConnectorCredentialsHttpOutput) ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketConnectorCredentialsHttp) *BitbucketConnectorCredentialsHttp {
		return &v
	}).(BitbucketConnectorCredentialsHttpPtrOutput)
}

func (o BitbucketConnectorCredentialsHttpOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorCredentialsHttp) *string { return v.PasswordRef }).(pulumi.StringPtrOutput)
}

func (o BitbucketConnectorCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o BitbucketConnectorCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BitbucketConnectorCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type BitbucketConnectorCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorCredentialsHttp)(nil)).Elem()
}

func (o BitbucketConnectorCredentialsHttpPtrOutput) ToBitbucketConnectorCredentialsHttpPtrOutput() BitbucketConnectorCredentialsHttpPtrOutput {
	return o
}

func (o BitbucketConnectorCredentialsHttpPtrOutput) ToBitbucketConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsHttpPtrOutput {
	return o
}

func (o BitbucketConnectorCredentialsHttpPtrOutput) Elem() BitbucketConnectorCredentialsHttpOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentialsHttp) BitbucketConnectorCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret BitbucketConnectorCredentialsHttp
		return ret
	}).(BitbucketConnectorCredentialsHttpOutput)
}

func (o BitbucketConnectorCredentialsHttpPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o BitbucketConnectorCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o BitbucketConnectorCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type BitbucketConnectorCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// BitbucketConnectorCredentialsSshInput is an input type that accepts BitbucketConnectorCredentialsSshArgs and BitbucketConnectorCredentialsSshOutput values.
// You can construct a concrete instance of `BitbucketConnectorCredentialsSshInput` via:
//
//	BitbucketConnectorCredentialsSshArgs{...}
type BitbucketConnectorCredentialsSshInput interface {
	pulumi.Input

	ToBitbucketConnectorCredentialsSshOutput() BitbucketConnectorCredentialsSshOutput
	ToBitbucketConnectorCredentialsSshOutputWithContext(context.Context) BitbucketConnectorCredentialsSshOutput
}

type BitbucketConnectorCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (BitbucketConnectorCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorCredentialsSsh)(nil)).Elem()
}

func (i BitbucketConnectorCredentialsSshArgs) ToBitbucketConnectorCredentialsSshOutput() BitbucketConnectorCredentialsSshOutput {
	return i.ToBitbucketConnectorCredentialsSshOutputWithContext(context.Background())
}

func (i BitbucketConnectorCredentialsSshArgs) ToBitbucketConnectorCredentialsSshOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsSshOutput)
}

func (i BitbucketConnectorCredentialsSshArgs) ToBitbucketConnectorCredentialsSshPtrOutput() BitbucketConnectorCredentialsSshPtrOutput {
	return i.ToBitbucketConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i BitbucketConnectorCredentialsSshArgs) ToBitbucketConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsSshOutput).ToBitbucketConnectorCredentialsSshPtrOutputWithContext(ctx)
}

// BitbucketConnectorCredentialsSshPtrInput is an input type that accepts BitbucketConnectorCredentialsSshArgs, BitbucketConnectorCredentialsSshPtr and BitbucketConnectorCredentialsSshPtrOutput values.
// You can construct a concrete instance of `BitbucketConnectorCredentialsSshPtrInput` via:
//
//	        BitbucketConnectorCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type BitbucketConnectorCredentialsSshPtrInput interface {
	pulumi.Input

	ToBitbucketConnectorCredentialsSshPtrOutput() BitbucketConnectorCredentialsSshPtrOutput
	ToBitbucketConnectorCredentialsSshPtrOutputWithContext(context.Context) BitbucketConnectorCredentialsSshPtrOutput
}

type bitbucketConnectorCredentialsSshPtrType BitbucketConnectorCredentialsSshArgs

func BitbucketConnectorCredentialsSshPtr(v *BitbucketConnectorCredentialsSshArgs) BitbucketConnectorCredentialsSshPtrInput {
	return (*bitbucketConnectorCredentialsSshPtrType)(v)
}

func (*bitbucketConnectorCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorCredentialsSsh)(nil)).Elem()
}

func (i *bitbucketConnectorCredentialsSshPtrType) ToBitbucketConnectorCredentialsSshPtrOutput() BitbucketConnectorCredentialsSshPtrOutput {
	return i.ToBitbucketConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *bitbucketConnectorCredentialsSshPtrType) ToBitbucketConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BitbucketConnectorCredentialsSshPtrOutput)
}

type BitbucketConnectorCredentialsSshOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BitbucketConnectorCredentialsSsh)(nil)).Elem()
}

func (o BitbucketConnectorCredentialsSshOutput) ToBitbucketConnectorCredentialsSshOutput() BitbucketConnectorCredentialsSshOutput {
	return o
}

func (o BitbucketConnectorCredentialsSshOutput) ToBitbucketConnectorCredentialsSshOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsSshOutput {
	return o
}

func (o BitbucketConnectorCredentialsSshOutput) ToBitbucketConnectorCredentialsSshPtrOutput() BitbucketConnectorCredentialsSshPtrOutput {
	return o.ToBitbucketConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (o BitbucketConnectorCredentialsSshOutput) ToBitbucketConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BitbucketConnectorCredentialsSsh) *BitbucketConnectorCredentialsSsh {
		return &v
	}).(BitbucketConnectorCredentialsSshPtrOutput)
}

func (o BitbucketConnectorCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v BitbucketConnectorCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type BitbucketConnectorCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (BitbucketConnectorCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BitbucketConnectorCredentialsSsh)(nil)).Elem()
}

func (o BitbucketConnectorCredentialsSshPtrOutput) ToBitbucketConnectorCredentialsSshPtrOutput() BitbucketConnectorCredentialsSshPtrOutput {
	return o
}

func (o BitbucketConnectorCredentialsSshPtrOutput) ToBitbucketConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) BitbucketConnectorCredentialsSshPtrOutput {
	return o
}

func (o BitbucketConnectorCredentialsSshPtrOutput) Elem() BitbucketConnectorCredentialsSshOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentialsSsh) BitbucketConnectorCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret BitbucketConnectorCredentialsSsh
		return ret
	}).(BitbucketConnectorCredentialsSshOutput)
}

func (o BitbucketConnectorCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BitbucketConnectorCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type CcmFiltersFilterProperties struct {
	// Type of CCM filters.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// CcmFiltersFilterPropertiesInput is an input type that accepts CcmFiltersFilterPropertiesArgs and CcmFiltersFilterPropertiesOutput values.
// You can construct a concrete instance of `CcmFiltersFilterPropertiesInput` via:
//
//	CcmFiltersFilterPropertiesArgs{...}
type CcmFiltersFilterPropertiesInput interface {
	pulumi.Input

	ToCcmFiltersFilterPropertiesOutput() CcmFiltersFilterPropertiesOutput
	ToCcmFiltersFilterPropertiesOutputWithContext(context.Context) CcmFiltersFilterPropertiesOutput
}

type CcmFiltersFilterPropertiesArgs struct {
	// Type of CCM filters.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (CcmFiltersFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CcmFiltersFilterProperties)(nil)).Elem()
}

func (i CcmFiltersFilterPropertiesArgs) ToCcmFiltersFilterPropertiesOutput() CcmFiltersFilterPropertiesOutput {
	return i.ToCcmFiltersFilterPropertiesOutputWithContext(context.Background())
}

func (i CcmFiltersFilterPropertiesArgs) ToCcmFiltersFilterPropertiesOutputWithContext(ctx context.Context) CcmFiltersFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcmFiltersFilterPropertiesOutput)
}

func (i CcmFiltersFilterPropertiesArgs) ToCcmFiltersFilterPropertiesPtrOutput() CcmFiltersFilterPropertiesPtrOutput {
	return i.ToCcmFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i CcmFiltersFilterPropertiesArgs) ToCcmFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) CcmFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcmFiltersFilterPropertiesOutput).ToCcmFiltersFilterPropertiesPtrOutputWithContext(ctx)
}

// CcmFiltersFilterPropertiesPtrInput is an input type that accepts CcmFiltersFilterPropertiesArgs, CcmFiltersFilterPropertiesPtr and CcmFiltersFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `CcmFiltersFilterPropertiesPtrInput` via:
//
//	        CcmFiltersFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type CcmFiltersFilterPropertiesPtrInput interface {
	pulumi.Input

	ToCcmFiltersFilterPropertiesPtrOutput() CcmFiltersFilterPropertiesPtrOutput
	ToCcmFiltersFilterPropertiesPtrOutputWithContext(context.Context) CcmFiltersFilterPropertiesPtrOutput
}

type ccmFiltersFilterPropertiesPtrType CcmFiltersFilterPropertiesArgs

func CcmFiltersFilterPropertiesPtr(v *CcmFiltersFilterPropertiesArgs) CcmFiltersFilterPropertiesPtrInput {
	return (*ccmFiltersFilterPropertiesPtrType)(v)
}

func (*ccmFiltersFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CcmFiltersFilterProperties)(nil)).Elem()
}

func (i *ccmFiltersFilterPropertiesPtrType) ToCcmFiltersFilterPropertiesPtrOutput() CcmFiltersFilterPropertiesPtrOutput {
	return i.ToCcmFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *ccmFiltersFilterPropertiesPtrType) ToCcmFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) CcmFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CcmFiltersFilterPropertiesPtrOutput)
}

type CcmFiltersFilterPropertiesOutput struct{ *pulumi.OutputState }

func (CcmFiltersFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CcmFiltersFilterProperties)(nil)).Elem()
}

func (o CcmFiltersFilterPropertiesOutput) ToCcmFiltersFilterPropertiesOutput() CcmFiltersFilterPropertiesOutput {
	return o
}

func (o CcmFiltersFilterPropertiesOutput) ToCcmFiltersFilterPropertiesOutputWithContext(ctx context.Context) CcmFiltersFilterPropertiesOutput {
	return o
}

func (o CcmFiltersFilterPropertiesOutput) ToCcmFiltersFilterPropertiesPtrOutput() CcmFiltersFilterPropertiesPtrOutput {
	return o.ToCcmFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o CcmFiltersFilterPropertiesOutput) ToCcmFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) CcmFiltersFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CcmFiltersFilterProperties) *CcmFiltersFilterProperties {
		return &v
	}).(CcmFiltersFilterPropertiesPtrOutput)
}

// Type of CCM filters.
func (o CcmFiltersFilterPropertiesOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v CcmFiltersFilterProperties) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o CcmFiltersFilterPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CcmFiltersFilterProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type CcmFiltersFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CcmFiltersFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CcmFiltersFilterProperties)(nil)).Elem()
}

func (o CcmFiltersFilterPropertiesPtrOutput) ToCcmFiltersFilterPropertiesPtrOutput() CcmFiltersFilterPropertiesPtrOutput {
	return o
}

func (o CcmFiltersFilterPropertiesPtrOutput) ToCcmFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) CcmFiltersFilterPropertiesPtrOutput {
	return o
}

func (o CcmFiltersFilterPropertiesPtrOutput) Elem() CcmFiltersFilterPropertiesOutput {
	return o.ApplyT(func(v *CcmFiltersFilterProperties) CcmFiltersFilterProperties {
		if v != nil {
			return *v
		}
		var ret CcmFiltersFilterProperties
		return ret
	}).(CcmFiltersFilterPropertiesOutput)
}

// Type of CCM filters.
func (o CcmFiltersFilterPropertiesPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CcmFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o CcmFiltersFilterPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CcmFiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type ConnectorAzureCloudCostBillingExportSpec struct {
	// Name of the container.
	ContainerName string `pulumi:"containerName"`
	// Name of the directory.
	DirectoryName string `pulumi:"directoryName"`
	// Name of the report.
	ReportName string `pulumi:"reportName"`
	// Name of the storage account.
	StorageAccountName string `pulumi:"storageAccountName"`
	// Subsription Id.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// ConnectorAzureCloudCostBillingExportSpecInput is an input type that accepts ConnectorAzureCloudCostBillingExportSpecArgs and ConnectorAzureCloudCostBillingExportSpecOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudCostBillingExportSpecInput` via:
//
//	ConnectorAzureCloudCostBillingExportSpecArgs{...}
type ConnectorAzureCloudCostBillingExportSpecInput interface {
	pulumi.Input

	ToConnectorAzureCloudCostBillingExportSpecOutput() ConnectorAzureCloudCostBillingExportSpecOutput
	ToConnectorAzureCloudCostBillingExportSpecOutputWithContext(context.Context) ConnectorAzureCloudCostBillingExportSpecOutput
}

type ConnectorAzureCloudCostBillingExportSpecArgs struct {
	// Name of the container.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// Name of the directory.
	DirectoryName pulumi.StringInput `pulumi:"directoryName"`
	// Name of the report.
	ReportName pulumi.StringInput `pulumi:"reportName"`
	// Name of the storage account.
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
	// Subsription Id.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (ConnectorAzureCloudCostBillingExportSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (i ConnectorAzureCloudCostBillingExportSpecArgs) ToConnectorAzureCloudCostBillingExportSpecOutput() ConnectorAzureCloudCostBillingExportSpecOutput {
	return i.ToConnectorAzureCloudCostBillingExportSpecOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudCostBillingExportSpecArgs) ToConnectorAzureCloudCostBillingExportSpecOutputWithContext(ctx context.Context) ConnectorAzureCloudCostBillingExportSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudCostBillingExportSpecOutput)
}

func (i ConnectorAzureCloudCostBillingExportSpecArgs) ToConnectorAzureCloudCostBillingExportSpecPtrOutput() ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return i.ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudCostBillingExportSpecArgs) ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudCostBillingExportSpecOutput).ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudCostBillingExportSpecPtrInput is an input type that accepts ConnectorAzureCloudCostBillingExportSpecArgs, ConnectorAzureCloudCostBillingExportSpecPtr and ConnectorAzureCloudCostBillingExportSpecPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudCostBillingExportSpecPtrInput` via:
//
//	        ConnectorAzureCloudCostBillingExportSpecArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudCostBillingExportSpecPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudCostBillingExportSpecPtrOutput() ConnectorAzureCloudCostBillingExportSpecPtrOutput
	ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(context.Context) ConnectorAzureCloudCostBillingExportSpecPtrOutput
}

type connectorAzureCloudCostBillingExportSpecPtrType ConnectorAzureCloudCostBillingExportSpecArgs

func ConnectorAzureCloudCostBillingExportSpecPtr(v *ConnectorAzureCloudCostBillingExportSpecArgs) ConnectorAzureCloudCostBillingExportSpecPtrInput {
	return (*connectorAzureCloudCostBillingExportSpecPtrType)(v)
}

func (*connectorAzureCloudCostBillingExportSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (i *connectorAzureCloudCostBillingExportSpecPtrType) ToConnectorAzureCloudCostBillingExportSpecPtrOutput() ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return i.ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudCostBillingExportSpecPtrType) ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudCostBillingExportSpecPtrOutput)
}

type ConnectorAzureCloudCostBillingExportSpecOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudCostBillingExportSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (o ConnectorAzureCloudCostBillingExportSpecOutput) ToConnectorAzureCloudCostBillingExportSpecOutput() ConnectorAzureCloudCostBillingExportSpecOutput {
	return o
}

func (o ConnectorAzureCloudCostBillingExportSpecOutput) ToConnectorAzureCloudCostBillingExportSpecOutputWithContext(ctx context.Context) ConnectorAzureCloudCostBillingExportSpecOutput {
	return o
}

func (o ConnectorAzureCloudCostBillingExportSpecOutput) ToConnectorAzureCloudCostBillingExportSpecPtrOutput() ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return o.ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudCostBillingExportSpecOutput) ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudCostBillingExportSpec) *ConnectorAzureCloudCostBillingExportSpec {
		return &v
	}).(ConnectorAzureCloudCostBillingExportSpecPtrOutput)
}

// Name of the container.
func (o ConnectorAzureCloudCostBillingExportSpecOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudCostBillingExportSpec) string { return v.ContainerName }).(pulumi.StringOutput)
}

// Name of the directory.
func (o ConnectorAzureCloudCostBillingExportSpecOutput) DirectoryName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudCostBillingExportSpec) string { return v.DirectoryName }).(pulumi.StringOutput)
}

// Name of the report.
func (o ConnectorAzureCloudCostBillingExportSpecOutput) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudCostBillingExportSpec) string { return v.ReportName }).(pulumi.StringOutput)
}

// Name of the storage account.
func (o ConnectorAzureCloudCostBillingExportSpecOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudCostBillingExportSpec) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Subsription Id.
func (o ConnectorAzureCloudCostBillingExportSpecOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudCostBillingExportSpec) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

type ConnectorAzureCloudCostBillingExportSpecPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudCostBillingExportSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) ToConnectorAzureCloudCostBillingExportSpecPtrOutput() ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return o
}

func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) ToConnectorAzureCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return o
}

func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) Elem() ConnectorAzureCloudCostBillingExportSpecOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCostBillingExportSpec) ConnectorAzureCloudCostBillingExportSpec {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudCostBillingExportSpec
		return ret
	}).(ConnectorAzureCloudCostBillingExportSpecOutput)
}

// Name of the container.
func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Name of the directory.
func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) DirectoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.DirectoryName
	}).(pulumi.StringPtrOutput)
}

// Name of the report.
func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) ReportName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ReportName
	}).(pulumi.StringPtrOutput)
}

// Name of the storage account.
func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) StorageAccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.StorageAccountName
	}).(pulumi.StringPtrOutput)
}

// Subsription Id.
func (o ConnectorAzureCloudCostBillingExportSpecPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentials struct {
	// Authenticate to Azure Cloud Provider using details inheriting from delegate.
	AzureInheritFromDelegateDetails *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails `pulumi:"azureInheritFromDelegateDetails"`
	// Authenticate to Azure Cloud Provider using manual details.
	AzureManualDetails *ConnectorAzureCloudProviderCredentialsAzureManualDetails `pulumi:"azureManualDetails"`
	// Type can either be InheritFromDelegate or ManualConfig.
	Type string `pulumi:"type"`
}

// ConnectorAzureCloudProviderCredentialsInput is an input type that accepts ConnectorAzureCloudProviderCredentialsArgs and ConnectorAzureCloudProviderCredentialsOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsInput` via:
//
//	ConnectorAzureCloudProviderCredentialsArgs{...}
type ConnectorAzureCloudProviderCredentialsInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsOutput() ConnectorAzureCloudProviderCredentialsOutput
	ToConnectorAzureCloudProviderCredentialsOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsOutput
}

type ConnectorAzureCloudProviderCredentialsArgs struct {
	// Authenticate to Azure Cloud Provider using details inheriting from delegate.
	AzureInheritFromDelegateDetails ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrInput `pulumi:"azureInheritFromDelegateDetails"`
	// Authenticate to Azure Cloud Provider using manual details.
	AzureManualDetails ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrInput `pulumi:"azureManualDetails"`
	// Type can either be InheritFromDelegate or ManualConfig.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectorAzureCloudProviderCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentials)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsArgs) ToConnectorAzureCloudProviderCredentialsOutput() ConnectorAzureCloudProviderCredentialsOutput {
	return i.ToConnectorAzureCloudProviderCredentialsOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsArgs) ToConnectorAzureCloudProviderCredentialsOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsOutput)
}

func (i ConnectorAzureCloudProviderCredentialsArgs) ToConnectorAzureCloudProviderCredentialsPtrOutput() ConnectorAzureCloudProviderCredentialsPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsArgs) ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsOutput).ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsArgs, ConnectorAzureCloudProviderCredentialsPtr and ConnectorAzureCloudProviderCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsPtrOutput() ConnectorAzureCloudProviderCredentialsPtrOutput
	ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsPtrOutput
}

type connectorAzureCloudProviderCredentialsPtrType ConnectorAzureCloudProviderCredentialsArgs

func ConnectorAzureCloudProviderCredentialsPtr(v *ConnectorAzureCloudProviderCredentialsArgs) ConnectorAzureCloudProviderCredentialsPtrInput {
	return (*connectorAzureCloudProviderCredentialsPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentials)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsPtrType) ToConnectorAzureCloudProviderCredentialsPtrOutput() ConnectorAzureCloudProviderCredentialsPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsPtrType) ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentials)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsOutput) ToConnectorAzureCloudProviderCredentialsOutput() ConnectorAzureCloudProviderCredentialsOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsOutput) ToConnectorAzureCloudProviderCredentialsOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsOutput) ToConnectorAzureCloudProviderCredentialsPtrOutput() ConnectorAzureCloudProviderCredentialsPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsOutput) ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentials) *ConnectorAzureCloudProviderCredentials {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsPtrOutput)
}

// Authenticate to Azure Cloud Provider using details inheriting from delegate.
func (o ConnectorAzureCloudProviderCredentialsOutput) AzureInheritFromDelegateDetails() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentials) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails {
		return v.AzureInheritFromDelegateDetails
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput)
}

// Authenticate to Azure Cloud Provider using manual details.
func (o ConnectorAzureCloudProviderCredentialsOutput) AzureManualDetails() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentials) *ConnectorAzureCloudProviderCredentialsAzureManualDetails {
		return v.AzureManualDetails
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput)
}

// Type can either be InheritFromDelegate or ManualConfig.
func (o ConnectorAzureCloudProviderCredentialsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentials) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectorAzureCloudProviderCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentials)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsPtrOutput) ToConnectorAzureCloudProviderCredentialsPtrOutput() ConnectorAzureCloudProviderCredentialsPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsPtrOutput) ToConnectorAzureCloudProviderCredentialsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentials) ConnectorAzureCloudProviderCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentials
		return ret
	}).(ConnectorAzureCloudProviderCredentialsOutput)
}

// Authenticate to Azure Cloud Provider using details inheriting from delegate.
func (o ConnectorAzureCloudProviderCredentialsPtrOutput) AzureInheritFromDelegateDetails() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentials) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails {
		if v == nil {
			return nil
		}
		return v.AzureInheritFromDelegateDetails
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput)
}

// Authenticate to Azure Cloud Provider using manual details.
func (o ConnectorAzureCloudProviderCredentialsPtrOutput) AzureManualDetails() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentials) *ConnectorAzureCloudProviderCredentialsAzureManualDetails {
		if v == nil {
			return nil
		}
		return v.AzureManualDetails
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput)
}

// Type can either be InheritFromDelegate or ManualConfig.
func (o ConnectorAzureCloudProviderCredentialsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails struct {
	Auth *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth `pulumi:"auth"`
}

// ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs and ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput
	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs struct {
	Auth ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrInput `pulumi:"auth"`
}

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput).ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs, ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtr and ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrType ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs

func ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtr(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrType) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrType) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput) Auth() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth {
		return v.Auth
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput) Auth() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetails) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth struct {
	AzureMsiAuthUa *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa `pulumi:"azureMsiAuthUa"`
	Type           string                                                                                   `pulumi:"type"`
}

// ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs and ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput
	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs struct {
	AzureMsiAuthUa ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrInput `pulumi:"azureMsiAuthUa"`
	Type           pulumi.StringInput                                                                              `pulumi:"type"`
}

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput).ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs, ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtr and ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrType ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs

func ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtr(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrType) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrType) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) AzureMsiAuthUa() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa {
		return v.AzureMsiAuthUa
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput) AzureMsiAuthUa() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa {
		if v == nil {
			return nil
		}
		return v.AzureMsiAuthUa
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa struct {
	ClientId *string `pulumi:"clientId"`
}

// ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs and ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput
	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs struct {
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
}

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput).ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs, ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtr and ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrType ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs

func ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtr(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrType) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrType) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa) *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa) *string {
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa) ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUa) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetails struct {
	ApplicationId *string                                                       `pulumi:"applicationId"`
	Auth          *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth `pulumi:"auth"`
	TenantId      *string                                                       `pulumi:"tenantId"`
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs and ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs struct {
	ApplicationId pulumi.StringPtrInput                                                `pulumi:"applicationId"`
	Auth          ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrInput `pulumi:"auth"`
	TenantId      pulumi.StringPtrInput                                                `pulumi:"tenantId"`
}

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetails)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput).ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs, ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtr and ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureManualDetailsPtrType ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs

func ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtr(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs) ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureManualDetailsPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureManualDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetails)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetails)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureManualDetails) *ConnectorAzureCloudProviderCredentialsAzureManualDetails {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetails) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) Auth() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetails) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth {
		return v.Auth
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetails) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetails)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetails) ConnectorAzureCloudProviderCredentialsAzureManualDetails {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureManualDetails
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) Auth() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetails) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth struct {
	AzureClientKeyCert   *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert   `pulumi:"azureClientKeyCert"`
	AzureClientSecretKey *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey `pulumi:"azureClientSecretKey"`
	Type                 *string                                                                           `pulumi:"type"`
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs and ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs struct {
	AzureClientKeyCert   ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrInput   `pulumi:"azureClientKeyCert"`
	AzureClientSecretKey ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrInput `pulumi:"azureClientSecretKey"`
	Type                 pulumi.StringPtrInput                                                                    `pulumi:"type"`
}

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput).ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs, ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtr and ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrType ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs

func ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtr(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) AzureClientKeyCert() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert {
		return v.AzureClientKeyCert
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) AzureClientSecretKey() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey {
		return v.AzureClientSecretKey
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) AzureClientKeyCert() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert {
		if v == nil {
			return nil
		}
		return v.AzureClientKeyCert
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) AzureClientSecretKey() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey {
		if v == nil {
			return nil
		}
		return v.AzureClientSecretKey
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert struct {
	CertificateRef *string `pulumi:"certificateRef"`
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs and ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs struct {
	CertificateRef pulumi.StringPtrInput `pulumi:"certificateRef"`
}

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput).ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs, ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtr and ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrType ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs

func ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtr(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput) CertificateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert) *string {
		return v.CertificateRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput) CertificateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.CertificateRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey struct {
	SecretRef *string `pulumi:"secretRef"`
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs and ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyInput` via:
//
//	ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs{...}
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs struct {
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
}

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey)(nil)).Elem()
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput)
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput).ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(ctx)
}

// ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrInput is an input type that accepts ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs, ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtr and ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrInput` via:
//
//	        ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrInput interface {
	pulumi.Input

	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput
	ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput
}

type connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrType ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs

func ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtr(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrInput {
	return (*connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrType)(v)
}

func (*connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey)(nil)).Elem()
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return i.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(context.Background())
}

func (i *connectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrType) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return o.ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(context.Background())
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey) *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey {
		return &v
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey) *string {
		return v.SecretRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey)(nil)).Elem()
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput) ToConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutputWithContext(ctx context.Context) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput {
	return o
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput) Elem() ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey) ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey {
		if v != nil {
			return *v
		}
		var ret ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey
		return ret
	}).(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput)
}

func (o ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKey) *string {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorGcpCloudCostBillingExportSpec struct {
	// Data Set Id.
	DataSetId string `pulumi:"dataSetId"`
	// Table Id.
	TableId string `pulumi:"tableId"`
}

// ConnectorGcpCloudCostBillingExportSpecInput is an input type that accepts ConnectorGcpCloudCostBillingExportSpecArgs and ConnectorGcpCloudCostBillingExportSpecOutput values.
// You can construct a concrete instance of `ConnectorGcpCloudCostBillingExportSpecInput` via:
//
//	ConnectorGcpCloudCostBillingExportSpecArgs{...}
type ConnectorGcpCloudCostBillingExportSpecInput interface {
	pulumi.Input

	ToConnectorGcpCloudCostBillingExportSpecOutput() ConnectorGcpCloudCostBillingExportSpecOutput
	ToConnectorGcpCloudCostBillingExportSpecOutputWithContext(context.Context) ConnectorGcpCloudCostBillingExportSpecOutput
}

type ConnectorGcpCloudCostBillingExportSpecArgs struct {
	// Data Set Id.
	DataSetId pulumi.StringInput `pulumi:"dataSetId"`
	// Table Id.
	TableId pulumi.StringInput `pulumi:"tableId"`
}

func (ConnectorGcpCloudCostBillingExportSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (i ConnectorGcpCloudCostBillingExportSpecArgs) ToConnectorGcpCloudCostBillingExportSpecOutput() ConnectorGcpCloudCostBillingExportSpecOutput {
	return i.ToConnectorGcpCloudCostBillingExportSpecOutputWithContext(context.Background())
}

func (i ConnectorGcpCloudCostBillingExportSpecArgs) ToConnectorGcpCloudCostBillingExportSpecOutputWithContext(ctx context.Context) ConnectorGcpCloudCostBillingExportSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorGcpCloudCostBillingExportSpecOutput)
}

func (i ConnectorGcpCloudCostBillingExportSpecArgs) ToConnectorGcpCloudCostBillingExportSpecPtrOutput() ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return i.ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(context.Background())
}

func (i ConnectorGcpCloudCostBillingExportSpecArgs) ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorGcpCloudCostBillingExportSpecOutput).ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(ctx)
}

// ConnectorGcpCloudCostBillingExportSpecPtrInput is an input type that accepts ConnectorGcpCloudCostBillingExportSpecArgs, ConnectorGcpCloudCostBillingExportSpecPtr and ConnectorGcpCloudCostBillingExportSpecPtrOutput values.
// You can construct a concrete instance of `ConnectorGcpCloudCostBillingExportSpecPtrInput` via:
//
//	        ConnectorGcpCloudCostBillingExportSpecArgs{...}
//
//	or:
//
//	        nil
type ConnectorGcpCloudCostBillingExportSpecPtrInput interface {
	pulumi.Input

	ToConnectorGcpCloudCostBillingExportSpecPtrOutput() ConnectorGcpCloudCostBillingExportSpecPtrOutput
	ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(context.Context) ConnectorGcpCloudCostBillingExportSpecPtrOutput
}

type connectorGcpCloudCostBillingExportSpecPtrType ConnectorGcpCloudCostBillingExportSpecArgs

func ConnectorGcpCloudCostBillingExportSpecPtr(v *ConnectorGcpCloudCostBillingExportSpecArgs) ConnectorGcpCloudCostBillingExportSpecPtrInput {
	return (*connectorGcpCloudCostBillingExportSpecPtrType)(v)
}

func (*connectorGcpCloudCostBillingExportSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (i *connectorGcpCloudCostBillingExportSpecPtrType) ToConnectorGcpCloudCostBillingExportSpecPtrOutput() ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return i.ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(context.Background())
}

func (i *connectorGcpCloudCostBillingExportSpecPtrType) ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorGcpCloudCostBillingExportSpecPtrOutput)
}

type ConnectorGcpCloudCostBillingExportSpecOutput struct{ *pulumi.OutputState }

func (ConnectorGcpCloudCostBillingExportSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (o ConnectorGcpCloudCostBillingExportSpecOutput) ToConnectorGcpCloudCostBillingExportSpecOutput() ConnectorGcpCloudCostBillingExportSpecOutput {
	return o
}

func (o ConnectorGcpCloudCostBillingExportSpecOutput) ToConnectorGcpCloudCostBillingExportSpecOutputWithContext(ctx context.Context) ConnectorGcpCloudCostBillingExportSpecOutput {
	return o
}

func (o ConnectorGcpCloudCostBillingExportSpecOutput) ToConnectorGcpCloudCostBillingExportSpecPtrOutput() ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return o.ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(context.Background())
}

func (o ConnectorGcpCloudCostBillingExportSpecOutput) ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorGcpCloudCostBillingExportSpec) *ConnectorGcpCloudCostBillingExportSpec {
		return &v
	}).(ConnectorGcpCloudCostBillingExportSpecPtrOutput)
}

// Data Set Id.
func (o ConnectorGcpCloudCostBillingExportSpecOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorGcpCloudCostBillingExportSpec) string { return v.DataSetId }).(pulumi.StringOutput)
}

// Table Id.
func (o ConnectorGcpCloudCostBillingExportSpecOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorGcpCloudCostBillingExportSpec) string { return v.TableId }).(pulumi.StringOutput)
}

type ConnectorGcpCloudCostBillingExportSpecPtrOutput struct{ *pulumi.OutputState }

func (ConnectorGcpCloudCostBillingExportSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (o ConnectorGcpCloudCostBillingExportSpecPtrOutput) ToConnectorGcpCloudCostBillingExportSpecPtrOutput() ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return o
}

func (o ConnectorGcpCloudCostBillingExportSpecPtrOutput) ToConnectorGcpCloudCostBillingExportSpecPtrOutputWithContext(ctx context.Context) ConnectorGcpCloudCostBillingExportSpecPtrOutput {
	return o
}

func (o ConnectorGcpCloudCostBillingExportSpecPtrOutput) Elem() ConnectorGcpCloudCostBillingExportSpecOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCostBillingExportSpec) ConnectorGcpCloudCostBillingExportSpec {
		if v != nil {
			return *v
		}
		var ret ConnectorGcpCloudCostBillingExportSpec
		return ret
	}).(ConnectorGcpCloudCostBillingExportSpecOutput)
}

// Data Set Id.
func (o ConnectorGcpCloudCostBillingExportSpecPtrOutput) DataSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.DataSetId
	}).(pulumi.StringPtrOutput)
}

// Table Id.
func (o ConnectorGcpCloudCostBillingExportSpecPtrOutput) TableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorGcpCloudCostBillingExportSpec) *string {
		if v == nil {
			return nil
		}
		return &v.TableId
	}).(pulumi.StringPtrOutput)
}

type ConnectorJenkinsAuth struct {
	// Authenticate to App Dynamics using bearer token.
	JenkinsBearerToken *ConnectorJenkinsAuthJenkinsBearerToken `pulumi:"jenkinsBearerToken"`
	// Authenticate to App Dynamics using user name and password.
	JenkinsUserNamePassword *ConnectorJenkinsAuthJenkinsUserNamePassword `pulumi:"jenkinsUserNamePassword"`
	// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
	Type string `pulumi:"type"`
}

// ConnectorJenkinsAuthInput is an input type that accepts ConnectorJenkinsAuthArgs and ConnectorJenkinsAuthOutput values.
// You can construct a concrete instance of `ConnectorJenkinsAuthInput` via:
//
//	ConnectorJenkinsAuthArgs{...}
type ConnectorJenkinsAuthInput interface {
	pulumi.Input

	ToConnectorJenkinsAuthOutput() ConnectorJenkinsAuthOutput
	ToConnectorJenkinsAuthOutputWithContext(context.Context) ConnectorJenkinsAuthOutput
}

type ConnectorJenkinsAuthArgs struct {
	// Authenticate to App Dynamics using bearer token.
	JenkinsBearerToken ConnectorJenkinsAuthJenkinsBearerTokenPtrInput `pulumi:"jenkinsBearerToken"`
	// Authenticate to App Dynamics using user name and password.
	JenkinsUserNamePassword ConnectorJenkinsAuthJenkinsUserNamePasswordPtrInput `pulumi:"jenkinsUserNamePassword"`
	// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectorJenkinsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorJenkinsAuth)(nil)).Elem()
}

func (i ConnectorJenkinsAuthArgs) ToConnectorJenkinsAuthOutput() ConnectorJenkinsAuthOutput {
	return i.ToConnectorJenkinsAuthOutputWithContext(context.Background())
}

func (i ConnectorJenkinsAuthArgs) ToConnectorJenkinsAuthOutputWithContext(ctx context.Context) ConnectorJenkinsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthOutput)
}

func (i ConnectorJenkinsAuthArgs) ToConnectorJenkinsAuthPtrOutput() ConnectorJenkinsAuthPtrOutput {
	return i.ToConnectorJenkinsAuthPtrOutputWithContext(context.Background())
}

func (i ConnectorJenkinsAuthArgs) ToConnectorJenkinsAuthPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthOutput).ToConnectorJenkinsAuthPtrOutputWithContext(ctx)
}

// ConnectorJenkinsAuthPtrInput is an input type that accepts ConnectorJenkinsAuthArgs, ConnectorJenkinsAuthPtr and ConnectorJenkinsAuthPtrOutput values.
// You can construct a concrete instance of `ConnectorJenkinsAuthPtrInput` via:
//
//	        ConnectorJenkinsAuthArgs{...}
//
//	or:
//
//	        nil
type ConnectorJenkinsAuthPtrInput interface {
	pulumi.Input

	ToConnectorJenkinsAuthPtrOutput() ConnectorJenkinsAuthPtrOutput
	ToConnectorJenkinsAuthPtrOutputWithContext(context.Context) ConnectorJenkinsAuthPtrOutput
}

type connectorJenkinsAuthPtrType ConnectorJenkinsAuthArgs

func ConnectorJenkinsAuthPtr(v *ConnectorJenkinsAuthArgs) ConnectorJenkinsAuthPtrInput {
	return (*connectorJenkinsAuthPtrType)(v)
}

func (*connectorJenkinsAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorJenkinsAuth)(nil)).Elem()
}

func (i *connectorJenkinsAuthPtrType) ToConnectorJenkinsAuthPtrOutput() ConnectorJenkinsAuthPtrOutput {
	return i.ToConnectorJenkinsAuthPtrOutputWithContext(context.Background())
}

func (i *connectorJenkinsAuthPtrType) ToConnectorJenkinsAuthPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthPtrOutput)
}

type ConnectorJenkinsAuthOutput struct{ *pulumi.OutputState }

func (ConnectorJenkinsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorJenkinsAuth)(nil)).Elem()
}

func (o ConnectorJenkinsAuthOutput) ToConnectorJenkinsAuthOutput() ConnectorJenkinsAuthOutput {
	return o
}

func (o ConnectorJenkinsAuthOutput) ToConnectorJenkinsAuthOutputWithContext(ctx context.Context) ConnectorJenkinsAuthOutput {
	return o
}

func (o ConnectorJenkinsAuthOutput) ToConnectorJenkinsAuthPtrOutput() ConnectorJenkinsAuthPtrOutput {
	return o.ToConnectorJenkinsAuthPtrOutputWithContext(context.Background())
}

func (o ConnectorJenkinsAuthOutput) ToConnectorJenkinsAuthPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorJenkinsAuth) *ConnectorJenkinsAuth {
		return &v
	}).(ConnectorJenkinsAuthPtrOutput)
}

// Authenticate to App Dynamics using bearer token.
func (o ConnectorJenkinsAuthOutput) JenkinsBearerToken() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuth) *ConnectorJenkinsAuthJenkinsBearerToken { return v.JenkinsBearerToken }).(ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput)
}

// Authenticate to App Dynamics using user name and password.
func (o ConnectorJenkinsAuthOutput) JenkinsUserNamePassword() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuth) *ConnectorJenkinsAuthJenkinsUserNamePassword {
		return v.JenkinsUserNamePassword
	}).(ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput)
}

// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
func (o ConnectorJenkinsAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuth) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectorJenkinsAuthPtrOutput struct{ *pulumi.OutputState }

func (ConnectorJenkinsAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorJenkinsAuth)(nil)).Elem()
}

func (o ConnectorJenkinsAuthPtrOutput) ToConnectorJenkinsAuthPtrOutput() ConnectorJenkinsAuthPtrOutput {
	return o
}

func (o ConnectorJenkinsAuthPtrOutput) ToConnectorJenkinsAuthPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthPtrOutput {
	return o
}

func (o ConnectorJenkinsAuthPtrOutput) Elem() ConnectorJenkinsAuthOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuth) ConnectorJenkinsAuth {
		if v != nil {
			return *v
		}
		var ret ConnectorJenkinsAuth
		return ret
	}).(ConnectorJenkinsAuthOutput)
}

// Authenticate to App Dynamics using bearer token.
func (o ConnectorJenkinsAuthPtrOutput) JenkinsBearerToken() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuth) *ConnectorJenkinsAuthJenkinsBearerToken {
		if v == nil {
			return nil
		}
		return v.JenkinsBearerToken
	}).(ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput)
}

// Authenticate to App Dynamics using user name and password.
func (o ConnectorJenkinsAuthPtrOutput) JenkinsUserNamePassword() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuth) *ConnectorJenkinsAuthJenkinsUserNamePassword {
		if v == nil {
			return nil
		}
		return v.JenkinsUserNamePassword
	}).(ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput)
}

// Can be one of UsernamePassword, Anonymous, Bearer Token(HTTP Header)
func (o ConnectorJenkinsAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectorJenkinsAuthJenkinsBearerToken struct {
	TokenRef string `pulumi:"tokenRef"`
}

// ConnectorJenkinsAuthJenkinsBearerTokenInput is an input type that accepts ConnectorJenkinsAuthJenkinsBearerTokenArgs and ConnectorJenkinsAuthJenkinsBearerTokenOutput values.
// You can construct a concrete instance of `ConnectorJenkinsAuthJenkinsBearerTokenInput` via:
//
//	ConnectorJenkinsAuthJenkinsBearerTokenArgs{...}
type ConnectorJenkinsAuthJenkinsBearerTokenInput interface {
	pulumi.Input

	ToConnectorJenkinsAuthJenkinsBearerTokenOutput() ConnectorJenkinsAuthJenkinsBearerTokenOutput
	ToConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(context.Context) ConnectorJenkinsAuthJenkinsBearerTokenOutput
}

type ConnectorJenkinsAuthJenkinsBearerTokenArgs struct {
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (ConnectorJenkinsAuthJenkinsBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (i ConnectorJenkinsAuthJenkinsBearerTokenArgs) ToConnectorJenkinsAuthJenkinsBearerTokenOutput() ConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return i.ToConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(context.Background())
}

func (i ConnectorJenkinsAuthJenkinsBearerTokenArgs) ToConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthJenkinsBearerTokenOutput)
}

func (i ConnectorJenkinsAuthJenkinsBearerTokenArgs) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutput() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return i.ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(context.Background())
}

func (i ConnectorJenkinsAuthJenkinsBearerTokenArgs) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthJenkinsBearerTokenOutput).ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(ctx)
}

// ConnectorJenkinsAuthJenkinsBearerTokenPtrInput is an input type that accepts ConnectorJenkinsAuthJenkinsBearerTokenArgs, ConnectorJenkinsAuthJenkinsBearerTokenPtr and ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput values.
// You can construct a concrete instance of `ConnectorJenkinsAuthJenkinsBearerTokenPtrInput` via:
//
//	        ConnectorJenkinsAuthJenkinsBearerTokenArgs{...}
//
//	or:
//
//	        nil
type ConnectorJenkinsAuthJenkinsBearerTokenPtrInput interface {
	pulumi.Input

	ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutput() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput
	ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(context.Context) ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput
}

type connectorJenkinsAuthJenkinsBearerTokenPtrType ConnectorJenkinsAuthJenkinsBearerTokenArgs

func ConnectorJenkinsAuthJenkinsBearerTokenPtr(v *ConnectorJenkinsAuthJenkinsBearerTokenArgs) ConnectorJenkinsAuthJenkinsBearerTokenPtrInput {
	return (*connectorJenkinsAuthJenkinsBearerTokenPtrType)(v)
}

func (*connectorJenkinsAuthJenkinsBearerTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (i *connectorJenkinsAuthJenkinsBearerTokenPtrType) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutput() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return i.ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(context.Background())
}

func (i *connectorJenkinsAuthJenkinsBearerTokenPtrType) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput)
}

type ConnectorJenkinsAuthJenkinsBearerTokenOutput struct{ *pulumi.OutputState }

func (ConnectorJenkinsAuthJenkinsBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenOutput) ToConnectorJenkinsAuthJenkinsBearerTokenOutput() ConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenOutput) ToConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenOutput) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutput() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return o.ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(context.Background())
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenOutput) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorJenkinsAuthJenkinsBearerToken) *ConnectorJenkinsAuthJenkinsBearerToken {
		return &v
	}).(ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput)
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuthJenkinsBearerToken) string { return v.TokenRef }).(pulumi.StringOutput)
}

type ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput struct{ *pulumi.OutputState }

func (ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutput() ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput) ToConnectorJenkinsAuthJenkinsBearerTokenPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput) Elem() ConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuthJenkinsBearerToken) ConnectorJenkinsAuthJenkinsBearerToken {
		if v != nil {
			return *v
		}
		var ret ConnectorJenkinsAuthJenkinsBearerToken
		return ret
	}).(ConnectorJenkinsAuthJenkinsBearerTokenOutput)
}

func (o ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuthJenkinsBearerToken) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorJenkinsAuthJenkinsUserNamePassword struct {
	PasswordRef string  `pulumi:"passwordRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// ConnectorJenkinsAuthJenkinsUserNamePasswordInput is an input type that accepts ConnectorJenkinsAuthJenkinsUserNamePasswordArgs and ConnectorJenkinsAuthJenkinsUserNamePasswordOutput values.
// You can construct a concrete instance of `ConnectorJenkinsAuthJenkinsUserNamePasswordInput` via:
//
//	ConnectorJenkinsAuthJenkinsUserNamePasswordArgs{...}
type ConnectorJenkinsAuthJenkinsUserNamePasswordInput interface {
	pulumi.Input

	ToConnectorJenkinsAuthJenkinsUserNamePasswordOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordOutput
	ToConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordOutput
}

type ConnectorJenkinsAuthJenkinsUserNamePasswordArgs struct {
	PasswordRef pulumi.StringInput    `pulumi:"passwordRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i ConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ToConnectorJenkinsAuthJenkinsUserNamePasswordOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return i.ToConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(context.Background())
}

func (i ConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ToConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthJenkinsUserNamePasswordOutput)
}

func (i ConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return i.ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Background())
}

func (i ConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthJenkinsUserNamePasswordOutput).ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx)
}

// ConnectorJenkinsAuthJenkinsUserNamePasswordPtrInput is an input type that accepts ConnectorJenkinsAuthJenkinsUserNamePasswordArgs, ConnectorJenkinsAuthJenkinsUserNamePasswordPtr and ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput values.
// You can construct a concrete instance of `ConnectorJenkinsAuthJenkinsUserNamePasswordPtrInput` via:
//
//	        ConnectorJenkinsAuthJenkinsUserNamePasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectorJenkinsAuthJenkinsUserNamePasswordPtrInput interface {
	pulumi.Input

	ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput
	ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput
}

type connectorJenkinsAuthJenkinsUserNamePasswordPtrType ConnectorJenkinsAuthJenkinsUserNamePasswordArgs

func ConnectorJenkinsAuthJenkinsUserNamePasswordPtr(v *ConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ConnectorJenkinsAuthJenkinsUserNamePasswordPtrInput {
	return (*connectorJenkinsAuthJenkinsUserNamePasswordPtrType)(v)
}

func (*connectorJenkinsAuthJenkinsUserNamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i *connectorJenkinsAuthJenkinsUserNamePasswordPtrType) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return i.ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Background())
}

func (i *connectorJenkinsAuthJenkinsUserNamePasswordPtrType) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput)
}

type ConnectorJenkinsAuthJenkinsUserNamePasswordOutput struct{ *pulumi.OutputState }

func (ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ToConnectorJenkinsAuthJenkinsUserNamePasswordOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ToConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return o.ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(context.Background())
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorJenkinsAuthJenkinsUserNamePassword) *ConnectorJenkinsAuthJenkinsUserNamePassword {
		return &v
	}).(ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput)
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuthJenkinsUserNamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuthJenkinsUserNamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorJenkinsAuthJenkinsUserNamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput() ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) ToConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutputWithContext(ctx context.Context) ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput {
	return o
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) Elem() ConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuthJenkinsUserNamePassword) ConnectorJenkinsAuthJenkinsUserNamePassword {
		if v != nil {
			return *v
		}
		var ret ConnectorJenkinsAuthJenkinsUserNamePassword
		return ret
	}).(ConnectorJenkinsAuthJenkinsUserNamePasswordOutput)
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuthJenkinsUserNamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuthJenkinsUserNamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorJenkinsAuthJenkinsUserNamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorOciHelmCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// ConnectorOciHelmCredentialsInput is an input type that accepts ConnectorOciHelmCredentialsArgs and ConnectorOciHelmCredentialsOutput values.
// You can construct a concrete instance of `ConnectorOciHelmCredentialsInput` via:
//
//	ConnectorOciHelmCredentialsArgs{...}
type ConnectorOciHelmCredentialsInput interface {
	pulumi.Input

	ToConnectorOciHelmCredentialsOutput() ConnectorOciHelmCredentialsOutput
	ToConnectorOciHelmCredentialsOutputWithContext(context.Context) ConnectorOciHelmCredentialsOutput
}

type ConnectorOciHelmCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ConnectorOciHelmCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorOciHelmCredentials)(nil)).Elem()
}

func (i ConnectorOciHelmCredentialsArgs) ToConnectorOciHelmCredentialsOutput() ConnectorOciHelmCredentialsOutput {
	return i.ToConnectorOciHelmCredentialsOutputWithContext(context.Background())
}

func (i ConnectorOciHelmCredentialsArgs) ToConnectorOciHelmCredentialsOutputWithContext(ctx context.Context) ConnectorOciHelmCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorOciHelmCredentialsOutput)
}

func (i ConnectorOciHelmCredentialsArgs) ToConnectorOciHelmCredentialsPtrOutput() ConnectorOciHelmCredentialsPtrOutput {
	return i.ToConnectorOciHelmCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorOciHelmCredentialsArgs) ToConnectorOciHelmCredentialsPtrOutputWithContext(ctx context.Context) ConnectorOciHelmCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorOciHelmCredentialsOutput).ToConnectorOciHelmCredentialsPtrOutputWithContext(ctx)
}

// ConnectorOciHelmCredentialsPtrInput is an input type that accepts ConnectorOciHelmCredentialsArgs, ConnectorOciHelmCredentialsPtr and ConnectorOciHelmCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorOciHelmCredentialsPtrInput` via:
//
//	        ConnectorOciHelmCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorOciHelmCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorOciHelmCredentialsPtrOutput() ConnectorOciHelmCredentialsPtrOutput
	ToConnectorOciHelmCredentialsPtrOutputWithContext(context.Context) ConnectorOciHelmCredentialsPtrOutput
}

type connectorOciHelmCredentialsPtrType ConnectorOciHelmCredentialsArgs

func ConnectorOciHelmCredentialsPtr(v *ConnectorOciHelmCredentialsArgs) ConnectorOciHelmCredentialsPtrInput {
	return (*connectorOciHelmCredentialsPtrType)(v)
}

func (*connectorOciHelmCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorOciHelmCredentials)(nil)).Elem()
}

func (i *connectorOciHelmCredentialsPtrType) ToConnectorOciHelmCredentialsPtrOutput() ConnectorOciHelmCredentialsPtrOutput {
	return i.ToConnectorOciHelmCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorOciHelmCredentialsPtrType) ToConnectorOciHelmCredentialsPtrOutputWithContext(ctx context.Context) ConnectorOciHelmCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorOciHelmCredentialsPtrOutput)
}

type ConnectorOciHelmCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorOciHelmCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorOciHelmCredentials)(nil)).Elem()
}

func (o ConnectorOciHelmCredentialsOutput) ToConnectorOciHelmCredentialsOutput() ConnectorOciHelmCredentialsOutput {
	return o
}

func (o ConnectorOciHelmCredentialsOutput) ToConnectorOciHelmCredentialsOutputWithContext(ctx context.Context) ConnectorOciHelmCredentialsOutput {
	return o
}

func (o ConnectorOciHelmCredentialsOutput) ToConnectorOciHelmCredentialsPtrOutput() ConnectorOciHelmCredentialsPtrOutput {
	return o.ToConnectorOciHelmCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorOciHelmCredentialsOutput) ToConnectorOciHelmCredentialsPtrOutputWithContext(ctx context.Context) ConnectorOciHelmCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorOciHelmCredentials) *ConnectorOciHelmCredentials {
		return &v
	}).(ConnectorOciHelmCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorOciHelmCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorOciHelmCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o ConnectorOciHelmCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorOciHelmCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorOciHelmCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorOciHelmCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ConnectorOciHelmCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorOciHelmCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorOciHelmCredentials)(nil)).Elem()
}

func (o ConnectorOciHelmCredentialsPtrOutput) ToConnectorOciHelmCredentialsPtrOutput() ConnectorOciHelmCredentialsPtrOutput {
	return o
}

func (o ConnectorOciHelmCredentialsPtrOutput) ToConnectorOciHelmCredentialsPtrOutputWithContext(ctx context.Context) ConnectorOciHelmCredentialsPtrOutput {
	return o
}

func (o ConnectorOciHelmCredentialsPtrOutput) Elem() ConnectorOciHelmCredentialsOutput {
	return o.ApplyT(func(v *ConnectorOciHelmCredentials) ConnectorOciHelmCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorOciHelmCredentials
		return ret
	}).(ConnectorOciHelmCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorOciHelmCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorOciHelmCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o ConnectorOciHelmCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorOciHelmCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorOciHelmCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorOciHelmCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorServiceNowAuth struct {
	// Authenticate using adfs client credentials with certificate.
	Adfs *ConnectorServiceNowAuthAdfs `pulumi:"adfs"`
	// Authentication types for Jira connector
	AuthType string `pulumi:"authType"`
	// Authenticate using username password.
	UsernamePassword *ConnectorServiceNowAuthUsernamePassword `pulumi:"usernamePassword"`
}

// ConnectorServiceNowAuthInput is an input type that accepts ConnectorServiceNowAuthArgs and ConnectorServiceNowAuthOutput values.
// You can construct a concrete instance of `ConnectorServiceNowAuthInput` via:
//
//	ConnectorServiceNowAuthArgs{...}
type ConnectorServiceNowAuthInput interface {
	pulumi.Input

	ToConnectorServiceNowAuthOutput() ConnectorServiceNowAuthOutput
	ToConnectorServiceNowAuthOutputWithContext(context.Context) ConnectorServiceNowAuthOutput
}

type ConnectorServiceNowAuthArgs struct {
	// Authenticate using adfs client credentials with certificate.
	Adfs ConnectorServiceNowAuthAdfsPtrInput `pulumi:"adfs"`
	// Authentication types for Jira connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Authenticate using username password.
	UsernamePassword ConnectorServiceNowAuthUsernamePasswordPtrInput `pulumi:"usernamePassword"`
}

func (ConnectorServiceNowAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorServiceNowAuth)(nil)).Elem()
}

func (i ConnectorServiceNowAuthArgs) ToConnectorServiceNowAuthOutput() ConnectorServiceNowAuthOutput {
	return i.ToConnectorServiceNowAuthOutputWithContext(context.Background())
}

func (i ConnectorServiceNowAuthArgs) ToConnectorServiceNowAuthOutputWithContext(ctx context.Context) ConnectorServiceNowAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthOutput)
}

func (i ConnectorServiceNowAuthArgs) ToConnectorServiceNowAuthPtrOutput() ConnectorServiceNowAuthPtrOutput {
	return i.ToConnectorServiceNowAuthPtrOutputWithContext(context.Background())
}

func (i ConnectorServiceNowAuthArgs) ToConnectorServiceNowAuthPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthOutput).ToConnectorServiceNowAuthPtrOutputWithContext(ctx)
}

// ConnectorServiceNowAuthPtrInput is an input type that accepts ConnectorServiceNowAuthArgs, ConnectorServiceNowAuthPtr and ConnectorServiceNowAuthPtrOutput values.
// You can construct a concrete instance of `ConnectorServiceNowAuthPtrInput` via:
//
//	        ConnectorServiceNowAuthArgs{...}
//
//	or:
//
//	        nil
type ConnectorServiceNowAuthPtrInput interface {
	pulumi.Input

	ToConnectorServiceNowAuthPtrOutput() ConnectorServiceNowAuthPtrOutput
	ToConnectorServiceNowAuthPtrOutputWithContext(context.Context) ConnectorServiceNowAuthPtrOutput
}

type connectorServiceNowAuthPtrType ConnectorServiceNowAuthArgs

func ConnectorServiceNowAuthPtr(v *ConnectorServiceNowAuthArgs) ConnectorServiceNowAuthPtrInput {
	return (*connectorServiceNowAuthPtrType)(v)
}

func (*connectorServiceNowAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorServiceNowAuth)(nil)).Elem()
}

func (i *connectorServiceNowAuthPtrType) ToConnectorServiceNowAuthPtrOutput() ConnectorServiceNowAuthPtrOutput {
	return i.ToConnectorServiceNowAuthPtrOutputWithContext(context.Background())
}

func (i *connectorServiceNowAuthPtrType) ToConnectorServiceNowAuthPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthPtrOutput)
}

type ConnectorServiceNowAuthOutput struct{ *pulumi.OutputState }

func (ConnectorServiceNowAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorServiceNowAuth)(nil)).Elem()
}

func (o ConnectorServiceNowAuthOutput) ToConnectorServiceNowAuthOutput() ConnectorServiceNowAuthOutput {
	return o
}

func (o ConnectorServiceNowAuthOutput) ToConnectorServiceNowAuthOutputWithContext(ctx context.Context) ConnectorServiceNowAuthOutput {
	return o
}

func (o ConnectorServiceNowAuthOutput) ToConnectorServiceNowAuthPtrOutput() ConnectorServiceNowAuthPtrOutput {
	return o.ToConnectorServiceNowAuthPtrOutputWithContext(context.Background())
}

func (o ConnectorServiceNowAuthOutput) ToConnectorServiceNowAuthPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorServiceNowAuth) *ConnectorServiceNowAuth {
		return &v
	}).(ConnectorServiceNowAuthPtrOutput)
}

// Authenticate using adfs client credentials with certificate.
func (o ConnectorServiceNowAuthOutput) Adfs() ConnectorServiceNowAuthAdfsPtrOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuth) *ConnectorServiceNowAuthAdfs { return v.Adfs }).(ConnectorServiceNowAuthAdfsPtrOutput)
}

// Authentication types for Jira connector
func (o ConnectorServiceNowAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Authenticate using username password.
func (o ConnectorServiceNowAuthOutput) UsernamePassword() ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuth) *ConnectorServiceNowAuthUsernamePassword { return v.UsernamePassword }).(ConnectorServiceNowAuthUsernamePasswordPtrOutput)
}

type ConnectorServiceNowAuthPtrOutput struct{ *pulumi.OutputState }

func (ConnectorServiceNowAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorServiceNowAuth)(nil)).Elem()
}

func (o ConnectorServiceNowAuthPtrOutput) ToConnectorServiceNowAuthPtrOutput() ConnectorServiceNowAuthPtrOutput {
	return o
}

func (o ConnectorServiceNowAuthPtrOutput) ToConnectorServiceNowAuthPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthPtrOutput {
	return o
}

func (o ConnectorServiceNowAuthPtrOutput) Elem() ConnectorServiceNowAuthOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuth) ConnectorServiceNowAuth {
		if v != nil {
			return *v
		}
		var ret ConnectorServiceNowAuth
		return ret
	}).(ConnectorServiceNowAuthOutput)
}

// Authenticate using adfs client credentials with certificate.
func (o ConnectorServiceNowAuthPtrOutput) Adfs() ConnectorServiceNowAuthAdfsPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuth) *ConnectorServiceNowAuthAdfs {
		if v == nil {
			return nil
		}
		return v.Adfs
	}).(ConnectorServiceNowAuthAdfsPtrOutput)
}

// Authentication types for Jira connector
func (o ConnectorServiceNowAuthPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuth) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Authenticate using username password.
func (o ConnectorServiceNowAuthPtrOutput) UsernamePassword() ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuth) *ConnectorServiceNowAuthUsernamePassword {
		if v == nil {
			return nil
		}
		return v.UsernamePassword
	}).(ConnectorServiceNowAuthUsernamePasswordPtrOutput)
}

type ConnectorServiceNowAuthAdfs struct {
	AdfsUrl        string `pulumi:"adfsUrl"`
	CertificateRef string `pulumi:"certificateRef"`
	ClientIdRef    string `pulumi:"clientIdRef"`
	PrivateKeyRef  string `pulumi:"privateKeyRef"`
	ResourceIdRef  string `pulumi:"resourceIdRef"`
}

// ConnectorServiceNowAuthAdfsInput is an input type that accepts ConnectorServiceNowAuthAdfsArgs and ConnectorServiceNowAuthAdfsOutput values.
// You can construct a concrete instance of `ConnectorServiceNowAuthAdfsInput` via:
//
//	ConnectorServiceNowAuthAdfsArgs{...}
type ConnectorServiceNowAuthAdfsInput interface {
	pulumi.Input

	ToConnectorServiceNowAuthAdfsOutput() ConnectorServiceNowAuthAdfsOutput
	ToConnectorServiceNowAuthAdfsOutputWithContext(context.Context) ConnectorServiceNowAuthAdfsOutput
}

type ConnectorServiceNowAuthAdfsArgs struct {
	AdfsUrl        pulumi.StringInput `pulumi:"adfsUrl"`
	CertificateRef pulumi.StringInput `pulumi:"certificateRef"`
	ClientIdRef    pulumi.StringInput `pulumi:"clientIdRef"`
	PrivateKeyRef  pulumi.StringInput `pulumi:"privateKeyRef"`
	ResourceIdRef  pulumi.StringInput `pulumi:"resourceIdRef"`
}

func (ConnectorServiceNowAuthAdfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorServiceNowAuthAdfs)(nil)).Elem()
}

func (i ConnectorServiceNowAuthAdfsArgs) ToConnectorServiceNowAuthAdfsOutput() ConnectorServiceNowAuthAdfsOutput {
	return i.ToConnectorServiceNowAuthAdfsOutputWithContext(context.Background())
}

func (i ConnectorServiceNowAuthAdfsArgs) ToConnectorServiceNowAuthAdfsOutputWithContext(ctx context.Context) ConnectorServiceNowAuthAdfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthAdfsOutput)
}

func (i ConnectorServiceNowAuthAdfsArgs) ToConnectorServiceNowAuthAdfsPtrOutput() ConnectorServiceNowAuthAdfsPtrOutput {
	return i.ToConnectorServiceNowAuthAdfsPtrOutputWithContext(context.Background())
}

func (i ConnectorServiceNowAuthAdfsArgs) ToConnectorServiceNowAuthAdfsPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthAdfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthAdfsOutput).ToConnectorServiceNowAuthAdfsPtrOutputWithContext(ctx)
}

// ConnectorServiceNowAuthAdfsPtrInput is an input type that accepts ConnectorServiceNowAuthAdfsArgs, ConnectorServiceNowAuthAdfsPtr and ConnectorServiceNowAuthAdfsPtrOutput values.
// You can construct a concrete instance of `ConnectorServiceNowAuthAdfsPtrInput` via:
//
//	        ConnectorServiceNowAuthAdfsArgs{...}
//
//	or:
//
//	        nil
type ConnectorServiceNowAuthAdfsPtrInput interface {
	pulumi.Input

	ToConnectorServiceNowAuthAdfsPtrOutput() ConnectorServiceNowAuthAdfsPtrOutput
	ToConnectorServiceNowAuthAdfsPtrOutputWithContext(context.Context) ConnectorServiceNowAuthAdfsPtrOutput
}

type connectorServiceNowAuthAdfsPtrType ConnectorServiceNowAuthAdfsArgs

func ConnectorServiceNowAuthAdfsPtr(v *ConnectorServiceNowAuthAdfsArgs) ConnectorServiceNowAuthAdfsPtrInput {
	return (*connectorServiceNowAuthAdfsPtrType)(v)
}

func (*connectorServiceNowAuthAdfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorServiceNowAuthAdfs)(nil)).Elem()
}

func (i *connectorServiceNowAuthAdfsPtrType) ToConnectorServiceNowAuthAdfsPtrOutput() ConnectorServiceNowAuthAdfsPtrOutput {
	return i.ToConnectorServiceNowAuthAdfsPtrOutputWithContext(context.Background())
}

func (i *connectorServiceNowAuthAdfsPtrType) ToConnectorServiceNowAuthAdfsPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthAdfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthAdfsPtrOutput)
}

type ConnectorServiceNowAuthAdfsOutput struct{ *pulumi.OutputState }

func (ConnectorServiceNowAuthAdfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorServiceNowAuthAdfs)(nil)).Elem()
}

func (o ConnectorServiceNowAuthAdfsOutput) ToConnectorServiceNowAuthAdfsOutput() ConnectorServiceNowAuthAdfsOutput {
	return o
}

func (o ConnectorServiceNowAuthAdfsOutput) ToConnectorServiceNowAuthAdfsOutputWithContext(ctx context.Context) ConnectorServiceNowAuthAdfsOutput {
	return o
}

func (o ConnectorServiceNowAuthAdfsOutput) ToConnectorServiceNowAuthAdfsPtrOutput() ConnectorServiceNowAuthAdfsPtrOutput {
	return o.ToConnectorServiceNowAuthAdfsPtrOutputWithContext(context.Background())
}

func (o ConnectorServiceNowAuthAdfsOutput) ToConnectorServiceNowAuthAdfsPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthAdfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorServiceNowAuthAdfs) *ConnectorServiceNowAuthAdfs {
		return &v
	}).(ConnectorServiceNowAuthAdfsPtrOutput)
}

func (o ConnectorServiceNowAuthAdfsOutput) AdfsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthAdfs) string { return v.AdfsUrl }).(pulumi.StringOutput)
}

func (o ConnectorServiceNowAuthAdfsOutput) CertificateRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthAdfs) string { return v.CertificateRef }).(pulumi.StringOutput)
}

func (o ConnectorServiceNowAuthAdfsOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthAdfs) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

func (o ConnectorServiceNowAuthAdfsOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthAdfs) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

func (o ConnectorServiceNowAuthAdfsOutput) ResourceIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthAdfs) string { return v.ResourceIdRef }).(pulumi.StringOutput)
}

type ConnectorServiceNowAuthAdfsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorServiceNowAuthAdfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorServiceNowAuthAdfs)(nil)).Elem()
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) ToConnectorServiceNowAuthAdfsPtrOutput() ConnectorServiceNowAuthAdfsPtrOutput {
	return o
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) ToConnectorServiceNowAuthAdfsPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthAdfsPtrOutput {
	return o
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) Elem() ConnectorServiceNowAuthAdfsOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthAdfs) ConnectorServiceNowAuthAdfs {
		if v != nil {
			return *v
		}
		var ret ConnectorServiceNowAuthAdfs
		return ret
	}).(ConnectorServiceNowAuthAdfsOutput)
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) AdfsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.AdfsUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) CertificateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateRef
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) ClientIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.ClientIdRef
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) PrivateKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKeyRef
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorServiceNowAuthAdfsPtrOutput) ResourceIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthAdfs) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceIdRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorServiceNowAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// ConnectorServiceNowAuthUsernamePasswordInput is an input type that accepts ConnectorServiceNowAuthUsernamePasswordArgs and ConnectorServiceNowAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `ConnectorServiceNowAuthUsernamePasswordInput` via:
//
//	ConnectorServiceNowAuthUsernamePasswordArgs{...}
type ConnectorServiceNowAuthUsernamePasswordInput interface {
	pulumi.Input

	ToConnectorServiceNowAuthUsernamePasswordOutput() ConnectorServiceNowAuthUsernamePasswordOutput
	ToConnectorServiceNowAuthUsernamePasswordOutputWithContext(context.Context) ConnectorServiceNowAuthUsernamePasswordOutput
}

type ConnectorServiceNowAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ConnectorServiceNowAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (i ConnectorServiceNowAuthUsernamePasswordArgs) ToConnectorServiceNowAuthUsernamePasswordOutput() ConnectorServiceNowAuthUsernamePasswordOutput {
	return i.ToConnectorServiceNowAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i ConnectorServiceNowAuthUsernamePasswordArgs) ToConnectorServiceNowAuthUsernamePasswordOutputWithContext(ctx context.Context) ConnectorServiceNowAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthUsernamePasswordOutput)
}

func (i ConnectorServiceNowAuthUsernamePasswordArgs) ToConnectorServiceNowAuthUsernamePasswordPtrOutput() ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return i.ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i ConnectorServiceNowAuthUsernamePasswordArgs) ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthUsernamePasswordOutput).ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(ctx)
}

// ConnectorServiceNowAuthUsernamePasswordPtrInput is an input type that accepts ConnectorServiceNowAuthUsernamePasswordArgs, ConnectorServiceNowAuthUsernamePasswordPtr and ConnectorServiceNowAuthUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `ConnectorServiceNowAuthUsernamePasswordPtrInput` via:
//
//	        ConnectorServiceNowAuthUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type ConnectorServiceNowAuthUsernamePasswordPtrInput interface {
	pulumi.Input

	ToConnectorServiceNowAuthUsernamePasswordPtrOutput() ConnectorServiceNowAuthUsernamePasswordPtrOutput
	ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(context.Context) ConnectorServiceNowAuthUsernamePasswordPtrOutput
}

type connectorServiceNowAuthUsernamePasswordPtrType ConnectorServiceNowAuthUsernamePasswordArgs

func ConnectorServiceNowAuthUsernamePasswordPtr(v *ConnectorServiceNowAuthUsernamePasswordArgs) ConnectorServiceNowAuthUsernamePasswordPtrInput {
	return (*connectorServiceNowAuthUsernamePasswordPtrType)(v)
}

func (*connectorServiceNowAuthUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (i *connectorServiceNowAuthUsernamePasswordPtrType) ToConnectorServiceNowAuthUsernamePasswordPtrOutput() ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return i.ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *connectorServiceNowAuthUsernamePasswordPtrType) ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorServiceNowAuthUsernamePasswordPtrOutput)
}

type ConnectorServiceNowAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (ConnectorServiceNowAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (o ConnectorServiceNowAuthUsernamePasswordOutput) ToConnectorServiceNowAuthUsernamePasswordOutput() ConnectorServiceNowAuthUsernamePasswordOutput {
	return o
}

func (o ConnectorServiceNowAuthUsernamePasswordOutput) ToConnectorServiceNowAuthUsernamePasswordOutputWithContext(ctx context.Context) ConnectorServiceNowAuthUsernamePasswordOutput {
	return o
}

func (o ConnectorServiceNowAuthUsernamePasswordOutput) ToConnectorServiceNowAuthUsernamePasswordPtrOutput() ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return o.ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o ConnectorServiceNowAuthUsernamePasswordOutput) ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorServiceNowAuthUsernamePassword) *ConnectorServiceNowAuthUsernamePassword {
		return &v
	}).(ConnectorServiceNowAuthUsernamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorServiceNowAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o ConnectorServiceNowAuthUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorServiceNowAuthUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorServiceNowAuthUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ConnectorServiceNowAuthUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (ConnectorServiceNowAuthUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (o ConnectorServiceNowAuthUsernamePasswordPtrOutput) ToConnectorServiceNowAuthUsernamePasswordPtrOutput() ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return o
}

func (o ConnectorServiceNowAuthUsernamePasswordPtrOutput) ToConnectorServiceNowAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) ConnectorServiceNowAuthUsernamePasswordPtrOutput {
	return o
}

func (o ConnectorServiceNowAuthUsernamePasswordPtrOutput) Elem() ConnectorServiceNowAuthUsernamePasswordOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthUsernamePassword) ConnectorServiceNowAuthUsernamePassword {
		if v != nil {
			return *v
		}
		var ret ConnectorServiceNowAuthUsernamePassword
		return ret
	}).(ConnectorServiceNowAuthUsernamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorServiceNowAuthUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o ConnectorServiceNowAuthUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorServiceNowAuthUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorServiceNowAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorSpotPermanentToken struct {
	// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef string `pulumi:"apiTokenRef"`
	// Connect only using delegates with these tags.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Execute on delegate or not.
	ExecuteOnDelegate *bool `pulumi:"executeOnDelegate"`
	// Spot account id.
	SpotAccountId *string `pulumi:"spotAccountId"`
	// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SpotAccountIdRef *string `pulumi:"spotAccountIdRef"`
}

// ConnectorSpotPermanentTokenInput is an input type that accepts ConnectorSpotPermanentTokenArgs and ConnectorSpotPermanentTokenOutput values.
// You can construct a concrete instance of `ConnectorSpotPermanentTokenInput` via:
//
//	ConnectorSpotPermanentTokenArgs{...}
type ConnectorSpotPermanentTokenInput interface {
	pulumi.Input

	ToConnectorSpotPermanentTokenOutput() ConnectorSpotPermanentTokenOutput
	ToConnectorSpotPermanentTokenOutputWithContext(context.Context) ConnectorSpotPermanentTokenOutput
}

type ConnectorSpotPermanentTokenArgs struct {
	// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
	// Connect only using delegates with these tags.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Execute on delegate or not.
	ExecuteOnDelegate pulumi.BoolPtrInput `pulumi:"executeOnDelegate"`
	// Spot account id.
	SpotAccountId pulumi.StringPtrInput `pulumi:"spotAccountId"`
	// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SpotAccountIdRef pulumi.StringPtrInput `pulumi:"spotAccountIdRef"`
}

func (ConnectorSpotPermanentTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSpotPermanentToken)(nil)).Elem()
}

func (i ConnectorSpotPermanentTokenArgs) ToConnectorSpotPermanentTokenOutput() ConnectorSpotPermanentTokenOutput {
	return i.ToConnectorSpotPermanentTokenOutputWithContext(context.Background())
}

func (i ConnectorSpotPermanentTokenArgs) ToConnectorSpotPermanentTokenOutputWithContext(ctx context.Context) ConnectorSpotPermanentTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSpotPermanentTokenOutput)
}

func (i ConnectorSpotPermanentTokenArgs) ToConnectorSpotPermanentTokenPtrOutput() ConnectorSpotPermanentTokenPtrOutput {
	return i.ToConnectorSpotPermanentTokenPtrOutputWithContext(context.Background())
}

func (i ConnectorSpotPermanentTokenArgs) ToConnectorSpotPermanentTokenPtrOutputWithContext(ctx context.Context) ConnectorSpotPermanentTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSpotPermanentTokenOutput).ToConnectorSpotPermanentTokenPtrOutputWithContext(ctx)
}

// ConnectorSpotPermanentTokenPtrInput is an input type that accepts ConnectorSpotPermanentTokenArgs, ConnectorSpotPermanentTokenPtr and ConnectorSpotPermanentTokenPtrOutput values.
// You can construct a concrete instance of `ConnectorSpotPermanentTokenPtrInput` via:
//
//	        ConnectorSpotPermanentTokenArgs{...}
//
//	or:
//
//	        nil
type ConnectorSpotPermanentTokenPtrInput interface {
	pulumi.Input

	ToConnectorSpotPermanentTokenPtrOutput() ConnectorSpotPermanentTokenPtrOutput
	ToConnectorSpotPermanentTokenPtrOutputWithContext(context.Context) ConnectorSpotPermanentTokenPtrOutput
}

type connectorSpotPermanentTokenPtrType ConnectorSpotPermanentTokenArgs

func ConnectorSpotPermanentTokenPtr(v *ConnectorSpotPermanentTokenArgs) ConnectorSpotPermanentTokenPtrInput {
	return (*connectorSpotPermanentTokenPtrType)(v)
}

func (*connectorSpotPermanentTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSpotPermanentToken)(nil)).Elem()
}

func (i *connectorSpotPermanentTokenPtrType) ToConnectorSpotPermanentTokenPtrOutput() ConnectorSpotPermanentTokenPtrOutput {
	return i.ToConnectorSpotPermanentTokenPtrOutputWithContext(context.Background())
}

func (i *connectorSpotPermanentTokenPtrType) ToConnectorSpotPermanentTokenPtrOutputWithContext(ctx context.Context) ConnectorSpotPermanentTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorSpotPermanentTokenPtrOutput)
}

type ConnectorSpotPermanentTokenOutput struct{ *pulumi.OutputState }

func (ConnectorSpotPermanentTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorSpotPermanentToken)(nil)).Elem()
}

func (o ConnectorSpotPermanentTokenOutput) ToConnectorSpotPermanentTokenOutput() ConnectorSpotPermanentTokenOutput {
	return o
}

func (o ConnectorSpotPermanentTokenOutput) ToConnectorSpotPermanentTokenOutputWithContext(ctx context.Context) ConnectorSpotPermanentTokenOutput {
	return o
}

func (o ConnectorSpotPermanentTokenOutput) ToConnectorSpotPermanentTokenPtrOutput() ConnectorSpotPermanentTokenPtrOutput {
	return o.ToConnectorSpotPermanentTokenPtrOutputWithContext(context.Background())
}

func (o ConnectorSpotPermanentTokenOutput) ToConnectorSpotPermanentTokenPtrOutputWithContext(ctx context.Context) ConnectorSpotPermanentTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorSpotPermanentToken) *ConnectorSpotPermanentToken {
		return &v
	}).(ConnectorSpotPermanentTokenPtrOutput)
}

// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorSpotPermanentTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorSpotPermanentToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

// Connect only using delegates with these tags.
func (o ConnectorSpotPermanentTokenOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorSpotPermanentToken) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Execute on delegate or not.
func (o ConnectorSpotPermanentTokenOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectorSpotPermanentToken) *bool { return v.ExecuteOnDelegate }).(pulumi.BoolPtrOutput)
}

// Spot account id.
func (o ConnectorSpotPermanentTokenOutput) SpotAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSpotPermanentToken) *string { return v.SpotAccountId }).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorSpotPermanentTokenOutput) SpotAccountIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorSpotPermanentToken) *string { return v.SpotAccountIdRef }).(pulumi.StringPtrOutput)
}

type ConnectorSpotPermanentTokenPtrOutput struct{ *pulumi.OutputState }

func (ConnectorSpotPermanentTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorSpotPermanentToken)(nil)).Elem()
}

func (o ConnectorSpotPermanentTokenPtrOutput) ToConnectorSpotPermanentTokenPtrOutput() ConnectorSpotPermanentTokenPtrOutput {
	return o
}

func (o ConnectorSpotPermanentTokenPtrOutput) ToConnectorSpotPermanentTokenPtrOutputWithContext(ctx context.Context) ConnectorSpotPermanentTokenPtrOutput {
	return o
}

func (o ConnectorSpotPermanentTokenPtrOutput) Elem() ConnectorSpotPermanentTokenOutput {
	return o.ApplyT(func(v *ConnectorSpotPermanentToken) ConnectorSpotPermanentToken {
		if v != nil {
			return *v
		}
		var ret ConnectorSpotPermanentToken
		return ret
	}).(ConnectorSpotPermanentTokenOutput)
}

// Reference to the Harness secret containing the permanent api token. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorSpotPermanentTokenPtrOutput) ApiTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSpotPermanentToken) *string {
		if v == nil {
			return nil
		}
		return &v.ApiTokenRef
	}).(pulumi.StringPtrOutput)
}

// Connect only using delegates with these tags.
func (o ConnectorSpotPermanentTokenPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorSpotPermanentToken) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Execute on delegate or not.
func (o ConnectorSpotPermanentTokenPtrOutput) ExecuteOnDelegate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorSpotPermanentToken) *bool {
		if v == nil {
			return nil
		}
		return v.ExecuteOnDelegate
	}).(pulumi.BoolPtrOutput)
}

// Spot account id.
func (o ConnectorSpotPermanentTokenPtrOutput) SpotAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSpotPermanentToken) *string {
		if v == nil {
			return nil
		}
		return v.SpotAccountId
	}).(pulumi.StringPtrOutput)
}

// Reference to the Harness secret containing the spot account id. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o ConnectorSpotPermanentTokenPtrOutput) SpotAccountIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorSpotPermanentToken) *string {
		if v == nil {
			return nil
		}
		return v.SpotAccountIdRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorTasCredentials struct {
	// Authenticate to Tas using manual details.
	TasManualDetails ConnectorTasCredentialsTasManualDetails `pulumi:"tasManualDetails"`
	// Type can be ManualConfig.
	Type string `pulumi:"type"`
}

// ConnectorTasCredentialsInput is an input type that accepts ConnectorTasCredentialsArgs and ConnectorTasCredentialsOutput values.
// You can construct a concrete instance of `ConnectorTasCredentialsInput` via:
//
//	ConnectorTasCredentialsArgs{...}
type ConnectorTasCredentialsInput interface {
	pulumi.Input

	ToConnectorTasCredentialsOutput() ConnectorTasCredentialsOutput
	ToConnectorTasCredentialsOutputWithContext(context.Context) ConnectorTasCredentialsOutput
}

type ConnectorTasCredentialsArgs struct {
	// Authenticate to Tas using manual details.
	TasManualDetails ConnectorTasCredentialsTasManualDetailsInput `pulumi:"tasManualDetails"`
	// Type can be ManualConfig.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConnectorTasCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTasCredentials)(nil)).Elem()
}

func (i ConnectorTasCredentialsArgs) ToConnectorTasCredentialsOutput() ConnectorTasCredentialsOutput {
	return i.ToConnectorTasCredentialsOutputWithContext(context.Background())
}

func (i ConnectorTasCredentialsArgs) ToConnectorTasCredentialsOutputWithContext(ctx context.Context) ConnectorTasCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTasCredentialsOutput)
}

func (i ConnectorTasCredentialsArgs) ToConnectorTasCredentialsPtrOutput() ConnectorTasCredentialsPtrOutput {
	return i.ToConnectorTasCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorTasCredentialsArgs) ToConnectorTasCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTasCredentialsOutput).ToConnectorTasCredentialsPtrOutputWithContext(ctx)
}

// ConnectorTasCredentialsPtrInput is an input type that accepts ConnectorTasCredentialsArgs, ConnectorTasCredentialsPtr and ConnectorTasCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorTasCredentialsPtrInput` via:
//
//	        ConnectorTasCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorTasCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorTasCredentialsPtrOutput() ConnectorTasCredentialsPtrOutput
	ToConnectorTasCredentialsPtrOutputWithContext(context.Context) ConnectorTasCredentialsPtrOutput
}

type connectorTasCredentialsPtrType ConnectorTasCredentialsArgs

func ConnectorTasCredentialsPtr(v *ConnectorTasCredentialsArgs) ConnectorTasCredentialsPtrInput {
	return (*connectorTasCredentialsPtrType)(v)
}

func (*connectorTasCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTasCredentials)(nil)).Elem()
}

func (i *connectorTasCredentialsPtrType) ToConnectorTasCredentialsPtrOutput() ConnectorTasCredentialsPtrOutput {
	return i.ToConnectorTasCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorTasCredentialsPtrType) ToConnectorTasCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTasCredentialsPtrOutput)
}

type ConnectorTasCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorTasCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTasCredentials)(nil)).Elem()
}

func (o ConnectorTasCredentialsOutput) ToConnectorTasCredentialsOutput() ConnectorTasCredentialsOutput {
	return o
}

func (o ConnectorTasCredentialsOutput) ToConnectorTasCredentialsOutputWithContext(ctx context.Context) ConnectorTasCredentialsOutput {
	return o
}

func (o ConnectorTasCredentialsOutput) ToConnectorTasCredentialsPtrOutput() ConnectorTasCredentialsPtrOutput {
	return o.ToConnectorTasCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorTasCredentialsOutput) ToConnectorTasCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTasCredentials) *ConnectorTasCredentials {
		return &v
	}).(ConnectorTasCredentialsPtrOutput)
}

// Authenticate to Tas using manual details.
func (o ConnectorTasCredentialsOutput) TasManualDetails() ConnectorTasCredentialsTasManualDetailsOutput {
	return o.ApplyT(func(v ConnectorTasCredentials) ConnectorTasCredentialsTasManualDetails { return v.TasManualDetails }).(ConnectorTasCredentialsTasManualDetailsOutput)
}

// Type can be ManualConfig.
func (o ConnectorTasCredentialsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTasCredentials) string { return v.Type }).(pulumi.StringOutput)
}

type ConnectorTasCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorTasCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTasCredentials)(nil)).Elem()
}

func (o ConnectorTasCredentialsPtrOutput) ToConnectorTasCredentialsPtrOutput() ConnectorTasCredentialsPtrOutput {
	return o
}

func (o ConnectorTasCredentialsPtrOutput) ToConnectorTasCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsPtrOutput {
	return o
}

func (o ConnectorTasCredentialsPtrOutput) Elem() ConnectorTasCredentialsOutput {
	return o.ApplyT(func(v *ConnectorTasCredentials) ConnectorTasCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorTasCredentials
		return ret
	}).(ConnectorTasCredentialsOutput)
}

// Authenticate to Tas using manual details.
func (o ConnectorTasCredentialsPtrOutput) TasManualDetails() ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return o.ApplyT(func(v *ConnectorTasCredentials) *ConnectorTasCredentialsTasManualDetails {
		if v == nil {
			return nil
		}
		return &v.TasManualDetails
	}).(ConnectorTasCredentialsTasManualDetailsPtrOutput)
}

// Type can be ManualConfig.
func (o ConnectorTasCredentialsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTasCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ConnectorTasCredentialsTasManualDetails struct {
	EndpointUrl string  `pulumi:"endpointUrl"`
	PasswordRef string  `pulumi:"passwordRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// ConnectorTasCredentialsTasManualDetailsInput is an input type that accepts ConnectorTasCredentialsTasManualDetailsArgs and ConnectorTasCredentialsTasManualDetailsOutput values.
// You can construct a concrete instance of `ConnectorTasCredentialsTasManualDetailsInput` via:
//
//	ConnectorTasCredentialsTasManualDetailsArgs{...}
type ConnectorTasCredentialsTasManualDetailsInput interface {
	pulumi.Input

	ToConnectorTasCredentialsTasManualDetailsOutput() ConnectorTasCredentialsTasManualDetailsOutput
	ToConnectorTasCredentialsTasManualDetailsOutputWithContext(context.Context) ConnectorTasCredentialsTasManualDetailsOutput
}

type ConnectorTasCredentialsTasManualDetailsArgs struct {
	EndpointUrl pulumi.StringInput    `pulumi:"endpointUrl"`
	PasswordRef pulumi.StringInput    `pulumi:"passwordRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (ConnectorTasCredentialsTasManualDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTasCredentialsTasManualDetails)(nil)).Elem()
}

func (i ConnectorTasCredentialsTasManualDetailsArgs) ToConnectorTasCredentialsTasManualDetailsOutput() ConnectorTasCredentialsTasManualDetailsOutput {
	return i.ToConnectorTasCredentialsTasManualDetailsOutputWithContext(context.Background())
}

func (i ConnectorTasCredentialsTasManualDetailsArgs) ToConnectorTasCredentialsTasManualDetailsOutputWithContext(ctx context.Context) ConnectorTasCredentialsTasManualDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTasCredentialsTasManualDetailsOutput)
}

func (i ConnectorTasCredentialsTasManualDetailsArgs) ToConnectorTasCredentialsTasManualDetailsPtrOutput() ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return i.ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(context.Background())
}

func (i ConnectorTasCredentialsTasManualDetailsArgs) ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTasCredentialsTasManualDetailsOutput).ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(ctx)
}

// ConnectorTasCredentialsTasManualDetailsPtrInput is an input type that accepts ConnectorTasCredentialsTasManualDetailsArgs, ConnectorTasCredentialsTasManualDetailsPtr and ConnectorTasCredentialsTasManualDetailsPtrOutput values.
// You can construct a concrete instance of `ConnectorTasCredentialsTasManualDetailsPtrInput` via:
//
//	        ConnectorTasCredentialsTasManualDetailsArgs{...}
//
//	or:
//
//	        nil
type ConnectorTasCredentialsTasManualDetailsPtrInput interface {
	pulumi.Input

	ToConnectorTasCredentialsTasManualDetailsPtrOutput() ConnectorTasCredentialsTasManualDetailsPtrOutput
	ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(context.Context) ConnectorTasCredentialsTasManualDetailsPtrOutput
}

type connectorTasCredentialsTasManualDetailsPtrType ConnectorTasCredentialsTasManualDetailsArgs

func ConnectorTasCredentialsTasManualDetailsPtr(v *ConnectorTasCredentialsTasManualDetailsArgs) ConnectorTasCredentialsTasManualDetailsPtrInput {
	return (*connectorTasCredentialsTasManualDetailsPtrType)(v)
}

func (*connectorTasCredentialsTasManualDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTasCredentialsTasManualDetails)(nil)).Elem()
}

func (i *connectorTasCredentialsTasManualDetailsPtrType) ToConnectorTasCredentialsTasManualDetailsPtrOutput() ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return i.ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(context.Background())
}

func (i *connectorTasCredentialsTasManualDetailsPtrType) ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTasCredentialsTasManualDetailsPtrOutput)
}

type ConnectorTasCredentialsTasManualDetailsOutput struct{ *pulumi.OutputState }

func (ConnectorTasCredentialsTasManualDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTasCredentialsTasManualDetails)(nil)).Elem()
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) ToConnectorTasCredentialsTasManualDetailsOutput() ConnectorTasCredentialsTasManualDetailsOutput {
	return o
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) ToConnectorTasCredentialsTasManualDetailsOutputWithContext(ctx context.Context) ConnectorTasCredentialsTasManualDetailsOutput {
	return o
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) ToConnectorTasCredentialsTasManualDetailsPtrOutput() ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return o.ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(context.Background())
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTasCredentialsTasManualDetails) *ConnectorTasCredentialsTasManualDetails {
		return &v
	}).(ConnectorTasCredentialsTasManualDetailsPtrOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) EndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTasCredentialsTasManualDetails) string { return v.EndpointUrl }).(pulumi.StringOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTasCredentialsTasManualDetails) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTasCredentialsTasManualDetails) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorTasCredentialsTasManualDetails) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type ConnectorTasCredentialsTasManualDetailsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorTasCredentialsTasManualDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTasCredentialsTasManualDetails)(nil)).Elem()
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) ToConnectorTasCredentialsTasManualDetailsPtrOutput() ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return o
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) ToConnectorTasCredentialsTasManualDetailsPtrOutputWithContext(ctx context.Context) ConnectorTasCredentialsTasManualDetailsPtrOutput {
	return o
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) Elem() ConnectorTasCredentialsTasManualDetailsOutput {
	return o.ApplyT(func(v *ConnectorTasCredentialsTasManualDetails) ConnectorTasCredentialsTasManualDetails {
		if v != nil {
			return *v
		}
		var ret ConnectorTasCredentialsTasManualDetails
		return ret
	}).(ConnectorTasCredentialsTasManualDetailsOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) EndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTasCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTasCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTasCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorTasCredentialsTasManualDetailsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTasCredentialsTasManualDetails) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ConnectorTerraformCloudCredentials struct {
	// API token credentials to use for authentication.
	ApiToken ConnectorTerraformCloudCredentialsApiToken `pulumi:"apiToken"`
}

// ConnectorTerraformCloudCredentialsInput is an input type that accepts ConnectorTerraformCloudCredentialsArgs and ConnectorTerraformCloudCredentialsOutput values.
// You can construct a concrete instance of `ConnectorTerraformCloudCredentialsInput` via:
//
//	ConnectorTerraformCloudCredentialsArgs{...}
type ConnectorTerraformCloudCredentialsInput interface {
	pulumi.Input

	ToConnectorTerraformCloudCredentialsOutput() ConnectorTerraformCloudCredentialsOutput
	ToConnectorTerraformCloudCredentialsOutputWithContext(context.Context) ConnectorTerraformCloudCredentialsOutput
}

type ConnectorTerraformCloudCredentialsArgs struct {
	// API token credentials to use for authentication.
	ApiToken ConnectorTerraformCloudCredentialsApiTokenInput `pulumi:"apiToken"`
}

func (ConnectorTerraformCloudCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTerraformCloudCredentials)(nil)).Elem()
}

func (i ConnectorTerraformCloudCredentialsArgs) ToConnectorTerraformCloudCredentialsOutput() ConnectorTerraformCloudCredentialsOutput {
	return i.ToConnectorTerraformCloudCredentialsOutputWithContext(context.Background())
}

func (i ConnectorTerraformCloudCredentialsArgs) ToConnectorTerraformCloudCredentialsOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTerraformCloudCredentialsOutput)
}

func (i ConnectorTerraformCloudCredentialsArgs) ToConnectorTerraformCloudCredentialsPtrOutput() ConnectorTerraformCloudCredentialsPtrOutput {
	return i.ToConnectorTerraformCloudCredentialsPtrOutputWithContext(context.Background())
}

func (i ConnectorTerraformCloudCredentialsArgs) ToConnectorTerraformCloudCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTerraformCloudCredentialsOutput).ToConnectorTerraformCloudCredentialsPtrOutputWithContext(ctx)
}

// ConnectorTerraformCloudCredentialsPtrInput is an input type that accepts ConnectorTerraformCloudCredentialsArgs, ConnectorTerraformCloudCredentialsPtr and ConnectorTerraformCloudCredentialsPtrOutput values.
// You can construct a concrete instance of `ConnectorTerraformCloudCredentialsPtrInput` via:
//
//	        ConnectorTerraformCloudCredentialsArgs{...}
//
//	or:
//
//	        nil
type ConnectorTerraformCloudCredentialsPtrInput interface {
	pulumi.Input

	ToConnectorTerraformCloudCredentialsPtrOutput() ConnectorTerraformCloudCredentialsPtrOutput
	ToConnectorTerraformCloudCredentialsPtrOutputWithContext(context.Context) ConnectorTerraformCloudCredentialsPtrOutput
}

type connectorTerraformCloudCredentialsPtrType ConnectorTerraformCloudCredentialsArgs

func ConnectorTerraformCloudCredentialsPtr(v *ConnectorTerraformCloudCredentialsArgs) ConnectorTerraformCloudCredentialsPtrInput {
	return (*connectorTerraformCloudCredentialsPtrType)(v)
}

func (*connectorTerraformCloudCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTerraformCloudCredentials)(nil)).Elem()
}

func (i *connectorTerraformCloudCredentialsPtrType) ToConnectorTerraformCloudCredentialsPtrOutput() ConnectorTerraformCloudCredentialsPtrOutput {
	return i.ToConnectorTerraformCloudCredentialsPtrOutputWithContext(context.Background())
}

func (i *connectorTerraformCloudCredentialsPtrType) ToConnectorTerraformCloudCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTerraformCloudCredentialsPtrOutput)
}

type ConnectorTerraformCloudCredentialsOutput struct{ *pulumi.OutputState }

func (ConnectorTerraformCloudCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTerraformCloudCredentials)(nil)).Elem()
}

func (o ConnectorTerraformCloudCredentialsOutput) ToConnectorTerraformCloudCredentialsOutput() ConnectorTerraformCloudCredentialsOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsOutput) ToConnectorTerraformCloudCredentialsOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsOutput) ToConnectorTerraformCloudCredentialsPtrOutput() ConnectorTerraformCloudCredentialsPtrOutput {
	return o.ToConnectorTerraformCloudCredentialsPtrOutputWithContext(context.Background())
}

func (o ConnectorTerraformCloudCredentialsOutput) ToConnectorTerraformCloudCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTerraformCloudCredentials) *ConnectorTerraformCloudCredentials {
		return &v
	}).(ConnectorTerraformCloudCredentialsPtrOutput)
}

// API token credentials to use for authentication.
func (o ConnectorTerraformCloudCredentialsOutput) ApiToken() ConnectorTerraformCloudCredentialsApiTokenOutput {
	return o.ApplyT(func(v ConnectorTerraformCloudCredentials) ConnectorTerraformCloudCredentialsApiToken {
		return v.ApiToken
	}).(ConnectorTerraformCloudCredentialsApiTokenOutput)
}

type ConnectorTerraformCloudCredentialsPtrOutput struct{ *pulumi.OutputState }

func (ConnectorTerraformCloudCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTerraformCloudCredentials)(nil)).Elem()
}

func (o ConnectorTerraformCloudCredentialsPtrOutput) ToConnectorTerraformCloudCredentialsPtrOutput() ConnectorTerraformCloudCredentialsPtrOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsPtrOutput) ToConnectorTerraformCloudCredentialsPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsPtrOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsPtrOutput) Elem() ConnectorTerraformCloudCredentialsOutput {
	return o.ApplyT(func(v *ConnectorTerraformCloudCredentials) ConnectorTerraformCloudCredentials {
		if v != nil {
			return *v
		}
		var ret ConnectorTerraformCloudCredentials
		return ret
	}).(ConnectorTerraformCloudCredentialsOutput)
}

// API token credentials to use for authentication.
func (o ConnectorTerraformCloudCredentialsPtrOutput) ApiToken() ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return o.ApplyT(func(v *ConnectorTerraformCloudCredentials) *ConnectorTerraformCloudCredentialsApiToken {
		if v == nil {
			return nil
		}
		return &v.ApiToken
	}).(ConnectorTerraformCloudCredentialsApiTokenPtrOutput)
}

type ConnectorTerraformCloudCredentialsApiToken struct {
	ApiTokenRef string `pulumi:"apiTokenRef"`
}

// ConnectorTerraformCloudCredentialsApiTokenInput is an input type that accepts ConnectorTerraformCloudCredentialsApiTokenArgs and ConnectorTerraformCloudCredentialsApiTokenOutput values.
// You can construct a concrete instance of `ConnectorTerraformCloudCredentialsApiTokenInput` via:
//
//	ConnectorTerraformCloudCredentialsApiTokenArgs{...}
type ConnectorTerraformCloudCredentialsApiTokenInput interface {
	pulumi.Input

	ToConnectorTerraformCloudCredentialsApiTokenOutput() ConnectorTerraformCloudCredentialsApiTokenOutput
	ToConnectorTerraformCloudCredentialsApiTokenOutputWithContext(context.Context) ConnectorTerraformCloudCredentialsApiTokenOutput
}

type ConnectorTerraformCloudCredentialsApiTokenArgs struct {
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
}

func (ConnectorTerraformCloudCredentialsApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTerraformCloudCredentialsApiToken)(nil)).Elem()
}

func (i ConnectorTerraformCloudCredentialsApiTokenArgs) ToConnectorTerraformCloudCredentialsApiTokenOutput() ConnectorTerraformCloudCredentialsApiTokenOutput {
	return i.ToConnectorTerraformCloudCredentialsApiTokenOutputWithContext(context.Background())
}

func (i ConnectorTerraformCloudCredentialsApiTokenArgs) ToConnectorTerraformCloudCredentialsApiTokenOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTerraformCloudCredentialsApiTokenOutput)
}

func (i ConnectorTerraformCloudCredentialsApiTokenArgs) ToConnectorTerraformCloudCredentialsApiTokenPtrOutput() ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return i.ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(context.Background())
}

func (i ConnectorTerraformCloudCredentialsApiTokenArgs) ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTerraformCloudCredentialsApiTokenOutput).ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(ctx)
}

// ConnectorTerraformCloudCredentialsApiTokenPtrInput is an input type that accepts ConnectorTerraformCloudCredentialsApiTokenArgs, ConnectorTerraformCloudCredentialsApiTokenPtr and ConnectorTerraformCloudCredentialsApiTokenPtrOutput values.
// You can construct a concrete instance of `ConnectorTerraformCloudCredentialsApiTokenPtrInput` via:
//
//	        ConnectorTerraformCloudCredentialsApiTokenArgs{...}
//
//	or:
//
//	        nil
type ConnectorTerraformCloudCredentialsApiTokenPtrInput interface {
	pulumi.Input

	ToConnectorTerraformCloudCredentialsApiTokenPtrOutput() ConnectorTerraformCloudCredentialsApiTokenPtrOutput
	ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(context.Context) ConnectorTerraformCloudCredentialsApiTokenPtrOutput
}

type connectorTerraformCloudCredentialsApiTokenPtrType ConnectorTerraformCloudCredentialsApiTokenArgs

func ConnectorTerraformCloudCredentialsApiTokenPtr(v *ConnectorTerraformCloudCredentialsApiTokenArgs) ConnectorTerraformCloudCredentialsApiTokenPtrInput {
	return (*connectorTerraformCloudCredentialsApiTokenPtrType)(v)
}

func (*connectorTerraformCloudCredentialsApiTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTerraformCloudCredentialsApiToken)(nil)).Elem()
}

func (i *connectorTerraformCloudCredentialsApiTokenPtrType) ToConnectorTerraformCloudCredentialsApiTokenPtrOutput() ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return i.ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(context.Background())
}

func (i *connectorTerraformCloudCredentialsApiTokenPtrType) ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorTerraformCloudCredentialsApiTokenPtrOutput)
}

type ConnectorTerraformCloudCredentialsApiTokenOutput struct{ *pulumi.OutputState }

func (ConnectorTerraformCloudCredentialsApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorTerraformCloudCredentialsApiToken)(nil)).Elem()
}

func (o ConnectorTerraformCloudCredentialsApiTokenOutput) ToConnectorTerraformCloudCredentialsApiTokenOutput() ConnectorTerraformCloudCredentialsApiTokenOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsApiTokenOutput) ToConnectorTerraformCloudCredentialsApiTokenOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsApiTokenOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsApiTokenOutput) ToConnectorTerraformCloudCredentialsApiTokenPtrOutput() ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return o.ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(context.Background())
}

func (o ConnectorTerraformCloudCredentialsApiTokenOutput) ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorTerraformCloudCredentialsApiToken) *ConnectorTerraformCloudCredentialsApiToken {
		return &v
	}).(ConnectorTerraformCloudCredentialsApiTokenPtrOutput)
}

func (o ConnectorTerraformCloudCredentialsApiTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorTerraformCloudCredentialsApiToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

type ConnectorTerraformCloudCredentialsApiTokenPtrOutput struct{ *pulumi.OutputState }

func (ConnectorTerraformCloudCredentialsApiTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorTerraformCloudCredentialsApiToken)(nil)).Elem()
}

func (o ConnectorTerraformCloudCredentialsApiTokenPtrOutput) ToConnectorTerraformCloudCredentialsApiTokenPtrOutput() ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsApiTokenPtrOutput) ToConnectorTerraformCloudCredentialsApiTokenPtrOutputWithContext(ctx context.Context) ConnectorTerraformCloudCredentialsApiTokenPtrOutput {
	return o
}

func (o ConnectorTerraformCloudCredentialsApiTokenPtrOutput) Elem() ConnectorTerraformCloudCredentialsApiTokenOutput {
	return o.ApplyT(func(v *ConnectorTerraformCloudCredentialsApiToken) ConnectorTerraformCloudCredentialsApiToken {
		if v != nil {
			return *v
		}
		var ret ConnectorTerraformCloudCredentialsApiToken
		return ret
	}).(ConnectorTerraformCloudCredentialsApiTokenOutput)
}

func (o ConnectorTerraformCloudCredentialsApiTokenPtrOutput) ApiTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorTerraformCloudCredentialsApiToken) *string {
		if v == nil {
			return nil
		}
		return &v.ApiTokenRef
	}).(pulumi.StringPtrOutput)
}

type DockerConnectorCredentials struct {
	// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// The username to use for the docker registry.
	Username *string `pulumi:"username"`
	// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// DockerConnectorCredentialsInput is an input type that accepts DockerConnectorCredentialsArgs and DockerConnectorCredentialsOutput values.
// You can construct a concrete instance of `DockerConnectorCredentialsInput` via:
//
//	DockerConnectorCredentialsArgs{...}
type DockerConnectorCredentialsInput interface {
	pulumi.Input

	ToDockerConnectorCredentialsOutput() DockerConnectorCredentialsOutput
	ToDockerConnectorCredentialsOutputWithContext(context.Context) DockerConnectorCredentialsOutput
}

type DockerConnectorCredentialsArgs struct {
	// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// The username to use for the docker registry.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (DockerConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerConnectorCredentials)(nil)).Elem()
}

func (i DockerConnectorCredentialsArgs) ToDockerConnectorCredentialsOutput() DockerConnectorCredentialsOutput {
	return i.ToDockerConnectorCredentialsOutputWithContext(context.Background())
}

func (i DockerConnectorCredentialsArgs) ToDockerConnectorCredentialsOutputWithContext(ctx context.Context) DockerConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerConnectorCredentialsOutput)
}

func (i DockerConnectorCredentialsArgs) ToDockerConnectorCredentialsPtrOutput() DockerConnectorCredentialsPtrOutput {
	return i.ToDockerConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i DockerConnectorCredentialsArgs) ToDockerConnectorCredentialsPtrOutputWithContext(ctx context.Context) DockerConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerConnectorCredentialsOutput).ToDockerConnectorCredentialsPtrOutputWithContext(ctx)
}

// DockerConnectorCredentialsPtrInput is an input type that accepts DockerConnectorCredentialsArgs, DockerConnectorCredentialsPtr and DockerConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `DockerConnectorCredentialsPtrInput` via:
//
//	        DockerConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type DockerConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToDockerConnectorCredentialsPtrOutput() DockerConnectorCredentialsPtrOutput
	ToDockerConnectorCredentialsPtrOutputWithContext(context.Context) DockerConnectorCredentialsPtrOutput
}

type dockerConnectorCredentialsPtrType DockerConnectorCredentialsArgs

func DockerConnectorCredentialsPtr(v *DockerConnectorCredentialsArgs) DockerConnectorCredentialsPtrInput {
	return (*dockerConnectorCredentialsPtrType)(v)
}

func (*dockerConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerConnectorCredentials)(nil)).Elem()
}

func (i *dockerConnectorCredentialsPtrType) ToDockerConnectorCredentialsPtrOutput() DockerConnectorCredentialsPtrOutput {
	return i.ToDockerConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *dockerConnectorCredentialsPtrType) ToDockerConnectorCredentialsPtrOutputWithContext(ctx context.Context) DockerConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DockerConnectorCredentialsPtrOutput)
}

type DockerConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (DockerConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DockerConnectorCredentials)(nil)).Elem()
}

func (o DockerConnectorCredentialsOutput) ToDockerConnectorCredentialsOutput() DockerConnectorCredentialsOutput {
	return o
}

func (o DockerConnectorCredentialsOutput) ToDockerConnectorCredentialsOutputWithContext(ctx context.Context) DockerConnectorCredentialsOutput {
	return o
}

func (o DockerConnectorCredentialsOutput) ToDockerConnectorCredentialsPtrOutput() DockerConnectorCredentialsPtrOutput {
	return o.ToDockerConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o DockerConnectorCredentialsOutput) ToDockerConnectorCredentialsPtrOutputWithContext(ctx context.Context) DockerConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DockerConnectorCredentials) *DockerConnectorCredentials {
		return &v
	}).(DockerConnectorCredentialsPtrOutput)
}

// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o DockerConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v DockerConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// The username to use for the docker registry.
func (o DockerConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o DockerConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DockerConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type DockerConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (DockerConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DockerConnectorCredentials)(nil)).Elem()
}

func (o DockerConnectorCredentialsPtrOutput) ToDockerConnectorCredentialsPtrOutput() DockerConnectorCredentialsPtrOutput {
	return o
}

func (o DockerConnectorCredentialsPtrOutput) ToDockerConnectorCredentialsPtrOutputWithContext(ctx context.Context) DockerConnectorCredentialsPtrOutput {
	return o
}

func (o DockerConnectorCredentialsPtrOutput) Elem() DockerConnectorCredentialsOutput {
	return o.ApplyT(func(v *DockerConnectorCredentials) DockerConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret DockerConnectorCredentials
		return ret
	}).(DockerConnectorCredentialsOutput)
}

// The reference to the Harness secret containing the password to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o DockerConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// The username to use for the docker registry.
func (o DockerConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// The reference to the Harness secret containing the username to use for the docker registry. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o DockerConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DockerConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type EnvironmentClustersMappingCluster struct {
	// account Identifier of the account
	Identifier *string `pulumi:"identifier"`
	// name of the cluster
	Name *string `pulumi:"name"`
	// scope at which the cluster exists in harness gitops, project vs org vs account
	Scope *string `pulumi:"scope"`
}

// EnvironmentClustersMappingClusterInput is an input type that accepts EnvironmentClustersMappingClusterArgs and EnvironmentClustersMappingClusterOutput values.
// You can construct a concrete instance of `EnvironmentClustersMappingClusterInput` via:
//
//	EnvironmentClustersMappingClusterArgs{...}
type EnvironmentClustersMappingClusterInput interface {
	pulumi.Input

	ToEnvironmentClustersMappingClusterOutput() EnvironmentClustersMappingClusterOutput
	ToEnvironmentClustersMappingClusterOutputWithContext(context.Context) EnvironmentClustersMappingClusterOutput
}

type EnvironmentClustersMappingClusterArgs struct {
	// account Identifier of the account
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// name of the cluster
	Name pulumi.StringPtrInput `pulumi:"name"`
	// scope at which the cluster exists in harness gitops, project vs org vs account
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (EnvironmentClustersMappingClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentClustersMappingCluster)(nil)).Elem()
}

func (i EnvironmentClustersMappingClusterArgs) ToEnvironmentClustersMappingClusterOutput() EnvironmentClustersMappingClusterOutput {
	return i.ToEnvironmentClustersMappingClusterOutputWithContext(context.Background())
}

func (i EnvironmentClustersMappingClusterArgs) ToEnvironmentClustersMappingClusterOutputWithContext(ctx context.Context) EnvironmentClustersMappingClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentClustersMappingClusterOutput)
}

// EnvironmentClustersMappingClusterArrayInput is an input type that accepts EnvironmentClustersMappingClusterArray and EnvironmentClustersMappingClusterArrayOutput values.
// You can construct a concrete instance of `EnvironmentClustersMappingClusterArrayInput` via:
//
//	EnvironmentClustersMappingClusterArray{ EnvironmentClustersMappingClusterArgs{...} }
type EnvironmentClustersMappingClusterArrayInput interface {
	pulumi.Input

	ToEnvironmentClustersMappingClusterArrayOutput() EnvironmentClustersMappingClusterArrayOutput
	ToEnvironmentClustersMappingClusterArrayOutputWithContext(context.Context) EnvironmentClustersMappingClusterArrayOutput
}

type EnvironmentClustersMappingClusterArray []EnvironmentClustersMappingClusterInput

func (EnvironmentClustersMappingClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentClustersMappingCluster)(nil)).Elem()
}

func (i EnvironmentClustersMappingClusterArray) ToEnvironmentClustersMappingClusterArrayOutput() EnvironmentClustersMappingClusterArrayOutput {
	return i.ToEnvironmentClustersMappingClusterArrayOutputWithContext(context.Background())
}

func (i EnvironmentClustersMappingClusterArray) ToEnvironmentClustersMappingClusterArrayOutputWithContext(ctx context.Context) EnvironmentClustersMappingClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentClustersMappingClusterArrayOutput)
}

type EnvironmentClustersMappingClusterOutput struct{ *pulumi.OutputState }

func (EnvironmentClustersMappingClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentClustersMappingCluster)(nil)).Elem()
}

func (o EnvironmentClustersMappingClusterOutput) ToEnvironmentClustersMappingClusterOutput() EnvironmentClustersMappingClusterOutput {
	return o
}

func (o EnvironmentClustersMappingClusterOutput) ToEnvironmentClustersMappingClusterOutputWithContext(ctx context.Context) EnvironmentClustersMappingClusterOutput {
	return o
}

// account Identifier of the account
func (o EnvironmentClustersMappingClusterOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentClustersMappingCluster) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// name of the cluster
func (o EnvironmentClustersMappingClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentClustersMappingCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// scope at which the cluster exists in harness gitops, project vs org vs account
func (o EnvironmentClustersMappingClusterOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentClustersMappingCluster) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type EnvironmentClustersMappingClusterArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentClustersMappingClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentClustersMappingCluster)(nil)).Elem()
}

func (o EnvironmentClustersMappingClusterArrayOutput) ToEnvironmentClustersMappingClusterArrayOutput() EnvironmentClustersMappingClusterArrayOutput {
	return o
}

func (o EnvironmentClustersMappingClusterArrayOutput) ToEnvironmentClustersMappingClusterArrayOutputWithContext(ctx context.Context) EnvironmentClustersMappingClusterArrayOutput {
	return o
}

func (o EnvironmentClustersMappingClusterArrayOutput) Index(i pulumi.IntInput) EnvironmentClustersMappingClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentClustersMappingCluster {
		return vs[0].([]EnvironmentClustersMappingCluster)[vs[1].(int)]
	}).(EnvironmentClustersMappingClusterOutput)
}

type FeatureFlagGitDetails struct {
	// The commit message to use as part of a gitsync operation
	CommitMsg string `pulumi:"commitMsg"`
}

// FeatureFlagGitDetailsInput is an input type that accepts FeatureFlagGitDetailsArgs and FeatureFlagGitDetailsOutput values.
// You can construct a concrete instance of `FeatureFlagGitDetailsInput` via:
//
//	FeatureFlagGitDetailsArgs{...}
type FeatureFlagGitDetailsInput interface {
	pulumi.Input

	ToFeatureFlagGitDetailsOutput() FeatureFlagGitDetailsOutput
	ToFeatureFlagGitDetailsOutputWithContext(context.Context) FeatureFlagGitDetailsOutput
}

type FeatureFlagGitDetailsArgs struct {
	// The commit message to use as part of a gitsync operation
	CommitMsg pulumi.StringInput `pulumi:"commitMsg"`
}

func (FeatureFlagGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureFlagGitDetails)(nil)).Elem()
}

func (i FeatureFlagGitDetailsArgs) ToFeatureFlagGitDetailsOutput() FeatureFlagGitDetailsOutput {
	return i.ToFeatureFlagGitDetailsOutputWithContext(context.Background())
}

func (i FeatureFlagGitDetailsArgs) ToFeatureFlagGitDetailsOutputWithContext(ctx context.Context) FeatureFlagGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureFlagGitDetailsOutput)
}

func (i FeatureFlagGitDetailsArgs) ToFeatureFlagGitDetailsPtrOutput() FeatureFlagGitDetailsPtrOutput {
	return i.ToFeatureFlagGitDetailsPtrOutputWithContext(context.Background())
}

func (i FeatureFlagGitDetailsArgs) ToFeatureFlagGitDetailsPtrOutputWithContext(ctx context.Context) FeatureFlagGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureFlagGitDetailsOutput).ToFeatureFlagGitDetailsPtrOutputWithContext(ctx)
}

// FeatureFlagGitDetailsPtrInput is an input type that accepts FeatureFlagGitDetailsArgs, FeatureFlagGitDetailsPtr and FeatureFlagGitDetailsPtrOutput values.
// You can construct a concrete instance of `FeatureFlagGitDetailsPtrInput` via:
//
//	        FeatureFlagGitDetailsArgs{...}
//
//	or:
//
//	        nil
type FeatureFlagGitDetailsPtrInput interface {
	pulumi.Input

	ToFeatureFlagGitDetailsPtrOutput() FeatureFlagGitDetailsPtrOutput
	ToFeatureFlagGitDetailsPtrOutputWithContext(context.Context) FeatureFlagGitDetailsPtrOutput
}

type featureFlagGitDetailsPtrType FeatureFlagGitDetailsArgs

func FeatureFlagGitDetailsPtr(v *FeatureFlagGitDetailsArgs) FeatureFlagGitDetailsPtrInput {
	return (*featureFlagGitDetailsPtrType)(v)
}

func (*featureFlagGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureFlagGitDetails)(nil)).Elem()
}

func (i *featureFlagGitDetailsPtrType) ToFeatureFlagGitDetailsPtrOutput() FeatureFlagGitDetailsPtrOutput {
	return i.ToFeatureFlagGitDetailsPtrOutputWithContext(context.Background())
}

func (i *featureFlagGitDetailsPtrType) ToFeatureFlagGitDetailsPtrOutputWithContext(ctx context.Context) FeatureFlagGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureFlagGitDetailsPtrOutput)
}

type FeatureFlagGitDetailsOutput struct{ *pulumi.OutputState }

func (FeatureFlagGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureFlagGitDetails)(nil)).Elem()
}

func (o FeatureFlagGitDetailsOutput) ToFeatureFlagGitDetailsOutput() FeatureFlagGitDetailsOutput {
	return o
}

func (o FeatureFlagGitDetailsOutput) ToFeatureFlagGitDetailsOutputWithContext(ctx context.Context) FeatureFlagGitDetailsOutput {
	return o
}

func (o FeatureFlagGitDetailsOutput) ToFeatureFlagGitDetailsPtrOutput() FeatureFlagGitDetailsPtrOutput {
	return o.ToFeatureFlagGitDetailsPtrOutputWithContext(context.Background())
}

func (o FeatureFlagGitDetailsOutput) ToFeatureFlagGitDetailsPtrOutputWithContext(ctx context.Context) FeatureFlagGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureFlagGitDetails) *FeatureFlagGitDetails {
		return &v
	}).(FeatureFlagGitDetailsPtrOutput)
}

// The commit message to use as part of a gitsync operation
func (o FeatureFlagGitDetailsOutput) CommitMsg() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureFlagGitDetails) string { return v.CommitMsg }).(pulumi.StringOutput)
}

type FeatureFlagGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (FeatureFlagGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureFlagGitDetails)(nil)).Elem()
}

func (o FeatureFlagGitDetailsPtrOutput) ToFeatureFlagGitDetailsPtrOutput() FeatureFlagGitDetailsPtrOutput {
	return o
}

func (o FeatureFlagGitDetailsPtrOutput) ToFeatureFlagGitDetailsPtrOutputWithContext(ctx context.Context) FeatureFlagGitDetailsPtrOutput {
	return o
}

func (o FeatureFlagGitDetailsPtrOutput) Elem() FeatureFlagGitDetailsOutput {
	return o.ApplyT(func(v *FeatureFlagGitDetails) FeatureFlagGitDetails {
		if v != nil {
			return *v
		}
		var ret FeatureFlagGitDetails
		return ret
	}).(FeatureFlagGitDetailsOutput)
}

// The commit message to use as part of a gitsync operation
func (o FeatureFlagGitDetailsPtrOutput) CommitMsg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FeatureFlagGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CommitMsg
	}).(pulumi.StringPtrOutput)
}

type FeatureFlagVariation struct {
	// The description of the variation
	Description string `pulumi:"description"`
	// The identifier of the variation
	Identifier string `pulumi:"identifier"`
	// The user friendly name of the variation
	Name string `pulumi:"name"`
	// The value of the variation
	Value string `pulumi:"value"`
}

// FeatureFlagVariationInput is an input type that accepts FeatureFlagVariationArgs and FeatureFlagVariationOutput values.
// You can construct a concrete instance of `FeatureFlagVariationInput` via:
//
//	FeatureFlagVariationArgs{...}
type FeatureFlagVariationInput interface {
	pulumi.Input

	ToFeatureFlagVariationOutput() FeatureFlagVariationOutput
	ToFeatureFlagVariationOutputWithContext(context.Context) FeatureFlagVariationOutput
}

type FeatureFlagVariationArgs struct {
	// The description of the variation
	Description pulumi.StringInput `pulumi:"description"`
	// The identifier of the variation
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// The user friendly name of the variation
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the variation
	Value pulumi.StringInput `pulumi:"value"`
}

func (FeatureFlagVariationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureFlagVariation)(nil)).Elem()
}

func (i FeatureFlagVariationArgs) ToFeatureFlagVariationOutput() FeatureFlagVariationOutput {
	return i.ToFeatureFlagVariationOutputWithContext(context.Background())
}

func (i FeatureFlagVariationArgs) ToFeatureFlagVariationOutputWithContext(ctx context.Context) FeatureFlagVariationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureFlagVariationOutput)
}

// FeatureFlagVariationArrayInput is an input type that accepts FeatureFlagVariationArray and FeatureFlagVariationArrayOutput values.
// You can construct a concrete instance of `FeatureFlagVariationArrayInput` via:
//
//	FeatureFlagVariationArray{ FeatureFlagVariationArgs{...} }
type FeatureFlagVariationArrayInput interface {
	pulumi.Input

	ToFeatureFlagVariationArrayOutput() FeatureFlagVariationArrayOutput
	ToFeatureFlagVariationArrayOutputWithContext(context.Context) FeatureFlagVariationArrayOutput
}

type FeatureFlagVariationArray []FeatureFlagVariationInput

func (FeatureFlagVariationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureFlagVariation)(nil)).Elem()
}

func (i FeatureFlagVariationArray) ToFeatureFlagVariationArrayOutput() FeatureFlagVariationArrayOutput {
	return i.ToFeatureFlagVariationArrayOutputWithContext(context.Background())
}

func (i FeatureFlagVariationArray) ToFeatureFlagVariationArrayOutputWithContext(ctx context.Context) FeatureFlagVariationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FeatureFlagVariationArrayOutput)
}

type FeatureFlagVariationOutput struct{ *pulumi.OutputState }

func (FeatureFlagVariationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureFlagVariation)(nil)).Elem()
}

func (o FeatureFlagVariationOutput) ToFeatureFlagVariationOutput() FeatureFlagVariationOutput {
	return o
}

func (o FeatureFlagVariationOutput) ToFeatureFlagVariationOutputWithContext(ctx context.Context) FeatureFlagVariationOutput {
	return o
}

// The description of the variation
func (o FeatureFlagVariationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureFlagVariation) string { return v.Description }).(pulumi.StringOutput)
}

// The identifier of the variation
func (o FeatureFlagVariationOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureFlagVariation) string { return v.Identifier }).(pulumi.StringOutput)
}

// The user friendly name of the variation
func (o FeatureFlagVariationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureFlagVariation) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the variation
func (o FeatureFlagVariationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FeatureFlagVariation) string { return v.Value }).(pulumi.StringOutput)
}

type FeatureFlagVariationArrayOutput struct{ *pulumi.OutputState }

func (FeatureFlagVariationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FeatureFlagVariation)(nil)).Elem()
}

func (o FeatureFlagVariationArrayOutput) ToFeatureFlagVariationArrayOutput() FeatureFlagVariationArrayOutput {
	return o
}

func (o FeatureFlagVariationArrayOutput) ToFeatureFlagVariationArrayOutputWithContext(ctx context.Context) FeatureFlagVariationArrayOutput {
	return o
}

func (o FeatureFlagVariationArrayOutput) Index(i pulumi.IntInput) FeatureFlagVariationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FeatureFlagVariation {
		return vs[0].([]FeatureFlagVariation)[vs[1].(int)]
	}).(FeatureFlagVariationOutput)
}

type FiltersFilterProperties struct {
	// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// FiltersFilterPropertiesInput is an input type that accepts FiltersFilterPropertiesArgs and FiltersFilterPropertiesOutput values.
// You can construct a concrete instance of `FiltersFilterPropertiesInput` via:
//
//	FiltersFilterPropertiesArgs{...}
type FiltersFilterPropertiesInput interface {
	pulumi.Input

	ToFiltersFilterPropertiesOutput() FiltersFilterPropertiesOutput
	ToFiltersFilterPropertiesOutputWithContext(context.Context) FiltersFilterPropertiesOutput
}

type FiltersFilterPropertiesArgs struct {
	// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (FiltersFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FiltersFilterProperties)(nil)).Elem()
}

func (i FiltersFilterPropertiesArgs) ToFiltersFilterPropertiesOutput() FiltersFilterPropertiesOutput {
	return i.ToFiltersFilterPropertiesOutputWithContext(context.Background())
}

func (i FiltersFilterPropertiesArgs) ToFiltersFilterPropertiesOutputWithContext(ctx context.Context) FiltersFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FiltersFilterPropertiesOutput)
}

func (i FiltersFilterPropertiesArgs) ToFiltersFilterPropertiesPtrOutput() FiltersFilterPropertiesPtrOutput {
	return i.ToFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i FiltersFilterPropertiesArgs) ToFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) FiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FiltersFilterPropertiesOutput).ToFiltersFilterPropertiesPtrOutputWithContext(ctx)
}

// FiltersFilterPropertiesPtrInput is an input type that accepts FiltersFilterPropertiesArgs, FiltersFilterPropertiesPtr and FiltersFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `FiltersFilterPropertiesPtrInput` via:
//
//	        FiltersFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type FiltersFilterPropertiesPtrInput interface {
	pulumi.Input

	ToFiltersFilterPropertiesPtrOutput() FiltersFilterPropertiesPtrOutput
	ToFiltersFilterPropertiesPtrOutputWithContext(context.Context) FiltersFilterPropertiesPtrOutput
}

type filtersFilterPropertiesPtrType FiltersFilterPropertiesArgs

func FiltersFilterPropertiesPtr(v *FiltersFilterPropertiesArgs) FiltersFilterPropertiesPtrInput {
	return (*filtersFilterPropertiesPtrType)(v)
}

func (*filtersFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FiltersFilterProperties)(nil)).Elem()
}

func (i *filtersFilterPropertiesPtrType) ToFiltersFilterPropertiesPtrOutput() FiltersFilterPropertiesPtrOutput {
	return i.ToFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *filtersFilterPropertiesPtrType) ToFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) FiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FiltersFilterPropertiesPtrOutput)
}

type FiltersFilterPropertiesOutput struct{ *pulumi.OutputState }

func (FiltersFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FiltersFilterProperties)(nil)).Elem()
}

func (o FiltersFilterPropertiesOutput) ToFiltersFilterPropertiesOutput() FiltersFilterPropertiesOutput {
	return o
}

func (o FiltersFilterPropertiesOutput) ToFiltersFilterPropertiesOutputWithContext(ctx context.Context) FiltersFilterPropertiesOutput {
	return o
}

func (o FiltersFilterPropertiesOutput) ToFiltersFilterPropertiesPtrOutput() FiltersFilterPropertiesPtrOutput {
	return o.ToFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o FiltersFilterPropertiesOutput) ToFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) FiltersFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FiltersFilterProperties) *FiltersFilterProperties {
		return &v
	}).(FiltersFilterPropertiesPtrOutput)
}

// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
func (o FiltersFilterPropertiesOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v FiltersFilterProperties) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o FiltersFilterPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FiltersFilterProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type FiltersFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FiltersFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FiltersFilterProperties)(nil)).Elem()
}

func (o FiltersFilterPropertiesPtrOutput) ToFiltersFilterPropertiesPtrOutput() FiltersFilterPropertiesPtrOutput {
	return o
}

func (o FiltersFilterPropertiesPtrOutput) ToFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) FiltersFilterPropertiesPtrOutput {
	return o
}

func (o FiltersFilterPropertiesPtrOutput) Elem() FiltersFilterPropertiesOutput {
	return o.ApplyT(func(v *FiltersFilterProperties) FiltersFilterProperties {
		if v != nil {
			return *v
		}
		var ret FiltersFilterProperties
		return ret
	}).(FiltersFilterPropertiesOutput)
}

// Corresponding Entity of the filter. Currently supported types are {Connector, DelegateProfile, Delegate, EnvironmentGroup, FileStore, Environment}.
func (o FiltersFilterPropertiesPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o FiltersFilterPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type GcpConnectorInheritFromDelegate struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GcpConnectorInheritFromDelegateInput is an input type that accepts GcpConnectorInheritFromDelegateArgs and GcpConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GcpConnectorInheritFromDelegateInput` via:
//
//	GcpConnectorInheritFromDelegateArgs{...}
type GcpConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGcpConnectorInheritFromDelegateOutput() GcpConnectorInheritFromDelegateOutput
	ToGcpConnectorInheritFromDelegateOutputWithContext(context.Context) GcpConnectorInheritFromDelegateOutput
}

type GcpConnectorInheritFromDelegateArgs struct {
	// The delegates to inherit the credentials from.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GcpConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GcpConnectorInheritFromDelegateArgs) ToGcpConnectorInheritFromDelegateOutput() GcpConnectorInheritFromDelegateOutput {
	return i.ToGcpConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GcpConnectorInheritFromDelegateArgs) ToGcpConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GcpConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpConnectorInheritFromDelegateOutput)
}

// GcpConnectorInheritFromDelegateArrayInput is an input type that accepts GcpConnectorInheritFromDelegateArray and GcpConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GcpConnectorInheritFromDelegateArrayInput` via:
//
//	GcpConnectorInheritFromDelegateArray{ GcpConnectorInheritFromDelegateArgs{...} }
type GcpConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGcpConnectorInheritFromDelegateArrayOutput() GcpConnectorInheritFromDelegateArrayOutput
	ToGcpConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GcpConnectorInheritFromDelegateArrayOutput
}

type GcpConnectorInheritFromDelegateArray []GcpConnectorInheritFromDelegateInput

func (GcpConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GcpConnectorInheritFromDelegateArray) ToGcpConnectorInheritFromDelegateArrayOutput() GcpConnectorInheritFromDelegateArrayOutput {
	return i.ToGcpConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GcpConnectorInheritFromDelegateArray) ToGcpConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GcpConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpConnectorInheritFromDelegateArrayOutput)
}

type GcpConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GcpConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GcpConnectorInheritFromDelegateOutput) ToGcpConnectorInheritFromDelegateOutput() GcpConnectorInheritFromDelegateOutput {
	return o
}

func (o GcpConnectorInheritFromDelegateOutput) ToGcpConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GcpConnectorInheritFromDelegateOutput {
	return o
}

// The delegates to inherit the credentials from.
func (o GcpConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GcpConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GcpConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GcpConnectorInheritFromDelegateArrayOutput) ToGcpConnectorInheritFromDelegateArrayOutput() GcpConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GcpConnectorInheritFromDelegateArrayOutput) ToGcpConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GcpConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GcpConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GcpConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GcpConnectorInheritFromDelegate {
		return vs[0].([]GcpConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GcpConnectorInheritFromDelegateOutput)
}

type GcpConnectorManual struct {
	// The delegates to connect with.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GcpConnectorManualInput is an input type that accepts GcpConnectorManualArgs and GcpConnectorManualOutput values.
// You can construct a concrete instance of `GcpConnectorManualInput` via:
//
//	GcpConnectorManualArgs{...}
type GcpConnectorManualInput interface {
	pulumi.Input

	ToGcpConnectorManualOutput() GcpConnectorManualOutput
	ToGcpConnectorManualOutputWithContext(context.Context) GcpConnectorManualOutput
}

type GcpConnectorManualArgs struct {
	// The delegates to connect with.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GcpConnectorManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpConnectorManual)(nil)).Elem()
}

func (i GcpConnectorManualArgs) ToGcpConnectorManualOutput() GcpConnectorManualOutput {
	return i.ToGcpConnectorManualOutputWithContext(context.Background())
}

func (i GcpConnectorManualArgs) ToGcpConnectorManualOutputWithContext(ctx context.Context) GcpConnectorManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpConnectorManualOutput)
}

func (i GcpConnectorManualArgs) ToGcpConnectorManualPtrOutput() GcpConnectorManualPtrOutput {
	return i.ToGcpConnectorManualPtrOutputWithContext(context.Background())
}

func (i GcpConnectorManualArgs) ToGcpConnectorManualPtrOutputWithContext(ctx context.Context) GcpConnectorManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpConnectorManualOutput).ToGcpConnectorManualPtrOutputWithContext(ctx)
}

// GcpConnectorManualPtrInput is an input type that accepts GcpConnectorManualArgs, GcpConnectorManualPtr and GcpConnectorManualPtrOutput values.
// You can construct a concrete instance of `GcpConnectorManualPtrInput` via:
//
//	        GcpConnectorManualArgs{...}
//
//	or:
//
//	        nil
type GcpConnectorManualPtrInput interface {
	pulumi.Input

	ToGcpConnectorManualPtrOutput() GcpConnectorManualPtrOutput
	ToGcpConnectorManualPtrOutputWithContext(context.Context) GcpConnectorManualPtrOutput
}

type gcpConnectorManualPtrType GcpConnectorManualArgs

func GcpConnectorManualPtr(v *GcpConnectorManualArgs) GcpConnectorManualPtrInput {
	return (*gcpConnectorManualPtrType)(v)
}

func (*gcpConnectorManualPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpConnectorManual)(nil)).Elem()
}

func (i *gcpConnectorManualPtrType) ToGcpConnectorManualPtrOutput() GcpConnectorManualPtrOutput {
	return i.ToGcpConnectorManualPtrOutputWithContext(context.Background())
}

func (i *gcpConnectorManualPtrType) ToGcpConnectorManualPtrOutputWithContext(ctx context.Context) GcpConnectorManualPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpConnectorManualPtrOutput)
}

type GcpConnectorManualOutput struct{ *pulumi.OutputState }

func (GcpConnectorManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GcpConnectorManual)(nil)).Elem()
}

func (o GcpConnectorManualOutput) ToGcpConnectorManualOutput() GcpConnectorManualOutput {
	return o
}

func (o GcpConnectorManualOutput) ToGcpConnectorManualOutputWithContext(ctx context.Context) GcpConnectorManualOutput {
	return o
}

func (o GcpConnectorManualOutput) ToGcpConnectorManualPtrOutput() GcpConnectorManualPtrOutput {
	return o.ToGcpConnectorManualPtrOutputWithContext(context.Background())
}

func (o GcpConnectorManualOutput) ToGcpConnectorManualPtrOutputWithContext(ctx context.Context) GcpConnectorManualPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GcpConnectorManual) *GcpConnectorManual {
		return &v
	}).(GcpConnectorManualPtrOutput)
}

// The delegates to connect with.
func (o GcpConnectorManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GcpConnectorManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GcpConnectorManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GcpConnectorManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GcpConnectorManualPtrOutput struct{ *pulumi.OutputState }

func (GcpConnectorManualPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpConnectorManual)(nil)).Elem()
}

func (o GcpConnectorManualPtrOutput) ToGcpConnectorManualPtrOutput() GcpConnectorManualPtrOutput {
	return o
}

func (o GcpConnectorManualPtrOutput) ToGcpConnectorManualPtrOutputWithContext(ctx context.Context) GcpConnectorManualPtrOutput {
	return o
}

func (o GcpConnectorManualPtrOutput) Elem() GcpConnectorManualOutput {
	return o.ApplyT(func(v *GcpConnectorManual) GcpConnectorManual {
		if v != nil {
			return *v
		}
		var ret GcpConnectorManual
		return ret
	}).(GcpConnectorManualOutput)
}

// The delegates to connect with.
func (o GcpConnectorManualPtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpConnectorManual) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

// Reference to the Harness secret containing the secret key. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GcpConnectorManualPtrOutput) SecretKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpConnectorManual) *string {
		if v == nil {
			return nil
		}
		return &v.SecretKeyRef
	}).(pulumi.StringPtrOutput)
}

type GitConnectorCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *GitConnectorCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *GitConnectorCredentialsSsh `pulumi:"ssh"`
}

// GitConnectorCredentialsInput is an input type that accepts GitConnectorCredentialsArgs and GitConnectorCredentialsOutput values.
// You can construct a concrete instance of `GitConnectorCredentialsInput` via:
//
//	GitConnectorCredentialsArgs{...}
type GitConnectorCredentialsInput interface {
	pulumi.Input

	ToGitConnectorCredentialsOutput() GitConnectorCredentialsOutput
	ToGitConnectorCredentialsOutputWithContext(context.Context) GitConnectorCredentialsOutput
}

type GitConnectorCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http GitConnectorCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh GitConnectorCredentialsSshPtrInput `pulumi:"ssh"`
}

func (GitConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitConnectorCredentials)(nil)).Elem()
}

func (i GitConnectorCredentialsArgs) ToGitConnectorCredentialsOutput() GitConnectorCredentialsOutput {
	return i.ToGitConnectorCredentialsOutputWithContext(context.Background())
}

func (i GitConnectorCredentialsArgs) ToGitConnectorCredentialsOutputWithContext(ctx context.Context) GitConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsOutput)
}

func (i GitConnectorCredentialsArgs) ToGitConnectorCredentialsPtrOutput() GitConnectorCredentialsPtrOutput {
	return i.ToGitConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i GitConnectorCredentialsArgs) ToGitConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsOutput).ToGitConnectorCredentialsPtrOutputWithContext(ctx)
}

// GitConnectorCredentialsPtrInput is an input type that accepts GitConnectorCredentialsArgs, GitConnectorCredentialsPtr and GitConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `GitConnectorCredentialsPtrInput` via:
//
//	        GitConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type GitConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToGitConnectorCredentialsPtrOutput() GitConnectorCredentialsPtrOutput
	ToGitConnectorCredentialsPtrOutputWithContext(context.Context) GitConnectorCredentialsPtrOutput
}

type gitConnectorCredentialsPtrType GitConnectorCredentialsArgs

func GitConnectorCredentialsPtr(v *GitConnectorCredentialsArgs) GitConnectorCredentialsPtrInput {
	return (*gitConnectorCredentialsPtrType)(v)
}

func (*gitConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitConnectorCredentials)(nil)).Elem()
}

func (i *gitConnectorCredentialsPtrType) ToGitConnectorCredentialsPtrOutput() GitConnectorCredentialsPtrOutput {
	return i.ToGitConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *gitConnectorCredentialsPtrType) ToGitConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsPtrOutput)
}

type GitConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (GitConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitConnectorCredentials)(nil)).Elem()
}

func (o GitConnectorCredentialsOutput) ToGitConnectorCredentialsOutput() GitConnectorCredentialsOutput {
	return o
}

func (o GitConnectorCredentialsOutput) ToGitConnectorCredentialsOutputWithContext(ctx context.Context) GitConnectorCredentialsOutput {
	return o
}

func (o GitConnectorCredentialsOutput) ToGitConnectorCredentialsPtrOutput() GitConnectorCredentialsPtrOutput {
	return o.ToGitConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o GitConnectorCredentialsOutput) ToGitConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitConnectorCredentials) *GitConnectorCredentials {
		return &v
	}).(GitConnectorCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitConnectorCredentialsOutput) Http() GitConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v GitConnectorCredentials) *GitConnectorCredentialsHttp { return v.Http }).(GitConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitConnectorCredentialsOutput) Ssh() GitConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v GitConnectorCredentials) *GitConnectorCredentialsSsh { return v.Ssh }).(GitConnectorCredentialsSshPtrOutput)
}

type GitConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GitConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitConnectorCredentials)(nil)).Elem()
}

func (o GitConnectorCredentialsPtrOutput) ToGitConnectorCredentialsPtrOutput() GitConnectorCredentialsPtrOutput {
	return o
}

func (o GitConnectorCredentialsPtrOutput) ToGitConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsPtrOutput {
	return o
}

func (o GitConnectorCredentialsPtrOutput) Elem() GitConnectorCredentialsOutput {
	return o.ApplyT(func(v *GitConnectorCredentials) GitConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret GitConnectorCredentials
		return ret
	}).(GitConnectorCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitConnectorCredentialsPtrOutput) Http() GitConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *GitConnectorCredentials) *GitConnectorCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GitConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitConnectorCredentialsPtrOutput) Ssh() GitConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v *GitConnectorCredentials) *GitConnectorCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(GitConnectorCredentialsSshPtrOutput)
}

type GitConnectorCredentialsHttp struct {
	PasswordRef string  `pulumi:"passwordRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// GitConnectorCredentialsHttpInput is an input type that accepts GitConnectorCredentialsHttpArgs and GitConnectorCredentialsHttpOutput values.
// You can construct a concrete instance of `GitConnectorCredentialsHttpInput` via:
//
//	GitConnectorCredentialsHttpArgs{...}
type GitConnectorCredentialsHttpInput interface {
	pulumi.Input

	ToGitConnectorCredentialsHttpOutput() GitConnectorCredentialsHttpOutput
	ToGitConnectorCredentialsHttpOutputWithContext(context.Context) GitConnectorCredentialsHttpOutput
}

type GitConnectorCredentialsHttpArgs struct {
	PasswordRef pulumi.StringInput    `pulumi:"passwordRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (GitConnectorCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitConnectorCredentialsHttp)(nil)).Elem()
}

func (i GitConnectorCredentialsHttpArgs) ToGitConnectorCredentialsHttpOutput() GitConnectorCredentialsHttpOutput {
	return i.ToGitConnectorCredentialsHttpOutputWithContext(context.Background())
}

func (i GitConnectorCredentialsHttpArgs) ToGitConnectorCredentialsHttpOutputWithContext(ctx context.Context) GitConnectorCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsHttpOutput)
}

func (i GitConnectorCredentialsHttpArgs) ToGitConnectorCredentialsHttpPtrOutput() GitConnectorCredentialsHttpPtrOutput {
	return i.ToGitConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i GitConnectorCredentialsHttpArgs) ToGitConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsHttpOutput).ToGitConnectorCredentialsHttpPtrOutputWithContext(ctx)
}

// GitConnectorCredentialsHttpPtrInput is an input type that accepts GitConnectorCredentialsHttpArgs, GitConnectorCredentialsHttpPtr and GitConnectorCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `GitConnectorCredentialsHttpPtrInput` via:
//
//	        GitConnectorCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type GitConnectorCredentialsHttpPtrInput interface {
	pulumi.Input

	ToGitConnectorCredentialsHttpPtrOutput() GitConnectorCredentialsHttpPtrOutput
	ToGitConnectorCredentialsHttpPtrOutputWithContext(context.Context) GitConnectorCredentialsHttpPtrOutput
}

type gitConnectorCredentialsHttpPtrType GitConnectorCredentialsHttpArgs

func GitConnectorCredentialsHttpPtr(v *GitConnectorCredentialsHttpArgs) GitConnectorCredentialsHttpPtrInput {
	return (*gitConnectorCredentialsHttpPtrType)(v)
}

func (*gitConnectorCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitConnectorCredentialsHttp)(nil)).Elem()
}

func (i *gitConnectorCredentialsHttpPtrType) ToGitConnectorCredentialsHttpPtrOutput() GitConnectorCredentialsHttpPtrOutput {
	return i.ToGitConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *gitConnectorCredentialsHttpPtrType) ToGitConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsHttpPtrOutput)
}

type GitConnectorCredentialsHttpOutput struct{ *pulumi.OutputState }

func (GitConnectorCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitConnectorCredentialsHttp)(nil)).Elem()
}

func (o GitConnectorCredentialsHttpOutput) ToGitConnectorCredentialsHttpOutput() GitConnectorCredentialsHttpOutput {
	return o
}

func (o GitConnectorCredentialsHttpOutput) ToGitConnectorCredentialsHttpOutputWithContext(ctx context.Context) GitConnectorCredentialsHttpOutput {
	return o
}

func (o GitConnectorCredentialsHttpOutput) ToGitConnectorCredentialsHttpPtrOutput() GitConnectorCredentialsHttpPtrOutput {
	return o.ToGitConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o GitConnectorCredentialsHttpOutput) ToGitConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitConnectorCredentialsHttp) *GitConnectorCredentialsHttp {
		return &v
	}).(GitConnectorCredentialsHttpPtrOutput)
}

func (o GitConnectorCredentialsHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitConnectorCredentialsHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GitConnectorCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitConnectorCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GitConnectorCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitConnectorCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type GitConnectorCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (GitConnectorCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitConnectorCredentialsHttp)(nil)).Elem()
}

func (o GitConnectorCredentialsHttpPtrOutput) ToGitConnectorCredentialsHttpPtrOutput() GitConnectorCredentialsHttpPtrOutput {
	return o
}

func (o GitConnectorCredentialsHttpPtrOutput) ToGitConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsHttpPtrOutput {
	return o
}

func (o GitConnectorCredentialsHttpPtrOutput) Elem() GitConnectorCredentialsHttpOutput {
	return o.ApplyT(func(v *GitConnectorCredentialsHttp) GitConnectorCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret GitConnectorCredentialsHttp
		return ret
	}).(GitConnectorCredentialsHttpOutput)
}

func (o GitConnectorCredentialsHttpPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o GitConnectorCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o GitConnectorCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GitConnectorCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GitConnectorCredentialsSshInput is an input type that accepts GitConnectorCredentialsSshArgs and GitConnectorCredentialsSshOutput values.
// You can construct a concrete instance of `GitConnectorCredentialsSshInput` via:
//
//	GitConnectorCredentialsSshArgs{...}
type GitConnectorCredentialsSshInput interface {
	pulumi.Input

	ToGitConnectorCredentialsSshOutput() GitConnectorCredentialsSshOutput
	ToGitConnectorCredentialsSshOutputWithContext(context.Context) GitConnectorCredentialsSshOutput
}

type GitConnectorCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GitConnectorCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitConnectorCredentialsSsh)(nil)).Elem()
}

func (i GitConnectorCredentialsSshArgs) ToGitConnectorCredentialsSshOutput() GitConnectorCredentialsSshOutput {
	return i.ToGitConnectorCredentialsSshOutputWithContext(context.Background())
}

func (i GitConnectorCredentialsSshArgs) ToGitConnectorCredentialsSshOutputWithContext(ctx context.Context) GitConnectorCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsSshOutput)
}

func (i GitConnectorCredentialsSshArgs) ToGitConnectorCredentialsSshPtrOutput() GitConnectorCredentialsSshPtrOutput {
	return i.ToGitConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i GitConnectorCredentialsSshArgs) ToGitConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsSshOutput).ToGitConnectorCredentialsSshPtrOutputWithContext(ctx)
}

// GitConnectorCredentialsSshPtrInput is an input type that accepts GitConnectorCredentialsSshArgs, GitConnectorCredentialsSshPtr and GitConnectorCredentialsSshPtrOutput values.
// You can construct a concrete instance of `GitConnectorCredentialsSshPtrInput` via:
//
//	        GitConnectorCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type GitConnectorCredentialsSshPtrInput interface {
	pulumi.Input

	ToGitConnectorCredentialsSshPtrOutput() GitConnectorCredentialsSshPtrOutput
	ToGitConnectorCredentialsSshPtrOutputWithContext(context.Context) GitConnectorCredentialsSshPtrOutput
}

type gitConnectorCredentialsSshPtrType GitConnectorCredentialsSshArgs

func GitConnectorCredentialsSshPtr(v *GitConnectorCredentialsSshArgs) GitConnectorCredentialsSshPtrInput {
	return (*gitConnectorCredentialsSshPtrType)(v)
}

func (*gitConnectorCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitConnectorCredentialsSsh)(nil)).Elem()
}

func (i *gitConnectorCredentialsSshPtrType) ToGitConnectorCredentialsSshPtrOutput() GitConnectorCredentialsSshPtrOutput {
	return i.ToGitConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *gitConnectorCredentialsSshPtrType) ToGitConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitConnectorCredentialsSshPtrOutput)
}

type GitConnectorCredentialsSshOutput struct{ *pulumi.OutputState }

func (GitConnectorCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitConnectorCredentialsSsh)(nil)).Elem()
}

func (o GitConnectorCredentialsSshOutput) ToGitConnectorCredentialsSshOutput() GitConnectorCredentialsSshOutput {
	return o
}

func (o GitConnectorCredentialsSshOutput) ToGitConnectorCredentialsSshOutputWithContext(ctx context.Context) GitConnectorCredentialsSshOutput {
	return o
}

func (o GitConnectorCredentialsSshOutput) ToGitConnectorCredentialsSshPtrOutput() GitConnectorCredentialsSshPtrOutput {
	return o.ToGitConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (o GitConnectorCredentialsSshOutput) ToGitConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitConnectorCredentialsSsh) *GitConnectorCredentialsSsh {
		return &v
	}).(GitConnectorCredentialsSshPtrOutput)
}

func (o GitConnectorCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitConnectorCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GitConnectorCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (GitConnectorCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitConnectorCredentialsSsh)(nil)).Elem()
}

func (o GitConnectorCredentialsSshPtrOutput) ToGitConnectorCredentialsSshPtrOutput() GitConnectorCredentialsSshPtrOutput {
	return o
}

func (o GitConnectorCredentialsSshPtrOutput) ToGitConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitConnectorCredentialsSshPtrOutput {
	return o
}

func (o GitConnectorCredentialsSshPtrOutput) Elem() GitConnectorCredentialsSshOutput {
	return o.ApplyT(func(v *GitConnectorCredentialsSsh) GitConnectorCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret GitConnectorCredentialsSsh
		return ret
	}).(GitConnectorCredentialsSshOutput)
}

func (o GitConnectorCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitConnectorCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type GitOpsAgentMetadata struct {
	// Indicates if the deployment should be deployed using the deploy-ha.yaml
	HighAvailability *bool `pulumi:"highAvailability"`
	// The k8s namespace that this agent resides in.
	Namespace *string `pulumi:"namespace"`
}

// GitOpsAgentMetadataInput is an input type that accepts GitOpsAgentMetadataArgs and GitOpsAgentMetadataOutput values.
// You can construct a concrete instance of `GitOpsAgentMetadataInput` via:
//
//	GitOpsAgentMetadataArgs{...}
type GitOpsAgentMetadataInput interface {
	pulumi.Input

	ToGitOpsAgentMetadataOutput() GitOpsAgentMetadataOutput
	ToGitOpsAgentMetadataOutputWithContext(context.Context) GitOpsAgentMetadataOutput
}

type GitOpsAgentMetadataArgs struct {
	// Indicates if the deployment should be deployed using the deploy-ha.yaml
	HighAvailability pulumi.BoolPtrInput `pulumi:"highAvailability"`
	// The k8s namespace that this agent resides in.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (GitOpsAgentMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsAgentMetadata)(nil)).Elem()
}

func (i GitOpsAgentMetadataArgs) ToGitOpsAgentMetadataOutput() GitOpsAgentMetadataOutput {
	return i.ToGitOpsAgentMetadataOutputWithContext(context.Background())
}

func (i GitOpsAgentMetadataArgs) ToGitOpsAgentMetadataOutputWithContext(ctx context.Context) GitOpsAgentMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsAgentMetadataOutput)
}

// GitOpsAgentMetadataArrayInput is an input type that accepts GitOpsAgentMetadataArray and GitOpsAgentMetadataArrayOutput values.
// You can construct a concrete instance of `GitOpsAgentMetadataArrayInput` via:
//
//	GitOpsAgentMetadataArray{ GitOpsAgentMetadataArgs{...} }
type GitOpsAgentMetadataArrayInput interface {
	pulumi.Input

	ToGitOpsAgentMetadataArrayOutput() GitOpsAgentMetadataArrayOutput
	ToGitOpsAgentMetadataArrayOutputWithContext(context.Context) GitOpsAgentMetadataArrayOutput
}

type GitOpsAgentMetadataArray []GitOpsAgentMetadataInput

func (GitOpsAgentMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsAgentMetadata)(nil)).Elem()
}

func (i GitOpsAgentMetadataArray) ToGitOpsAgentMetadataArrayOutput() GitOpsAgentMetadataArrayOutput {
	return i.ToGitOpsAgentMetadataArrayOutputWithContext(context.Background())
}

func (i GitOpsAgentMetadataArray) ToGitOpsAgentMetadataArrayOutputWithContext(ctx context.Context) GitOpsAgentMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsAgentMetadataArrayOutput)
}

type GitOpsAgentMetadataOutput struct{ *pulumi.OutputState }

func (GitOpsAgentMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsAgentMetadata)(nil)).Elem()
}

func (o GitOpsAgentMetadataOutput) ToGitOpsAgentMetadataOutput() GitOpsAgentMetadataOutput {
	return o
}

func (o GitOpsAgentMetadataOutput) ToGitOpsAgentMetadataOutputWithContext(ctx context.Context) GitOpsAgentMetadataOutput {
	return o
}

// Indicates if the deployment should be deployed using the deploy-ha.yaml
func (o GitOpsAgentMetadataOutput) HighAvailability() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsAgentMetadata) *bool { return v.HighAvailability }).(pulumi.BoolPtrOutput)
}

// The k8s namespace that this agent resides in.
func (o GitOpsAgentMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsAgentMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type GitOpsAgentMetadataArrayOutput struct{ *pulumi.OutputState }

func (GitOpsAgentMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsAgentMetadata)(nil)).Elem()
}

func (o GitOpsAgentMetadataArrayOutput) ToGitOpsAgentMetadataArrayOutput() GitOpsAgentMetadataArrayOutput {
	return o
}

func (o GitOpsAgentMetadataArrayOutput) ToGitOpsAgentMetadataArrayOutputWithContext(ctx context.Context) GitOpsAgentMetadataArrayOutput {
	return o
}

func (o GitOpsAgentMetadataArrayOutput) Index(i pulumi.IntInput) GitOpsAgentMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsAgentMetadata {
		return vs[0].([]GitOpsAgentMetadata)[vs[1].(int)]
	}).(GitOpsAgentMetadataOutput)
}

type GitOpsClusterQuery struct {
	// Cluster server URL or the cluster name.
	Ids []GitOpsClusterQueryId `pulumi:"ids"`
	// Name of the GitOps cluster.
	Name *string `pulumi:"name"`
	// Server of the GitOps cluster.
	Server *string `pulumi:"server"`
}

// GitOpsClusterQueryInput is an input type that accepts GitOpsClusterQueryArgs and GitOpsClusterQueryOutput values.
// You can construct a concrete instance of `GitOpsClusterQueryInput` via:
//
//	GitOpsClusterQueryArgs{...}
type GitOpsClusterQueryInput interface {
	pulumi.Input

	ToGitOpsClusterQueryOutput() GitOpsClusterQueryOutput
	ToGitOpsClusterQueryOutputWithContext(context.Context) GitOpsClusterQueryOutput
}

type GitOpsClusterQueryArgs struct {
	// Cluster server URL or the cluster name.
	Ids GitOpsClusterQueryIdArrayInput `pulumi:"ids"`
	// Name of the GitOps cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Server of the GitOps cluster.
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (GitOpsClusterQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterQuery)(nil)).Elem()
}

func (i GitOpsClusterQueryArgs) ToGitOpsClusterQueryOutput() GitOpsClusterQueryOutput {
	return i.ToGitOpsClusterQueryOutputWithContext(context.Background())
}

func (i GitOpsClusterQueryArgs) ToGitOpsClusterQueryOutputWithContext(ctx context.Context) GitOpsClusterQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterQueryOutput)
}

// GitOpsClusterQueryArrayInput is an input type that accepts GitOpsClusterQueryArray and GitOpsClusterQueryArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterQueryArrayInput` via:
//
//	GitOpsClusterQueryArray{ GitOpsClusterQueryArgs{...} }
type GitOpsClusterQueryArrayInput interface {
	pulumi.Input

	ToGitOpsClusterQueryArrayOutput() GitOpsClusterQueryArrayOutput
	ToGitOpsClusterQueryArrayOutputWithContext(context.Context) GitOpsClusterQueryArrayOutput
}

type GitOpsClusterQueryArray []GitOpsClusterQueryInput

func (GitOpsClusterQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterQuery)(nil)).Elem()
}

func (i GitOpsClusterQueryArray) ToGitOpsClusterQueryArrayOutput() GitOpsClusterQueryArrayOutput {
	return i.ToGitOpsClusterQueryArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterQueryArray) ToGitOpsClusterQueryArrayOutputWithContext(ctx context.Context) GitOpsClusterQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterQueryArrayOutput)
}

type GitOpsClusterQueryOutput struct{ *pulumi.OutputState }

func (GitOpsClusterQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterQuery)(nil)).Elem()
}

func (o GitOpsClusterQueryOutput) ToGitOpsClusterQueryOutput() GitOpsClusterQueryOutput {
	return o
}

func (o GitOpsClusterQueryOutput) ToGitOpsClusterQueryOutputWithContext(ctx context.Context) GitOpsClusterQueryOutput {
	return o
}

// Cluster server URL or the cluster name.
func (o GitOpsClusterQueryOutput) Ids() GitOpsClusterQueryIdArrayOutput {
	return o.ApplyT(func(v GitOpsClusterQuery) []GitOpsClusterQueryId { return v.Ids }).(GitOpsClusterQueryIdArrayOutput)
}

// Name of the GitOps cluster.
func (o GitOpsClusterQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Server of the GitOps cluster.
func (o GitOpsClusterQueryOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterQuery) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type GitOpsClusterQueryArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterQuery)(nil)).Elem()
}

func (o GitOpsClusterQueryArrayOutput) ToGitOpsClusterQueryArrayOutput() GitOpsClusterQueryArrayOutput {
	return o
}

func (o GitOpsClusterQueryArrayOutput) ToGitOpsClusterQueryArrayOutputWithContext(ctx context.Context) GitOpsClusterQueryArrayOutput {
	return o
}

func (o GitOpsClusterQueryArrayOutput) Index(i pulumi.IntInput) GitOpsClusterQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterQuery {
		return vs[0].([]GitOpsClusterQuery)[vs[1].(int)]
	}).(GitOpsClusterQueryOutput)
}

type GitOpsClusterQueryId struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// GitOpsClusterQueryIdInput is an input type that accepts GitOpsClusterQueryIdArgs and GitOpsClusterQueryIdOutput values.
// You can construct a concrete instance of `GitOpsClusterQueryIdInput` via:
//
//	GitOpsClusterQueryIdArgs{...}
type GitOpsClusterQueryIdInput interface {
	pulumi.Input

	ToGitOpsClusterQueryIdOutput() GitOpsClusterQueryIdOutput
	ToGitOpsClusterQueryIdOutputWithContext(context.Context) GitOpsClusterQueryIdOutput
}

type GitOpsClusterQueryIdArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitOpsClusterQueryIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterQueryId)(nil)).Elem()
}

func (i GitOpsClusterQueryIdArgs) ToGitOpsClusterQueryIdOutput() GitOpsClusterQueryIdOutput {
	return i.ToGitOpsClusterQueryIdOutputWithContext(context.Background())
}

func (i GitOpsClusterQueryIdArgs) ToGitOpsClusterQueryIdOutputWithContext(ctx context.Context) GitOpsClusterQueryIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterQueryIdOutput)
}

// GitOpsClusterQueryIdArrayInput is an input type that accepts GitOpsClusterQueryIdArray and GitOpsClusterQueryIdArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterQueryIdArrayInput` via:
//
//	GitOpsClusterQueryIdArray{ GitOpsClusterQueryIdArgs{...} }
type GitOpsClusterQueryIdArrayInput interface {
	pulumi.Input

	ToGitOpsClusterQueryIdArrayOutput() GitOpsClusterQueryIdArrayOutput
	ToGitOpsClusterQueryIdArrayOutputWithContext(context.Context) GitOpsClusterQueryIdArrayOutput
}

type GitOpsClusterQueryIdArray []GitOpsClusterQueryIdInput

func (GitOpsClusterQueryIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterQueryId)(nil)).Elem()
}

func (i GitOpsClusterQueryIdArray) ToGitOpsClusterQueryIdArrayOutput() GitOpsClusterQueryIdArrayOutput {
	return i.ToGitOpsClusterQueryIdArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterQueryIdArray) ToGitOpsClusterQueryIdArrayOutputWithContext(ctx context.Context) GitOpsClusterQueryIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterQueryIdArrayOutput)
}

type GitOpsClusterQueryIdOutput struct{ *pulumi.OutputState }

func (GitOpsClusterQueryIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterQueryId)(nil)).Elem()
}

func (o GitOpsClusterQueryIdOutput) ToGitOpsClusterQueryIdOutput() GitOpsClusterQueryIdOutput {
	return o
}

func (o GitOpsClusterQueryIdOutput) ToGitOpsClusterQueryIdOutputWithContext(ctx context.Context) GitOpsClusterQueryIdOutput {
	return o
}

func (o GitOpsClusterQueryIdOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterQueryId) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterQueryIdOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterQueryId) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitOpsClusterQueryIdArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterQueryIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterQueryId)(nil)).Elem()
}

func (o GitOpsClusterQueryIdArrayOutput) ToGitOpsClusterQueryIdArrayOutput() GitOpsClusterQueryIdArrayOutput {
	return o
}

func (o GitOpsClusterQueryIdArrayOutput) ToGitOpsClusterQueryIdArrayOutputWithContext(ctx context.Context) GitOpsClusterQueryIdArrayOutput {
	return o
}

func (o GitOpsClusterQueryIdArrayOutput) Index(i pulumi.IntInput) GitOpsClusterQueryIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterQueryId {
		return vs[0].([]GitOpsClusterQueryId)[vs[1].(int)]
	}).(GitOpsClusterQueryIdOutput)
}

type GitOpsClusterRequest struct {
	// GitOps cluster details.
	Clusters []GitOpsClusterRequestCluster `pulumi:"clusters"`
	// Cluster server URL or the cluster name.
	Ids []GitOpsClusterRequestId `pulumi:"ids"`
	// Tags associated with the clusters
	Tags []string `pulumi:"tags"`
	// Update mask of the GitOps cluster.
	UpdateMasks []GitOpsClusterRequestUpdateMask `pulumi:"updateMasks"`
	// Fields which are updated.
	UpdatedFields []string `pulumi:"updatedFields"`
	// Indicates if the GitOps cluster should be updated if existing and inserted if not.
	Upsert *bool `pulumi:"upsert"`
}

// GitOpsClusterRequestInput is an input type that accepts GitOpsClusterRequestArgs and GitOpsClusterRequestOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestInput` via:
//
//	GitOpsClusterRequestArgs{...}
type GitOpsClusterRequestInput interface {
	pulumi.Input

	ToGitOpsClusterRequestOutput() GitOpsClusterRequestOutput
	ToGitOpsClusterRequestOutputWithContext(context.Context) GitOpsClusterRequestOutput
}

type GitOpsClusterRequestArgs struct {
	// GitOps cluster details.
	Clusters GitOpsClusterRequestClusterArrayInput `pulumi:"clusters"`
	// Cluster server URL or the cluster name.
	Ids GitOpsClusterRequestIdArrayInput `pulumi:"ids"`
	// Tags associated with the clusters
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Update mask of the GitOps cluster.
	UpdateMasks GitOpsClusterRequestUpdateMaskArrayInput `pulumi:"updateMasks"`
	// Fields which are updated.
	UpdatedFields pulumi.StringArrayInput `pulumi:"updatedFields"`
	// Indicates if the GitOps cluster should be updated if existing and inserted if not.
	Upsert pulumi.BoolPtrInput `pulumi:"upsert"`
}

func (GitOpsClusterRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequest)(nil)).Elem()
}

func (i GitOpsClusterRequestArgs) ToGitOpsClusterRequestOutput() GitOpsClusterRequestOutput {
	return i.ToGitOpsClusterRequestOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestArgs) ToGitOpsClusterRequestOutputWithContext(ctx context.Context) GitOpsClusterRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestOutput)
}

// GitOpsClusterRequestArrayInput is an input type that accepts GitOpsClusterRequestArray and GitOpsClusterRequestArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestArrayInput` via:
//
//	GitOpsClusterRequestArray{ GitOpsClusterRequestArgs{...} }
type GitOpsClusterRequestArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestArrayOutput() GitOpsClusterRequestArrayOutput
	ToGitOpsClusterRequestArrayOutputWithContext(context.Context) GitOpsClusterRequestArrayOutput
}

type GitOpsClusterRequestArray []GitOpsClusterRequestInput

func (GitOpsClusterRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequest)(nil)).Elem()
}

func (i GitOpsClusterRequestArray) ToGitOpsClusterRequestArrayOutput() GitOpsClusterRequestArrayOutput {
	return i.ToGitOpsClusterRequestArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestArray) ToGitOpsClusterRequestArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestArrayOutput)
}

type GitOpsClusterRequestOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequest)(nil)).Elem()
}

func (o GitOpsClusterRequestOutput) ToGitOpsClusterRequestOutput() GitOpsClusterRequestOutput {
	return o
}

func (o GitOpsClusterRequestOutput) ToGitOpsClusterRequestOutputWithContext(ctx context.Context) GitOpsClusterRequestOutput {
	return o
}

// GitOps cluster details.
func (o GitOpsClusterRequestOutput) Clusters() GitOpsClusterRequestClusterArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequest) []GitOpsClusterRequestCluster { return v.Clusters }).(GitOpsClusterRequestClusterArrayOutput)
}

// Cluster server URL or the cluster name.
func (o GitOpsClusterRequestOutput) Ids() GitOpsClusterRequestIdArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequest) []GitOpsClusterRequestId { return v.Ids }).(GitOpsClusterRequestIdArrayOutput)
}

// Tags associated with the clusters
func (o GitOpsClusterRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Update mask of the GitOps cluster.
func (o GitOpsClusterRequestOutput) UpdateMasks() GitOpsClusterRequestUpdateMaskArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequest) []GitOpsClusterRequestUpdateMask { return v.UpdateMasks }).(GitOpsClusterRequestUpdateMaskArrayOutput)
}

// Fields which are updated.
func (o GitOpsClusterRequestOutput) UpdatedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequest) []string { return v.UpdatedFields }).(pulumi.StringArrayOutput)
}

// Indicates if the GitOps cluster should be updated if existing and inserted if not.
func (o GitOpsClusterRequestOutput) Upsert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequest) *bool { return v.Upsert }).(pulumi.BoolPtrOutput)
}

type GitOpsClusterRequestArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequest)(nil)).Elem()
}

func (o GitOpsClusterRequestArrayOutput) ToGitOpsClusterRequestArrayOutput() GitOpsClusterRequestArrayOutput {
	return o
}

func (o GitOpsClusterRequestArrayOutput) ToGitOpsClusterRequestArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestArrayOutput {
	return o
}

func (o GitOpsClusterRequestArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequest {
		return vs[0].([]GitOpsClusterRequest)[vs[1].(int)]
	}).(GitOpsClusterRequestOutput)
}

type GitOpsClusterRequestCluster struct {
	Annotations         map[string]string                               `pulumi:"annotations"`
	ClusterResources    *bool                                           `pulumi:"clusterResources"`
	Configs             []GitOpsClusterRequestClusterConfig             `pulumi:"configs"`
	Infos               []GitOpsClusterRequestClusterInfo               `pulumi:"infos"`
	Labels              map[string]string                               `pulumi:"labels"`
	Name                *string                                         `pulumi:"name"`
	Namespaces          []string                                        `pulumi:"namespaces"`
	Project             *string                                         `pulumi:"project"`
	RefreshRequestedAts []GitOpsClusterRequestClusterRefreshRequestedAt `pulumi:"refreshRequestedAts"`
	Server              string                                          `pulumi:"server"`
	Shard               *string                                         `pulumi:"shard"`
}

// GitOpsClusterRequestClusterInput is an input type that accepts GitOpsClusterRequestClusterArgs and GitOpsClusterRequestClusterOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInput` via:
//
//	GitOpsClusterRequestClusterArgs{...}
type GitOpsClusterRequestClusterInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterOutput() GitOpsClusterRequestClusterOutput
	ToGitOpsClusterRequestClusterOutputWithContext(context.Context) GitOpsClusterRequestClusterOutput
}

type GitOpsClusterRequestClusterArgs struct {
	Annotations         pulumi.StringMapInput                                   `pulumi:"annotations"`
	ClusterResources    pulumi.BoolPtrInput                                     `pulumi:"clusterResources"`
	Configs             GitOpsClusterRequestClusterConfigArrayInput             `pulumi:"configs"`
	Infos               GitOpsClusterRequestClusterInfoArrayInput               `pulumi:"infos"`
	Labels              pulumi.StringMapInput                                   `pulumi:"labels"`
	Name                pulumi.StringPtrInput                                   `pulumi:"name"`
	Namespaces          pulumi.StringArrayInput                                 `pulumi:"namespaces"`
	Project             pulumi.StringPtrInput                                   `pulumi:"project"`
	RefreshRequestedAts GitOpsClusterRequestClusterRefreshRequestedAtArrayInput `pulumi:"refreshRequestedAts"`
	Server              pulumi.StringInput                                      `pulumi:"server"`
	Shard               pulumi.StringPtrInput                                   `pulumi:"shard"`
}

func (GitOpsClusterRequestClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestCluster)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterArgs) ToGitOpsClusterRequestClusterOutput() GitOpsClusterRequestClusterOutput {
	return i.ToGitOpsClusterRequestClusterOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterArgs) ToGitOpsClusterRequestClusterOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterOutput)
}

// GitOpsClusterRequestClusterArrayInput is an input type that accepts GitOpsClusterRequestClusterArray and GitOpsClusterRequestClusterArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterArrayInput` via:
//
//	GitOpsClusterRequestClusterArray{ GitOpsClusterRequestClusterArgs{...} }
type GitOpsClusterRequestClusterArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterArrayOutput() GitOpsClusterRequestClusterArrayOutput
	ToGitOpsClusterRequestClusterArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterArrayOutput
}

type GitOpsClusterRequestClusterArray []GitOpsClusterRequestClusterInput

func (GitOpsClusterRequestClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestCluster)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterArray) ToGitOpsClusterRequestClusterArrayOutput() GitOpsClusterRequestClusterArrayOutput {
	return i.ToGitOpsClusterRequestClusterArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterArray) ToGitOpsClusterRequestClusterArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterArrayOutput)
}

type GitOpsClusterRequestClusterOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestCluster)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterOutput) ToGitOpsClusterRequestClusterOutput() GitOpsClusterRequestClusterOutput {
	return o
}

func (o GitOpsClusterRequestClusterOutput) ToGitOpsClusterRequestClusterOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterOutput {
	return o
}

func (o GitOpsClusterRequestClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o GitOpsClusterRequestClusterOutput) ClusterResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) *bool { return v.ClusterResources }).(pulumi.BoolPtrOutput)
}

func (o GitOpsClusterRequestClusterOutput) Configs() GitOpsClusterRequestClusterConfigArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) []GitOpsClusterRequestClusterConfig { return v.Configs }).(GitOpsClusterRequestClusterConfigArrayOutput)
}

func (o GitOpsClusterRequestClusterOutput) Infos() GitOpsClusterRequestClusterInfoArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) []GitOpsClusterRequestClusterInfo { return v.Infos }).(GitOpsClusterRequestClusterInfoArrayOutput)
}

func (o GitOpsClusterRequestClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GitOpsClusterRequestClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

func (o GitOpsClusterRequestClusterOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterOutput) RefreshRequestedAts() GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) []GitOpsClusterRequestClusterRefreshRequestedAt {
		return v.RefreshRequestedAts
	}).(GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput)
}

func (o GitOpsClusterRequestClusterOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) string { return v.Server }).(pulumi.StringOutput)
}

func (o GitOpsClusterRequestClusterOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestCluster) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestCluster)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterArrayOutput) ToGitOpsClusterRequestClusterArrayOutput() GitOpsClusterRequestClusterArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterArrayOutput) ToGitOpsClusterRequestClusterArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestCluster {
		return vs[0].([]GitOpsClusterRequestCluster)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterOutput)
}

type GitOpsClusterRequestClusterConfig struct {
	AwsAuthConfigs        []GitOpsClusterRequestClusterConfigAwsAuthConfig      `pulumi:"awsAuthConfigs"`
	BearerToken           *string                                               `pulumi:"bearerToken"`
	ClusterConnectionType *string                                               `pulumi:"clusterConnectionType"`
	ExecProviderConfigs   []GitOpsClusterRequestClusterConfigExecProviderConfig `pulumi:"execProviderConfigs"`
	Password              *string                                               `pulumi:"password"`
	TlsClientConfigs      []GitOpsClusterRequestClusterConfigTlsClientConfig    `pulumi:"tlsClientConfigs"`
	Username              *string                                               `pulumi:"username"`
}

// GitOpsClusterRequestClusterConfigInput is an input type that accepts GitOpsClusterRequestClusterConfigArgs and GitOpsClusterRequestClusterConfigOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigInput` via:
//
//	GitOpsClusterRequestClusterConfigArgs{...}
type GitOpsClusterRequestClusterConfigInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigOutput() GitOpsClusterRequestClusterConfigOutput
	ToGitOpsClusterRequestClusterConfigOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigOutput
}

type GitOpsClusterRequestClusterConfigArgs struct {
	AwsAuthConfigs        GitOpsClusterRequestClusterConfigAwsAuthConfigArrayInput      `pulumi:"awsAuthConfigs"`
	BearerToken           pulumi.StringPtrInput                                         `pulumi:"bearerToken"`
	ClusterConnectionType pulumi.StringPtrInput                                         `pulumi:"clusterConnectionType"`
	ExecProviderConfigs   GitOpsClusterRequestClusterConfigExecProviderConfigArrayInput `pulumi:"execProviderConfigs"`
	Password              pulumi.StringPtrInput                                         `pulumi:"password"`
	TlsClientConfigs      GitOpsClusterRequestClusterConfigTlsClientConfigArrayInput    `pulumi:"tlsClientConfigs"`
	Username              pulumi.StringPtrInput                                         `pulumi:"username"`
}

func (GitOpsClusterRequestClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigArgs) ToGitOpsClusterRequestClusterConfigOutput() GitOpsClusterRequestClusterConfigOutput {
	return i.ToGitOpsClusterRequestClusterConfigOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigArgs) ToGitOpsClusterRequestClusterConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigOutput)
}

// GitOpsClusterRequestClusterConfigArrayInput is an input type that accepts GitOpsClusterRequestClusterConfigArray and GitOpsClusterRequestClusterConfigArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigArrayInput` via:
//
//	GitOpsClusterRequestClusterConfigArray{ GitOpsClusterRequestClusterConfigArgs{...} }
type GitOpsClusterRequestClusterConfigArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigArrayOutput() GitOpsClusterRequestClusterConfigArrayOutput
	ToGitOpsClusterRequestClusterConfigArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigArrayOutput
}

type GitOpsClusterRequestClusterConfigArray []GitOpsClusterRequestClusterConfigInput

func (GitOpsClusterRequestClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigArray) ToGitOpsClusterRequestClusterConfigArrayOutput() GitOpsClusterRequestClusterConfigArrayOutput {
	return i.ToGitOpsClusterRequestClusterConfigArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigArray) ToGitOpsClusterRequestClusterConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigArrayOutput)
}

type GitOpsClusterRequestClusterConfigOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigOutput) ToGitOpsClusterRequestClusterConfigOutput() GitOpsClusterRequestClusterConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigOutput) ToGitOpsClusterRequestClusterConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigOutput) AwsAuthConfigs() GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) []GitOpsClusterRequestClusterConfigAwsAuthConfig {
		return v.AwsAuthConfigs
	}).(GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput)
}

func (o GitOpsClusterRequestClusterConfigOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigOutput) ClusterConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) *string { return v.ClusterConnectionType }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigOutput) ExecProviderConfigs() GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) []GitOpsClusterRequestClusterConfigExecProviderConfig {
		return v.ExecProviderConfigs
	}).(GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput)
}

func (o GitOpsClusterRequestClusterConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigOutput) TlsClientConfigs() GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) []GitOpsClusterRequestClusterConfigTlsClientConfig {
		return v.TlsClientConfigs
	}).(GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput)
}

func (o GitOpsClusterRequestClusterConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigArrayOutput) ToGitOpsClusterRequestClusterConfigArrayOutput() GitOpsClusterRequestClusterConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigArrayOutput) ToGitOpsClusterRequestClusterConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterConfig {
		return vs[0].([]GitOpsClusterRequestClusterConfig)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterConfigOutput)
}

type GitOpsClusterRequestClusterConfigAwsAuthConfig struct {
	ClusterName *string `pulumi:"clusterName"`
	RoleARN     *string `pulumi:"roleARN"`
}

// GitOpsClusterRequestClusterConfigAwsAuthConfigInput is an input type that accepts GitOpsClusterRequestClusterConfigAwsAuthConfigArgs and GitOpsClusterRequestClusterConfigAwsAuthConfigOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigAwsAuthConfigInput` via:
//
//	GitOpsClusterRequestClusterConfigAwsAuthConfigArgs{...}
type GitOpsClusterRequestClusterConfigAwsAuthConfigInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutput() GitOpsClusterRequestClusterConfigAwsAuthConfigOutput
	ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigAwsAuthConfigOutput
}

type GitOpsClusterRequestClusterConfigAwsAuthConfigArgs struct {
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	RoleARN     pulumi.StringPtrInput `pulumi:"roleARN"`
}

func (GitOpsClusterRequestClusterConfigAwsAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigAwsAuthConfigArgs) ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutput() GitOpsClusterRequestClusterConfigAwsAuthConfigOutput {
	return i.ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigAwsAuthConfigArgs) ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigAwsAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigAwsAuthConfigOutput)
}

// GitOpsClusterRequestClusterConfigAwsAuthConfigArrayInput is an input type that accepts GitOpsClusterRequestClusterConfigAwsAuthConfigArray and GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigAwsAuthConfigArrayInput` via:
//
//	GitOpsClusterRequestClusterConfigAwsAuthConfigArray{ GitOpsClusterRequestClusterConfigAwsAuthConfigArgs{...} }
type GitOpsClusterRequestClusterConfigAwsAuthConfigArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput() GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput
	ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput
}

type GitOpsClusterRequestClusterConfigAwsAuthConfigArray []GitOpsClusterRequestClusterConfigAwsAuthConfigInput

func (GitOpsClusterRequestClusterConfigAwsAuthConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigAwsAuthConfigArray) ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput() GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return i.ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigAwsAuthConfigArray) ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput)
}

type GitOpsClusterRequestClusterConfigAwsAuthConfigOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigAwsAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigOutput) ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutput() GitOpsClusterRequestClusterConfigAwsAuthConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigOutput) ToGitOpsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigAwsAuthConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigAwsAuthConfig) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigAwsAuthConfig) *string { return v.RoleARN }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput) ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput() GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput) ToGitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterConfigAwsAuthConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterConfigAwsAuthConfig {
		return vs[0].([]GitOpsClusterRequestClusterConfigAwsAuthConfig)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterConfigAwsAuthConfigOutput)
}

type GitOpsClusterRequestClusterConfigExecProviderConfig struct {
	ApiVersion  *string           `pulumi:"apiVersion"`
	Args        []string          `pulumi:"args"`
	Command     *string           `pulumi:"command"`
	Env         map[string]string `pulumi:"env"`
	InstallHint *string           `pulumi:"installHint"`
}

// GitOpsClusterRequestClusterConfigExecProviderConfigInput is an input type that accepts GitOpsClusterRequestClusterConfigExecProviderConfigArgs and GitOpsClusterRequestClusterConfigExecProviderConfigOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigExecProviderConfigInput` via:
//
//	GitOpsClusterRequestClusterConfigExecProviderConfigArgs{...}
type GitOpsClusterRequestClusterConfigExecProviderConfigInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigExecProviderConfigOutput() GitOpsClusterRequestClusterConfigExecProviderConfigOutput
	ToGitOpsClusterRequestClusterConfigExecProviderConfigOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigExecProviderConfigOutput
}

type GitOpsClusterRequestClusterConfigExecProviderConfigArgs struct {
	ApiVersion  pulumi.StringPtrInput   `pulumi:"apiVersion"`
	Args        pulumi.StringArrayInput `pulumi:"args"`
	Command     pulumi.StringPtrInput   `pulumi:"command"`
	Env         pulumi.StringMapInput   `pulumi:"env"`
	InstallHint pulumi.StringPtrInput   `pulumi:"installHint"`
}

func (GitOpsClusterRequestClusterConfigExecProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigExecProviderConfigArgs) ToGitOpsClusterRequestClusterConfigExecProviderConfigOutput() GitOpsClusterRequestClusterConfigExecProviderConfigOutput {
	return i.ToGitOpsClusterRequestClusterConfigExecProviderConfigOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigExecProviderConfigArgs) ToGitOpsClusterRequestClusterConfigExecProviderConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigExecProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigExecProviderConfigOutput)
}

// GitOpsClusterRequestClusterConfigExecProviderConfigArrayInput is an input type that accepts GitOpsClusterRequestClusterConfigExecProviderConfigArray and GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigExecProviderConfigArrayInput` via:
//
//	GitOpsClusterRequestClusterConfigExecProviderConfigArray{ GitOpsClusterRequestClusterConfigExecProviderConfigArgs{...} }
type GitOpsClusterRequestClusterConfigExecProviderConfigArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput() GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput
	ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput
}

type GitOpsClusterRequestClusterConfigExecProviderConfigArray []GitOpsClusterRequestClusterConfigExecProviderConfigInput

func (GitOpsClusterRequestClusterConfigExecProviderConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigExecProviderConfigArray) ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput() GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return i.ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigExecProviderConfigArray) ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput)
}

type GitOpsClusterRequestClusterConfigExecProviderConfigOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigExecProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) ToGitOpsClusterRequestClusterConfigExecProviderConfigOutput() GitOpsClusterRequestClusterConfigExecProviderConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) ToGitOpsClusterRequestClusterConfigExecProviderConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigExecProviderConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigExecProviderConfig) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigExecProviderConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigExecProviderConfig) *string { return v.Command }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigExecProviderConfig) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigOutput) InstallHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigExecProviderConfig) *string { return v.InstallHint }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput) ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput() GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput) ToGitOpsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterConfigExecProviderConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterConfigExecProviderConfig {
		return vs[0].([]GitOpsClusterRequestClusterConfigExecProviderConfig)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterConfigExecProviderConfigOutput)
}

type GitOpsClusterRequestClusterConfigTlsClientConfig struct {
	CaData     *string `pulumi:"caData"`
	CertData   *string `pulumi:"certData"`
	Insecure   *bool   `pulumi:"insecure"`
	KeyData    *string `pulumi:"keyData"`
	ServerName *string `pulumi:"serverName"`
}

// GitOpsClusterRequestClusterConfigTlsClientConfigInput is an input type that accepts GitOpsClusterRequestClusterConfigTlsClientConfigArgs and GitOpsClusterRequestClusterConfigTlsClientConfigOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigTlsClientConfigInput` via:
//
//	GitOpsClusterRequestClusterConfigTlsClientConfigArgs{...}
type GitOpsClusterRequestClusterConfigTlsClientConfigInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigTlsClientConfigOutput() GitOpsClusterRequestClusterConfigTlsClientConfigOutput
	ToGitOpsClusterRequestClusterConfigTlsClientConfigOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigTlsClientConfigOutput
}

type GitOpsClusterRequestClusterConfigTlsClientConfigArgs struct {
	CaData     pulumi.StringPtrInput `pulumi:"caData"`
	CertData   pulumi.StringPtrInput `pulumi:"certData"`
	Insecure   pulumi.BoolPtrInput   `pulumi:"insecure"`
	KeyData    pulumi.StringPtrInput `pulumi:"keyData"`
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (GitOpsClusterRequestClusterConfigTlsClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigTlsClientConfigArgs) ToGitOpsClusterRequestClusterConfigTlsClientConfigOutput() GitOpsClusterRequestClusterConfigTlsClientConfigOutput {
	return i.ToGitOpsClusterRequestClusterConfigTlsClientConfigOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigTlsClientConfigArgs) ToGitOpsClusterRequestClusterConfigTlsClientConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigTlsClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigTlsClientConfigOutput)
}

// GitOpsClusterRequestClusterConfigTlsClientConfigArrayInput is an input type that accepts GitOpsClusterRequestClusterConfigTlsClientConfigArray and GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterConfigTlsClientConfigArrayInput` via:
//
//	GitOpsClusterRequestClusterConfigTlsClientConfigArray{ GitOpsClusterRequestClusterConfigTlsClientConfigArgs{...} }
type GitOpsClusterRequestClusterConfigTlsClientConfigArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput() GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput
	ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput
}

type GitOpsClusterRequestClusterConfigTlsClientConfigArray []GitOpsClusterRequestClusterConfigTlsClientConfigInput

func (GitOpsClusterRequestClusterConfigTlsClientConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterConfigTlsClientConfigArray) ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput() GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return i.ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterConfigTlsClientConfigArray) ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput)
}

type GitOpsClusterRequestClusterConfigTlsClientConfigOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigTlsClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) ToGitOpsClusterRequestClusterConfigTlsClientConfigOutput() GitOpsClusterRequestClusterConfigTlsClientConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) ToGitOpsClusterRequestClusterConfigTlsClientConfigOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigTlsClientConfigOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) CaData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigTlsClientConfig) *string { return v.CaData }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) CertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigTlsClientConfig) *string { return v.CertData }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigTlsClientConfig) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigTlsClientConfig) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterConfigTlsClientConfig) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput) ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput() GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput) ToGitOpsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterConfigTlsClientConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterConfigTlsClientConfig {
		return vs[0].([]GitOpsClusterRequestClusterConfigTlsClientConfig)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterConfigTlsClientConfigOutput)
}

type GitOpsClusterRequestClusterInfo struct {
	ApiVersions       []string                                         `pulumi:"apiVersions"`
	ApplicationsCount *string                                          `pulumi:"applicationsCount"`
	CacheInfos        []GitOpsClusterRequestClusterInfoCacheInfo       `pulumi:"cacheInfos"`
	ConnectionStates  []GitOpsClusterRequestClusterInfoConnectionState `pulumi:"connectionStates"`
	ServerVersion     *string                                          `pulumi:"serverVersion"`
}

// GitOpsClusterRequestClusterInfoInput is an input type that accepts GitOpsClusterRequestClusterInfoArgs and GitOpsClusterRequestClusterInfoOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoInput` via:
//
//	GitOpsClusterRequestClusterInfoArgs{...}
type GitOpsClusterRequestClusterInfoInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoOutput() GitOpsClusterRequestClusterInfoOutput
	ToGitOpsClusterRequestClusterInfoOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoOutput
}

type GitOpsClusterRequestClusterInfoArgs struct {
	ApiVersions       pulumi.StringArrayInput                                  `pulumi:"apiVersions"`
	ApplicationsCount pulumi.StringPtrInput                                    `pulumi:"applicationsCount"`
	CacheInfos        GitOpsClusterRequestClusterInfoCacheInfoArrayInput       `pulumi:"cacheInfos"`
	ConnectionStates  GitOpsClusterRequestClusterInfoConnectionStateArrayInput `pulumi:"connectionStates"`
	ServerVersion     pulumi.StringPtrInput                                    `pulumi:"serverVersion"`
}

func (GitOpsClusterRequestClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfo)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoArgs) ToGitOpsClusterRequestClusterInfoOutput() GitOpsClusterRequestClusterInfoOutput {
	return i.ToGitOpsClusterRequestClusterInfoOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoArgs) ToGitOpsClusterRequestClusterInfoOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoOutput)
}

// GitOpsClusterRequestClusterInfoArrayInput is an input type that accepts GitOpsClusterRequestClusterInfoArray and GitOpsClusterRequestClusterInfoArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoArrayInput` via:
//
//	GitOpsClusterRequestClusterInfoArray{ GitOpsClusterRequestClusterInfoArgs{...} }
type GitOpsClusterRequestClusterInfoArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoArrayOutput() GitOpsClusterRequestClusterInfoArrayOutput
	ToGitOpsClusterRequestClusterInfoArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoArrayOutput
}

type GitOpsClusterRequestClusterInfoArray []GitOpsClusterRequestClusterInfoInput

func (GitOpsClusterRequestClusterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfo)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoArray) ToGitOpsClusterRequestClusterInfoArrayOutput() GitOpsClusterRequestClusterInfoArrayOutput {
	return i.ToGitOpsClusterRequestClusterInfoArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoArray) ToGitOpsClusterRequestClusterInfoArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoArrayOutput)
}

type GitOpsClusterRequestClusterInfoOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfo)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoOutput) ToGitOpsClusterRequestClusterInfoOutput() GitOpsClusterRequestClusterInfoOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoOutput) ToGitOpsClusterRequestClusterInfoOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoOutput) ApiVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfo) []string { return v.ApiVersions }).(pulumi.StringArrayOutput)
}

func (o GitOpsClusterRequestClusterInfoOutput) ApplicationsCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfo) *string { return v.ApplicationsCount }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterInfoOutput) CacheInfos() GitOpsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfo) []GitOpsClusterRequestClusterInfoCacheInfo {
		return v.CacheInfos
	}).(GitOpsClusterRequestClusterInfoCacheInfoArrayOutput)
}

func (o GitOpsClusterRequestClusterInfoOutput) ConnectionStates() GitOpsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfo) []GitOpsClusterRequestClusterInfoConnectionState {
		return v.ConnectionStates
	}).(GitOpsClusterRequestClusterInfoConnectionStateArrayOutput)
}

func (o GitOpsClusterRequestClusterInfoOutput) ServerVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfo) *string { return v.ServerVersion }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterInfoArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfo)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoArrayOutput) ToGitOpsClusterRequestClusterInfoArrayOutput() GitOpsClusterRequestClusterInfoArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoArrayOutput) ToGitOpsClusterRequestClusterInfoArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterInfo {
		return vs[0].([]GitOpsClusterRequestClusterInfo)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterInfoOutput)
}

type GitOpsClusterRequestClusterInfoCacheInfo struct {
	ApisCount         *string `pulumi:"apisCount"`
	LastCacheSyncTime *string `pulumi:"lastCacheSyncTime"`
	ResourcesCount    *string `pulumi:"resourcesCount"`
}

// GitOpsClusterRequestClusterInfoCacheInfoInput is an input type that accepts GitOpsClusterRequestClusterInfoCacheInfoArgs and GitOpsClusterRequestClusterInfoCacheInfoOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoCacheInfoInput` via:
//
//	GitOpsClusterRequestClusterInfoCacheInfoArgs{...}
type GitOpsClusterRequestClusterInfoCacheInfoInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoCacheInfoOutput() GitOpsClusterRequestClusterInfoCacheInfoOutput
	ToGitOpsClusterRequestClusterInfoCacheInfoOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoCacheInfoOutput
}

type GitOpsClusterRequestClusterInfoCacheInfoArgs struct {
	ApisCount         pulumi.StringPtrInput `pulumi:"apisCount"`
	LastCacheSyncTime pulumi.StringPtrInput `pulumi:"lastCacheSyncTime"`
	ResourcesCount    pulumi.StringPtrInput `pulumi:"resourcesCount"`
}

func (GitOpsClusterRequestClusterInfoCacheInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoCacheInfoArgs) ToGitOpsClusterRequestClusterInfoCacheInfoOutput() GitOpsClusterRequestClusterInfoCacheInfoOutput {
	return i.ToGitOpsClusterRequestClusterInfoCacheInfoOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoCacheInfoArgs) ToGitOpsClusterRequestClusterInfoCacheInfoOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoCacheInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoCacheInfoOutput)
}

// GitOpsClusterRequestClusterInfoCacheInfoArrayInput is an input type that accepts GitOpsClusterRequestClusterInfoCacheInfoArray and GitOpsClusterRequestClusterInfoCacheInfoArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoCacheInfoArrayInput` via:
//
//	GitOpsClusterRequestClusterInfoCacheInfoArray{ GitOpsClusterRequestClusterInfoCacheInfoArgs{...} }
type GitOpsClusterRequestClusterInfoCacheInfoArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutput() GitOpsClusterRequestClusterInfoCacheInfoArrayOutput
	ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoCacheInfoArrayOutput
}

type GitOpsClusterRequestClusterInfoCacheInfoArray []GitOpsClusterRequestClusterInfoCacheInfoInput

func (GitOpsClusterRequestClusterInfoCacheInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoCacheInfoArray) ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutput() GitOpsClusterRequestClusterInfoCacheInfoArrayOutput {
	return i.ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoCacheInfoArray) ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoCacheInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoCacheInfoArrayOutput)
}

type GitOpsClusterRequestClusterInfoCacheInfoOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoCacheInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoCacheInfoOutput) ToGitOpsClusterRequestClusterInfoCacheInfoOutput() GitOpsClusterRequestClusterInfoCacheInfoOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoCacheInfoOutput) ToGitOpsClusterRequestClusterInfoCacheInfoOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoCacheInfoOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoCacheInfoOutput) ApisCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoCacheInfo) *string { return v.ApisCount }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterInfoCacheInfoOutput) LastCacheSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoCacheInfo) *string { return v.LastCacheSyncTime }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterInfoCacheInfoOutput) ResourcesCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoCacheInfo) *string { return v.ResourcesCount }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterInfoCacheInfoArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoCacheInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoCacheInfoArrayOutput) ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutput() GitOpsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoCacheInfoArrayOutput) ToGitOpsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoCacheInfoArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterInfoCacheInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterInfoCacheInfo {
		return vs[0].([]GitOpsClusterRequestClusterInfoCacheInfo)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterInfoCacheInfoOutput)
}

type GitOpsClusterRequestClusterInfoConnectionState struct {
	AttemptedAts []GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt `pulumi:"attemptedAts"`
	Message      *string                                                     `pulumi:"message"`
	Status       *string                                                     `pulumi:"status"`
}

// GitOpsClusterRequestClusterInfoConnectionStateInput is an input type that accepts GitOpsClusterRequestClusterInfoConnectionStateArgs and GitOpsClusterRequestClusterInfoConnectionStateOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoConnectionStateInput` via:
//
//	GitOpsClusterRequestClusterInfoConnectionStateArgs{...}
type GitOpsClusterRequestClusterInfoConnectionStateInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoConnectionStateOutput() GitOpsClusterRequestClusterInfoConnectionStateOutput
	ToGitOpsClusterRequestClusterInfoConnectionStateOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoConnectionStateOutput
}

type GitOpsClusterRequestClusterInfoConnectionStateArgs struct {
	AttemptedAts GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput `pulumi:"attemptedAts"`
	Message      pulumi.StringPtrInput                                               `pulumi:"message"`
	Status       pulumi.StringPtrInput                                               `pulumi:"status"`
}

func (GitOpsClusterRequestClusterInfoConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoConnectionStateArgs) ToGitOpsClusterRequestClusterInfoConnectionStateOutput() GitOpsClusterRequestClusterInfoConnectionStateOutput {
	return i.ToGitOpsClusterRequestClusterInfoConnectionStateOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoConnectionStateArgs) ToGitOpsClusterRequestClusterInfoConnectionStateOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoConnectionStateOutput)
}

// GitOpsClusterRequestClusterInfoConnectionStateArrayInput is an input type that accepts GitOpsClusterRequestClusterInfoConnectionStateArray and GitOpsClusterRequestClusterInfoConnectionStateArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoConnectionStateArrayInput` via:
//
//	GitOpsClusterRequestClusterInfoConnectionStateArray{ GitOpsClusterRequestClusterInfoConnectionStateArgs{...} }
type GitOpsClusterRequestClusterInfoConnectionStateArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutput() GitOpsClusterRequestClusterInfoConnectionStateArrayOutput
	ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoConnectionStateArrayOutput
}

type GitOpsClusterRequestClusterInfoConnectionStateArray []GitOpsClusterRequestClusterInfoConnectionStateInput

func (GitOpsClusterRequestClusterInfoConnectionStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoConnectionStateArray) ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutput() GitOpsClusterRequestClusterInfoConnectionStateArrayOutput {
	return i.ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoConnectionStateArray) ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoConnectionStateArrayOutput)
}

type GitOpsClusterRequestClusterInfoConnectionStateOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoConnectionStateOutput) ToGitOpsClusterRequestClusterInfoConnectionStateOutput() GitOpsClusterRequestClusterInfoConnectionStateOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateOutput) ToGitOpsClusterRequestClusterInfoConnectionStateOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateOutput) AttemptedAts() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoConnectionState) []GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt {
		return v.AttemptedAts
	}).(GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput)
}

func (o GitOpsClusterRequestClusterInfoConnectionStateOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoConnectionState) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestClusterInfoConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterInfoConnectionStateArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoConnectionStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoConnectionStateArrayOutput) ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutput() GitOpsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateArrayOutput) ToGitOpsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterInfoConnectionStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterInfoConnectionState {
		return vs[0].([]GitOpsClusterRequestClusterInfoConnectionState)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterInfoConnectionStateOutput)
}

type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt struct {
	Nanos   *int    `pulumi:"nanos"`
	Seconds *string `pulumi:"seconds"`
}

// GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtInput is an input type that accepts GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs and GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtInput` via:
//
//	GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{...}
type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput
	ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput
}

type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs struct {
	Nanos   pulumi.IntPtrInput    `pulumi:"nanos"`
	Seconds pulumi.StringPtrInput `pulumi:"seconds"`
}

func (GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return i.ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput)
}

// GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput is an input type that accepts GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray and GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput` via:
//
//	GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray{ GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{...} }
type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput
	ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput
}

type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray []GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtInput

func (GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return i.ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput)
}

type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) Seconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt) *string { return v.Seconds }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ToGitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt {
		return vs[0].([]GitOpsClusterRequestClusterInfoConnectionStateAttemptedAt)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput)
}

type GitOpsClusterRequestClusterRefreshRequestedAt struct {
	Nanos   *int    `pulumi:"nanos"`
	Seconds *string `pulumi:"seconds"`
}

// GitOpsClusterRequestClusterRefreshRequestedAtInput is an input type that accepts GitOpsClusterRequestClusterRefreshRequestedAtArgs and GitOpsClusterRequestClusterRefreshRequestedAtOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterRefreshRequestedAtInput` via:
//
//	GitOpsClusterRequestClusterRefreshRequestedAtArgs{...}
type GitOpsClusterRequestClusterRefreshRequestedAtInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterRefreshRequestedAtOutput() GitOpsClusterRequestClusterRefreshRequestedAtOutput
	ToGitOpsClusterRequestClusterRefreshRequestedAtOutputWithContext(context.Context) GitOpsClusterRequestClusterRefreshRequestedAtOutput
}

type GitOpsClusterRequestClusterRefreshRequestedAtArgs struct {
	Nanos   pulumi.IntPtrInput    `pulumi:"nanos"`
	Seconds pulumi.StringPtrInput `pulumi:"seconds"`
}

func (GitOpsClusterRequestClusterRefreshRequestedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterRefreshRequestedAtArgs) ToGitOpsClusterRequestClusterRefreshRequestedAtOutput() GitOpsClusterRequestClusterRefreshRequestedAtOutput {
	return i.ToGitOpsClusterRequestClusterRefreshRequestedAtOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterRefreshRequestedAtArgs) ToGitOpsClusterRequestClusterRefreshRequestedAtOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterRefreshRequestedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterRefreshRequestedAtOutput)
}

// GitOpsClusterRequestClusterRefreshRequestedAtArrayInput is an input type that accepts GitOpsClusterRequestClusterRefreshRequestedAtArray and GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestClusterRefreshRequestedAtArrayInput` via:
//
//	GitOpsClusterRequestClusterRefreshRequestedAtArray{ GitOpsClusterRequestClusterRefreshRequestedAtArgs{...} }
type GitOpsClusterRequestClusterRefreshRequestedAtArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutput() GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput
	ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(context.Context) GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput
}

type GitOpsClusterRequestClusterRefreshRequestedAtArray []GitOpsClusterRequestClusterRefreshRequestedAtInput

func (GitOpsClusterRequestClusterRefreshRequestedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (i GitOpsClusterRequestClusterRefreshRequestedAtArray) ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutput() GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return i.ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestClusterRefreshRequestedAtArray) ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput)
}

type GitOpsClusterRequestClusterRefreshRequestedAtOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterRefreshRequestedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtOutput) ToGitOpsClusterRequestClusterRefreshRequestedAtOutput() GitOpsClusterRequestClusterRefreshRequestedAtOutput {
	return o
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtOutput) ToGitOpsClusterRequestClusterRefreshRequestedAtOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterRefreshRequestedAtOutput {
	return o
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterRefreshRequestedAt) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtOutput) Seconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestClusterRefreshRequestedAt) *string { return v.Seconds }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput) ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutput() GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput) ToGitOpsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o
}

func (o GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestClusterRefreshRequestedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestClusterRefreshRequestedAt {
		return vs[0].([]GitOpsClusterRequestClusterRefreshRequestedAt)[vs[1].(int)]
	}).(GitOpsClusterRequestClusterRefreshRequestedAtOutput)
}

type GitOpsClusterRequestId struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// GitOpsClusterRequestIdInput is an input type that accepts GitOpsClusterRequestIdArgs and GitOpsClusterRequestIdOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestIdInput` via:
//
//	GitOpsClusterRequestIdArgs{...}
type GitOpsClusterRequestIdInput interface {
	pulumi.Input

	ToGitOpsClusterRequestIdOutput() GitOpsClusterRequestIdOutput
	ToGitOpsClusterRequestIdOutputWithContext(context.Context) GitOpsClusterRequestIdOutput
}

type GitOpsClusterRequestIdArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitOpsClusterRequestIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestId)(nil)).Elem()
}

func (i GitOpsClusterRequestIdArgs) ToGitOpsClusterRequestIdOutput() GitOpsClusterRequestIdOutput {
	return i.ToGitOpsClusterRequestIdOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestIdArgs) ToGitOpsClusterRequestIdOutputWithContext(ctx context.Context) GitOpsClusterRequestIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestIdOutput)
}

// GitOpsClusterRequestIdArrayInput is an input type that accepts GitOpsClusterRequestIdArray and GitOpsClusterRequestIdArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestIdArrayInput` via:
//
//	GitOpsClusterRequestIdArray{ GitOpsClusterRequestIdArgs{...} }
type GitOpsClusterRequestIdArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestIdArrayOutput() GitOpsClusterRequestIdArrayOutput
	ToGitOpsClusterRequestIdArrayOutputWithContext(context.Context) GitOpsClusterRequestIdArrayOutput
}

type GitOpsClusterRequestIdArray []GitOpsClusterRequestIdInput

func (GitOpsClusterRequestIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestId)(nil)).Elem()
}

func (i GitOpsClusterRequestIdArray) ToGitOpsClusterRequestIdArrayOutput() GitOpsClusterRequestIdArrayOutput {
	return i.ToGitOpsClusterRequestIdArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestIdArray) ToGitOpsClusterRequestIdArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestIdArrayOutput)
}

type GitOpsClusterRequestIdOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestId)(nil)).Elem()
}

func (o GitOpsClusterRequestIdOutput) ToGitOpsClusterRequestIdOutput() GitOpsClusterRequestIdOutput {
	return o
}

func (o GitOpsClusterRequestIdOutput) ToGitOpsClusterRequestIdOutputWithContext(ctx context.Context) GitOpsClusterRequestIdOutput {
	return o
}

func (o GitOpsClusterRequestIdOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestId) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GitOpsClusterRequestIdOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsClusterRequestId) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitOpsClusterRequestIdArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestId)(nil)).Elem()
}

func (o GitOpsClusterRequestIdArrayOutput) ToGitOpsClusterRequestIdArrayOutput() GitOpsClusterRequestIdArrayOutput {
	return o
}

func (o GitOpsClusterRequestIdArrayOutput) ToGitOpsClusterRequestIdArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestIdArrayOutput {
	return o
}

func (o GitOpsClusterRequestIdArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestId {
		return vs[0].([]GitOpsClusterRequestId)[vs[1].(int)]
	}).(GitOpsClusterRequestIdOutput)
}

type GitOpsClusterRequestUpdateMask struct {
	Paths []string `pulumi:"paths"`
}

// GitOpsClusterRequestUpdateMaskInput is an input type that accepts GitOpsClusterRequestUpdateMaskArgs and GitOpsClusterRequestUpdateMaskOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestUpdateMaskInput` via:
//
//	GitOpsClusterRequestUpdateMaskArgs{...}
type GitOpsClusterRequestUpdateMaskInput interface {
	pulumi.Input

	ToGitOpsClusterRequestUpdateMaskOutput() GitOpsClusterRequestUpdateMaskOutput
	ToGitOpsClusterRequestUpdateMaskOutputWithContext(context.Context) GitOpsClusterRequestUpdateMaskOutput
}

type GitOpsClusterRequestUpdateMaskArgs struct {
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GitOpsClusterRequestUpdateMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestUpdateMask)(nil)).Elem()
}

func (i GitOpsClusterRequestUpdateMaskArgs) ToGitOpsClusterRequestUpdateMaskOutput() GitOpsClusterRequestUpdateMaskOutput {
	return i.ToGitOpsClusterRequestUpdateMaskOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestUpdateMaskArgs) ToGitOpsClusterRequestUpdateMaskOutputWithContext(ctx context.Context) GitOpsClusterRequestUpdateMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestUpdateMaskOutput)
}

// GitOpsClusterRequestUpdateMaskArrayInput is an input type that accepts GitOpsClusterRequestUpdateMaskArray and GitOpsClusterRequestUpdateMaskArrayOutput values.
// You can construct a concrete instance of `GitOpsClusterRequestUpdateMaskArrayInput` via:
//
//	GitOpsClusterRequestUpdateMaskArray{ GitOpsClusterRequestUpdateMaskArgs{...} }
type GitOpsClusterRequestUpdateMaskArrayInput interface {
	pulumi.Input

	ToGitOpsClusterRequestUpdateMaskArrayOutput() GitOpsClusterRequestUpdateMaskArrayOutput
	ToGitOpsClusterRequestUpdateMaskArrayOutputWithContext(context.Context) GitOpsClusterRequestUpdateMaskArrayOutput
}

type GitOpsClusterRequestUpdateMaskArray []GitOpsClusterRequestUpdateMaskInput

func (GitOpsClusterRequestUpdateMaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestUpdateMask)(nil)).Elem()
}

func (i GitOpsClusterRequestUpdateMaskArray) ToGitOpsClusterRequestUpdateMaskArrayOutput() GitOpsClusterRequestUpdateMaskArrayOutput {
	return i.ToGitOpsClusterRequestUpdateMaskArrayOutputWithContext(context.Background())
}

func (i GitOpsClusterRequestUpdateMaskArray) ToGitOpsClusterRequestUpdateMaskArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestUpdateMaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsClusterRequestUpdateMaskArrayOutput)
}

type GitOpsClusterRequestUpdateMaskOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestUpdateMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsClusterRequestUpdateMask)(nil)).Elem()
}

func (o GitOpsClusterRequestUpdateMaskOutput) ToGitOpsClusterRequestUpdateMaskOutput() GitOpsClusterRequestUpdateMaskOutput {
	return o
}

func (o GitOpsClusterRequestUpdateMaskOutput) ToGitOpsClusterRequestUpdateMaskOutputWithContext(ctx context.Context) GitOpsClusterRequestUpdateMaskOutput {
	return o
}

func (o GitOpsClusterRequestUpdateMaskOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsClusterRequestUpdateMask) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GitOpsClusterRequestUpdateMaskArrayOutput struct{ *pulumi.OutputState }

func (GitOpsClusterRequestUpdateMaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsClusterRequestUpdateMask)(nil)).Elem()
}

func (o GitOpsClusterRequestUpdateMaskArrayOutput) ToGitOpsClusterRequestUpdateMaskArrayOutput() GitOpsClusterRequestUpdateMaskArrayOutput {
	return o
}

func (o GitOpsClusterRequestUpdateMaskArrayOutput) ToGitOpsClusterRequestUpdateMaskArrayOutputWithContext(ctx context.Context) GitOpsClusterRequestUpdateMaskArrayOutput {
	return o
}

func (o GitOpsClusterRequestUpdateMaskArrayOutput) Index(i pulumi.IntInput) GitOpsClusterRequestUpdateMaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsClusterRequestUpdateMask {
		return vs[0].([]GitOpsClusterRequestUpdateMask)[vs[1].(int)]
	}).(GitOpsClusterRequestUpdateMaskOutput)
}

type GitOpsRepositoryRepo struct {
	// Identifies the authentication method used to connect to the repository.
	ConnectionType string `pulumi:"connectionType"`
	// Indicates if git-lfs support must be enabled for this repo. This is valid only for Git repositories.
	EnableLfs *bool `pulumi:"enableLfs"`
	// Indicates if helm-oci support must be enabled for this repo.
	EnableOci *bool `pulumi:"enableOci"`
	// Base URL of GitHub Enterprise installation. If left empty, this defaults to https://api.github.com.
	GithubAppEnterpriseBaseUrl *string `pulumi:"githubAppEnterpriseBaseUrl"`
	// Id of the GitHub app used to access the repo.
	GithubAppId *string `pulumi:"githubAppId"`
	// Installation id of the GitHub app used to access the repo.
	GithubAppInstallationId *string `pulumi:"githubAppInstallationId"`
	// GitHub app private key PEM data.
	GithubAppPrivateKey *string `pulumi:"githubAppPrivateKey"`
	// Indicates if the credentials were inherited from a credential set.
	InheritedCreds *bool `pulumi:"inheritedCreds"`
	// Indicates if the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys.
	Insecure *bool `pulumi:"insecure"`
	// Indicates if InsecureIgnoreHostKey should be used. Insecure is favored used only for git repos.
	InsecureIgnoreHostKey *bool `pulumi:"insecureIgnoreHostKey"`
	// Name to be used for this repo. Only used with Helm repos.
	Name *string `pulumi:"name"`
	// Password or PAT used for authenticating at the remote repository.
	Password *string `pulumi:"password"`
	// Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity.
	Project *string `pulumi:"project"`
	// The HTTP/HTTPS proxy used to access the repo.
	Proxy *string `pulumi:"proxy"`
	// URL to the remote repository.
	Repo string `pulumi:"repo"`
	// PEM data for authenticating at the repo server. Only used with Git repos.
	SshPrivateKey *string `pulumi:"sshPrivateKey"`
	// Certificate in PEM format for authenticating at the repo server.
	TlsClientCertData *string `pulumi:"tlsClientCertData"`
	// Private key in PEM format for authenticating at the repo server.
	TlsClientCertKey *string `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
	Type_ *string `pulumi:"type_"`
	// Username used for authenticating at the remote repository.
	Username *string `pulumi:"username"`
}

// GitOpsRepositoryRepoInput is an input type that accepts GitOpsRepositoryRepoArgs and GitOpsRepositoryRepoOutput values.
// You can construct a concrete instance of `GitOpsRepositoryRepoInput` via:
//
//	GitOpsRepositoryRepoArgs{...}
type GitOpsRepositoryRepoInput interface {
	pulumi.Input

	ToGitOpsRepositoryRepoOutput() GitOpsRepositoryRepoOutput
	ToGitOpsRepositoryRepoOutputWithContext(context.Context) GitOpsRepositoryRepoOutput
}

type GitOpsRepositoryRepoArgs struct {
	// Identifies the authentication method used to connect to the repository.
	ConnectionType pulumi.StringInput `pulumi:"connectionType"`
	// Indicates if git-lfs support must be enabled for this repo. This is valid only for Git repositories.
	EnableLfs pulumi.BoolPtrInput `pulumi:"enableLfs"`
	// Indicates if helm-oci support must be enabled for this repo.
	EnableOci pulumi.BoolPtrInput `pulumi:"enableOci"`
	// Base URL of GitHub Enterprise installation. If left empty, this defaults to https://api.github.com.
	GithubAppEnterpriseBaseUrl pulumi.StringPtrInput `pulumi:"githubAppEnterpriseBaseUrl"`
	// Id of the GitHub app used to access the repo.
	GithubAppId pulumi.StringPtrInput `pulumi:"githubAppId"`
	// Installation id of the GitHub app used to access the repo.
	GithubAppInstallationId pulumi.StringPtrInput `pulumi:"githubAppInstallationId"`
	// GitHub app private key PEM data.
	GithubAppPrivateKey pulumi.StringPtrInput `pulumi:"githubAppPrivateKey"`
	// Indicates if the credentials were inherited from a credential set.
	InheritedCreds pulumi.BoolPtrInput `pulumi:"inheritedCreds"`
	// Indicates if the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// Indicates if InsecureIgnoreHostKey should be used. Insecure is favored used only for git repos.
	InsecureIgnoreHostKey pulumi.BoolPtrInput `pulumi:"insecureIgnoreHostKey"`
	// Name to be used for this repo. Only used with Helm repos.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password or PAT used for authenticating at the remote repository.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity.
	Project pulumi.StringPtrInput `pulumi:"project"`
	// The HTTP/HTTPS proxy used to access the repo.
	Proxy pulumi.StringPtrInput `pulumi:"proxy"`
	// URL to the remote repository.
	Repo pulumi.StringInput `pulumi:"repo"`
	// PEM data for authenticating at the repo server. Only used with Git repos.
	SshPrivateKey pulumi.StringPtrInput `pulumi:"sshPrivateKey"`
	// Certificate in PEM format for authenticating at the repo server.
	TlsClientCertData pulumi.StringPtrInput `pulumi:"tlsClientCertData"`
	// Private key in PEM format for authenticating at the repo server.
	TlsClientCertKey pulumi.StringPtrInput `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
	Type_ pulumi.StringPtrInput `pulumi:"type_"`
	// Username used for authenticating at the remote repository.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GitOpsRepositoryRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsRepositoryRepo)(nil)).Elem()
}

func (i GitOpsRepositoryRepoArgs) ToGitOpsRepositoryRepoOutput() GitOpsRepositoryRepoOutput {
	return i.ToGitOpsRepositoryRepoOutputWithContext(context.Background())
}

func (i GitOpsRepositoryRepoArgs) ToGitOpsRepositoryRepoOutputWithContext(ctx context.Context) GitOpsRepositoryRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsRepositoryRepoOutput)
}

// GitOpsRepositoryRepoArrayInput is an input type that accepts GitOpsRepositoryRepoArray and GitOpsRepositoryRepoArrayOutput values.
// You can construct a concrete instance of `GitOpsRepositoryRepoArrayInput` via:
//
//	GitOpsRepositoryRepoArray{ GitOpsRepositoryRepoArgs{...} }
type GitOpsRepositoryRepoArrayInput interface {
	pulumi.Input

	ToGitOpsRepositoryRepoArrayOutput() GitOpsRepositoryRepoArrayOutput
	ToGitOpsRepositoryRepoArrayOutputWithContext(context.Context) GitOpsRepositoryRepoArrayOutput
}

type GitOpsRepositoryRepoArray []GitOpsRepositoryRepoInput

func (GitOpsRepositoryRepoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsRepositoryRepo)(nil)).Elem()
}

func (i GitOpsRepositoryRepoArray) ToGitOpsRepositoryRepoArrayOutput() GitOpsRepositoryRepoArrayOutput {
	return i.ToGitOpsRepositoryRepoArrayOutputWithContext(context.Background())
}

func (i GitOpsRepositoryRepoArray) ToGitOpsRepositoryRepoArrayOutputWithContext(ctx context.Context) GitOpsRepositoryRepoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsRepositoryRepoArrayOutput)
}

type GitOpsRepositoryRepoOutput struct{ *pulumi.OutputState }

func (GitOpsRepositoryRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsRepositoryRepo)(nil)).Elem()
}

func (o GitOpsRepositoryRepoOutput) ToGitOpsRepositoryRepoOutput() GitOpsRepositoryRepoOutput {
	return o
}

func (o GitOpsRepositoryRepoOutput) ToGitOpsRepositoryRepoOutputWithContext(ctx context.Context) GitOpsRepositoryRepoOutput {
	return o
}

// Identifies the authentication method used to connect to the repository.
func (o GitOpsRepositoryRepoOutput) ConnectionType() pulumi.StringOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) string { return v.ConnectionType }).(pulumi.StringOutput)
}

// Indicates if git-lfs support must be enabled for this repo. This is valid only for Git repositories.
func (o GitOpsRepositoryRepoOutput) EnableLfs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *bool { return v.EnableLfs }).(pulumi.BoolPtrOutput)
}

// Indicates if helm-oci support must be enabled for this repo.
func (o GitOpsRepositoryRepoOutput) EnableOci() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *bool { return v.EnableOci }).(pulumi.BoolPtrOutput)
}

// Base URL of GitHub Enterprise installation. If left empty, this defaults to https://api.github.com.
func (o GitOpsRepositoryRepoOutput) GithubAppEnterpriseBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.GithubAppEnterpriseBaseUrl }).(pulumi.StringPtrOutput)
}

// Id of the GitHub app used to access the repo.
func (o GitOpsRepositoryRepoOutput) GithubAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.GithubAppId }).(pulumi.StringPtrOutput)
}

// Installation id of the GitHub app used to access the repo.
func (o GitOpsRepositoryRepoOutput) GithubAppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.GithubAppInstallationId }).(pulumi.StringPtrOutput)
}

// GitHub app private key PEM data.
func (o GitOpsRepositoryRepoOutput) GithubAppPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.GithubAppPrivateKey }).(pulumi.StringPtrOutput)
}

// Indicates if the credentials were inherited from a credential set.
func (o GitOpsRepositoryRepoOutput) InheritedCreds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *bool { return v.InheritedCreds }).(pulumi.BoolPtrOutput)
}

// Indicates if the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys.
func (o GitOpsRepositoryRepoOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// Indicates if InsecureIgnoreHostKey should be used. Insecure is favored used only for git repos.
func (o GitOpsRepositoryRepoOutput) InsecureIgnoreHostKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *bool { return v.InsecureIgnoreHostKey }).(pulumi.BoolPtrOutput)
}

// Name to be used for this repo. Only used with Helm repos.
func (o GitOpsRepositoryRepoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password or PAT used for authenticating at the remote repository.
func (o GitOpsRepositoryRepoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity.
func (o GitOpsRepositoryRepoOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.Project }).(pulumi.StringPtrOutput)
}

// The HTTP/HTTPS proxy used to access the repo.
func (o GitOpsRepositoryRepoOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

// URL to the remote repository.
func (o GitOpsRepositoryRepoOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) string { return v.Repo }).(pulumi.StringOutput)
}

// PEM data for authenticating at the repo server. Only used with Git repos.
func (o GitOpsRepositoryRepoOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.SshPrivateKey }).(pulumi.StringPtrOutput)
}

// Certificate in PEM format for authenticating at the repo server.
func (o GitOpsRepositoryRepoOutput) TlsClientCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.TlsClientCertData }).(pulumi.StringPtrOutput)
}

// Private key in PEM format for authenticating at the repo server.
func (o GitOpsRepositoryRepoOutput) TlsClientCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.TlsClientCertKey }).(pulumi.StringPtrOutput)
}

// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
func (o GitOpsRepositoryRepoOutput) Type_() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.Type_ }).(pulumi.StringPtrOutput)
}

// Username used for authenticating at the remote repository.
func (o GitOpsRepositoryRepoOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitOpsRepositoryRepo) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitOpsRepositoryRepoArrayOutput struct{ *pulumi.OutputState }

func (GitOpsRepositoryRepoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsRepositoryRepo)(nil)).Elem()
}

func (o GitOpsRepositoryRepoArrayOutput) ToGitOpsRepositoryRepoArrayOutput() GitOpsRepositoryRepoArrayOutput {
	return o
}

func (o GitOpsRepositoryRepoArrayOutput) ToGitOpsRepositoryRepoArrayOutputWithContext(ctx context.Context) GitOpsRepositoryRepoArrayOutput {
	return o
}

func (o GitOpsRepositoryRepoArrayOutput) Index(i pulumi.IntInput) GitOpsRepositoryRepoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsRepositoryRepo {
		return vs[0].([]GitOpsRepositoryRepo)[vs[1].(int)]
	}).(GitOpsRepositoryRepoOutput)
}

type GitOpsRepositoryUpdateMask struct {
	// The set of field mask paths.
	Paths []string `pulumi:"paths"`
}

// GitOpsRepositoryUpdateMaskInput is an input type that accepts GitOpsRepositoryUpdateMaskArgs and GitOpsRepositoryUpdateMaskOutput values.
// You can construct a concrete instance of `GitOpsRepositoryUpdateMaskInput` via:
//
//	GitOpsRepositoryUpdateMaskArgs{...}
type GitOpsRepositoryUpdateMaskInput interface {
	pulumi.Input

	ToGitOpsRepositoryUpdateMaskOutput() GitOpsRepositoryUpdateMaskOutput
	ToGitOpsRepositoryUpdateMaskOutputWithContext(context.Context) GitOpsRepositoryUpdateMaskOutput
}

type GitOpsRepositoryUpdateMaskArgs struct {
	// The set of field mask paths.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GitOpsRepositoryUpdateMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsRepositoryUpdateMask)(nil)).Elem()
}

func (i GitOpsRepositoryUpdateMaskArgs) ToGitOpsRepositoryUpdateMaskOutput() GitOpsRepositoryUpdateMaskOutput {
	return i.ToGitOpsRepositoryUpdateMaskOutputWithContext(context.Background())
}

func (i GitOpsRepositoryUpdateMaskArgs) ToGitOpsRepositoryUpdateMaskOutputWithContext(ctx context.Context) GitOpsRepositoryUpdateMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsRepositoryUpdateMaskOutput)
}

// GitOpsRepositoryUpdateMaskArrayInput is an input type that accepts GitOpsRepositoryUpdateMaskArray and GitOpsRepositoryUpdateMaskArrayOutput values.
// You can construct a concrete instance of `GitOpsRepositoryUpdateMaskArrayInput` via:
//
//	GitOpsRepositoryUpdateMaskArray{ GitOpsRepositoryUpdateMaskArgs{...} }
type GitOpsRepositoryUpdateMaskArrayInput interface {
	pulumi.Input

	ToGitOpsRepositoryUpdateMaskArrayOutput() GitOpsRepositoryUpdateMaskArrayOutput
	ToGitOpsRepositoryUpdateMaskArrayOutputWithContext(context.Context) GitOpsRepositoryUpdateMaskArrayOutput
}

type GitOpsRepositoryUpdateMaskArray []GitOpsRepositoryUpdateMaskInput

func (GitOpsRepositoryUpdateMaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsRepositoryUpdateMask)(nil)).Elem()
}

func (i GitOpsRepositoryUpdateMaskArray) ToGitOpsRepositoryUpdateMaskArrayOutput() GitOpsRepositoryUpdateMaskArrayOutput {
	return i.ToGitOpsRepositoryUpdateMaskArrayOutputWithContext(context.Background())
}

func (i GitOpsRepositoryUpdateMaskArray) ToGitOpsRepositoryUpdateMaskArrayOutputWithContext(ctx context.Context) GitOpsRepositoryUpdateMaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitOpsRepositoryUpdateMaskArrayOutput)
}

type GitOpsRepositoryUpdateMaskOutput struct{ *pulumi.OutputState }

func (GitOpsRepositoryUpdateMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitOpsRepositoryUpdateMask)(nil)).Elem()
}

func (o GitOpsRepositoryUpdateMaskOutput) ToGitOpsRepositoryUpdateMaskOutput() GitOpsRepositoryUpdateMaskOutput {
	return o
}

func (o GitOpsRepositoryUpdateMaskOutput) ToGitOpsRepositoryUpdateMaskOutputWithContext(ctx context.Context) GitOpsRepositoryUpdateMaskOutput {
	return o
}

// The set of field mask paths.
func (o GitOpsRepositoryUpdateMaskOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitOpsRepositoryUpdateMask) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GitOpsRepositoryUpdateMaskArrayOutput struct{ *pulumi.OutputState }

func (GitOpsRepositoryUpdateMaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitOpsRepositoryUpdateMask)(nil)).Elem()
}

func (o GitOpsRepositoryUpdateMaskArrayOutput) ToGitOpsRepositoryUpdateMaskArrayOutput() GitOpsRepositoryUpdateMaskArrayOutput {
	return o
}

func (o GitOpsRepositoryUpdateMaskArrayOutput) ToGitOpsRepositoryUpdateMaskArrayOutputWithContext(ctx context.Context) GitOpsRepositoryUpdateMaskArrayOutput {
	return o
}

func (o GitOpsRepositoryUpdateMaskArrayOutput) Index(i pulumi.IntInput) GitOpsRepositoryUpdateMaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitOpsRepositoryUpdateMask {
		return vs[0].([]GitOpsRepositoryUpdateMask)[vs[1].(int)]
	}).(GitOpsRepositoryUpdateMaskOutput)
}

type GithubConnectorApiAuthentication struct {
	// Configuration for using the github app for interacting with the github api.
	GithubApp *GithubConnectorApiAuthenticationGithubApp `pulumi:"githubApp"`
	// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef *string `pulumi:"tokenRef"`
}

// GithubConnectorApiAuthenticationInput is an input type that accepts GithubConnectorApiAuthenticationArgs and GithubConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GithubConnectorApiAuthenticationInput` via:
//
//	GithubConnectorApiAuthenticationArgs{...}
type GithubConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGithubConnectorApiAuthenticationOutput() GithubConnectorApiAuthenticationOutput
	ToGithubConnectorApiAuthenticationOutputWithContext(context.Context) GithubConnectorApiAuthenticationOutput
}

type GithubConnectorApiAuthenticationArgs struct {
	// Configuration for using the github app for interacting with the github api.
	GithubApp GithubConnectorApiAuthenticationGithubAppPtrInput `pulumi:"githubApp"`
	// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringPtrInput `pulumi:"tokenRef"`
}

func (GithubConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorApiAuthentication)(nil)).Elem()
}

func (i GithubConnectorApiAuthenticationArgs) ToGithubConnectorApiAuthenticationOutput() GithubConnectorApiAuthenticationOutput {
	return i.ToGithubConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GithubConnectorApiAuthenticationArgs) ToGithubConnectorApiAuthenticationOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorApiAuthenticationOutput)
}

func (i GithubConnectorApiAuthenticationArgs) ToGithubConnectorApiAuthenticationPtrOutput() GithubConnectorApiAuthenticationPtrOutput {
	return i.ToGithubConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i GithubConnectorApiAuthenticationArgs) ToGithubConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorApiAuthenticationOutput).ToGithubConnectorApiAuthenticationPtrOutputWithContext(ctx)
}

// GithubConnectorApiAuthenticationPtrInput is an input type that accepts GithubConnectorApiAuthenticationArgs, GithubConnectorApiAuthenticationPtr and GithubConnectorApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `GithubConnectorApiAuthenticationPtrInput` via:
//
//	        GithubConnectorApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type GithubConnectorApiAuthenticationPtrInput interface {
	pulumi.Input

	ToGithubConnectorApiAuthenticationPtrOutput() GithubConnectorApiAuthenticationPtrOutput
	ToGithubConnectorApiAuthenticationPtrOutputWithContext(context.Context) GithubConnectorApiAuthenticationPtrOutput
}

type githubConnectorApiAuthenticationPtrType GithubConnectorApiAuthenticationArgs

func GithubConnectorApiAuthenticationPtr(v *GithubConnectorApiAuthenticationArgs) GithubConnectorApiAuthenticationPtrInput {
	return (*githubConnectorApiAuthenticationPtrType)(v)
}

func (*githubConnectorApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorApiAuthentication)(nil)).Elem()
}

func (i *githubConnectorApiAuthenticationPtrType) ToGithubConnectorApiAuthenticationPtrOutput() GithubConnectorApiAuthenticationPtrOutput {
	return i.ToGithubConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *githubConnectorApiAuthenticationPtrType) ToGithubConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorApiAuthenticationPtrOutput)
}

type GithubConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GithubConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorApiAuthentication)(nil)).Elem()
}

func (o GithubConnectorApiAuthenticationOutput) ToGithubConnectorApiAuthenticationOutput() GithubConnectorApiAuthenticationOutput {
	return o
}

func (o GithubConnectorApiAuthenticationOutput) ToGithubConnectorApiAuthenticationOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationOutput {
	return o
}

func (o GithubConnectorApiAuthenticationOutput) ToGithubConnectorApiAuthenticationPtrOutput() GithubConnectorApiAuthenticationPtrOutput {
	return o.ToGithubConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o GithubConnectorApiAuthenticationOutput) ToGithubConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubConnectorApiAuthentication) *GithubConnectorApiAuthentication {
		return &v
	}).(GithubConnectorApiAuthenticationPtrOutput)
}

// Configuration for using the github app for interacting with the github api.
func (o GithubConnectorApiAuthenticationOutput) GithubApp() GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthentication) *GithubConnectorApiAuthenticationGithubApp {
		return v.GithubApp
	}).(GithubConnectorApiAuthenticationGithubAppPtrOutput)
}

// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GithubConnectorApiAuthenticationOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthentication) *string { return v.TokenRef }).(pulumi.StringPtrOutput)
}

type GithubConnectorApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GithubConnectorApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorApiAuthentication)(nil)).Elem()
}

func (o GithubConnectorApiAuthenticationPtrOutput) ToGithubConnectorApiAuthenticationPtrOutput() GithubConnectorApiAuthenticationPtrOutput {
	return o
}

func (o GithubConnectorApiAuthenticationPtrOutput) ToGithubConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationPtrOutput {
	return o
}

func (o GithubConnectorApiAuthenticationPtrOutput) Elem() GithubConnectorApiAuthenticationOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthentication) GithubConnectorApiAuthentication {
		if v != nil {
			return *v
		}
		var ret GithubConnectorApiAuthentication
		return ret
	}).(GithubConnectorApiAuthenticationOutput)
}

// Configuration for using the github app for interacting with the github api.
func (o GithubConnectorApiAuthenticationPtrOutput) GithubApp() GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthentication) *GithubConnectorApiAuthenticationGithubApp {
		if v == nil {
			return nil
		}
		return v.GithubApp
	}).(GithubConnectorApiAuthenticationGithubAppPtrOutput)
}

// Personal access token for interacting with the github api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GithubConnectorApiAuthenticationPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TokenRef
	}).(pulumi.StringPtrOutput)
}

type GithubConnectorApiAuthenticationGithubApp struct {
	ApplicationId     *string `pulumi:"applicationId"`
	ApplicationIdRef  *string `pulumi:"applicationIdRef"`
	InstallationId    *string `pulumi:"installationId"`
	InstallationIdRef *string `pulumi:"installationIdRef"`
	PrivateKeyRef     string  `pulumi:"privateKeyRef"`
}

// GithubConnectorApiAuthenticationGithubAppInput is an input type that accepts GithubConnectorApiAuthenticationGithubAppArgs and GithubConnectorApiAuthenticationGithubAppOutput values.
// You can construct a concrete instance of `GithubConnectorApiAuthenticationGithubAppInput` via:
//
//	GithubConnectorApiAuthenticationGithubAppArgs{...}
type GithubConnectorApiAuthenticationGithubAppInput interface {
	pulumi.Input

	ToGithubConnectorApiAuthenticationGithubAppOutput() GithubConnectorApiAuthenticationGithubAppOutput
	ToGithubConnectorApiAuthenticationGithubAppOutputWithContext(context.Context) GithubConnectorApiAuthenticationGithubAppOutput
}

type GithubConnectorApiAuthenticationGithubAppArgs struct {
	ApplicationId     pulumi.StringPtrInput `pulumi:"applicationId"`
	ApplicationIdRef  pulumi.StringPtrInput `pulumi:"applicationIdRef"`
	InstallationId    pulumi.StringPtrInput `pulumi:"installationId"`
	InstallationIdRef pulumi.StringPtrInput `pulumi:"installationIdRef"`
	PrivateKeyRef     pulumi.StringInput    `pulumi:"privateKeyRef"`
}

func (GithubConnectorApiAuthenticationGithubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GithubConnectorApiAuthenticationGithubAppArgs) ToGithubConnectorApiAuthenticationGithubAppOutput() GithubConnectorApiAuthenticationGithubAppOutput {
	return i.ToGithubConnectorApiAuthenticationGithubAppOutputWithContext(context.Background())
}

func (i GithubConnectorApiAuthenticationGithubAppArgs) ToGithubConnectorApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationGithubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorApiAuthenticationGithubAppOutput)
}

func (i GithubConnectorApiAuthenticationGithubAppArgs) ToGithubConnectorApiAuthenticationGithubAppPtrOutput() GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return i.ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(context.Background())
}

func (i GithubConnectorApiAuthenticationGithubAppArgs) ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorApiAuthenticationGithubAppOutput).ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(ctx)
}

// GithubConnectorApiAuthenticationGithubAppPtrInput is an input type that accepts GithubConnectorApiAuthenticationGithubAppArgs, GithubConnectorApiAuthenticationGithubAppPtr and GithubConnectorApiAuthenticationGithubAppPtrOutput values.
// You can construct a concrete instance of `GithubConnectorApiAuthenticationGithubAppPtrInput` via:
//
//	        GithubConnectorApiAuthenticationGithubAppArgs{...}
//
//	or:
//
//	        nil
type GithubConnectorApiAuthenticationGithubAppPtrInput interface {
	pulumi.Input

	ToGithubConnectorApiAuthenticationGithubAppPtrOutput() GithubConnectorApiAuthenticationGithubAppPtrOutput
	ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(context.Context) GithubConnectorApiAuthenticationGithubAppPtrOutput
}

type githubConnectorApiAuthenticationGithubAppPtrType GithubConnectorApiAuthenticationGithubAppArgs

func GithubConnectorApiAuthenticationGithubAppPtr(v *GithubConnectorApiAuthenticationGithubAppArgs) GithubConnectorApiAuthenticationGithubAppPtrInput {
	return (*githubConnectorApiAuthenticationGithubAppPtrType)(v)
}

func (*githubConnectorApiAuthenticationGithubAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (i *githubConnectorApiAuthenticationGithubAppPtrType) ToGithubConnectorApiAuthenticationGithubAppPtrOutput() GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return i.ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(context.Background())
}

func (i *githubConnectorApiAuthenticationGithubAppPtrType) ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorApiAuthenticationGithubAppPtrOutput)
}

type GithubConnectorApiAuthenticationGithubAppOutput struct{ *pulumi.OutputState }

func (GithubConnectorApiAuthenticationGithubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) ToGithubConnectorApiAuthenticationGithubAppOutput() GithubConnectorApiAuthenticationGithubAppOutput {
	return o
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) ToGithubConnectorApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationGithubAppOutput {
	return o
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) ToGithubConnectorApiAuthenticationGithubAppPtrOutput() GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return o.ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(context.Background())
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubConnectorApiAuthenticationGithubApp) *GithubConnectorApiAuthenticationGithubApp {
		return &v
	}).(GithubConnectorApiAuthenticationGithubAppPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthenticationGithubApp) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) ApplicationIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthenticationGithubApp) *string { return v.ApplicationIdRef }).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) InstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthenticationGithubApp) *string { return v.InstallationId }).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) InstallationIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthenticationGithubApp) *string { return v.InstallationIdRef }).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GithubConnectorApiAuthenticationGithubApp) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

type GithubConnectorApiAuthenticationGithubAppPtrOutput struct{ *pulumi.OutputState }

func (GithubConnectorApiAuthenticationGithubAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) ToGithubConnectorApiAuthenticationGithubAppPtrOutput() GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return o
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) ToGithubConnectorApiAuthenticationGithubAppPtrOutputWithContext(ctx context.Context) GithubConnectorApiAuthenticationGithubAppPtrOutput {
	return o
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) Elem() GithubConnectorApiAuthenticationGithubAppOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthenticationGithubApp) GithubConnectorApiAuthenticationGithubApp {
		if v != nil {
			return *v
		}
		var ret GithubConnectorApiAuthenticationGithubApp
		return ret
	}).(GithubConnectorApiAuthenticationGithubAppOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) ApplicationIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationIdRef
	}).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) InstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return v.InstallationId
	}).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) InstallationIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return v.InstallationIdRef
	}).(pulumi.StringPtrOutput)
}

func (o GithubConnectorApiAuthenticationGithubAppPtrOutput) PrivateKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorApiAuthenticationGithubApp) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKeyRef
	}).(pulumi.StringPtrOutput)
}

type GithubConnectorCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *GithubConnectorCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *GithubConnectorCredentialsSsh `pulumi:"ssh"`
}

// GithubConnectorCredentialsInput is an input type that accepts GithubConnectorCredentialsArgs and GithubConnectorCredentialsOutput values.
// You can construct a concrete instance of `GithubConnectorCredentialsInput` via:
//
//	GithubConnectorCredentialsArgs{...}
type GithubConnectorCredentialsInput interface {
	pulumi.Input

	ToGithubConnectorCredentialsOutput() GithubConnectorCredentialsOutput
	ToGithubConnectorCredentialsOutputWithContext(context.Context) GithubConnectorCredentialsOutput
}

type GithubConnectorCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http GithubConnectorCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh GithubConnectorCredentialsSshPtrInput `pulumi:"ssh"`
}

func (GithubConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorCredentials)(nil)).Elem()
}

func (i GithubConnectorCredentialsArgs) ToGithubConnectorCredentialsOutput() GithubConnectorCredentialsOutput {
	return i.ToGithubConnectorCredentialsOutputWithContext(context.Background())
}

func (i GithubConnectorCredentialsArgs) ToGithubConnectorCredentialsOutputWithContext(ctx context.Context) GithubConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsOutput)
}

func (i GithubConnectorCredentialsArgs) ToGithubConnectorCredentialsPtrOutput() GithubConnectorCredentialsPtrOutput {
	return i.ToGithubConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i GithubConnectorCredentialsArgs) ToGithubConnectorCredentialsPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsOutput).ToGithubConnectorCredentialsPtrOutputWithContext(ctx)
}

// GithubConnectorCredentialsPtrInput is an input type that accepts GithubConnectorCredentialsArgs, GithubConnectorCredentialsPtr and GithubConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `GithubConnectorCredentialsPtrInput` via:
//
//	        GithubConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type GithubConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToGithubConnectorCredentialsPtrOutput() GithubConnectorCredentialsPtrOutput
	ToGithubConnectorCredentialsPtrOutputWithContext(context.Context) GithubConnectorCredentialsPtrOutput
}

type githubConnectorCredentialsPtrType GithubConnectorCredentialsArgs

func GithubConnectorCredentialsPtr(v *GithubConnectorCredentialsArgs) GithubConnectorCredentialsPtrInput {
	return (*githubConnectorCredentialsPtrType)(v)
}

func (*githubConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorCredentials)(nil)).Elem()
}

func (i *githubConnectorCredentialsPtrType) ToGithubConnectorCredentialsPtrOutput() GithubConnectorCredentialsPtrOutput {
	return i.ToGithubConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *githubConnectorCredentialsPtrType) ToGithubConnectorCredentialsPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsPtrOutput)
}

type GithubConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (GithubConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorCredentials)(nil)).Elem()
}

func (o GithubConnectorCredentialsOutput) ToGithubConnectorCredentialsOutput() GithubConnectorCredentialsOutput {
	return o
}

func (o GithubConnectorCredentialsOutput) ToGithubConnectorCredentialsOutputWithContext(ctx context.Context) GithubConnectorCredentialsOutput {
	return o
}

func (o GithubConnectorCredentialsOutput) ToGithubConnectorCredentialsPtrOutput() GithubConnectorCredentialsPtrOutput {
	return o.ToGithubConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o GithubConnectorCredentialsOutput) ToGithubConnectorCredentialsPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubConnectorCredentials) *GithubConnectorCredentials {
		return &v
	}).(GithubConnectorCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GithubConnectorCredentialsOutput) Http() GithubConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v GithubConnectorCredentials) *GithubConnectorCredentialsHttp { return v.Http }).(GithubConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GithubConnectorCredentialsOutput) Ssh() GithubConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v GithubConnectorCredentials) *GithubConnectorCredentialsSsh { return v.Ssh }).(GithubConnectorCredentialsSshPtrOutput)
}

type GithubConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GithubConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorCredentials)(nil)).Elem()
}

func (o GithubConnectorCredentialsPtrOutput) ToGithubConnectorCredentialsPtrOutput() GithubConnectorCredentialsPtrOutput {
	return o
}

func (o GithubConnectorCredentialsPtrOutput) ToGithubConnectorCredentialsPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsPtrOutput {
	return o
}

func (o GithubConnectorCredentialsPtrOutput) Elem() GithubConnectorCredentialsOutput {
	return o.ApplyT(func(v *GithubConnectorCredentials) GithubConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret GithubConnectorCredentials
		return ret
	}).(GithubConnectorCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GithubConnectorCredentialsPtrOutput) Http() GithubConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *GithubConnectorCredentials) *GithubConnectorCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GithubConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GithubConnectorCredentialsPtrOutput) Ssh() GithubConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v *GithubConnectorCredentials) *GithubConnectorCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(GithubConnectorCredentialsSshPtrOutput)
}

type GithubConnectorCredentialsHttp struct {
	TokenRef    string  `pulumi:"tokenRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// GithubConnectorCredentialsHttpInput is an input type that accepts GithubConnectorCredentialsHttpArgs and GithubConnectorCredentialsHttpOutput values.
// You can construct a concrete instance of `GithubConnectorCredentialsHttpInput` via:
//
//	GithubConnectorCredentialsHttpArgs{...}
type GithubConnectorCredentialsHttpInput interface {
	pulumi.Input

	ToGithubConnectorCredentialsHttpOutput() GithubConnectorCredentialsHttpOutput
	ToGithubConnectorCredentialsHttpOutputWithContext(context.Context) GithubConnectorCredentialsHttpOutput
}

type GithubConnectorCredentialsHttpArgs struct {
	TokenRef    pulumi.StringInput    `pulumi:"tokenRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (GithubConnectorCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorCredentialsHttp)(nil)).Elem()
}

func (i GithubConnectorCredentialsHttpArgs) ToGithubConnectorCredentialsHttpOutput() GithubConnectorCredentialsHttpOutput {
	return i.ToGithubConnectorCredentialsHttpOutputWithContext(context.Background())
}

func (i GithubConnectorCredentialsHttpArgs) ToGithubConnectorCredentialsHttpOutputWithContext(ctx context.Context) GithubConnectorCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsHttpOutput)
}

func (i GithubConnectorCredentialsHttpArgs) ToGithubConnectorCredentialsHttpPtrOutput() GithubConnectorCredentialsHttpPtrOutput {
	return i.ToGithubConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i GithubConnectorCredentialsHttpArgs) ToGithubConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsHttpOutput).ToGithubConnectorCredentialsHttpPtrOutputWithContext(ctx)
}

// GithubConnectorCredentialsHttpPtrInput is an input type that accepts GithubConnectorCredentialsHttpArgs, GithubConnectorCredentialsHttpPtr and GithubConnectorCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `GithubConnectorCredentialsHttpPtrInput` via:
//
//	        GithubConnectorCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type GithubConnectorCredentialsHttpPtrInput interface {
	pulumi.Input

	ToGithubConnectorCredentialsHttpPtrOutput() GithubConnectorCredentialsHttpPtrOutput
	ToGithubConnectorCredentialsHttpPtrOutputWithContext(context.Context) GithubConnectorCredentialsHttpPtrOutput
}

type githubConnectorCredentialsHttpPtrType GithubConnectorCredentialsHttpArgs

func GithubConnectorCredentialsHttpPtr(v *GithubConnectorCredentialsHttpArgs) GithubConnectorCredentialsHttpPtrInput {
	return (*githubConnectorCredentialsHttpPtrType)(v)
}

func (*githubConnectorCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorCredentialsHttp)(nil)).Elem()
}

func (i *githubConnectorCredentialsHttpPtrType) ToGithubConnectorCredentialsHttpPtrOutput() GithubConnectorCredentialsHttpPtrOutput {
	return i.ToGithubConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *githubConnectorCredentialsHttpPtrType) ToGithubConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsHttpPtrOutput)
}

type GithubConnectorCredentialsHttpOutput struct{ *pulumi.OutputState }

func (GithubConnectorCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorCredentialsHttp)(nil)).Elem()
}

func (o GithubConnectorCredentialsHttpOutput) ToGithubConnectorCredentialsHttpOutput() GithubConnectorCredentialsHttpOutput {
	return o
}

func (o GithubConnectorCredentialsHttpOutput) ToGithubConnectorCredentialsHttpOutputWithContext(ctx context.Context) GithubConnectorCredentialsHttpOutput {
	return o
}

func (o GithubConnectorCredentialsHttpOutput) ToGithubConnectorCredentialsHttpPtrOutput() GithubConnectorCredentialsHttpPtrOutput {
	return o.ToGithubConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o GithubConnectorCredentialsHttpOutput) ToGithubConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubConnectorCredentialsHttp) *GithubConnectorCredentialsHttp {
		return &v
	}).(GithubConnectorCredentialsHttpPtrOutput)
}

func (o GithubConnectorCredentialsHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GithubConnectorCredentialsHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GithubConnectorCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GithubConnectorCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GithubConnectorCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type GithubConnectorCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (GithubConnectorCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorCredentialsHttp)(nil)).Elem()
}

func (o GithubConnectorCredentialsHttpPtrOutput) ToGithubConnectorCredentialsHttpPtrOutput() GithubConnectorCredentialsHttpPtrOutput {
	return o
}

func (o GithubConnectorCredentialsHttpPtrOutput) ToGithubConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsHttpPtrOutput {
	return o
}

func (o GithubConnectorCredentialsHttpPtrOutput) Elem() GithubConnectorCredentialsHttpOutput {
	return o.ApplyT(func(v *GithubConnectorCredentialsHttp) GithubConnectorCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret GithubConnectorCredentialsHttp
		return ret
	}).(GithubConnectorCredentialsHttpOutput)
}

func (o GithubConnectorCredentialsHttpPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

func (o GithubConnectorCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o GithubConnectorCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GithubConnectorCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GithubConnectorCredentialsSshInput is an input type that accepts GithubConnectorCredentialsSshArgs and GithubConnectorCredentialsSshOutput values.
// You can construct a concrete instance of `GithubConnectorCredentialsSshInput` via:
//
//	GithubConnectorCredentialsSshArgs{...}
type GithubConnectorCredentialsSshInput interface {
	pulumi.Input

	ToGithubConnectorCredentialsSshOutput() GithubConnectorCredentialsSshOutput
	ToGithubConnectorCredentialsSshOutputWithContext(context.Context) GithubConnectorCredentialsSshOutput
}

type GithubConnectorCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GithubConnectorCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorCredentialsSsh)(nil)).Elem()
}

func (i GithubConnectorCredentialsSshArgs) ToGithubConnectorCredentialsSshOutput() GithubConnectorCredentialsSshOutput {
	return i.ToGithubConnectorCredentialsSshOutputWithContext(context.Background())
}

func (i GithubConnectorCredentialsSshArgs) ToGithubConnectorCredentialsSshOutputWithContext(ctx context.Context) GithubConnectorCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsSshOutput)
}

func (i GithubConnectorCredentialsSshArgs) ToGithubConnectorCredentialsSshPtrOutput() GithubConnectorCredentialsSshPtrOutput {
	return i.ToGithubConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i GithubConnectorCredentialsSshArgs) ToGithubConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsSshOutput).ToGithubConnectorCredentialsSshPtrOutputWithContext(ctx)
}

// GithubConnectorCredentialsSshPtrInput is an input type that accepts GithubConnectorCredentialsSshArgs, GithubConnectorCredentialsSshPtr and GithubConnectorCredentialsSshPtrOutput values.
// You can construct a concrete instance of `GithubConnectorCredentialsSshPtrInput` via:
//
//	        GithubConnectorCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type GithubConnectorCredentialsSshPtrInput interface {
	pulumi.Input

	ToGithubConnectorCredentialsSshPtrOutput() GithubConnectorCredentialsSshPtrOutput
	ToGithubConnectorCredentialsSshPtrOutputWithContext(context.Context) GithubConnectorCredentialsSshPtrOutput
}

type githubConnectorCredentialsSshPtrType GithubConnectorCredentialsSshArgs

func GithubConnectorCredentialsSshPtr(v *GithubConnectorCredentialsSshArgs) GithubConnectorCredentialsSshPtrInput {
	return (*githubConnectorCredentialsSshPtrType)(v)
}

func (*githubConnectorCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorCredentialsSsh)(nil)).Elem()
}

func (i *githubConnectorCredentialsSshPtrType) ToGithubConnectorCredentialsSshPtrOutput() GithubConnectorCredentialsSshPtrOutput {
	return i.ToGithubConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *githubConnectorCredentialsSshPtrType) ToGithubConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GithubConnectorCredentialsSshPtrOutput)
}

type GithubConnectorCredentialsSshOutput struct{ *pulumi.OutputState }

func (GithubConnectorCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GithubConnectorCredentialsSsh)(nil)).Elem()
}

func (o GithubConnectorCredentialsSshOutput) ToGithubConnectorCredentialsSshOutput() GithubConnectorCredentialsSshOutput {
	return o
}

func (o GithubConnectorCredentialsSshOutput) ToGithubConnectorCredentialsSshOutputWithContext(ctx context.Context) GithubConnectorCredentialsSshOutput {
	return o
}

func (o GithubConnectorCredentialsSshOutput) ToGithubConnectorCredentialsSshPtrOutput() GithubConnectorCredentialsSshPtrOutput {
	return o.ToGithubConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (o GithubConnectorCredentialsSshOutput) ToGithubConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GithubConnectorCredentialsSsh) *GithubConnectorCredentialsSsh {
		return &v
	}).(GithubConnectorCredentialsSshPtrOutput)
}

func (o GithubConnectorCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GithubConnectorCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GithubConnectorCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (GithubConnectorCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GithubConnectorCredentialsSsh)(nil)).Elem()
}

func (o GithubConnectorCredentialsSshPtrOutput) ToGithubConnectorCredentialsSshPtrOutput() GithubConnectorCredentialsSshPtrOutput {
	return o
}

func (o GithubConnectorCredentialsSshPtrOutput) ToGithubConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GithubConnectorCredentialsSshPtrOutput {
	return o
}

func (o GithubConnectorCredentialsSshPtrOutput) Elem() GithubConnectorCredentialsSshOutput {
	return o.ApplyT(func(v *GithubConnectorCredentialsSsh) GithubConnectorCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret GithubConnectorCredentialsSsh
		return ret
	}).(GithubConnectorCredentialsSshOutput)
}

func (o GithubConnectorCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GithubConnectorCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type GitlabConnectorApiAuthentication struct {
	// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef string `pulumi:"tokenRef"`
}

// GitlabConnectorApiAuthenticationInput is an input type that accepts GitlabConnectorApiAuthenticationArgs and GitlabConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GitlabConnectorApiAuthenticationInput` via:
//
//	GitlabConnectorApiAuthenticationArgs{...}
type GitlabConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGitlabConnectorApiAuthenticationOutput() GitlabConnectorApiAuthenticationOutput
	ToGitlabConnectorApiAuthenticationOutputWithContext(context.Context) GitlabConnectorApiAuthenticationOutput
}

type GitlabConnectorApiAuthenticationArgs struct {
	// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GitlabConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorApiAuthentication)(nil)).Elem()
}

func (i GitlabConnectorApiAuthenticationArgs) ToGitlabConnectorApiAuthenticationOutput() GitlabConnectorApiAuthenticationOutput {
	return i.ToGitlabConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GitlabConnectorApiAuthenticationArgs) ToGitlabConnectorApiAuthenticationOutputWithContext(ctx context.Context) GitlabConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorApiAuthenticationOutput)
}

func (i GitlabConnectorApiAuthenticationArgs) ToGitlabConnectorApiAuthenticationPtrOutput() GitlabConnectorApiAuthenticationPtrOutput {
	return i.ToGitlabConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i GitlabConnectorApiAuthenticationArgs) ToGitlabConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabConnectorApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorApiAuthenticationOutput).ToGitlabConnectorApiAuthenticationPtrOutputWithContext(ctx)
}

// GitlabConnectorApiAuthenticationPtrInput is an input type that accepts GitlabConnectorApiAuthenticationArgs, GitlabConnectorApiAuthenticationPtr and GitlabConnectorApiAuthenticationPtrOutput values.
// You can construct a concrete instance of `GitlabConnectorApiAuthenticationPtrInput` via:
//
//	        GitlabConnectorApiAuthenticationArgs{...}
//
//	or:
//
//	        nil
type GitlabConnectorApiAuthenticationPtrInput interface {
	pulumi.Input

	ToGitlabConnectorApiAuthenticationPtrOutput() GitlabConnectorApiAuthenticationPtrOutput
	ToGitlabConnectorApiAuthenticationPtrOutputWithContext(context.Context) GitlabConnectorApiAuthenticationPtrOutput
}

type gitlabConnectorApiAuthenticationPtrType GitlabConnectorApiAuthenticationArgs

func GitlabConnectorApiAuthenticationPtr(v *GitlabConnectorApiAuthenticationArgs) GitlabConnectorApiAuthenticationPtrInput {
	return (*gitlabConnectorApiAuthenticationPtrType)(v)
}

func (*gitlabConnectorApiAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorApiAuthentication)(nil)).Elem()
}

func (i *gitlabConnectorApiAuthenticationPtrType) ToGitlabConnectorApiAuthenticationPtrOutput() GitlabConnectorApiAuthenticationPtrOutput {
	return i.ToGitlabConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (i *gitlabConnectorApiAuthenticationPtrType) ToGitlabConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabConnectorApiAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorApiAuthenticationPtrOutput)
}

type GitlabConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GitlabConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorApiAuthentication)(nil)).Elem()
}

func (o GitlabConnectorApiAuthenticationOutput) ToGitlabConnectorApiAuthenticationOutput() GitlabConnectorApiAuthenticationOutput {
	return o
}

func (o GitlabConnectorApiAuthenticationOutput) ToGitlabConnectorApiAuthenticationOutputWithContext(ctx context.Context) GitlabConnectorApiAuthenticationOutput {
	return o
}

func (o GitlabConnectorApiAuthenticationOutput) ToGitlabConnectorApiAuthenticationPtrOutput() GitlabConnectorApiAuthenticationPtrOutput {
	return o.ToGitlabConnectorApiAuthenticationPtrOutputWithContext(context.Background())
}

func (o GitlabConnectorApiAuthenticationOutput) ToGitlabConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabConnectorApiAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabConnectorApiAuthentication) *GitlabConnectorApiAuthentication {
		return &v
	}).(GitlabConnectorApiAuthenticationPtrOutput)
}

// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GitlabConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitlabConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GitlabConnectorApiAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (GitlabConnectorApiAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorApiAuthentication)(nil)).Elem()
}

func (o GitlabConnectorApiAuthenticationPtrOutput) ToGitlabConnectorApiAuthenticationPtrOutput() GitlabConnectorApiAuthenticationPtrOutput {
	return o
}

func (o GitlabConnectorApiAuthenticationPtrOutput) ToGitlabConnectorApiAuthenticationPtrOutputWithContext(ctx context.Context) GitlabConnectorApiAuthenticationPtrOutput {
	return o
}

func (o GitlabConnectorApiAuthenticationPtrOutput) Elem() GitlabConnectorApiAuthenticationOutput {
	return o.ApplyT(func(v *GitlabConnectorApiAuthentication) GitlabConnectorApiAuthentication {
		if v != nil {
			return *v
		}
		var ret GitlabConnectorApiAuthentication
		return ret
	}).(GitlabConnectorApiAuthenticationOutput)
}

// Personal access token for interacting with the gitlab api. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GitlabConnectorApiAuthenticationPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorApiAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TokenRef
	}).(pulumi.StringPtrOutput)
}

type GitlabConnectorCredentials struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http *GitlabConnectorCredentialsHttp `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh *GitlabConnectorCredentialsSsh `pulumi:"ssh"`
}

// GitlabConnectorCredentialsInput is an input type that accepts GitlabConnectorCredentialsArgs and GitlabConnectorCredentialsOutput values.
// You can construct a concrete instance of `GitlabConnectorCredentialsInput` via:
//
//	GitlabConnectorCredentialsArgs{...}
type GitlabConnectorCredentialsInput interface {
	pulumi.Input

	ToGitlabConnectorCredentialsOutput() GitlabConnectorCredentialsOutput
	ToGitlabConnectorCredentialsOutputWithContext(context.Context) GitlabConnectorCredentialsOutput
}

type GitlabConnectorCredentialsArgs struct {
	// Authenticate using Username and password over http(s) for the connection.
	Http GitlabConnectorCredentialsHttpPtrInput `pulumi:"http"`
	// Authenticate using SSH for the connection.
	Ssh GitlabConnectorCredentialsSshPtrInput `pulumi:"ssh"`
}

func (GitlabConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorCredentials)(nil)).Elem()
}

func (i GitlabConnectorCredentialsArgs) ToGitlabConnectorCredentialsOutput() GitlabConnectorCredentialsOutput {
	return i.ToGitlabConnectorCredentialsOutputWithContext(context.Background())
}

func (i GitlabConnectorCredentialsArgs) ToGitlabConnectorCredentialsOutputWithContext(ctx context.Context) GitlabConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsOutput)
}

func (i GitlabConnectorCredentialsArgs) ToGitlabConnectorCredentialsPtrOutput() GitlabConnectorCredentialsPtrOutput {
	return i.ToGitlabConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i GitlabConnectorCredentialsArgs) ToGitlabConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsOutput).ToGitlabConnectorCredentialsPtrOutputWithContext(ctx)
}

// GitlabConnectorCredentialsPtrInput is an input type that accepts GitlabConnectorCredentialsArgs, GitlabConnectorCredentialsPtr and GitlabConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `GitlabConnectorCredentialsPtrInput` via:
//
//	        GitlabConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type GitlabConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToGitlabConnectorCredentialsPtrOutput() GitlabConnectorCredentialsPtrOutput
	ToGitlabConnectorCredentialsPtrOutputWithContext(context.Context) GitlabConnectorCredentialsPtrOutput
}

type gitlabConnectorCredentialsPtrType GitlabConnectorCredentialsArgs

func GitlabConnectorCredentialsPtr(v *GitlabConnectorCredentialsArgs) GitlabConnectorCredentialsPtrInput {
	return (*gitlabConnectorCredentialsPtrType)(v)
}

func (*gitlabConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorCredentials)(nil)).Elem()
}

func (i *gitlabConnectorCredentialsPtrType) ToGitlabConnectorCredentialsPtrOutput() GitlabConnectorCredentialsPtrOutput {
	return i.ToGitlabConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *gitlabConnectorCredentialsPtrType) ToGitlabConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsPtrOutput)
}

type GitlabConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (GitlabConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorCredentials)(nil)).Elem()
}

func (o GitlabConnectorCredentialsOutput) ToGitlabConnectorCredentialsOutput() GitlabConnectorCredentialsOutput {
	return o
}

func (o GitlabConnectorCredentialsOutput) ToGitlabConnectorCredentialsOutputWithContext(ctx context.Context) GitlabConnectorCredentialsOutput {
	return o
}

func (o GitlabConnectorCredentialsOutput) ToGitlabConnectorCredentialsPtrOutput() GitlabConnectorCredentialsPtrOutput {
	return o.ToGitlabConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o GitlabConnectorCredentialsOutput) ToGitlabConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabConnectorCredentials) *GitlabConnectorCredentials {
		return &v
	}).(GitlabConnectorCredentialsPtrOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitlabConnectorCredentialsOutput) Http() GitlabConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v GitlabConnectorCredentials) *GitlabConnectorCredentialsHttp { return v.Http }).(GitlabConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitlabConnectorCredentialsOutput) Ssh() GitlabConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v GitlabConnectorCredentials) *GitlabConnectorCredentialsSsh { return v.Ssh }).(GitlabConnectorCredentialsSshPtrOutput)
}

type GitlabConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (GitlabConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorCredentials)(nil)).Elem()
}

func (o GitlabConnectorCredentialsPtrOutput) ToGitlabConnectorCredentialsPtrOutput() GitlabConnectorCredentialsPtrOutput {
	return o
}

func (o GitlabConnectorCredentialsPtrOutput) ToGitlabConnectorCredentialsPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsPtrOutput {
	return o
}

func (o GitlabConnectorCredentialsPtrOutput) Elem() GitlabConnectorCredentialsOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentials) GitlabConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret GitlabConnectorCredentials
		return ret
	}).(GitlabConnectorCredentialsOutput)
}

// Authenticate using Username and password over http(s) for the connection.
func (o GitlabConnectorCredentialsPtrOutput) Http() GitlabConnectorCredentialsHttpPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentials) *GitlabConnectorCredentialsHttp {
		if v == nil {
			return nil
		}
		return v.Http
	}).(GitlabConnectorCredentialsHttpPtrOutput)
}

// Authenticate using SSH for the connection.
func (o GitlabConnectorCredentialsPtrOutput) Ssh() GitlabConnectorCredentialsSshPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentials) *GitlabConnectorCredentialsSsh {
		if v == nil {
			return nil
		}
		return v.Ssh
	}).(GitlabConnectorCredentialsSshPtrOutput)
}

type GitlabConnectorCredentialsHttp struct {
	PasswordRef *string `pulumi:"passwordRef"`
	TokenRef    *string `pulumi:"tokenRef"`
	Username    *string `pulumi:"username"`
	UsernameRef *string `pulumi:"usernameRef"`
}

// GitlabConnectorCredentialsHttpInput is an input type that accepts GitlabConnectorCredentialsHttpArgs and GitlabConnectorCredentialsHttpOutput values.
// You can construct a concrete instance of `GitlabConnectorCredentialsHttpInput` via:
//
//	GitlabConnectorCredentialsHttpArgs{...}
type GitlabConnectorCredentialsHttpInput interface {
	pulumi.Input

	ToGitlabConnectorCredentialsHttpOutput() GitlabConnectorCredentialsHttpOutput
	ToGitlabConnectorCredentialsHttpOutputWithContext(context.Context) GitlabConnectorCredentialsHttpOutput
}

type GitlabConnectorCredentialsHttpArgs struct {
	PasswordRef pulumi.StringPtrInput `pulumi:"passwordRef"`
	TokenRef    pulumi.StringPtrInput `pulumi:"tokenRef"`
	Username    pulumi.StringPtrInput `pulumi:"username"`
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (GitlabConnectorCredentialsHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorCredentialsHttp)(nil)).Elem()
}

func (i GitlabConnectorCredentialsHttpArgs) ToGitlabConnectorCredentialsHttpOutput() GitlabConnectorCredentialsHttpOutput {
	return i.ToGitlabConnectorCredentialsHttpOutputWithContext(context.Background())
}

func (i GitlabConnectorCredentialsHttpArgs) ToGitlabConnectorCredentialsHttpOutputWithContext(ctx context.Context) GitlabConnectorCredentialsHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsHttpOutput)
}

func (i GitlabConnectorCredentialsHttpArgs) ToGitlabConnectorCredentialsHttpPtrOutput() GitlabConnectorCredentialsHttpPtrOutput {
	return i.ToGitlabConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i GitlabConnectorCredentialsHttpArgs) ToGitlabConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsHttpOutput).ToGitlabConnectorCredentialsHttpPtrOutputWithContext(ctx)
}

// GitlabConnectorCredentialsHttpPtrInput is an input type that accepts GitlabConnectorCredentialsHttpArgs, GitlabConnectorCredentialsHttpPtr and GitlabConnectorCredentialsHttpPtrOutput values.
// You can construct a concrete instance of `GitlabConnectorCredentialsHttpPtrInput` via:
//
//	        GitlabConnectorCredentialsHttpArgs{...}
//
//	or:
//
//	        nil
type GitlabConnectorCredentialsHttpPtrInput interface {
	pulumi.Input

	ToGitlabConnectorCredentialsHttpPtrOutput() GitlabConnectorCredentialsHttpPtrOutput
	ToGitlabConnectorCredentialsHttpPtrOutputWithContext(context.Context) GitlabConnectorCredentialsHttpPtrOutput
}

type gitlabConnectorCredentialsHttpPtrType GitlabConnectorCredentialsHttpArgs

func GitlabConnectorCredentialsHttpPtr(v *GitlabConnectorCredentialsHttpArgs) GitlabConnectorCredentialsHttpPtrInput {
	return (*gitlabConnectorCredentialsHttpPtrType)(v)
}

func (*gitlabConnectorCredentialsHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorCredentialsHttp)(nil)).Elem()
}

func (i *gitlabConnectorCredentialsHttpPtrType) ToGitlabConnectorCredentialsHttpPtrOutput() GitlabConnectorCredentialsHttpPtrOutput {
	return i.ToGitlabConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (i *gitlabConnectorCredentialsHttpPtrType) ToGitlabConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsHttpPtrOutput)
}

type GitlabConnectorCredentialsHttpOutput struct{ *pulumi.OutputState }

func (GitlabConnectorCredentialsHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorCredentialsHttp)(nil)).Elem()
}

func (o GitlabConnectorCredentialsHttpOutput) ToGitlabConnectorCredentialsHttpOutput() GitlabConnectorCredentialsHttpOutput {
	return o
}

func (o GitlabConnectorCredentialsHttpOutput) ToGitlabConnectorCredentialsHttpOutputWithContext(ctx context.Context) GitlabConnectorCredentialsHttpOutput {
	return o
}

func (o GitlabConnectorCredentialsHttpOutput) ToGitlabConnectorCredentialsHttpPtrOutput() GitlabConnectorCredentialsHttpPtrOutput {
	return o.ToGitlabConnectorCredentialsHttpPtrOutputWithContext(context.Background())
}

func (o GitlabConnectorCredentialsHttpOutput) ToGitlabConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabConnectorCredentialsHttp) *GitlabConnectorCredentialsHttp {
		return &v
	}).(GitlabConnectorCredentialsHttpPtrOutput)
}

func (o GitlabConnectorCredentialsHttpOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabConnectorCredentialsHttp) *string { return v.PasswordRef }).(pulumi.StringPtrOutput)
}

func (o GitlabConnectorCredentialsHttpOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabConnectorCredentialsHttp) *string { return v.TokenRef }).(pulumi.StringPtrOutput)
}

func (o GitlabConnectorCredentialsHttpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabConnectorCredentialsHttp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

func (o GitlabConnectorCredentialsHttpOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitlabConnectorCredentialsHttp) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type GitlabConnectorCredentialsHttpPtrOutput struct{ *pulumi.OutputState }

func (GitlabConnectorCredentialsHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorCredentialsHttp)(nil)).Elem()
}

func (o GitlabConnectorCredentialsHttpPtrOutput) ToGitlabConnectorCredentialsHttpPtrOutput() GitlabConnectorCredentialsHttpPtrOutput {
	return o
}

func (o GitlabConnectorCredentialsHttpPtrOutput) ToGitlabConnectorCredentialsHttpPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsHttpPtrOutput {
	return o
}

func (o GitlabConnectorCredentialsHttpPtrOutput) Elem() GitlabConnectorCredentialsHttpOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsHttp) GitlabConnectorCredentialsHttp {
		if v != nil {
			return *v
		}
		var ret GitlabConnectorCredentialsHttp
		return ret
	}).(GitlabConnectorCredentialsHttpOutput)
}

func (o GitlabConnectorCredentialsHttpPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

func (o GitlabConnectorCredentialsHttpPtrOutput) TokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.TokenRef
	}).(pulumi.StringPtrOutput)
}

func (o GitlabConnectorCredentialsHttpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func (o GitlabConnectorCredentialsHttpPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsHttp) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type GitlabConnectorCredentialsSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GitlabConnectorCredentialsSshInput is an input type that accepts GitlabConnectorCredentialsSshArgs and GitlabConnectorCredentialsSshOutput values.
// You can construct a concrete instance of `GitlabConnectorCredentialsSshInput` via:
//
//	GitlabConnectorCredentialsSshArgs{...}
type GitlabConnectorCredentialsSshInput interface {
	pulumi.Input

	ToGitlabConnectorCredentialsSshOutput() GitlabConnectorCredentialsSshOutput
	ToGitlabConnectorCredentialsSshOutputWithContext(context.Context) GitlabConnectorCredentialsSshOutput
}

type GitlabConnectorCredentialsSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GitlabConnectorCredentialsSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorCredentialsSsh)(nil)).Elem()
}

func (i GitlabConnectorCredentialsSshArgs) ToGitlabConnectorCredentialsSshOutput() GitlabConnectorCredentialsSshOutput {
	return i.ToGitlabConnectorCredentialsSshOutputWithContext(context.Background())
}

func (i GitlabConnectorCredentialsSshArgs) ToGitlabConnectorCredentialsSshOutputWithContext(ctx context.Context) GitlabConnectorCredentialsSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsSshOutput)
}

func (i GitlabConnectorCredentialsSshArgs) ToGitlabConnectorCredentialsSshPtrOutput() GitlabConnectorCredentialsSshPtrOutput {
	return i.ToGitlabConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i GitlabConnectorCredentialsSshArgs) ToGitlabConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsSshOutput).ToGitlabConnectorCredentialsSshPtrOutputWithContext(ctx)
}

// GitlabConnectorCredentialsSshPtrInput is an input type that accepts GitlabConnectorCredentialsSshArgs, GitlabConnectorCredentialsSshPtr and GitlabConnectorCredentialsSshPtrOutput values.
// You can construct a concrete instance of `GitlabConnectorCredentialsSshPtrInput` via:
//
//	        GitlabConnectorCredentialsSshArgs{...}
//
//	or:
//
//	        nil
type GitlabConnectorCredentialsSshPtrInput interface {
	pulumi.Input

	ToGitlabConnectorCredentialsSshPtrOutput() GitlabConnectorCredentialsSshPtrOutput
	ToGitlabConnectorCredentialsSshPtrOutputWithContext(context.Context) GitlabConnectorCredentialsSshPtrOutput
}

type gitlabConnectorCredentialsSshPtrType GitlabConnectorCredentialsSshArgs

func GitlabConnectorCredentialsSshPtr(v *GitlabConnectorCredentialsSshArgs) GitlabConnectorCredentialsSshPtrInput {
	return (*gitlabConnectorCredentialsSshPtrType)(v)
}

func (*gitlabConnectorCredentialsSshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorCredentialsSsh)(nil)).Elem()
}

func (i *gitlabConnectorCredentialsSshPtrType) ToGitlabConnectorCredentialsSshPtrOutput() GitlabConnectorCredentialsSshPtrOutput {
	return i.ToGitlabConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (i *gitlabConnectorCredentialsSshPtrType) ToGitlabConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsSshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitlabConnectorCredentialsSshPtrOutput)
}

type GitlabConnectorCredentialsSshOutput struct{ *pulumi.OutputState }

func (GitlabConnectorCredentialsSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitlabConnectorCredentialsSsh)(nil)).Elem()
}

func (o GitlabConnectorCredentialsSshOutput) ToGitlabConnectorCredentialsSshOutput() GitlabConnectorCredentialsSshOutput {
	return o
}

func (o GitlabConnectorCredentialsSshOutput) ToGitlabConnectorCredentialsSshOutputWithContext(ctx context.Context) GitlabConnectorCredentialsSshOutput {
	return o
}

func (o GitlabConnectorCredentialsSshOutput) ToGitlabConnectorCredentialsSshPtrOutput() GitlabConnectorCredentialsSshPtrOutput {
	return o.ToGitlabConnectorCredentialsSshPtrOutputWithContext(context.Background())
}

func (o GitlabConnectorCredentialsSshOutput) ToGitlabConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsSshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GitlabConnectorCredentialsSsh) *GitlabConnectorCredentialsSsh {
		return &v
	}).(GitlabConnectorCredentialsSshPtrOutput)
}

func (o GitlabConnectorCredentialsSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GitlabConnectorCredentialsSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GitlabConnectorCredentialsSshPtrOutput struct{ *pulumi.OutputState }

func (GitlabConnectorCredentialsSshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitlabConnectorCredentialsSsh)(nil)).Elem()
}

func (o GitlabConnectorCredentialsSshPtrOutput) ToGitlabConnectorCredentialsSshPtrOutput() GitlabConnectorCredentialsSshPtrOutput {
	return o
}

func (o GitlabConnectorCredentialsSshPtrOutput) ToGitlabConnectorCredentialsSshPtrOutputWithContext(ctx context.Context) GitlabConnectorCredentialsSshPtrOutput {
	return o
}

func (o GitlabConnectorCredentialsSshPtrOutput) Elem() GitlabConnectorCredentialsSshOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsSsh) GitlabConnectorCredentialsSsh {
		if v != nil {
			return *v
		}
		var ret GitlabConnectorCredentialsSsh
		return ret
	}).(GitlabConnectorCredentialsSshOutput)
}

func (o GitlabConnectorCredentialsSshPtrOutput) SshKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitlabConnectorCredentialsSsh) *string {
		if v == nil {
			return nil
		}
		return &v.SshKeyRef
	}).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplication struct {
	// Metadata corresponding to the resources. This includes all the objects a user must create.
	Metadatas []GitopsApplicationsApplicationMetadata `pulumi:"metadatas"`
	// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
	Specs []GitopsApplicationsApplicationSpec `pulumi:"specs"`
}

// GitopsApplicationsApplicationInput is an input type that accepts GitopsApplicationsApplicationArgs and GitopsApplicationsApplicationOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationInput` via:
//
//	GitopsApplicationsApplicationArgs{...}
type GitopsApplicationsApplicationInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationOutput() GitopsApplicationsApplicationOutput
	ToGitopsApplicationsApplicationOutputWithContext(context.Context) GitopsApplicationsApplicationOutput
}

type GitopsApplicationsApplicationArgs struct {
	// Metadata corresponding to the resources. This includes all the objects a user must create.
	Metadatas GitopsApplicationsApplicationMetadataArrayInput `pulumi:"metadatas"`
	// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
	Specs GitopsApplicationsApplicationSpecArrayInput `pulumi:"specs"`
}

func (GitopsApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplication)(nil)).Elem()
}

func (i GitopsApplicationsApplicationArgs) ToGitopsApplicationsApplicationOutput() GitopsApplicationsApplicationOutput {
	return i.ToGitopsApplicationsApplicationOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationArgs) ToGitopsApplicationsApplicationOutputWithContext(ctx context.Context) GitopsApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationOutput)
}

// GitopsApplicationsApplicationArrayInput is an input type that accepts GitopsApplicationsApplicationArray and GitopsApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationArrayInput` via:
//
//	GitopsApplicationsApplicationArray{ GitopsApplicationsApplicationArgs{...} }
type GitopsApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationArrayOutput() GitopsApplicationsApplicationArrayOutput
	ToGitopsApplicationsApplicationArrayOutputWithContext(context.Context) GitopsApplicationsApplicationArrayOutput
}

type GitopsApplicationsApplicationArray []GitopsApplicationsApplicationInput

func (GitopsApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplication)(nil)).Elem()
}

func (i GitopsApplicationsApplicationArray) ToGitopsApplicationsApplicationArrayOutput() GitopsApplicationsApplicationArrayOutput {
	return i.ToGitopsApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationArray) ToGitopsApplicationsApplicationArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationArrayOutput)
}

type GitopsApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplication)(nil)).Elem()
}

func (o GitopsApplicationsApplicationOutput) ToGitopsApplicationsApplicationOutput() GitopsApplicationsApplicationOutput {
	return o
}

func (o GitopsApplicationsApplicationOutput) ToGitopsApplicationsApplicationOutputWithContext(ctx context.Context) GitopsApplicationsApplicationOutput {
	return o
}

// Metadata corresponding to the resources. This includes all the objects a user must create.
func (o GitopsApplicationsApplicationOutput) Metadatas() GitopsApplicationsApplicationMetadataArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplication) []GitopsApplicationsApplicationMetadata { return v.Metadatas }).(GitopsApplicationsApplicationMetadataArrayOutput)
}

// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
func (o GitopsApplicationsApplicationOutput) Specs() GitopsApplicationsApplicationSpecArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplication) []GitopsApplicationsApplicationSpec { return v.Specs }).(GitopsApplicationsApplicationSpecArrayOutput)
}

type GitopsApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplication)(nil)).Elem()
}

func (o GitopsApplicationsApplicationArrayOutput) ToGitopsApplicationsApplicationArrayOutput() GitopsApplicationsApplicationArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationArrayOutput) ToGitopsApplicationsApplicationArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplication {
		return vs[0].([]GitopsApplicationsApplication)[vs[1].(int)]
	}).(GitopsApplicationsApplicationOutput)
}

type GitopsApplicationsApplicationMetadata struct {
	Annotations  map[string]string `pulumi:"annotations"`
	ClusterName  *string           `pulumi:"clusterName"`
	Finalizers   []string          `pulumi:"finalizers"`
	GenerateName *string           `pulumi:"generateName"`
	Generation   *string           `pulumi:"generation"`
	Labels       map[string]string `pulumi:"labels"`
	// Name of the GitOps application.
	Name            *string                                               `pulumi:"name"`
	Namespace       *string                                               `pulumi:"namespace"`
	OwnerReferences []GitopsApplicationsApplicationMetadataOwnerReference `pulumi:"ownerReferences"`
	Uid             *string                                               `pulumi:"uid"`
}

// GitopsApplicationsApplicationMetadataInput is an input type that accepts GitopsApplicationsApplicationMetadataArgs and GitopsApplicationsApplicationMetadataOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationMetadataInput` via:
//
//	GitopsApplicationsApplicationMetadataArgs{...}
type GitopsApplicationsApplicationMetadataInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationMetadataOutput() GitopsApplicationsApplicationMetadataOutput
	ToGitopsApplicationsApplicationMetadataOutputWithContext(context.Context) GitopsApplicationsApplicationMetadataOutput
}

type GitopsApplicationsApplicationMetadataArgs struct {
	Annotations  pulumi.StringMapInput   `pulumi:"annotations"`
	ClusterName  pulumi.StringPtrInput   `pulumi:"clusterName"`
	Finalizers   pulumi.StringArrayInput `pulumi:"finalizers"`
	GenerateName pulumi.StringPtrInput   `pulumi:"generateName"`
	Generation   pulumi.StringPtrInput   `pulumi:"generation"`
	Labels       pulumi.StringMapInput   `pulumi:"labels"`
	// Name of the GitOps application.
	Name            pulumi.StringPtrInput                                         `pulumi:"name"`
	Namespace       pulumi.StringPtrInput                                         `pulumi:"namespace"`
	OwnerReferences GitopsApplicationsApplicationMetadataOwnerReferenceArrayInput `pulumi:"ownerReferences"`
	Uid             pulumi.StringPtrInput                                         `pulumi:"uid"`
}

func (GitopsApplicationsApplicationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (i GitopsApplicationsApplicationMetadataArgs) ToGitopsApplicationsApplicationMetadataOutput() GitopsApplicationsApplicationMetadataOutput {
	return i.ToGitopsApplicationsApplicationMetadataOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationMetadataArgs) ToGitopsApplicationsApplicationMetadataOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationMetadataOutput)
}

// GitopsApplicationsApplicationMetadataArrayInput is an input type that accepts GitopsApplicationsApplicationMetadataArray and GitopsApplicationsApplicationMetadataArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationMetadataArrayInput` via:
//
//	GitopsApplicationsApplicationMetadataArray{ GitopsApplicationsApplicationMetadataArgs{...} }
type GitopsApplicationsApplicationMetadataArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationMetadataArrayOutput() GitopsApplicationsApplicationMetadataArrayOutput
	ToGitopsApplicationsApplicationMetadataArrayOutputWithContext(context.Context) GitopsApplicationsApplicationMetadataArrayOutput
}

type GitopsApplicationsApplicationMetadataArray []GitopsApplicationsApplicationMetadataInput

func (GitopsApplicationsApplicationMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (i GitopsApplicationsApplicationMetadataArray) ToGitopsApplicationsApplicationMetadataArrayOutput() GitopsApplicationsApplicationMetadataArrayOutput {
	return i.ToGitopsApplicationsApplicationMetadataArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationMetadataArray) ToGitopsApplicationsApplicationMetadataArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationMetadataArrayOutput)
}

type GitopsApplicationsApplicationMetadataOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (o GitopsApplicationsApplicationMetadataOutput) ToGitopsApplicationsApplicationMetadataOutput() GitopsApplicationsApplicationMetadataOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataOutput) ToGitopsApplicationsApplicationMetadataOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) GenerateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) *string { return v.GenerateName }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) Generation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) *string { return v.Generation }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) OwnerReferences() GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) []GitopsApplicationsApplicationMetadataOwnerReference {
		return v.OwnerReferences
	}).(GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput)
}

func (o GitopsApplicationsApplicationMetadataOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadata) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationMetadataArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (o GitopsApplicationsApplicationMetadataArrayOutput) ToGitopsApplicationsApplicationMetadataArrayOutput() GitopsApplicationsApplicationMetadataArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataArrayOutput) ToGitopsApplicationsApplicationMetadataArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationMetadata {
		return vs[0].([]GitopsApplicationsApplicationMetadata)[vs[1].(int)]
	}).(GitopsApplicationsApplicationMetadataOutput)
}

type GitopsApplicationsApplicationMetadataOwnerReference struct {
	ApiVersion         *string `pulumi:"apiVersion"`
	BlockOwnerDeletion *bool   `pulumi:"blockOwnerDeletion"`
	Controller         *bool   `pulumi:"controller"`
	// Kind of the GitOps application.
	Kind *string `pulumi:"kind"`
	// Name of the GitOps application.
	Name *string `pulumi:"name"`
	Uid  *string `pulumi:"uid"`
}

// GitopsApplicationsApplicationMetadataOwnerReferenceInput is an input type that accepts GitopsApplicationsApplicationMetadataOwnerReferenceArgs and GitopsApplicationsApplicationMetadataOwnerReferenceOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationMetadataOwnerReferenceInput` via:
//
//	GitopsApplicationsApplicationMetadataOwnerReferenceArgs{...}
type GitopsApplicationsApplicationMetadataOwnerReferenceInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GitopsApplicationsApplicationMetadataOwnerReferenceOutput
	ToGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(context.Context) GitopsApplicationsApplicationMetadataOwnerReferenceOutput
}

type GitopsApplicationsApplicationMetadataOwnerReferenceArgs struct {
	ApiVersion         pulumi.StringPtrInput `pulumi:"apiVersion"`
	BlockOwnerDeletion pulumi.BoolPtrInput   `pulumi:"blockOwnerDeletion"`
	Controller         pulumi.BoolPtrInput   `pulumi:"controller"`
	// Kind of the GitOps application.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the GitOps application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Uid  pulumi.StringPtrInput `pulumi:"uid"`
}

func (GitopsApplicationsApplicationMetadataOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (i GitopsApplicationsApplicationMetadataOwnerReferenceArgs) ToGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return i.ToGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationMetadataOwnerReferenceArgs) ToGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationMetadataOwnerReferenceOutput)
}

// GitopsApplicationsApplicationMetadataOwnerReferenceArrayInput is an input type that accepts GitopsApplicationsApplicationMetadataOwnerReferenceArray and GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationMetadataOwnerReferenceArrayInput` via:
//
//	GitopsApplicationsApplicationMetadataOwnerReferenceArray{ GitopsApplicationsApplicationMetadataOwnerReferenceArgs{...} }
type GitopsApplicationsApplicationMetadataOwnerReferenceArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput
	ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(context.Context) GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput
}

type GitopsApplicationsApplicationMetadataOwnerReferenceArray []GitopsApplicationsApplicationMetadataOwnerReferenceInput

func (GitopsApplicationsApplicationMetadataOwnerReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (i GitopsApplicationsApplicationMetadataOwnerReferenceArray) ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return i.ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationMetadataOwnerReferenceArray) ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput)
}

type GitopsApplicationsApplicationMetadataOwnerReferenceOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationMetadataOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) ToGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) ToGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadataOwnerReference) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) BlockOwnerDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadataOwnerReference) *bool { return v.BlockOwnerDeletion }).(pulumi.BoolPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) Controller() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadataOwnerReference) *bool { return v.Controller }).(pulumi.BoolPtrOutput)
}

// Kind of the GitOps application.
func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadataOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadataOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationMetadataOwnerReference) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ToGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationMetadataOwnerReference {
		return vs[0].([]GitopsApplicationsApplicationMetadataOwnerReference)[vs[1].(int)]
	}).(GitopsApplicationsApplicationMetadataOwnerReferenceOutput)
}

type GitopsApplicationsApplicationSpec struct {
	Destinations []GitopsApplicationsApplicationSpecDestination `pulumi:"destinations"`
	Sources      []GitopsApplicationsApplicationSpecSource      `pulumi:"sources"`
	SyncPolicies []GitopsApplicationsApplicationSpecSyncPolicy  `pulumi:"syncPolicies"`
}

// GitopsApplicationsApplicationSpecInput is an input type that accepts GitopsApplicationsApplicationSpecArgs and GitopsApplicationsApplicationSpecOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecInput` via:
//
//	GitopsApplicationsApplicationSpecArgs{...}
type GitopsApplicationsApplicationSpecInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecOutput() GitopsApplicationsApplicationSpecOutput
	ToGitopsApplicationsApplicationSpecOutputWithContext(context.Context) GitopsApplicationsApplicationSpecOutput
}

type GitopsApplicationsApplicationSpecArgs struct {
	Destinations GitopsApplicationsApplicationSpecDestinationArrayInput `pulumi:"destinations"`
	Sources      GitopsApplicationsApplicationSpecSourceArrayInput      `pulumi:"sources"`
	SyncPolicies GitopsApplicationsApplicationSpecSyncPolicyArrayInput  `pulumi:"syncPolicies"`
}

func (GitopsApplicationsApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecArgs) ToGitopsApplicationsApplicationSpecOutput() GitopsApplicationsApplicationSpecOutput {
	return i.ToGitopsApplicationsApplicationSpecOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecArgs) ToGitopsApplicationsApplicationSpecOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecOutput)
}

// GitopsApplicationsApplicationSpecArrayInput is an input type that accepts GitopsApplicationsApplicationSpecArray and GitopsApplicationsApplicationSpecArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecArrayInput` via:
//
//	GitopsApplicationsApplicationSpecArray{ GitopsApplicationsApplicationSpecArgs{...} }
type GitopsApplicationsApplicationSpecArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecArrayOutput() GitopsApplicationsApplicationSpecArrayOutput
	ToGitopsApplicationsApplicationSpecArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecArrayOutput
}

type GitopsApplicationsApplicationSpecArray []GitopsApplicationsApplicationSpecInput

func (GitopsApplicationsApplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecArray) ToGitopsApplicationsApplicationSpecArrayOutput() GitopsApplicationsApplicationSpecArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecArray) ToGitopsApplicationsApplicationSpecArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecArrayOutput)
}

type GitopsApplicationsApplicationSpecOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecOutput) ToGitopsApplicationsApplicationSpecOutput() GitopsApplicationsApplicationSpecOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecOutput) ToGitopsApplicationsApplicationSpecOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecOutput) Destinations() GitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpec) []GitopsApplicationsApplicationSpecDestination {
		return v.Destinations
	}).(GitopsApplicationsApplicationSpecDestinationArrayOutput)
}

func (o GitopsApplicationsApplicationSpecOutput) Sources() GitopsApplicationsApplicationSpecSourceArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpec) []GitopsApplicationsApplicationSpecSource { return v.Sources }).(GitopsApplicationsApplicationSpecSourceArrayOutput)
}

func (o GitopsApplicationsApplicationSpecOutput) SyncPolicies() GitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpec) []GitopsApplicationsApplicationSpecSyncPolicy {
		return v.SyncPolicies
	}).(GitopsApplicationsApplicationSpecSyncPolicyArrayOutput)
}

type GitopsApplicationsApplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecArrayOutput) ToGitopsApplicationsApplicationSpecArrayOutput() GitopsApplicationsApplicationSpecArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecArrayOutput) ToGitopsApplicationsApplicationSpecArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpec {
		return vs[0].([]GitopsApplicationsApplicationSpec)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecOutput)
}

type GitopsApplicationsApplicationSpecDestination struct {
	// Name of the GitOps application.
	Name      *string `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
	Server    *string `pulumi:"server"`
}

// GitopsApplicationsApplicationSpecDestinationInput is an input type that accepts GitopsApplicationsApplicationSpecDestinationArgs and GitopsApplicationsApplicationSpecDestinationOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecDestinationInput` via:
//
//	GitopsApplicationsApplicationSpecDestinationArgs{...}
type GitopsApplicationsApplicationSpecDestinationInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecDestinationOutput() GitopsApplicationsApplicationSpecDestinationOutput
	ToGitopsApplicationsApplicationSpecDestinationOutputWithContext(context.Context) GitopsApplicationsApplicationSpecDestinationOutput
}

type GitopsApplicationsApplicationSpecDestinationArgs struct {
	// Name of the GitOps application.
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Server    pulumi.StringPtrInput `pulumi:"server"`
}

func (GitopsApplicationsApplicationSpecDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecDestinationArgs) ToGitopsApplicationsApplicationSpecDestinationOutput() GitopsApplicationsApplicationSpecDestinationOutput {
	return i.ToGitopsApplicationsApplicationSpecDestinationOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecDestinationArgs) ToGitopsApplicationsApplicationSpecDestinationOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecDestinationOutput)
}

// GitopsApplicationsApplicationSpecDestinationArrayInput is an input type that accepts GitopsApplicationsApplicationSpecDestinationArray and GitopsApplicationsApplicationSpecDestinationArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecDestinationArrayInput` via:
//
//	GitopsApplicationsApplicationSpecDestinationArray{ GitopsApplicationsApplicationSpecDestinationArgs{...} }
type GitopsApplicationsApplicationSpecDestinationArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecDestinationArrayOutput() GitopsApplicationsApplicationSpecDestinationArrayOutput
	ToGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecDestinationArrayOutput
}

type GitopsApplicationsApplicationSpecDestinationArray []GitopsApplicationsApplicationSpecDestinationInput

func (GitopsApplicationsApplicationSpecDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecDestinationArray) ToGitopsApplicationsApplicationSpecDestinationArrayOutput() GitopsApplicationsApplicationSpecDestinationArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecDestinationArray) ToGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecDestinationArrayOutput)
}

type GitopsApplicationsApplicationSpecDestinationOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecDestinationOutput) ToGitopsApplicationsApplicationSpecDestinationOutput() GitopsApplicationsApplicationSpecDestinationOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecDestinationOutput) ToGitopsApplicationsApplicationSpecDestinationOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecDestinationOutput {
	return o
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecDestinationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecDestination) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecDestinationOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecDestination) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecDestinationArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecDestinationArrayOutput) ToGitopsApplicationsApplicationSpecDestinationArrayOutput() GitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecDestinationArrayOutput) ToGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecDestinationArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecDestination {
		return vs[0].([]GitopsApplicationsApplicationSpecDestination)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecDestinationOutput)
}

type GitopsApplicationsApplicationSpecSource struct {
	Chart          *string                                            `pulumi:"chart"`
	Directories    []GitopsApplicationsApplicationSpecSourceDirectory `pulumi:"directories"`
	Helms          []GitopsApplicationsApplicationSpecSourceHelm      `pulumi:"helms"`
	Ksonnets       []GitopsApplicationsApplicationSpecSourceKsonnet   `pulumi:"ksonnets"`
	Kustomizes     []GitopsApplicationsApplicationSpecSourceKustomize `pulumi:"kustomizes"`
	Path           string                                             `pulumi:"path"`
	Plugins        []GitopsApplicationsApplicationSpecSourcePlugin    `pulumi:"plugins"`
	RepoUrl        string                                             `pulumi:"repoUrl"`
	TargetRevision string                                             `pulumi:"targetRevision"`
}

// GitopsApplicationsApplicationSpecSourceInput is an input type that accepts GitopsApplicationsApplicationSpecSourceArgs and GitopsApplicationsApplicationSpecSourceOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceInput` via:
//
//	GitopsApplicationsApplicationSpecSourceArgs{...}
type GitopsApplicationsApplicationSpecSourceInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceOutput() GitopsApplicationsApplicationSpecSourceOutput
	ToGitopsApplicationsApplicationSpecSourceOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceOutput
}

type GitopsApplicationsApplicationSpecSourceArgs struct {
	Chart          pulumi.StringPtrInput                                      `pulumi:"chart"`
	Directories    GitopsApplicationsApplicationSpecSourceDirectoryArrayInput `pulumi:"directories"`
	Helms          GitopsApplicationsApplicationSpecSourceHelmArrayInput      `pulumi:"helms"`
	Ksonnets       GitopsApplicationsApplicationSpecSourceKsonnetArrayInput   `pulumi:"ksonnets"`
	Kustomizes     GitopsApplicationsApplicationSpecSourceKustomizeArrayInput `pulumi:"kustomizes"`
	Path           pulumi.StringInput                                         `pulumi:"path"`
	Plugins        GitopsApplicationsApplicationSpecSourcePluginArrayInput    `pulumi:"plugins"`
	RepoUrl        pulumi.StringInput                                         `pulumi:"repoUrl"`
	TargetRevision pulumi.StringInput                                         `pulumi:"targetRevision"`
}

func (GitopsApplicationsApplicationSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceArgs) ToGitopsApplicationsApplicationSpecSourceOutput() GitopsApplicationsApplicationSpecSourceOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceArgs) ToGitopsApplicationsApplicationSpecSourceOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceOutput)
}

// GitopsApplicationsApplicationSpecSourceArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceArray and GitopsApplicationsApplicationSpecSourceArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceArray{ GitopsApplicationsApplicationSpecSourceArgs{...} }
type GitopsApplicationsApplicationSpecSourceArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceArrayOutput() GitopsApplicationsApplicationSpecSourceArrayOutput
	ToGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceArrayOutput
}

type GitopsApplicationsApplicationSpecSourceArray []GitopsApplicationsApplicationSpecSourceInput

func (GitopsApplicationsApplicationSpecSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceArray) ToGitopsApplicationsApplicationSpecSourceArrayOutput() GitopsApplicationsApplicationSpecSourceArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceArray) ToGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceOutput) ToGitopsApplicationsApplicationSpecSourceOutput() GitopsApplicationsApplicationSpecSourceOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceOutput) ToGitopsApplicationsApplicationSpecSourceOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Directories() GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) []GitopsApplicationsApplicationSpecSourceDirectory {
		return v.Directories
	}).(GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Helms() GitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) []GitopsApplicationsApplicationSpecSourceHelm {
		return v.Helms
	}).(GitopsApplicationsApplicationSpecSourceHelmArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Ksonnets() GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) []GitopsApplicationsApplicationSpecSourceKsonnet {
		return v.Ksonnets
	}).(GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Kustomizes() GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) []GitopsApplicationsApplicationSpecSourceKustomize {
		return v.Kustomizes
	}).(GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) string { return v.Path }).(pulumi.StringOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) Plugins() GitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) []GitopsApplicationsApplicationSpecSourcePlugin {
		return v.Plugins
	}).(GitopsApplicationsApplicationSpecSourcePluginArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) RepoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) string { return v.RepoUrl }).(pulumi.StringOutput)
}

func (o GitopsApplicationsApplicationSpecSourceOutput) TargetRevision() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSource) string { return v.TargetRevision }).(pulumi.StringOutput)
}

type GitopsApplicationsApplicationSpecSourceArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceArrayOutput) ToGitopsApplicationsApplicationSpecSourceArrayOutput() GitopsApplicationsApplicationSpecSourceArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceArrayOutput) ToGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSource {
		return vs[0].([]GitopsApplicationsApplicationSpecSource)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectory struct {
	Exclude  *string                                                   `pulumi:"exclude"`
	Include  *string                                                   `pulumi:"include"`
	Jsonnets []GitopsApplicationsApplicationSpecSourceDirectoryJsonnet `pulumi:"jsonnets"`
	Recurse  *bool                                                     `pulumi:"recurse"`
}

// GitopsApplicationsApplicationSpecSourceDirectoryInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryArgs and GitopsApplicationsApplicationSpecSourceDirectoryOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryArgs{...}
type GitopsApplicationsApplicationSpecSourceDirectoryInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryOutput() GitopsApplicationsApplicationSpecSourceDirectoryOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryArgs struct {
	Exclude  pulumi.StringPtrInput                                             `pulumi:"exclude"`
	Include  pulumi.StringPtrInput                                             `pulumi:"include"`
	Jsonnets GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput `pulumi:"jsonnets"`
	Recurse  pulumi.BoolPtrInput                                               `pulumi:"recurse"`
}

func (GitopsApplicationsApplicationSpecSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryOutput() GitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryOutput)
}

// GitopsApplicationsApplicationSpecSourceDirectoryArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryArray and GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryArray{ GitopsApplicationsApplicationSpecSourceDirectoryArgs{...} }
type GitopsApplicationsApplicationSpecSourceDirectoryArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryArray []GitopsApplicationsApplicationSpecSourceDirectoryInput

func (GitopsApplicationsApplicationSpecSourceDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryArray) ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryArray) ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryOutput() GitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryOutput) Jsonnets() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectory) []GitopsApplicationsApplicationSpecSourceDirectoryJsonnet {
		return v.Jsonnets
	}).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceDirectory {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceDirectory)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceDirectoryOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnet struct {
	ExtVars []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar `pulumi:"extVars"`
	Libs    []string                                                        `pulumi:"libs"`
	Tlas    []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla    `pulumi:"tlas"`
}

// GitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs and GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{...}
type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs struct {
	ExtVars GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput `pulumi:"extVars"`
	Libs    pulumi.StringArrayInput                                                 `pulumi:"libs"`
	Tlas    GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput    `pulumi:"tlas"`
}

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput)
}

// GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray and GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray{ GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{...} }
type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ExtVars() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar {
		return v.ExtVars
	}).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) Tlas() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla {
		return v.Tlas
	}).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceDirectoryJsonnet {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceDirectoryJsonnet)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar struct {
	Code *bool `pulumi:"code"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs and GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{...}
type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs struct {
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

// GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray and GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray{ GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{...} }
type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla struct {
	Code *bool `pulumi:"code"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs and GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{...}
type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs struct {
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

// GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray and GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray{ GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{...} }
type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
	ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray []GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

type GitopsApplicationsApplicationSpecSourceHelm struct {
	FileParameters  []GitopsApplicationsApplicationSpecSourceHelmFileParameter `pulumi:"fileParameters"`
	Parameters      []GitopsApplicationsApplicationSpecSourceHelmParameter     `pulumi:"parameters"`
	PassCredentials *bool                                                      `pulumi:"passCredentials"`
	ReleaseName     *string                                                    `pulumi:"releaseName"`
	ValueFiles      []string                                                   `pulumi:"valueFiles"`
	Values          *string                                                    `pulumi:"values"`
	Version         *string                                                    `pulumi:"version"`
}

// GitopsApplicationsApplicationSpecSourceHelmInput is an input type that accepts GitopsApplicationsApplicationSpecSourceHelmArgs and GitopsApplicationsApplicationSpecSourceHelmOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceHelmInput` via:
//
//	GitopsApplicationsApplicationSpecSourceHelmArgs{...}
type GitopsApplicationsApplicationSpecSourceHelmInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceHelmOutput() GitopsApplicationsApplicationSpecSourceHelmOutput
	ToGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceHelmOutput
}

type GitopsApplicationsApplicationSpecSourceHelmArgs struct {
	FileParameters  GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput `pulumi:"fileParameters"`
	Parameters      GitopsApplicationsApplicationSpecSourceHelmParameterArrayInput     `pulumi:"parameters"`
	PassCredentials pulumi.BoolPtrInput                                                `pulumi:"passCredentials"`
	ReleaseName     pulumi.StringPtrInput                                              `pulumi:"releaseName"`
	ValueFiles      pulumi.StringArrayInput                                            `pulumi:"valueFiles"`
	Values          pulumi.StringPtrInput                                              `pulumi:"values"`
	Version         pulumi.StringPtrInput                                              `pulumi:"version"`
}

func (GitopsApplicationsApplicationSpecSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceHelmArgs) ToGitopsApplicationsApplicationSpecSourceHelmOutput() GitopsApplicationsApplicationSpecSourceHelmOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceHelmArgs) ToGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceHelmOutput)
}

// GitopsApplicationsApplicationSpecSourceHelmArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceHelmArray and GitopsApplicationsApplicationSpecSourceHelmArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceHelmArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceHelmArray{ GitopsApplicationsApplicationSpecSourceHelmArgs{...} }
type GitopsApplicationsApplicationSpecSourceHelmArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GitopsApplicationsApplicationSpecSourceHelmArrayOutput
	ToGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceHelmArrayOutput
}

type GitopsApplicationsApplicationSpecSourceHelmArray []GitopsApplicationsApplicationSpecSourceHelmInput

func (GitopsApplicationsApplicationSpecSourceHelmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceHelmArray) ToGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceHelmArray) ToGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceHelmArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) ToGitopsApplicationsApplicationSpecSourceHelmOutput() GitopsApplicationsApplicationSpecSourceHelmOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) ToGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) FileParameters() GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) []GitopsApplicationsApplicationSpecSourceHelmFileParameter {
		return v.FileParameters
	}).(GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) Parameters() GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) []GitopsApplicationsApplicationSpecSourceHelmParameter {
		return v.Parameters
	}).(GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) PassCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) *bool { return v.PassCredentials }).(pulumi.BoolPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceHelmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceHelmArrayOutput) ToGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmArrayOutput) ToGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceHelmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceHelm {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceHelm)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceHelmOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmFileParameter struct {
	// Name of the GitOps application.
	Name *string `pulumi:"name"`
	Path *string `pulumi:"path"`
}

// GitopsApplicationsApplicationSpecSourceHelmFileParameterInput is an input type that accepts GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs and GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceHelmFileParameterInput` via:
//
//	GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{...}
type GitopsApplicationsApplicationSpecSourceHelmFileParameterInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput
	ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput
}

type GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs struct {
	// Name of the GitOps application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput)
}

// GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceHelmFileParameterArray and GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceHelmFileParameterArray{ GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{...} }
type GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput
	ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput
}

type GitopsApplicationsApplicationSpecSourceHelmFileParameterArray []GitopsApplicationsApplicationSpecSourceHelmFileParameterInput

func (GitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return o
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelmFileParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelmFileParameter) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ToGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceHelmFileParameter {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceHelmFileParameter)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmParameter struct {
	ForceString *bool `pulumi:"forceString"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GitopsApplicationsApplicationSpecSourceHelmParameterInput is an input type that accepts GitopsApplicationsApplicationSpecSourceHelmParameterArgs and GitopsApplicationsApplicationSpecSourceHelmParameterOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceHelmParameterInput` via:
//
//	GitopsApplicationsApplicationSpecSourceHelmParameterArgs{...}
type GitopsApplicationsApplicationSpecSourceHelmParameterInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GitopsApplicationsApplicationSpecSourceHelmParameterOutput
	ToGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceHelmParameterOutput
}

type GitopsApplicationsApplicationSpecSourceHelmParameterArgs struct {
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsApplicationSpecSourceHelmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceHelmParameterArgs) ToGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceHelmParameterArgs) ToGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceHelmParameterOutput)
}

// GitopsApplicationsApplicationSpecSourceHelmParameterArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceHelmParameterArray and GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceHelmParameterArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceHelmParameterArray{ GitopsApplicationsApplicationSpecSourceHelmParameterArgs{...} }
type GitopsApplicationsApplicationSpecSourceHelmParameterArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput
	ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput
}

type GitopsApplicationsApplicationSpecSourceHelmParameterArray []GitopsApplicationsApplicationSpecSourceHelmParameterInput

func (GitopsApplicationsApplicationSpecSourceHelmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceHelmParameterArray) ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceHelmParameterArray) ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmParameterOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceHelmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterOutput) ToGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterOutput) ToGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelmParameter) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourceHelmParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelmParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceHelmParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ToGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceHelmParameter {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceHelmParameter)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceHelmParameterOutput)
}

type GitopsApplicationsApplicationSpecSourceKsonnet struct {
	Environment *string                                                   `pulumi:"environment"`
	Parameters  []GitopsApplicationsApplicationSpecSourceKsonnetParameter `pulumi:"parameters"`
}

// GitopsApplicationsApplicationSpecSourceKsonnetInput is an input type that accepts GitopsApplicationsApplicationSpecSourceKsonnetArgs and GitopsApplicationsApplicationSpecSourceKsonnetOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceKsonnetInput` via:
//
//	GitopsApplicationsApplicationSpecSourceKsonnetArgs{...}
type GitopsApplicationsApplicationSpecSourceKsonnetInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceKsonnetOutput() GitopsApplicationsApplicationSpecSourceKsonnetOutput
	ToGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceKsonnetOutput
}

type GitopsApplicationsApplicationSpecSourceKsonnetArgs struct {
	Environment pulumi.StringPtrInput                                             `pulumi:"environment"`
	Parameters  GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput `pulumi:"parameters"`
}

func (GitopsApplicationsApplicationSpecSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetArgs) ToGitopsApplicationsApplicationSpecSourceKsonnetOutput() GitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetArgs) ToGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceKsonnetOutput)
}

// GitopsApplicationsApplicationSpecSourceKsonnetArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceKsonnetArray and GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceKsonnetArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceKsonnetArray{ GitopsApplicationsApplicationSpecSourceKsonnetArgs{...} }
type GitopsApplicationsApplicationSpecSourceKsonnetArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput
	ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput
}

type GitopsApplicationsApplicationSpecSourceKsonnetArray []GitopsApplicationsApplicationSpecSourceKsonnetInput

func (GitopsApplicationsApplicationSpecSourceKsonnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetArray) ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetArray) ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceKsonnetOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetOutput() GitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetOutput) Parameters() GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKsonnet) []GitopsApplicationsApplicationSpecSourceKsonnetParameter {
		return v.Parameters
	}).(GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceKsonnet {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceKsonnet)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceKsonnetOutput)
}

type GitopsApplicationsApplicationSpecSourceKsonnetParameter struct {
	Component *string `pulumi:"component"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GitopsApplicationsApplicationSpecSourceKsonnetParameterInput is an input type that accepts GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs and GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceKsonnetParameterInput` via:
//
//	GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{...}
type GitopsApplicationsApplicationSpecSourceKsonnetParameterInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput
	ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput
}

type GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput)
}

// GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceKsonnetParameterArray and GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceKsonnetParameterArray{ GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{...} }
type GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput
	ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput
}

type GitopsApplicationsApplicationSpecSourceKsonnetParameterArray []GitopsApplicationsApplicationSpecSourceKsonnetParameterInput

func (GitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ToGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceKsonnetParameter {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceKsonnetParameter)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput)
}

type GitopsApplicationsApplicationSpecSourceKustomize struct {
	CommonAnnotations      map[string]string `pulumi:"commonAnnotations"`
	CommonLabels           map[string]string `pulumi:"commonLabels"`
	ForceCommonAnnotations *bool             `pulumi:"forceCommonAnnotations"`
	ForceCommonLabels      *bool             `pulumi:"forceCommonLabels"`
	Images                 []string          `pulumi:"images"`
	NamePrefix             *string           `pulumi:"namePrefix"`
	NameSuffix             *string           `pulumi:"nameSuffix"`
	Version                *string           `pulumi:"version"`
}

// GitopsApplicationsApplicationSpecSourceKustomizeInput is an input type that accepts GitopsApplicationsApplicationSpecSourceKustomizeArgs and GitopsApplicationsApplicationSpecSourceKustomizeOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceKustomizeInput` via:
//
//	GitopsApplicationsApplicationSpecSourceKustomizeArgs{...}
type GitopsApplicationsApplicationSpecSourceKustomizeInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceKustomizeOutput() GitopsApplicationsApplicationSpecSourceKustomizeOutput
	ToGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceKustomizeOutput
}

type GitopsApplicationsApplicationSpecSourceKustomizeArgs struct {
	CommonAnnotations      pulumi.StringMapInput   `pulumi:"commonAnnotations"`
	CommonLabels           pulumi.StringMapInput   `pulumi:"commonLabels"`
	ForceCommonAnnotations pulumi.BoolPtrInput     `pulumi:"forceCommonAnnotations"`
	ForceCommonLabels      pulumi.BoolPtrInput     `pulumi:"forceCommonLabels"`
	Images                 pulumi.StringArrayInput `pulumi:"images"`
	NamePrefix             pulumi.StringPtrInput   `pulumi:"namePrefix"`
	NameSuffix             pulumi.StringPtrInput   `pulumi:"nameSuffix"`
	Version                pulumi.StringPtrInput   `pulumi:"version"`
}

func (GitopsApplicationsApplicationSpecSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceKustomizeArgs) ToGitopsApplicationsApplicationSpecSourceKustomizeOutput() GitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceKustomizeArgs) ToGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceKustomizeOutput)
}

// GitopsApplicationsApplicationSpecSourceKustomizeArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourceKustomizeArray and GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourceKustomizeArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourceKustomizeArray{ GitopsApplicationsApplicationSpecSourceKustomizeArgs{...} }
type GitopsApplicationsApplicationSpecSourceKustomizeArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput
	ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput
}

type GitopsApplicationsApplicationSpecSourceKustomizeArray []GitopsApplicationsApplicationSpecSourceKustomizeInput

func (GitopsApplicationsApplicationSpecSourceKustomizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourceKustomizeArray) ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourceKustomizeArray) ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput)
}

type GitopsApplicationsApplicationSpecSourceKustomizeOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) ToGitopsApplicationsApplicationSpecSourceKustomizeOutput() GitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) ToGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) map[string]string { return v.CommonAnnotations }).(pulumi.StringMapOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) ForceCommonAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) *bool { return v.ForceCommonAnnotations }).(pulumi.BoolPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) ForceCommonLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) *bool { return v.ForceCommonLabels }).(pulumi.BoolPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ToGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourceKustomize {
		return vs[0].([]GitopsApplicationsApplicationSpecSourceKustomize)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourceKustomizeOutput)
}

type GitopsApplicationsApplicationSpecSourcePlugin struct {
	Envs []GitopsApplicationsApplicationSpecSourcePluginEnv `pulumi:"envs"`
	// Name of the GitOps application.
	Name *string `pulumi:"name"`
}

// GitopsApplicationsApplicationSpecSourcePluginInput is an input type that accepts GitopsApplicationsApplicationSpecSourcePluginArgs and GitopsApplicationsApplicationSpecSourcePluginOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourcePluginInput` via:
//
//	GitopsApplicationsApplicationSpecSourcePluginArgs{...}
type GitopsApplicationsApplicationSpecSourcePluginInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourcePluginOutput() GitopsApplicationsApplicationSpecSourcePluginOutput
	ToGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourcePluginOutput
}

type GitopsApplicationsApplicationSpecSourcePluginArgs struct {
	Envs GitopsApplicationsApplicationSpecSourcePluginEnvArrayInput `pulumi:"envs"`
	// Name of the GitOps application.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GitopsApplicationsApplicationSpecSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourcePluginArgs) ToGitopsApplicationsApplicationSpecSourcePluginOutput() GitopsApplicationsApplicationSpecSourcePluginOutput {
	return i.ToGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourcePluginArgs) ToGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourcePluginOutput)
}

// GitopsApplicationsApplicationSpecSourcePluginArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourcePluginArray and GitopsApplicationsApplicationSpecSourcePluginArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourcePluginArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourcePluginArray{ GitopsApplicationsApplicationSpecSourcePluginArgs{...} }
type GitopsApplicationsApplicationSpecSourcePluginArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GitopsApplicationsApplicationSpecSourcePluginArrayOutput
	ToGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourcePluginArrayOutput
}

type GitopsApplicationsApplicationSpecSourcePluginArray []GitopsApplicationsApplicationSpecSourcePluginInput

func (GitopsApplicationsApplicationSpecSourcePluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourcePluginArray) ToGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourcePluginArray) ToGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourcePluginArrayOutput)
}

type GitopsApplicationsApplicationSpecSourcePluginOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourcePluginOutput) ToGitopsApplicationsApplicationSpecSourcePluginOutput() GitopsApplicationsApplicationSpecSourcePluginOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginOutput) ToGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginOutput) Envs() GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourcePlugin) []GitopsApplicationsApplicationSpecSourcePluginEnv {
		return v.Envs
	}).(GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput)
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourcePluginArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourcePluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourcePluginArrayOutput) ToGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginArrayOutput) ToGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourcePluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourcePlugin {
		return vs[0].([]GitopsApplicationsApplicationSpecSourcePlugin)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourcePluginOutput)
}

type GitopsApplicationsApplicationSpecSourcePluginEnv struct {
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GitopsApplicationsApplicationSpecSourcePluginEnvInput is an input type that accepts GitopsApplicationsApplicationSpecSourcePluginEnvArgs and GitopsApplicationsApplicationSpecSourcePluginEnvOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourcePluginEnvInput` via:
//
//	GitopsApplicationsApplicationSpecSourcePluginEnvArgs{...}
type GitopsApplicationsApplicationSpecSourcePluginEnvInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GitopsApplicationsApplicationSpecSourcePluginEnvOutput
	ToGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourcePluginEnvOutput
}

type GitopsApplicationsApplicationSpecSourcePluginEnvArgs struct {
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GitopsApplicationsApplicationSpecSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourcePluginEnvArgs) ToGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return i.ToGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourcePluginEnvArgs) ToGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourcePluginEnvOutput)
}

// GitopsApplicationsApplicationSpecSourcePluginEnvArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSourcePluginEnvArray and GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSourcePluginEnvArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSourcePluginEnvArray{ GitopsApplicationsApplicationSpecSourcePluginEnvArgs{...} }
type GitopsApplicationsApplicationSpecSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput
	ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput
}

type GitopsApplicationsApplicationSpecSourcePluginEnvArray []GitopsApplicationsApplicationSpecSourcePluginEnvInput

func (GitopsApplicationsApplicationSpecSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSourcePluginEnvArray) ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSourcePluginEnvArray) ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput)
}

type GitopsApplicationsApplicationSpecSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourcePluginEnvOutput) ToGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginEnvOutput) ToGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return o
}

// Name of the GitOps application.
func (o GitopsApplicationsApplicationSpecSourcePluginEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourcePluginEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSourcePluginEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSourcePluginEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ToGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSourcePluginEnv {
		return vs[0].([]GitopsApplicationsApplicationSpecSourcePluginEnv)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSourcePluginEnvOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicy struct {
	Automateds  []GitopsApplicationsApplicationSpecSyncPolicyAutomated `pulumi:"automateds"`
	Retries     []GitopsApplicationsApplicationSpecSyncPolicyRetry     `pulumi:"retries"`
	SyncOptions []string                                               `pulumi:"syncOptions"`
}

// GitopsApplicationsApplicationSpecSyncPolicyInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyArgs and GitopsApplicationsApplicationSpecSyncPolicyOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyArgs{...}
type GitopsApplicationsApplicationSpecSyncPolicyInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyOutput() GitopsApplicationsApplicationSpecSyncPolicyOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyArgs struct {
	Automateds  GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput `pulumi:"automateds"`
	Retries     GitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput     `pulumi:"retries"`
	SyncOptions pulumi.StringArrayInput                                        `pulumi:"syncOptions"`
}

func (GitopsApplicationsApplicationSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyArgs) ToGitopsApplicationsApplicationSpecSyncPolicyOutput() GitopsApplicationsApplicationSpecSyncPolicyOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyArgs) ToGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyOutput)
}

// GitopsApplicationsApplicationSpecSyncPolicyArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyArray and GitopsApplicationsApplicationSpecSyncPolicyArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyArray{ GitopsApplicationsApplicationSpecSyncPolicyArgs{...} }
type GitopsApplicationsApplicationSpecSyncPolicyArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyArrayOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyArrayOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyArray []GitopsApplicationsApplicationSpecSyncPolicyInput

func (GitopsApplicationsApplicationSpecSyncPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyArray) ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyArray) ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyArrayOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyOutput) ToGitopsApplicationsApplicationSpecSyncPolicyOutput() GitopsApplicationsApplicationSpecSyncPolicyOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyOutput) ToGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyOutput) Automateds() GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicy) []GitopsApplicationsApplicationSpecSyncPolicyAutomated {
		return v.Automateds
	}).(GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyOutput) Retries() GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicy) []GitopsApplicationsApplicationSpecSyncPolicyRetry {
		return v.Retries
	}).(GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicy) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSyncPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSyncPolicy {
		return vs[0].([]GitopsApplicationsApplicationSpecSyncPolicy)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSyncPolicyOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyAutomated struct {
	AllowEmpty *bool `pulumi:"allowEmpty"`
	Prune      *bool `pulumi:"prune"`
	SelfHeal   *bool `pulumi:"selfHeal"`
}

// GitopsApplicationsApplicationSpecSyncPolicyAutomatedInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs and GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyAutomatedInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{...}
type GitopsApplicationsApplicationSpecSyncPolicyAutomatedInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs struct {
	AllowEmpty pulumi.BoolPtrInput `pulumi:"allowEmpty"`
	Prune      pulumi.BoolPtrInput `pulumi:"prune"`
	SelfHeal   pulumi.BoolPtrInput `pulumi:"selfHeal"`
}

func (GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput)
}

// GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray and GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray{ GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{...} }
type GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray []GitopsApplicationsApplicationSpecSyncPolicyAutomatedInput

func (GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) AllowEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyAutomated) *bool { return v.AllowEmpty }).(pulumi.BoolPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyAutomated) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) SelfHeal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyAutomated) *bool { return v.SelfHeal }).(pulumi.BoolPtrOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSyncPolicyAutomated {
		return vs[0].([]GitopsApplicationsApplicationSpecSyncPolicyAutomated)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyRetry struct {
	Backoffs []GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff `pulumi:"backoffs"`
	Limit    *string                                                   `pulumi:"limit"`
}

// GitopsApplicationsApplicationSpecSyncPolicyRetryInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyRetryArgs and GitopsApplicationsApplicationSpecSyncPolicyRetryOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyRetryInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyRetryArgs{...}
type GitopsApplicationsApplicationSpecSyncPolicyRetryInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryArgs struct {
	Backoffs GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput `pulumi:"backoffs"`
	Limit    pulumi.StringPtrInput                                             `pulumi:"limit"`
}

func (GitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyRetryOutput)
}

// GitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyRetryArray and GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyRetryArray{ GitopsApplicationsApplicationSpecSyncPolicyRetryArgs{...} }
type GitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryArray []GitopsApplicationsApplicationSpecSyncPolicyRetryInput

func (GitopsApplicationsApplicationSpecSyncPolicyRetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryArray) ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryArray) ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryOutput) Backoffs() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyRetry) []GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff {
		return v.Backoffs
	}).(GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryOutput) Limit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyRetry) *string { return v.Limit }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSyncPolicyRetry {
		return vs[0].([]GitopsApplicationsApplicationSpecSyncPolicyRetry)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSyncPolicyRetryOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff struct {
	Duration    *string `pulumi:"duration"`
	Factor      *string `pulumi:"factor"`
	MaxDuration *string `pulumi:"maxDuration"`
}

// GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs and GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{...}
type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs struct {
	Duration    pulumi.StringPtrInput `pulumi:"duration"`
	Factor      pulumi.StringPtrInput `pulumi:"factor"`
	MaxDuration pulumi.StringPtrInput `pulumi:"maxDuration"`
}

func (GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput)
}

// GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput is an input type that accepts GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray and GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput values.
// You can construct a concrete instance of `GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput` via:
//
//	GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray{ GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{...} }
type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput interface {
	pulumi.Input

	ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput
	ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray []GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput

func (GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return i.ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(context.Background())
}

func (i GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) Factor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) *string { return v.Factor }).(pulumi.StringPtrOutput)
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) *string { return v.MaxDuration }).(pulumi.StringPtrOutput)
}

type GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput struct{ *pulumi.OutputState }

func (GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ToGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(ctx context.Context) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o
}

func (o GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) Index(i pulumi.IntInput) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff {
		return vs[0].([]GitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)[vs[1].(int)]
	}).(GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput)
}

type GitopsGnupgRequest struct {
	// Public key details.
	Publickeys []GitopsGnupgRequestPublickey `pulumi:"publickeys"`
	// Indicates if the GnuPG Key should be inserted if not present or updated if present.
	Upsert bool `pulumi:"upsert"`
}

// GitopsGnupgRequestInput is an input type that accepts GitopsGnupgRequestArgs and GitopsGnupgRequestOutput values.
// You can construct a concrete instance of `GitopsGnupgRequestInput` via:
//
//	GitopsGnupgRequestArgs{...}
type GitopsGnupgRequestInput interface {
	pulumi.Input

	ToGitopsGnupgRequestOutput() GitopsGnupgRequestOutput
	ToGitopsGnupgRequestOutputWithContext(context.Context) GitopsGnupgRequestOutput
}

type GitopsGnupgRequestArgs struct {
	// Public key details.
	Publickeys GitopsGnupgRequestPublickeyArrayInput `pulumi:"publickeys"`
	// Indicates if the GnuPG Key should be inserted if not present or updated if present.
	Upsert pulumi.BoolInput `pulumi:"upsert"`
}

func (GitopsGnupgRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsGnupgRequest)(nil)).Elem()
}

func (i GitopsGnupgRequestArgs) ToGitopsGnupgRequestOutput() GitopsGnupgRequestOutput {
	return i.ToGitopsGnupgRequestOutputWithContext(context.Background())
}

func (i GitopsGnupgRequestArgs) ToGitopsGnupgRequestOutputWithContext(ctx context.Context) GitopsGnupgRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgRequestOutput)
}

// GitopsGnupgRequestArrayInput is an input type that accepts GitopsGnupgRequestArray and GitopsGnupgRequestArrayOutput values.
// You can construct a concrete instance of `GitopsGnupgRequestArrayInput` via:
//
//	GitopsGnupgRequestArray{ GitopsGnupgRequestArgs{...} }
type GitopsGnupgRequestArrayInput interface {
	pulumi.Input

	ToGitopsGnupgRequestArrayOutput() GitopsGnupgRequestArrayOutput
	ToGitopsGnupgRequestArrayOutputWithContext(context.Context) GitopsGnupgRequestArrayOutput
}

type GitopsGnupgRequestArray []GitopsGnupgRequestInput

func (GitopsGnupgRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsGnupgRequest)(nil)).Elem()
}

func (i GitopsGnupgRequestArray) ToGitopsGnupgRequestArrayOutput() GitopsGnupgRequestArrayOutput {
	return i.ToGitopsGnupgRequestArrayOutputWithContext(context.Background())
}

func (i GitopsGnupgRequestArray) ToGitopsGnupgRequestArrayOutputWithContext(ctx context.Context) GitopsGnupgRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgRequestArrayOutput)
}

type GitopsGnupgRequestOutput struct{ *pulumi.OutputState }

func (GitopsGnupgRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsGnupgRequest)(nil)).Elem()
}

func (o GitopsGnupgRequestOutput) ToGitopsGnupgRequestOutput() GitopsGnupgRequestOutput {
	return o
}

func (o GitopsGnupgRequestOutput) ToGitopsGnupgRequestOutputWithContext(ctx context.Context) GitopsGnupgRequestOutput {
	return o
}

// Public key details.
func (o GitopsGnupgRequestOutput) Publickeys() GitopsGnupgRequestPublickeyArrayOutput {
	return o.ApplyT(func(v GitopsGnupgRequest) []GitopsGnupgRequestPublickey { return v.Publickeys }).(GitopsGnupgRequestPublickeyArrayOutput)
}

// Indicates if the GnuPG Key should be inserted if not present or updated if present.
func (o GitopsGnupgRequestOutput) Upsert() pulumi.BoolOutput {
	return o.ApplyT(func(v GitopsGnupgRequest) bool { return v.Upsert }).(pulumi.BoolOutput)
}

type GitopsGnupgRequestArrayOutput struct{ *pulumi.OutputState }

func (GitopsGnupgRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsGnupgRequest)(nil)).Elem()
}

func (o GitopsGnupgRequestArrayOutput) ToGitopsGnupgRequestArrayOutput() GitopsGnupgRequestArrayOutput {
	return o
}

func (o GitopsGnupgRequestArrayOutput) ToGitopsGnupgRequestArrayOutputWithContext(ctx context.Context) GitopsGnupgRequestArrayOutput {
	return o
}

func (o GitopsGnupgRequestArrayOutput) Index(i pulumi.IntInput) GitopsGnupgRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsGnupgRequest {
		return vs[0].([]GitopsGnupgRequest)[vs[1].(int)]
	}).(GitopsGnupgRequestOutput)
}

type GitopsGnupgRequestPublickey struct {
	Fingerprint *string `pulumi:"fingerprint"`
	KeyData     string  `pulumi:"keyData"`
	KeyId       *string `pulumi:"keyId"`
	Owner       *string `pulumi:"owner"`
	SubType     *string `pulumi:"subType"`
	Trust       *string `pulumi:"trust"`
}

// GitopsGnupgRequestPublickeyInput is an input type that accepts GitopsGnupgRequestPublickeyArgs and GitopsGnupgRequestPublickeyOutput values.
// You can construct a concrete instance of `GitopsGnupgRequestPublickeyInput` via:
//
//	GitopsGnupgRequestPublickeyArgs{...}
type GitopsGnupgRequestPublickeyInput interface {
	pulumi.Input

	ToGitopsGnupgRequestPublickeyOutput() GitopsGnupgRequestPublickeyOutput
	ToGitopsGnupgRequestPublickeyOutputWithContext(context.Context) GitopsGnupgRequestPublickeyOutput
}

type GitopsGnupgRequestPublickeyArgs struct {
	Fingerprint pulumi.StringPtrInput `pulumi:"fingerprint"`
	KeyData     pulumi.StringInput    `pulumi:"keyData"`
	KeyId       pulumi.StringPtrInput `pulumi:"keyId"`
	Owner       pulumi.StringPtrInput `pulumi:"owner"`
	SubType     pulumi.StringPtrInput `pulumi:"subType"`
	Trust       pulumi.StringPtrInput `pulumi:"trust"`
}

func (GitopsGnupgRequestPublickeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsGnupgRequestPublickey)(nil)).Elem()
}

func (i GitopsGnupgRequestPublickeyArgs) ToGitopsGnupgRequestPublickeyOutput() GitopsGnupgRequestPublickeyOutput {
	return i.ToGitopsGnupgRequestPublickeyOutputWithContext(context.Background())
}

func (i GitopsGnupgRequestPublickeyArgs) ToGitopsGnupgRequestPublickeyOutputWithContext(ctx context.Context) GitopsGnupgRequestPublickeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgRequestPublickeyOutput)
}

// GitopsGnupgRequestPublickeyArrayInput is an input type that accepts GitopsGnupgRequestPublickeyArray and GitopsGnupgRequestPublickeyArrayOutput values.
// You can construct a concrete instance of `GitopsGnupgRequestPublickeyArrayInput` via:
//
//	GitopsGnupgRequestPublickeyArray{ GitopsGnupgRequestPublickeyArgs{...} }
type GitopsGnupgRequestPublickeyArrayInput interface {
	pulumi.Input

	ToGitopsGnupgRequestPublickeyArrayOutput() GitopsGnupgRequestPublickeyArrayOutput
	ToGitopsGnupgRequestPublickeyArrayOutputWithContext(context.Context) GitopsGnupgRequestPublickeyArrayOutput
}

type GitopsGnupgRequestPublickeyArray []GitopsGnupgRequestPublickeyInput

func (GitopsGnupgRequestPublickeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsGnupgRequestPublickey)(nil)).Elem()
}

func (i GitopsGnupgRequestPublickeyArray) ToGitopsGnupgRequestPublickeyArrayOutput() GitopsGnupgRequestPublickeyArrayOutput {
	return i.ToGitopsGnupgRequestPublickeyArrayOutputWithContext(context.Background())
}

func (i GitopsGnupgRequestPublickeyArray) ToGitopsGnupgRequestPublickeyArrayOutputWithContext(ctx context.Context) GitopsGnupgRequestPublickeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsGnupgRequestPublickeyArrayOutput)
}

type GitopsGnupgRequestPublickeyOutput struct{ *pulumi.OutputState }

func (GitopsGnupgRequestPublickeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsGnupgRequestPublickey)(nil)).Elem()
}

func (o GitopsGnupgRequestPublickeyOutput) ToGitopsGnupgRequestPublickeyOutput() GitopsGnupgRequestPublickeyOutput {
	return o
}

func (o GitopsGnupgRequestPublickeyOutput) ToGitopsGnupgRequestPublickeyOutputWithContext(ctx context.Context) GitopsGnupgRequestPublickeyOutput {
	return o
}

func (o GitopsGnupgRequestPublickeyOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsGnupgRequestPublickey) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

func (o GitopsGnupgRequestPublickeyOutput) KeyData() pulumi.StringOutput {
	return o.ApplyT(func(v GitopsGnupgRequestPublickey) string { return v.KeyData }).(pulumi.StringOutput)
}

func (o GitopsGnupgRequestPublickeyOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsGnupgRequestPublickey) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

func (o GitopsGnupgRequestPublickeyOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsGnupgRequestPublickey) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o GitopsGnupgRequestPublickeyOutput) SubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsGnupgRequestPublickey) *string { return v.SubType }).(pulumi.StringPtrOutput)
}

func (o GitopsGnupgRequestPublickeyOutput) Trust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsGnupgRequestPublickey) *string { return v.Trust }).(pulumi.StringPtrOutput)
}

type GitopsGnupgRequestPublickeyArrayOutput struct{ *pulumi.OutputState }

func (GitopsGnupgRequestPublickeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsGnupgRequestPublickey)(nil)).Elem()
}

func (o GitopsGnupgRequestPublickeyArrayOutput) ToGitopsGnupgRequestPublickeyArrayOutput() GitopsGnupgRequestPublickeyArrayOutput {
	return o
}

func (o GitopsGnupgRequestPublickeyArrayOutput) ToGitopsGnupgRequestPublickeyArrayOutputWithContext(ctx context.Context) GitopsGnupgRequestPublickeyArrayOutput {
	return o
}

func (o GitopsGnupgRequestPublickeyArrayOutput) Index(i pulumi.IntInput) GitopsGnupgRequestPublickeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsGnupgRequestPublickey {
		return vs[0].([]GitopsGnupgRequestPublickey)[vs[1].(int)]
	}).(GitopsGnupgRequestPublickeyOutput)
}

type GitopsRepoCertRequest struct {
	// certificates details.
	Certificates []GitopsRepoCertRequestCertificate `pulumi:"certificates"`
	// if the Repository Certificates should be upserted.
	Upsert *bool `pulumi:"upsert"`
}

// GitopsRepoCertRequestInput is an input type that accepts GitopsRepoCertRequestArgs and GitopsRepoCertRequestOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestInput` via:
//
//	GitopsRepoCertRequestArgs{...}
type GitopsRepoCertRequestInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestOutput() GitopsRepoCertRequestOutput
	ToGitopsRepoCertRequestOutputWithContext(context.Context) GitopsRepoCertRequestOutput
}

type GitopsRepoCertRequestArgs struct {
	// certificates details.
	Certificates GitopsRepoCertRequestCertificateArrayInput `pulumi:"certificates"`
	// if the Repository Certificates should be upserted.
	Upsert pulumi.BoolPtrInput `pulumi:"upsert"`
}

func (GitopsRepoCertRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequest)(nil)).Elem()
}

func (i GitopsRepoCertRequestArgs) ToGitopsRepoCertRequestOutput() GitopsRepoCertRequestOutput {
	return i.ToGitopsRepoCertRequestOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestArgs) ToGitopsRepoCertRequestOutputWithContext(ctx context.Context) GitopsRepoCertRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestOutput)
}

// GitopsRepoCertRequestArrayInput is an input type that accepts GitopsRepoCertRequestArray and GitopsRepoCertRequestArrayOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestArrayInput` via:
//
//	GitopsRepoCertRequestArray{ GitopsRepoCertRequestArgs{...} }
type GitopsRepoCertRequestArrayInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestArrayOutput() GitopsRepoCertRequestArrayOutput
	ToGitopsRepoCertRequestArrayOutputWithContext(context.Context) GitopsRepoCertRequestArrayOutput
}

type GitopsRepoCertRequestArray []GitopsRepoCertRequestInput

func (GitopsRepoCertRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequest)(nil)).Elem()
}

func (i GitopsRepoCertRequestArray) ToGitopsRepoCertRequestArrayOutput() GitopsRepoCertRequestArrayOutput {
	return i.ToGitopsRepoCertRequestArrayOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestArray) ToGitopsRepoCertRequestArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestArrayOutput)
}

type GitopsRepoCertRequestOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequest)(nil)).Elem()
}

func (o GitopsRepoCertRequestOutput) ToGitopsRepoCertRequestOutput() GitopsRepoCertRequestOutput {
	return o
}

func (o GitopsRepoCertRequestOutput) ToGitopsRepoCertRequestOutputWithContext(ctx context.Context) GitopsRepoCertRequestOutput {
	return o
}

// certificates details.
func (o GitopsRepoCertRequestOutput) Certificates() GitopsRepoCertRequestCertificateArrayOutput {
	return o.ApplyT(func(v GitopsRepoCertRequest) []GitopsRepoCertRequestCertificate { return v.Certificates }).(GitopsRepoCertRequestCertificateArrayOutput)
}

// if the Repository Certificates should be upserted.
func (o GitopsRepoCertRequestOutput) Upsert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequest) *bool { return v.Upsert }).(pulumi.BoolPtrOutput)
}

type GitopsRepoCertRequestArrayOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequest)(nil)).Elem()
}

func (o GitopsRepoCertRequestArrayOutput) ToGitopsRepoCertRequestArrayOutput() GitopsRepoCertRequestArrayOutput {
	return o
}

func (o GitopsRepoCertRequestArrayOutput) ToGitopsRepoCertRequestArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestArrayOutput {
	return o
}

func (o GitopsRepoCertRequestArrayOutput) Index(i pulumi.IntInput) GitopsRepoCertRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsRepoCertRequest {
		return vs[0].([]GitopsRepoCertRequest)[vs[1].(int)]
	}).(GitopsRepoCertRequestOutput)
}

type GitopsRepoCertRequestCertificate struct {
	Items     []GitopsRepoCertRequestCertificateItem     `pulumi:"items"`
	Metadatas []GitopsRepoCertRequestCertificateMetadata `pulumi:"metadatas"`
}

// GitopsRepoCertRequestCertificateInput is an input type that accepts GitopsRepoCertRequestCertificateArgs and GitopsRepoCertRequestCertificateOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestCertificateInput` via:
//
//	GitopsRepoCertRequestCertificateArgs{...}
type GitopsRepoCertRequestCertificateInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestCertificateOutput() GitopsRepoCertRequestCertificateOutput
	ToGitopsRepoCertRequestCertificateOutputWithContext(context.Context) GitopsRepoCertRequestCertificateOutput
}

type GitopsRepoCertRequestCertificateArgs struct {
	Items     GitopsRepoCertRequestCertificateItemArrayInput     `pulumi:"items"`
	Metadatas GitopsRepoCertRequestCertificateMetadataArrayInput `pulumi:"metadatas"`
}

func (GitopsRepoCertRequestCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequestCertificate)(nil)).Elem()
}

func (i GitopsRepoCertRequestCertificateArgs) ToGitopsRepoCertRequestCertificateOutput() GitopsRepoCertRequestCertificateOutput {
	return i.ToGitopsRepoCertRequestCertificateOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestCertificateArgs) ToGitopsRepoCertRequestCertificateOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestCertificateOutput)
}

// GitopsRepoCertRequestCertificateArrayInput is an input type that accepts GitopsRepoCertRequestCertificateArray and GitopsRepoCertRequestCertificateArrayOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestCertificateArrayInput` via:
//
//	GitopsRepoCertRequestCertificateArray{ GitopsRepoCertRequestCertificateArgs{...} }
type GitopsRepoCertRequestCertificateArrayInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestCertificateArrayOutput() GitopsRepoCertRequestCertificateArrayOutput
	ToGitopsRepoCertRequestCertificateArrayOutputWithContext(context.Context) GitopsRepoCertRequestCertificateArrayOutput
}

type GitopsRepoCertRequestCertificateArray []GitopsRepoCertRequestCertificateInput

func (GitopsRepoCertRequestCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequestCertificate)(nil)).Elem()
}

func (i GitopsRepoCertRequestCertificateArray) ToGitopsRepoCertRequestCertificateArrayOutput() GitopsRepoCertRequestCertificateArrayOutput {
	return i.ToGitopsRepoCertRequestCertificateArrayOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestCertificateArray) ToGitopsRepoCertRequestCertificateArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestCertificateArrayOutput)
}

type GitopsRepoCertRequestCertificateOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequestCertificate)(nil)).Elem()
}

func (o GitopsRepoCertRequestCertificateOutput) ToGitopsRepoCertRequestCertificateOutput() GitopsRepoCertRequestCertificateOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateOutput) ToGitopsRepoCertRequestCertificateOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateOutput) Items() GitopsRepoCertRequestCertificateItemArrayOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificate) []GitopsRepoCertRequestCertificateItem { return v.Items }).(GitopsRepoCertRequestCertificateItemArrayOutput)
}

func (o GitopsRepoCertRequestCertificateOutput) Metadatas() GitopsRepoCertRequestCertificateMetadataArrayOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificate) []GitopsRepoCertRequestCertificateMetadata {
		return v.Metadatas
	}).(GitopsRepoCertRequestCertificateMetadataArrayOutput)
}

type GitopsRepoCertRequestCertificateArrayOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequestCertificate)(nil)).Elem()
}

func (o GitopsRepoCertRequestCertificateArrayOutput) ToGitopsRepoCertRequestCertificateArrayOutput() GitopsRepoCertRequestCertificateArrayOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateArrayOutput) ToGitopsRepoCertRequestCertificateArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateArrayOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateArrayOutput) Index(i pulumi.IntInput) GitopsRepoCertRequestCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsRepoCertRequestCertificate {
		return vs[0].([]GitopsRepoCertRequestCertificate)[vs[1].(int)]
	}).(GitopsRepoCertRequestCertificateOutput)
}

type GitopsRepoCertRequestCertificateItem struct {
	CertData    *string `pulumi:"certData"`
	CertInfo    *string `pulumi:"certInfo"`
	CertSubType *string `pulumi:"certSubType"`
	CertType    *string `pulumi:"certType"`
	ServerName  *string `pulumi:"serverName"`
}

// GitopsRepoCertRequestCertificateItemInput is an input type that accepts GitopsRepoCertRequestCertificateItemArgs and GitopsRepoCertRequestCertificateItemOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestCertificateItemInput` via:
//
//	GitopsRepoCertRequestCertificateItemArgs{...}
type GitopsRepoCertRequestCertificateItemInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestCertificateItemOutput() GitopsRepoCertRequestCertificateItemOutput
	ToGitopsRepoCertRequestCertificateItemOutputWithContext(context.Context) GitopsRepoCertRequestCertificateItemOutput
}

type GitopsRepoCertRequestCertificateItemArgs struct {
	CertData    pulumi.StringPtrInput `pulumi:"certData"`
	CertInfo    pulumi.StringPtrInput `pulumi:"certInfo"`
	CertSubType pulumi.StringPtrInput `pulumi:"certSubType"`
	CertType    pulumi.StringPtrInput `pulumi:"certType"`
	ServerName  pulumi.StringPtrInput `pulumi:"serverName"`
}

func (GitopsRepoCertRequestCertificateItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequestCertificateItem)(nil)).Elem()
}

func (i GitopsRepoCertRequestCertificateItemArgs) ToGitopsRepoCertRequestCertificateItemOutput() GitopsRepoCertRequestCertificateItemOutput {
	return i.ToGitopsRepoCertRequestCertificateItemOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestCertificateItemArgs) ToGitopsRepoCertRequestCertificateItemOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestCertificateItemOutput)
}

// GitopsRepoCertRequestCertificateItemArrayInput is an input type that accepts GitopsRepoCertRequestCertificateItemArray and GitopsRepoCertRequestCertificateItemArrayOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestCertificateItemArrayInput` via:
//
//	GitopsRepoCertRequestCertificateItemArray{ GitopsRepoCertRequestCertificateItemArgs{...} }
type GitopsRepoCertRequestCertificateItemArrayInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestCertificateItemArrayOutput() GitopsRepoCertRequestCertificateItemArrayOutput
	ToGitopsRepoCertRequestCertificateItemArrayOutputWithContext(context.Context) GitopsRepoCertRequestCertificateItemArrayOutput
}

type GitopsRepoCertRequestCertificateItemArray []GitopsRepoCertRequestCertificateItemInput

func (GitopsRepoCertRequestCertificateItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequestCertificateItem)(nil)).Elem()
}

func (i GitopsRepoCertRequestCertificateItemArray) ToGitopsRepoCertRequestCertificateItemArrayOutput() GitopsRepoCertRequestCertificateItemArrayOutput {
	return i.ToGitopsRepoCertRequestCertificateItemArrayOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestCertificateItemArray) ToGitopsRepoCertRequestCertificateItemArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestCertificateItemArrayOutput)
}

type GitopsRepoCertRequestCertificateItemOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestCertificateItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequestCertificateItem)(nil)).Elem()
}

func (o GitopsRepoCertRequestCertificateItemOutput) ToGitopsRepoCertRequestCertificateItemOutput() GitopsRepoCertRequestCertificateItemOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateItemOutput) ToGitopsRepoCertRequestCertificateItemOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateItemOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateItemOutput) CertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateItem) *string { return v.CertData }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateItemOutput) CertInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateItem) *string { return v.CertInfo }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateItemOutput) CertSubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateItem) *string { return v.CertSubType }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateItemOutput) CertType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateItem) *string { return v.CertType }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateItemOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateItem) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type GitopsRepoCertRequestCertificateItemArrayOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestCertificateItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequestCertificateItem)(nil)).Elem()
}

func (o GitopsRepoCertRequestCertificateItemArrayOutput) ToGitopsRepoCertRequestCertificateItemArrayOutput() GitopsRepoCertRequestCertificateItemArrayOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateItemArrayOutput) ToGitopsRepoCertRequestCertificateItemArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateItemArrayOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateItemArrayOutput) Index(i pulumi.IntInput) GitopsRepoCertRequestCertificateItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsRepoCertRequestCertificateItem {
		return vs[0].([]GitopsRepoCertRequestCertificateItem)[vs[1].(int)]
	}).(GitopsRepoCertRequestCertificateItemOutput)
}

type GitopsRepoCertRequestCertificateMetadata struct {
	Continue           *string `pulumi:"continue"`
	RemainingItemCount *string `pulumi:"remainingItemCount"`
	ResourceVersion    *string `pulumi:"resourceVersion"`
	SelfLink           *string `pulumi:"selfLink"`
}

// GitopsRepoCertRequestCertificateMetadataInput is an input type that accepts GitopsRepoCertRequestCertificateMetadataArgs and GitopsRepoCertRequestCertificateMetadataOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestCertificateMetadataInput` via:
//
//	GitopsRepoCertRequestCertificateMetadataArgs{...}
type GitopsRepoCertRequestCertificateMetadataInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestCertificateMetadataOutput() GitopsRepoCertRequestCertificateMetadataOutput
	ToGitopsRepoCertRequestCertificateMetadataOutputWithContext(context.Context) GitopsRepoCertRequestCertificateMetadataOutput
}

type GitopsRepoCertRequestCertificateMetadataArgs struct {
	Continue           pulumi.StringPtrInput `pulumi:"continue"`
	RemainingItemCount pulumi.StringPtrInput `pulumi:"remainingItemCount"`
	ResourceVersion    pulumi.StringPtrInput `pulumi:"resourceVersion"`
	SelfLink           pulumi.StringPtrInput `pulumi:"selfLink"`
}

func (GitopsRepoCertRequestCertificateMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequestCertificateMetadata)(nil)).Elem()
}

func (i GitopsRepoCertRequestCertificateMetadataArgs) ToGitopsRepoCertRequestCertificateMetadataOutput() GitopsRepoCertRequestCertificateMetadataOutput {
	return i.ToGitopsRepoCertRequestCertificateMetadataOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestCertificateMetadataArgs) ToGitopsRepoCertRequestCertificateMetadataOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestCertificateMetadataOutput)
}

// GitopsRepoCertRequestCertificateMetadataArrayInput is an input type that accepts GitopsRepoCertRequestCertificateMetadataArray and GitopsRepoCertRequestCertificateMetadataArrayOutput values.
// You can construct a concrete instance of `GitopsRepoCertRequestCertificateMetadataArrayInput` via:
//
//	GitopsRepoCertRequestCertificateMetadataArray{ GitopsRepoCertRequestCertificateMetadataArgs{...} }
type GitopsRepoCertRequestCertificateMetadataArrayInput interface {
	pulumi.Input

	ToGitopsRepoCertRequestCertificateMetadataArrayOutput() GitopsRepoCertRequestCertificateMetadataArrayOutput
	ToGitopsRepoCertRequestCertificateMetadataArrayOutputWithContext(context.Context) GitopsRepoCertRequestCertificateMetadataArrayOutput
}

type GitopsRepoCertRequestCertificateMetadataArray []GitopsRepoCertRequestCertificateMetadataInput

func (GitopsRepoCertRequestCertificateMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequestCertificateMetadata)(nil)).Elem()
}

func (i GitopsRepoCertRequestCertificateMetadataArray) ToGitopsRepoCertRequestCertificateMetadataArrayOutput() GitopsRepoCertRequestCertificateMetadataArrayOutput {
	return i.ToGitopsRepoCertRequestCertificateMetadataArrayOutputWithContext(context.Background())
}

func (i GitopsRepoCertRequestCertificateMetadataArray) ToGitopsRepoCertRequestCertificateMetadataArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCertRequestCertificateMetadataArrayOutput)
}

type GitopsRepoCertRequestCertificateMetadataOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestCertificateMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCertRequestCertificateMetadata)(nil)).Elem()
}

func (o GitopsRepoCertRequestCertificateMetadataOutput) ToGitopsRepoCertRequestCertificateMetadataOutput() GitopsRepoCertRequestCertificateMetadataOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateMetadataOutput) ToGitopsRepoCertRequestCertificateMetadataOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateMetadataOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateMetadataOutput) Continue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateMetadata) *string { return v.Continue }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateMetadataOutput) RemainingItemCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateMetadata) *string { return v.RemainingItemCount }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateMetadataOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateMetadata) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

func (o GitopsRepoCertRequestCertificateMetadataOutput) SelfLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCertRequestCertificateMetadata) *string { return v.SelfLink }).(pulumi.StringPtrOutput)
}

type GitopsRepoCertRequestCertificateMetadataArrayOutput struct{ *pulumi.OutputState }

func (GitopsRepoCertRequestCertificateMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCertRequestCertificateMetadata)(nil)).Elem()
}

func (o GitopsRepoCertRequestCertificateMetadataArrayOutput) ToGitopsRepoCertRequestCertificateMetadataArrayOutput() GitopsRepoCertRequestCertificateMetadataArrayOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateMetadataArrayOutput) ToGitopsRepoCertRequestCertificateMetadataArrayOutputWithContext(ctx context.Context) GitopsRepoCertRequestCertificateMetadataArrayOutput {
	return o
}

func (o GitopsRepoCertRequestCertificateMetadataArrayOutput) Index(i pulumi.IntInput) GitopsRepoCertRequestCertificateMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsRepoCertRequestCertificateMetadata {
		return vs[0].([]GitopsRepoCertRequestCertificateMetadata)[vs[1].(int)]
	}).(GitopsRepoCertRequestCertificateMetadataOutput)
}

type GitopsRepoCredCred struct {
	// Specifies whether helm-oci support should be enabled for this repo.
	EnableOci *bool `pulumi:"enableOci"`
	// Specifies the GitHub API URL for GitHub app authentication.
	GithubAppEnterpriseBaseUrl *string `pulumi:"githubAppEnterpriseBaseUrl"`
	// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
	GithubAppId *string `pulumi:"githubAppId"`
	// Specifies the ID of the installed GitHub App for GitHub app authentication.
	GithubAppInstallationId *string `pulumi:"githubAppInstallationId"`
	// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
	GithubAppPrivateKey *string `pulumi:"githubAppPrivateKey"`
	// Password for authenticating at the repo server.
	Password *string `pulumi:"password"`
	// Contains the private key data for authenticating at the repo server using SSH (only Git repos).
	SshPrivateKey *string `pulumi:"sshPrivateKey"`
	// Specifies the TLS client cert data for authenticating at the repo server.
	TlsClientCertData *string `pulumi:"tlsClientCertData"`
	// Specifies the TLS client cert key for authenticating at the repo server.
	TlsClientCertKey *string `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
	Type *string `pulumi:"type"`
	// url representing this object.
	Url *string `pulumi:"url"`
	// Username for authenticating at the repo server.
	Username *string `pulumi:"username"`
}

// GitopsRepoCredCredInput is an input type that accepts GitopsRepoCredCredArgs and GitopsRepoCredCredOutput values.
// You can construct a concrete instance of `GitopsRepoCredCredInput` via:
//
//	GitopsRepoCredCredArgs{...}
type GitopsRepoCredCredInput interface {
	pulumi.Input

	ToGitopsRepoCredCredOutput() GitopsRepoCredCredOutput
	ToGitopsRepoCredCredOutputWithContext(context.Context) GitopsRepoCredCredOutput
}

type GitopsRepoCredCredArgs struct {
	// Specifies whether helm-oci support should be enabled for this repo.
	EnableOci pulumi.BoolPtrInput `pulumi:"enableOci"`
	// Specifies the GitHub API URL for GitHub app authentication.
	GithubAppEnterpriseBaseUrl pulumi.StringPtrInput `pulumi:"githubAppEnterpriseBaseUrl"`
	// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
	GithubAppId pulumi.StringPtrInput `pulumi:"githubAppId"`
	// Specifies the ID of the installed GitHub App for GitHub app authentication.
	GithubAppInstallationId pulumi.StringPtrInput `pulumi:"githubAppInstallationId"`
	// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
	GithubAppPrivateKey pulumi.StringPtrInput `pulumi:"githubAppPrivateKey"`
	// Password for authenticating at the repo server.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Contains the private key data for authenticating at the repo server using SSH (only Git repos).
	SshPrivateKey pulumi.StringPtrInput `pulumi:"sshPrivateKey"`
	// Specifies the TLS client cert data for authenticating at the repo server.
	TlsClientCertData pulumi.StringPtrInput `pulumi:"tlsClientCertData"`
	// Specifies the TLS client cert key for authenticating at the repo server.
	TlsClientCertKey pulumi.StringPtrInput `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
	Type pulumi.StringPtrInput `pulumi:"type"`
	// url representing this object.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username for authenticating at the repo server.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GitopsRepoCredCredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCredCred)(nil)).Elem()
}

func (i GitopsRepoCredCredArgs) ToGitopsRepoCredCredOutput() GitopsRepoCredCredOutput {
	return i.ToGitopsRepoCredCredOutputWithContext(context.Background())
}

func (i GitopsRepoCredCredArgs) ToGitopsRepoCredCredOutputWithContext(ctx context.Context) GitopsRepoCredCredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCredCredOutput)
}

// GitopsRepoCredCredArrayInput is an input type that accepts GitopsRepoCredCredArray and GitopsRepoCredCredArrayOutput values.
// You can construct a concrete instance of `GitopsRepoCredCredArrayInput` via:
//
//	GitopsRepoCredCredArray{ GitopsRepoCredCredArgs{...} }
type GitopsRepoCredCredArrayInput interface {
	pulumi.Input

	ToGitopsRepoCredCredArrayOutput() GitopsRepoCredCredArrayOutput
	ToGitopsRepoCredCredArrayOutputWithContext(context.Context) GitopsRepoCredCredArrayOutput
}

type GitopsRepoCredCredArray []GitopsRepoCredCredInput

func (GitopsRepoCredCredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCredCred)(nil)).Elem()
}

func (i GitopsRepoCredCredArray) ToGitopsRepoCredCredArrayOutput() GitopsRepoCredCredArrayOutput {
	return i.ToGitopsRepoCredCredArrayOutputWithContext(context.Background())
}

func (i GitopsRepoCredCredArray) ToGitopsRepoCredCredArrayOutputWithContext(ctx context.Context) GitopsRepoCredCredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitopsRepoCredCredArrayOutput)
}

type GitopsRepoCredCredOutput struct{ *pulumi.OutputState }

func (GitopsRepoCredCredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitopsRepoCredCred)(nil)).Elem()
}

func (o GitopsRepoCredCredOutput) ToGitopsRepoCredCredOutput() GitopsRepoCredCredOutput {
	return o
}

func (o GitopsRepoCredCredOutput) ToGitopsRepoCredCredOutputWithContext(ctx context.Context) GitopsRepoCredCredOutput {
	return o
}

// Specifies whether helm-oci support should be enabled for this repo.
func (o GitopsRepoCredCredOutput) EnableOci() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *bool { return v.EnableOci }).(pulumi.BoolPtrOutput)
}

// Specifies the GitHub API URL for GitHub app authentication.
func (o GitopsRepoCredCredOutput) GithubAppEnterpriseBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.GithubAppEnterpriseBaseUrl }).(pulumi.StringPtrOutput)
}

// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
func (o GitopsRepoCredCredOutput) GithubAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.GithubAppId }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the installed GitHub App for GitHub app authentication.
func (o GitopsRepoCredCredOutput) GithubAppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.GithubAppInstallationId }).(pulumi.StringPtrOutput)
}

// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
func (o GitopsRepoCredCredOutput) GithubAppPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.GithubAppPrivateKey }).(pulumi.StringPtrOutput)
}

// Password for authenticating at the repo server.
func (o GitopsRepoCredCredOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Contains the private key data for authenticating at the repo server using SSH (only Git repos).
func (o GitopsRepoCredCredOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.SshPrivateKey }).(pulumi.StringPtrOutput)
}

// Specifies the TLS client cert data for authenticating at the repo server.
func (o GitopsRepoCredCredOutput) TlsClientCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.TlsClientCertData }).(pulumi.StringPtrOutput)
}

// Specifies the TLS client cert key for authenticating at the repo server.
func (o GitopsRepoCredCredOutput) TlsClientCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.TlsClientCertKey }).(pulumi.StringPtrOutput)
}

// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
func (o GitopsRepoCredCredOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// url representing this object.
func (o GitopsRepoCredCredOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username for authenticating at the repo server.
func (o GitopsRepoCredCredOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitopsRepoCredCred) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GitopsRepoCredCredArrayOutput struct{ *pulumi.OutputState }

func (GitopsRepoCredCredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GitopsRepoCredCred)(nil)).Elem()
}

func (o GitopsRepoCredCredArrayOutput) ToGitopsRepoCredCredArrayOutput() GitopsRepoCredCredArrayOutput {
	return o
}

func (o GitopsRepoCredCredArrayOutput) ToGitopsRepoCredCredArrayOutputWithContext(ctx context.Context) GitopsRepoCredCredArrayOutput {
	return o
}

func (o GitopsRepoCredCredArrayOutput) Index(i pulumi.IntInput) GitopsRepoCredCredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GitopsRepoCredCred {
		return vs[0].([]GitopsRepoCredCred)[vs[1].(int)]
	}).(GitopsRepoCredCredOutput)
}

type HelmConnectorCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// HelmConnectorCredentialsInput is an input type that accepts HelmConnectorCredentialsArgs and HelmConnectorCredentialsOutput values.
// You can construct a concrete instance of `HelmConnectorCredentialsInput` via:
//
//	HelmConnectorCredentialsArgs{...}
type HelmConnectorCredentialsInput interface {
	pulumi.Input

	ToHelmConnectorCredentialsOutput() HelmConnectorCredentialsOutput
	ToHelmConnectorCredentialsOutputWithContext(context.Context) HelmConnectorCredentialsOutput
}

type HelmConnectorCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (HelmConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmConnectorCredentials)(nil)).Elem()
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsOutput() HelmConnectorCredentialsOutput {
	return i.ToHelmConnectorCredentialsOutputWithContext(context.Background())
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsOutputWithContext(ctx context.Context) HelmConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmConnectorCredentialsOutput)
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return i.ToHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i HelmConnectorCredentialsArgs) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmConnectorCredentialsOutput).ToHelmConnectorCredentialsPtrOutputWithContext(ctx)
}

// HelmConnectorCredentialsPtrInput is an input type that accepts HelmConnectorCredentialsArgs, HelmConnectorCredentialsPtr and HelmConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `HelmConnectorCredentialsPtrInput` via:
//
//	        HelmConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type HelmConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput
	ToHelmConnectorCredentialsPtrOutputWithContext(context.Context) HelmConnectorCredentialsPtrOutput
}

type helmConnectorCredentialsPtrType HelmConnectorCredentialsArgs

func HelmConnectorCredentialsPtr(v *HelmConnectorCredentialsArgs) HelmConnectorCredentialsPtrInput {
	return (*helmConnectorCredentialsPtrType)(v)
}

func (*helmConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmConnectorCredentials)(nil)).Elem()
}

func (i *helmConnectorCredentialsPtrType) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return i.ToHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *helmConnectorCredentialsPtrType) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HelmConnectorCredentialsPtrOutput)
}

type HelmConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (HelmConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HelmConnectorCredentials)(nil)).Elem()
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsOutput() HelmConnectorCredentialsOutput {
	return o
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsOutputWithContext(ctx context.Context) HelmConnectorCredentialsOutput {
	return o
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return o.ToHelmConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o HelmConnectorCredentialsOutput) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HelmConnectorCredentials) *HelmConnectorCredentials {
		return &v
	}).(HelmConnectorCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v HelmConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o HelmConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HelmConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type HelmConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (HelmConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HelmConnectorCredentials)(nil)).Elem()
}

func (o HelmConnectorCredentialsPtrOutput) ToHelmConnectorCredentialsPtrOutput() HelmConnectorCredentialsPtrOutput {
	return o
}

func (o HelmConnectorCredentialsPtrOutput) ToHelmConnectorCredentialsPtrOutputWithContext(ctx context.Context) HelmConnectorCredentialsPtrOutput {
	return o
}

func (o HelmConnectorCredentialsPtrOutput) Elem() HelmConnectorCredentialsOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) HelmConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret HelmConnectorCredentials
		return ret
	}).(HelmConnectorCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o HelmConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o HelmConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HelmConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type InputSetGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ParentEntityConnectorRef *string `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName *string `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// InputSetGitDetailsInput is an input type that accepts InputSetGitDetailsArgs and InputSetGitDetailsOutput values.
// You can construct a concrete instance of `InputSetGitDetailsInput` via:
//
//	InputSetGitDetailsArgs{...}
type InputSetGitDetailsInput interface {
	pulumi.Input

	ToInputSetGitDetailsOutput() InputSetGitDetailsOutput
	ToInputSetGitDetailsOutputWithContext(context.Context) InputSetGitDetailsOutput
}

type InputSetGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ParentEntityConnectorRef pulumi.StringPtrInput `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName pulumi.StringPtrInput `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (InputSetGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetGitDetails)(nil)).Elem()
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsOutput() InputSetGitDetailsOutput {
	return i.ToInputSetGitDetailsOutputWithContext(context.Background())
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsOutputWithContext(ctx context.Context) InputSetGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitDetailsOutput)
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return i.ToInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i InputSetGitDetailsArgs) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitDetailsOutput).ToInputSetGitDetailsPtrOutputWithContext(ctx)
}

// InputSetGitDetailsPtrInput is an input type that accepts InputSetGitDetailsArgs, InputSetGitDetailsPtr and InputSetGitDetailsPtrOutput values.
// You can construct a concrete instance of `InputSetGitDetailsPtrInput` via:
//
//	        InputSetGitDetailsArgs{...}
//
//	or:
//
//	        nil
type InputSetGitDetailsPtrInput interface {
	pulumi.Input

	ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput
	ToInputSetGitDetailsPtrOutputWithContext(context.Context) InputSetGitDetailsPtrOutput
}

type inputSetGitDetailsPtrType InputSetGitDetailsArgs

func InputSetGitDetailsPtr(v *InputSetGitDetailsArgs) InputSetGitDetailsPtrInput {
	return (*inputSetGitDetailsPtrType)(v)
}

func (*inputSetGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetGitDetails)(nil)).Elem()
}

func (i *inputSetGitDetailsPtrType) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return i.ToInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i *inputSetGitDetailsPtrType) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InputSetGitDetailsPtrOutput)
}

type InputSetGitDetailsOutput struct{ *pulumi.OutputState }

func (InputSetGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InputSetGitDetails)(nil)).Elem()
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsOutput() InputSetGitDetailsOutput {
	return o
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsOutputWithContext(ctx context.Context) InputSetGitDetailsOutput {
	return o
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return o.ToInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (o InputSetGitDetailsOutput) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InputSetGitDetails) *InputSetGitDetails {
		return &v
	}).(InputSetGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o InputSetGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o InputSetGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o InputSetGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InputSetGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.ParentEntityConnectorRef }).(pulumi.StringPtrOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o InputSetGitDetailsOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.ParentEntityRepoName }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o InputSetGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o InputSetGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InputSetGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type InputSetGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (InputSetGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InputSetGitDetails)(nil)).Elem()
}

func (o InputSetGitDetailsPtrOutput) ToInputSetGitDetailsPtrOutput() InputSetGitDetailsPtrOutput {
	return o
}

func (o InputSetGitDetailsPtrOutput) ToInputSetGitDetailsPtrOutputWithContext(ctx context.Context) InputSetGitDetailsPtrOutput {
	return o
}

func (o InputSetGitDetailsPtrOutput) Elem() InputSetGitDetailsOutput {
	return o.ApplyT(func(v *InputSetGitDetails) InputSetGitDetails {
		if v != nil {
			return *v
		}
		var ret InputSetGitDetails
		return ret
	}).(InputSetGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o InputSetGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o InputSetGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o InputSetGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o InputSetGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o InputSetGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Connector reference for Parent Entity (Pipeline). To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o InputSetGitDetailsPtrOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ParentEntityConnectorRef
	}).(pulumi.StringPtrOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o InputSetGitDetailsPtrOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ParentEntityRepoName
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o InputSetGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o InputSetGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type JiraConnectorAuth struct {
	// Authentication types for Jira connector
	AuthType string `pulumi:"authType"`
	// Authenticate using username password.
	UsernamePassword *JiraConnectorAuthUsernamePassword `pulumi:"usernamePassword"`
}

// JiraConnectorAuthInput is an input type that accepts JiraConnectorAuthArgs and JiraConnectorAuthOutput values.
// You can construct a concrete instance of `JiraConnectorAuthInput` via:
//
//	JiraConnectorAuthArgs{...}
type JiraConnectorAuthInput interface {
	pulumi.Input

	ToJiraConnectorAuthOutput() JiraConnectorAuthOutput
	ToJiraConnectorAuthOutputWithContext(context.Context) JiraConnectorAuthOutput
}

type JiraConnectorAuthArgs struct {
	// Authentication types for Jira connector
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Authenticate using username password.
	UsernamePassword JiraConnectorAuthUsernamePasswordPtrInput `pulumi:"usernamePassword"`
}

func (JiraConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuth)(nil)).Elem()
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthOutput() JiraConnectorAuthOutput {
	return i.ToJiraConnectorAuthOutputWithContext(context.Background())
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthOutputWithContext(ctx context.Context) JiraConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthOutput)
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return i.ToJiraConnectorAuthPtrOutputWithContext(context.Background())
}

func (i JiraConnectorAuthArgs) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthOutput).ToJiraConnectorAuthPtrOutputWithContext(ctx)
}

// JiraConnectorAuthPtrInput is an input type that accepts JiraConnectorAuthArgs, JiraConnectorAuthPtr and JiraConnectorAuthPtrOutput values.
// You can construct a concrete instance of `JiraConnectorAuthPtrInput` via:
//
//	        JiraConnectorAuthArgs{...}
//
//	or:
//
//	        nil
type JiraConnectorAuthPtrInput interface {
	pulumi.Input

	ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput
	ToJiraConnectorAuthPtrOutputWithContext(context.Context) JiraConnectorAuthPtrOutput
}

type jiraConnectorAuthPtrType JiraConnectorAuthArgs

func JiraConnectorAuthPtr(v *JiraConnectorAuthArgs) JiraConnectorAuthPtrInput {
	return (*jiraConnectorAuthPtrType)(v)
}

func (*jiraConnectorAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuth)(nil)).Elem()
}

func (i *jiraConnectorAuthPtrType) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return i.ToJiraConnectorAuthPtrOutputWithContext(context.Background())
}

func (i *jiraConnectorAuthPtrType) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthPtrOutput)
}

type JiraConnectorAuthOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuth)(nil)).Elem()
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthOutput() JiraConnectorAuthOutput {
	return o
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthOutputWithContext(ctx context.Context) JiraConnectorAuthOutput {
	return o
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return o.ToJiraConnectorAuthPtrOutputWithContext(context.Background())
}

func (o JiraConnectorAuthOutput) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JiraConnectorAuth) *JiraConnectorAuth {
		return &v
	}).(JiraConnectorAuthPtrOutput)
}

// Authentication types for Jira connector
func (o JiraConnectorAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v JiraConnectorAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

// Authenticate using username password.
func (o JiraConnectorAuthOutput) UsernamePassword() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuth) *JiraConnectorAuthUsernamePassword { return v.UsernamePassword }).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

type JiraConnectorAuthPtrOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuth)(nil)).Elem()
}

func (o JiraConnectorAuthPtrOutput) ToJiraConnectorAuthPtrOutput() JiraConnectorAuthPtrOutput {
	return o
}

func (o JiraConnectorAuthPtrOutput) ToJiraConnectorAuthPtrOutputWithContext(ctx context.Context) JiraConnectorAuthPtrOutput {
	return o
}

func (o JiraConnectorAuthPtrOutput) Elem() JiraConnectorAuthOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) JiraConnectorAuth {
		if v != nil {
			return *v
		}
		var ret JiraConnectorAuth
		return ret
	}).(JiraConnectorAuthOutput)
}

// Authentication types for Jira connector
func (o JiraConnectorAuthPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Authenticate using username password.
func (o JiraConnectorAuthPtrOutput) UsernamePassword() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuth) *JiraConnectorAuthUsernamePassword {
		if v == nil {
			return nil
		}
		return v.UsernamePassword
	}).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

type JiraConnectorAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// JiraConnectorAuthUsernamePasswordInput is an input type that accepts JiraConnectorAuthUsernamePasswordArgs and JiraConnectorAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `JiraConnectorAuthUsernamePasswordInput` via:
//
//	JiraConnectorAuthUsernamePasswordArgs{...}
type JiraConnectorAuthUsernamePasswordInput interface {
	pulumi.Input

	ToJiraConnectorAuthUsernamePasswordOutput() JiraConnectorAuthUsernamePasswordOutput
	ToJiraConnectorAuthUsernamePasswordOutputWithContext(context.Context) JiraConnectorAuthUsernamePasswordOutput
}

type JiraConnectorAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (JiraConnectorAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordOutput() JiraConnectorAuthUsernamePasswordOutput {
	return i.ToJiraConnectorAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthUsernamePasswordOutput)
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return i.ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i JiraConnectorAuthUsernamePasswordArgs) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthUsernamePasswordOutput).ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx)
}

// JiraConnectorAuthUsernamePasswordPtrInput is an input type that accepts JiraConnectorAuthUsernamePasswordArgs, JiraConnectorAuthUsernamePasswordPtr and JiraConnectorAuthUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `JiraConnectorAuthUsernamePasswordPtrInput` via:
//
//	        JiraConnectorAuthUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type JiraConnectorAuthUsernamePasswordPtrInput interface {
	pulumi.Input

	ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput
	ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Context) JiraConnectorAuthUsernamePasswordPtrOutput
}

type jiraConnectorAuthUsernamePasswordPtrType JiraConnectorAuthUsernamePasswordArgs

func JiraConnectorAuthUsernamePasswordPtr(v *JiraConnectorAuthUsernamePasswordArgs) JiraConnectorAuthUsernamePasswordPtrInput {
	return (*jiraConnectorAuthUsernamePasswordPtrType)(v)
}

func (*jiraConnectorAuthUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i *jiraConnectorAuthUsernamePasswordPtrType) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return i.ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *jiraConnectorAuthUsernamePasswordPtrType) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

type JiraConnectorAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordOutput() JiraConnectorAuthUsernamePasswordOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o JiraConnectorAuthUsernamePasswordOutput) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JiraConnectorAuthUsernamePassword) *JiraConnectorAuthUsernamePassword {
		return &v
	}).(JiraConnectorAuthUsernamePasswordPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v JiraConnectorAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o JiraConnectorAuthUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuthUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JiraConnectorAuthUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type JiraConnectorAuthUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (JiraConnectorAuthUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o JiraConnectorAuthUsernamePasswordPtrOutput) ToJiraConnectorAuthUsernamePasswordPtrOutput() JiraConnectorAuthUsernamePasswordPtrOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordPtrOutput) ToJiraConnectorAuthUsernamePasswordPtrOutputWithContext(ctx context.Context) JiraConnectorAuthUsernamePasswordPtrOutput {
	return o
}

func (o JiraConnectorAuthUsernamePasswordPtrOutput) Elem() JiraConnectorAuthUsernamePasswordOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) JiraConnectorAuthUsernamePassword {
		if v != nil {
			return *v
		}
		var ret JiraConnectorAuthUsernamePassword
		return ret
	}).(JiraConnectorAuthUsernamePasswordOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o JiraConnectorAuthUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o JiraConnectorAuthUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JiraConnectorAuthUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorClientKeyCert struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef *string `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientCertRef string `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm string `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyPassphraseRef *string `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyRef string `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
}

// KubernetesConnectorClientKeyCertInput is an input type that accepts KubernetesConnectorClientKeyCertArgs and KubernetesConnectorClientKeyCertOutput values.
// You can construct a concrete instance of `KubernetesConnectorClientKeyCertInput` via:
//
//	KubernetesConnectorClientKeyCertArgs{...}
type KubernetesConnectorClientKeyCertInput interface {
	pulumi.Input

	ToKubernetesConnectorClientKeyCertOutput() KubernetesConnectorClientKeyCertOutput
	ToKubernetesConnectorClientKeyCertOutputWithContext(context.Context) KubernetesConnectorClientKeyCertOutput
}

type KubernetesConnectorClientKeyCertArgs struct {
	// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	CaCertRef pulumi.StringPtrInput `pulumi:"caCertRef"`
	// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientCertRef pulumi.StringInput `pulumi:"clientCertRef"`
	// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
	ClientKeyAlgorithm pulumi.StringInput `pulumi:"clientKeyAlgorithm"`
	// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyPassphraseRef pulumi.StringPtrInput `pulumi:"clientKeyPassphraseRef"`
	// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientKeyRef pulumi.StringInput `pulumi:"clientKeyRef"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
}

func (KubernetesConnectorClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertOutput() KubernetesConnectorClientKeyCertOutput {
	return i.ToKubernetesConnectorClientKeyCertOutputWithContext(context.Background())
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorClientKeyCertOutput)
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return i.ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorClientKeyCertArgs) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorClientKeyCertOutput).ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx)
}

// KubernetesConnectorClientKeyCertPtrInput is an input type that accepts KubernetesConnectorClientKeyCertArgs, KubernetesConnectorClientKeyCertPtr and KubernetesConnectorClientKeyCertPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorClientKeyCertPtrInput` via:
//
//	        KubernetesConnectorClientKeyCertArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorClientKeyCertPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput
	ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Context) KubernetesConnectorClientKeyCertPtrOutput
}

type kubernetesConnectorClientKeyCertPtrType KubernetesConnectorClientKeyCertArgs

func KubernetesConnectorClientKeyCertPtr(v *KubernetesConnectorClientKeyCertArgs) KubernetesConnectorClientKeyCertPtrInput {
	return (*kubernetesConnectorClientKeyCertPtrType)(v)
}

func (*kubernetesConnectorClientKeyCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i *kubernetesConnectorClientKeyCertPtrType) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return i.ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorClientKeyCertPtrType) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorClientKeyCertPtrOutput)
}

type KubernetesConnectorClientKeyCertOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertOutput() KubernetesConnectorClientKeyCertOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return o.ToKubernetesConnectorClientKeyCertPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorClientKeyCertOutput) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorClientKeyCert) *KubernetesConnectorClientKeyCert {
		return &v
	}).(KubernetesConnectorClientKeyCertPtrOutput)
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) *string { return v.CaCertRef }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) ClientCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.ClientCertRef }).(pulumi.StringOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o KubernetesConnectorClientKeyCertOutput) ClientKeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.ClientKeyAlgorithm }).(pulumi.StringOutput)
}

// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) ClientKeyPassphraseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) *string { return v.ClientKeyPassphraseRef }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertOutput) ClientKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.ClientKeyRef }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorClientKeyCertOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorClientKeyCert) string { return v.MasterUrl }).(pulumi.StringOutput)
}

type KubernetesConnectorClientKeyCertPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorClientKeyCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o KubernetesConnectorClientKeyCertPtrOutput) ToKubernetesConnectorClientKeyCertPtrOutput() KubernetesConnectorClientKeyCertPtrOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertPtrOutput) ToKubernetesConnectorClientKeyCertPtrOutputWithContext(ctx context.Context) KubernetesConnectorClientKeyCertPtrOutput {
	return o
}

func (o KubernetesConnectorClientKeyCertPtrOutput) Elem() KubernetesConnectorClientKeyCertOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) KubernetesConnectorClientKeyCert {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorClientKeyCert
		return ret
	}).(KubernetesConnectorClientKeyCertOutput)
}

// Reference to the secret containing the CA certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) CaCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.CaCertRef
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client certificate for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientCertRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientCertRef
	}).(pulumi.StringPtrOutput)
}

// The algorithm used to generate the client key for the connector. Valid values are RSA, EC
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientKeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKeyAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key passphrase for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientKeyPassphraseRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return v.ClientKeyPassphraseRef
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the client key for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorClientKeyCertPtrOutput) ClientKeyRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.ClientKeyRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorClientKeyCertPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorClientKeyCert) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorInheritFromDelegate struct {
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// KubernetesConnectorInheritFromDelegateInput is an input type that accepts KubernetesConnectorInheritFromDelegateArgs and KubernetesConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `KubernetesConnectorInheritFromDelegateInput` via:
//
//	KubernetesConnectorInheritFromDelegateArgs{...}
type KubernetesConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToKubernetesConnectorInheritFromDelegateOutput() KubernetesConnectorInheritFromDelegateOutput
	ToKubernetesConnectorInheritFromDelegateOutputWithContext(context.Context) KubernetesConnectorInheritFromDelegateOutput
}

type KubernetesConnectorInheritFromDelegateArgs struct {
	// Selectors to use for the delegate.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (KubernetesConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegateOutput() KubernetesConnectorInheritFromDelegateOutput {
	return i.ToKubernetesConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorInheritFromDelegateOutput)
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return i.ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorInheritFromDelegateArgs) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorInheritFromDelegateOutput).ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx)
}

// KubernetesConnectorInheritFromDelegatePtrInput is an input type that accepts KubernetesConnectorInheritFromDelegateArgs, KubernetesConnectorInheritFromDelegatePtr and KubernetesConnectorInheritFromDelegatePtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorInheritFromDelegatePtrInput` via:
//
//	        KubernetesConnectorInheritFromDelegateArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorInheritFromDelegatePtrInput interface {
	pulumi.Input

	ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput
	ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Context) KubernetesConnectorInheritFromDelegatePtrOutput
}

type kubernetesConnectorInheritFromDelegatePtrType KubernetesConnectorInheritFromDelegateArgs

func KubernetesConnectorInheritFromDelegatePtr(v *KubernetesConnectorInheritFromDelegateArgs) KubernetesConnectorInheritFromDelegatePtrInput {
	return (*kubernetesConnectorInheritFromDelegatePtrType)(v)
}

func (*kubernetesConnectorInheritFromDelegatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i *kubernetesConnectorInheritFromDelegatePtrType) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return i.ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorInheritFromDelegatePtrType) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorInheritFromDelegatePtrOutput)
}

type KubernetesConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegateOutput() KubernetesConnectorInheritFromDelegateOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegateOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return o.ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorInheritFromDelegateOutput) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorInheritFromDelegate) *KubernetesConnectorInheritFromDelegate {
		return &v
	}).(KubernetesConnectorInheritFromDelegatePtrOutput)
}

// Selectors to use for the delegate.
func (o KubernetesConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type KubernetesConnectorInheritFromDelegatePtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorInheritFromDelegatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o KubernetesConnectorInheritFromDelegatePtrOutput) ToKubernetesConnectorInheritFromDelegatePtrOutput() KubernetesConnectorInheritFromDelegatePtrOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegatePtrOutput) ToKubernetesConnectorInheritFromDelegatePtrOutputWithContext(ctx context.Context) KubernetesConnectorInheritFromDelegatePtrOutput {
	return o
}

func (o KubernetesConnectorInheritFromDelegatePtrOutput) Elem() KubernetesConnectorInheritFromDelegateOutput {
	return o.ApplyT(func(v *KubernetesConnectorInheritFromDelegate) KubernetesConnectorInheritFromDelegate {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorInheritFromDelegate
		return ret
	}).(KubernetesConnectorInheritFromDelegateOutput)
}

// Selectors to use for the delegate.
func (o KubernetesConnectorInheritFromDelegatePtrOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesConnectorInheritFromDelegate) []string {
		if v == nil {
			return nil
		}
		return v.DelegateSelectors
	}).(pulumi.StringArrayOutput)
}

type KubernetesConnectorOpenidConnect struct {
	// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef string `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl string `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes []string `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretRef *string `pulumi:"secretRef"`
	// Username for the connector.
	Username *string `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// KubernetesConnectorOpenidConnectInput is an input type that accepts KubernetesConnectorOpenidConnectArgs and KubernetesConnectorOpenidConnectOutput values.
// You can construct a concrete instance of `KubernetesConnectorOpenidConnectInput` via:
//
//	KubernetesConnectorOpenidConnectArgs{...}
type KubernetesConnectorOpenidConnectInput interface {
	pulumi.Input

	ToKubernetesConnectorOpenidConnectOutput() KubernetesConnectorOpenidConnectOutput
	ToKubernetesConnectorOpenidConnectOutputWithContext(context.Context) KubernetesConnectorOpenidConnectOutput
}

type KubernetesConnectorOpenidConnectArgs struct {
	// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ClientIdRef pulumi.StringInput `pulumi:"clientIdRef"`
	// The URL of the OpenID Connect issuer.
	IssuerUrl pulumi.StringInput `pulumi:"issuerUrl"`
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Scopes to request for the connector.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	SecretRef pulumi.StringPtrInput `pulumi:"secretRef"`
	// Username for the connector.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (KubernetesConnectorOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectOutput() KubernetesConnectorOpenidConnectOutput {
	return i.ToKubernetesConnectorOpenidConnectOutputWithContext(context.Background())
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorOpenidConnectOutput)
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return i.ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorOpenidConnectArgs) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorOpenidConnectOutput).ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx)
}

// KubernetesConnectorOpenidConnectPtrInput is an input type that accepts KubernetesConnectorOpenidConnectArgs, KubernetesConnectorOpenidConnectPtr and KubernetesConnectorOpenidConnectPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorOpenidConnectPtrInput` via:
//
//	        KubernetesConnectorOpenidConnectArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorOpenidConnectPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput
	ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Context) KubernetesConnectorOpenidConnectPtrOutput
}

type kubernetesConnectorOpenidConnectPtrType KubernetesConnectorOpenidConnectArgs

func KubernetesConnectorOpenidConnectPtr(v *KubernetesConnectorOpenidConnectArgs) KubernetesConnectorOpenidConnectPtrInput {
	return (*kubernetesConnectorOpenidConnectPtrType)(v)
}

func (*kubernetesConnectorOpenidConnectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i *kubernetesConnectorOpenidConnectPtrType) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return i.ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorOpenidConnectPtrType) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorOpenidConnectPtrOutput)
}

type KubernetesConnectorOpenidConnectOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectOutput() KubernetesConnectorOpenidConnectOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return o.ToKubernetesConnectorOpenidConnectPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorOpenidConnectOutput) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorOpenidConnect) *KubernetesConnectorOpenidConnect {
		return &v
	}).(KubernetesConnectorOpenidConnectPtrOutput)
}

// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

// The URL of the OpenID Connect issuer.
func (o KubernetesConnectorOpenidConnectOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorOpenidConnectOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Scopes to request for the connector.
func (o KubernetesConnectorOpenidConnectOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) *string { return v.SecretRef }).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesConnectorOpenidConnectOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorOpenidConnect) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type KubernetesConnectorOpenidConnectPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorOpenidConnectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o KubernetesConnectorOpenidConnectPtrOutput) ToKubernetesConnectorOpenidConnectPtrOutput() KubernetesConnectorOpenidConnectPtrOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectPtrOutput) ToKubernetesConnectorOpenidConnectPtrOutputWithContext(ctx context.Context) KubernetesConnectorOpenidConnectPtrOutput {
	return o
}

func (o KubernetesConnectorOpenidConnectPtrOutput) Elem() KubernetesConnectorOpenidConnectOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) KubernetesConnectorOpenidConnect {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorOpenidConnect
		return ret
	}).(KubernetesConnectorOpenidConnectOutput)
}

// Reference to the secret containing the client ID for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) ClientIdRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.ClientIdRef
	}).(pulumi.StringPtrOutput)
}

// The URL of the OpenID Connect issuer.
func (o KubernetesConnectorOpenidConnectPtrOutput) IssuerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.IssuerUrl
	}).(pulumi.StringPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorOpenidConnectPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Scopes to request for the connector.
func (o KubernetesConnectorOpenidConnectPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Reference to the secret containing the client secret for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) SecretRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesConnectorOpenidConnectPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorOpenidConnectPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorOpenidConnect) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorServiceAccount struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ServiceAccountTokenRef string `pulumi:"serviceAccountTokenRef"`
}

// KubernetesConnectorServiceAccountInput is an input type that accepts KubernetesConnectorServiceAccountArgs and KubernetesConnectorServiceAccountOutput values.
// You can construct a concrete instance of `KubernetesConnectorServiceAccountInput` via:
//
//	KubernetesConnectorServiceAccountArgs{...}
type KubernetesConnectorServiceAccountInput interface {
	pulumi.Input

	ToKubernetesConnectorServiceAccountOutput() KubernetesConnectorServiceAccountOutput
	ToKubernetesConnectorServiceAccountOutputWithContext(context.Context) KubernetesConnectorServiceAccountOutput
}

type KubernetesConnectorServiceAccountArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	ServiceAccountTokenRef pulumi.StringInput `pulumi:"serviceAccountTokenRef"`
}

func (KubernetesConnectorServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountOutput() KubernetesConnectorServiceAccountOutput {
	return i.ToKubernetesConnectorServiceAccountOutputWithContext(context.Background())
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorServiceAccountOutput)
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return i.ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorServiceAccountArgs) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorServiceAccountOutput).ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx)
}

// KubernetesConnectorServiceAccountPtrInput is an input type that accepts KubernetesConnectorServiceAccountArgs, KubernetesConnectorServiceAccountPtr and KubernetesConnectorServiceAccountPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorServiceAccountPtrInput` via:
//
//	        KubernetesConnectorServiceAccountArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorServiceAccountPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput
	ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Context) KubernetesConnectorServiceAccountPtrOutput
}

type kubernetesConnectorServiceAccountPtrType KubernetesConnectorServiceAccountArgs

func KubernetesConnectorServiceAccountPtr(v *KubernetesConnectorServiceAccountArgs) KubernetesConnectorServiceAccountPtrInput {
	return (*kubernetesConnectorServiceAccountPtrType)(v)
}

func (*kubernetesConnectorServiceAccountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i *kubernetesConnectorServiceAccountPtrType) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return i.ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorServiceAccountPtrType) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorServiceAccountPtrOutput)
}

type KubernetesConnectorServiceAccountOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountOutput() KubernetesConnectorServiceAccountOutput {
	return o
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountOutput {
	return o
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return o.ToKubernetesConnectorServiceAccountPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorServiceAccountOutput) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorServiceAccount) *KubernetesConnectorServiceAccount {
		return &v
	}).(KubernetesConnectorServiceAccountPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorServiceAccountOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorServiceAccount) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorServiceAccountOutput) ServiceAccountTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorServiceAccount) string { return v.ServiceAccountTokenRef }).(pulumi.StringOutput)
}

type KubernetesConnectorServiceAccountPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorServiceAccountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o KubernetesConnectorServiceAccountPtrOutput) ToKubernetesConnectorServiceAccountPtrOutput() KubernetesConnectorServiceAccountPtrOutput {
	return o
}

func (o KubernetesConnectorServiceAccountPtrOutput) ToKubernetesConnectorServiceAccountPtrOutputWithContext(ctx context.Context) KubernetesConnectorServiceAccountPtrOutput {
	return o
}

func (o KubernetesConnectorServiceAccountPtrOutput) Elem() KubernetesConnectorServiceAccountOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) KubernetesConnectorServiceAccount {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorServiceAccount
		return ret
	}).(KubernetesConnectorServiceAccountOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorServiceAccountPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the service account token for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorServiceAccountPtrOutput) ServiceAccountTokenRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorServiceAccount) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccountTokenRef
	}).(pulumi.StringPtrOutput)
}

type KubernetesConnectorUsernamePassword struct {
	// The URL of the Kubernetes cluster.
	MasterUrl string `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username for the connector.
	Username *string `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// KubernetesConnectorUsernamePasswordInput is an input type that accepts KubernetesConnectorUsernamePasswordArgs and KubernetesConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `KubernetesConnectorUsernamePasswordInput` via:
//
//	KubernetesConnectorUsernamePasswordArgs{...}
type KubernetesConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToKubernetesConnectorUsernamePasswordOutput() KubernetesConnectorUsernamePasswordOutput
	ToKubernetesConnectorUsernamePasswordOutputWithContext(context.Context) KubernetesConnectorUsernamePasswordOutput
}

type KubernetesConnectorUsernamePasswordArgs struct {
	// The URL of the Kubernetes cluster.
	MasterUrl pulumi.StringInput `pulumi:"masterUrl"`
	// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username for the connector.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (KubernetesConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordOutput() KubernetesConnectorUsernamePasswordOutput {
	return i.ToKubernetesConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorUsernamePasswordOutput)
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return i.ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i KubernetesConnectorUsernamePasswordArgs) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorUsernamePasswordOutput).ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx)
}

// KubernetesConnectorUsernamePasswordPtrInput is an input type that accepts KubernetesConnectorUsernamePasswordArgs, KubernetesConnectorUsernamePasswordPtr and KubernetesConnectorUsernamePasswordPtrOutput values.
// You can construct a concrete instance of `KubernetesConnectorUsernamePasswordPtrInput` via:
//
//	        KubernetesConnectorUsernamePasswordArgs{...}
//
//	or:
//
//	        nil
type KubernetesConnectorUsernamePasswordPtrInput interface {
	pulumi.Input

	ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput
	ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Context) KubernetesConnectorUsernamePasswordPtrOutput
}

type kubernetesConnectorUsernamePasswordPtrType KubernetesConnectorUsernamePasswordArgs

func KubernetesConnectorUsernamePasswordPtr(v *KubernetesConnectorUsernamePasswordArgs) KubernetesConnectorUsernamePasswordPtrInput {
	return (*kubernetesConnectorUsernamePasswordPtrType)(v)
}

func (*kubernetesConnectorUsernamePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i *kubernetesConnectorUsernamePasswordPtrType) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return i.ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (i *kubernetesConnectorUsernamePasswordPtrType) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesConnectorUsernamePasswordPtrOutput)
}

type KubernetesConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordOutput() KubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return o.ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(context.Background())
}

func (o KubernetesConnectorUsernamePasswordOutput) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesConnectorUsernamePassword) *KubernetesConnectorUsernamePassword {
		return &v
	}).(KubernetesConnectorUsernamePasswordPtrOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorUsernamePasswordOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) string { return v.MasterUrl }).(pulumi.StringOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username for the connector.
func (o KubernetesConnectorUsernamePasswordOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesConnectorUsernamePassword) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type KubernetesConnectorUsernamePasswordPtrOutput struct{ *pulumi.OutputState }

func (KubernetesConnectorUsernamePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o KubernetesConnectorUsernamePasswordPtrOutput) ToKubernetesConnectorUsernamePasswordPtrOutput() KubernetesConnectorUsernamePasswordPtrOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordPtrOutput) ToKubernetesConnectorUsernamePasswordPtrOutputWithContext(ctx context.Context) KubernetesConnectorUsernamePasswordPtrOutput {
	return o
}

func (o KubernetesConnectorUsernamePasswordPtrOutput) Elem() KubernetesConnectorUsernamePasswordOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) KubernetesConnectorUsernamePassword {
		if v != nil {
			return *v
		}
		var ret KubernetesConnectorUsernamePassword
		return ret
	}).(KubernetesConnectorUsernamePasswordOutput)
}

// The URL of the Kubernetes cluster.
func (o KubernetesConnectorUsernamePasswordPtrOutput) MasterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.MasterUrl
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the password for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username for the connector.
func (o KubernetesConnectorUsernamePasswordPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to the secret containing the username for the connector. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o KubernetesConnectorUsernamePasswordPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesConnectorUsernamePassword) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type ManualFreezeCurrentOrUpcomingWindow struct {
	// End time of the freeze
	EndTime *int `pulumi:"endTime"`
	// Start time of the freeze
	StartTime *int `pulumi:"startTime"`
}

// ManualFreezeCurrentOrUpcomingWindowInput is an input type that accepts ManualFreezeCurrentOrUpcomingWindowArgs and ManualFreezeCurrentOrUpcomingWindowOutput values.
// You can construct a concrete instance of `ManualFreezeCurrentOrUpcomingWindowInput` via:
//
//	ManualFreezeCurrentOrUpcomingWindowArgs{...}
type ManualFreezeCurrentOrUpcomingWindowInput interface {
	pulumi.Input

	ToManualFreezeCurrentOrUpcomingWindowOutput() ManualFreezeCurrentOrUpcomingWindowOutput
	ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Context) ManualFreezeCurrentOrUpcomingWindowOutput
}

type ManualFreezeCurrentOrUpcomingWindowArgs struct {
	// End time of the freeze
	EndTime pulumi.IntPtrInput `pulumi:"endTime"`
	// Start time of the freeze
	StartTime pulumi.IntPtrInput `pulumi:"startTime"`
}

func (ManualFreezeCurrentOrUpcomingWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i ManualFreezeCurrentOrUpcomingWindowArgs) ToManualFreezeCurrentOrUpcomingWindowOutput() ManualFreezeCurrentOrUpcomingWindowOutput {
	return i.ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Background())
}

func (i ManualFreezeCurrentOrUpcomingWindowArgs) ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeCurrentOrUpcomingWindowOutput)
}

// ManualFreezeCurrentOrUpcomingWindowArrayInput is an input type that accepts ManualFreezeCurrentOrUpcomingWindowArray and ManualFreezeCurrentOrUpcomingWindowArrayOutput values.
// You can construct a concrete instance of `ManualFreezeCurrentOrUpcomingWindowArrayInput` via:
//
//	ManualFreezeCurrentOrUpcomingWindowArray{ ManualFreezeCurrentOrUpcomingWindowArgs{...} }
type ManualFreezeCurrentOrUpcomingWindowArrayInput interface {
	pulumi.Input

	ToManualFreezeCurrentOrUpcomingWindowArrayOutput() ManualFreezeCurrentOrUpcomingWindowArrayOutput
	ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Context) ManualFreezeCurrentOrUpcomingWindowArrayOutput
}

type ManualFreezeCurrentOrUpcomingWindowArray []ManualFreezeCurrentOrUpcomingWindowInput

func (ManualFreezeCurrentOrUpcomingWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i ManualFreezeCurrentOrUpcomingWindowArray) ToManualFreezeCurrentOrUpcomingWindowArrayOutput() ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return i.ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Background())
}

func (i ManualFreezeCurrentOrUpcomingWindowArray) ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeCurrentOrUpcomingWindowArrayOutput)
}

type ManualFreezeCurrentOrUpcomingWindowOutput struct{ *pulumi.OutputState }

func (ManualFreezeCurrentOrUpcomingWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o ManualFreezeCurrentOrUpcomingWindowOutput) ToManualFreezeCurrentOrUpcomingWindowOutput() ManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

func (o ManualFreezeCurrentOrUpcomingWindowOutput) ToManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

// End time of the freeze
func (o ManualFreezeCurrentOrUpcomingWindowOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualFreezeCurrentOrUpcomingWindow) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

// Start time of the freeze
func (o ManualFreezeCurrentOrUpcomingWindowOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualFreezeCurrentOrUpcomingWindow) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

type ManualFreezeCurrentOrUpcomingWindowArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeCurrentOrUpcomingWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o ManualFreezeCurrentOrUpcomingWindowArrayOutput) ToManualFreezeCurrentOrUpcomingWindowArrayOutput() ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o ManualFreezeCurrentOrUpcomingWindowArrayOutput) ToManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) ManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o ManualFreezeCurrentOrUpcomingWindowArrayOutput) Index(i pulumi.IntInput) ManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeCurrentOrUpcomingWindow {
		return vs[0].([]ManualFreezeCurrentOrUpcomingWindow)[vs[1].(int)]
	}).(ManualFreezeCurrentOrUpcomingWindowOutput)
}

type ManualFreezeFreezeWindow struct {
	// Duration of the freeze
	Duration *string `pulumi:"duration"`
	// End time of the freeze
	EndTime     *string                              `pulumi:"endTime"`
	Recurrences []ManualFreezeFreezeWindowRecurrence `pulumi:"recurrences"`
	// Start time of the freeze
	StartTime *string `pulumi:"startTime"`
	// Timezone
	TimeZone *string `pulumi:"timeZone"`
}

// ManualFreezeFreezeWindowInput is an input type that accepts ManualFreezeFreezeWindowArgs and ManualFreezeFreezeWindowOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowInput` via:
//
//	ManualFreezeFreezeWindowArgs{...}
type ManualFreezeFreezeWindowInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowOutput() ManualFreezeFreezeWindowOutput
	ToManualFreezeFreezeWindowOutputWithContext(context.Context) ManualFreezeFreezeWindowOutput
}

type ManualFreezeFreezeWindowArgs struct {
	// Duration of the freeze
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// End time of the freeze
	EndTime     pulumi.StringPtrInput                        `pulumi:"endTime"`
	Recurrences ManualFreezeFreezeWindowRecurrenceArrayInput `pulumi:"recurrences"`
	// Start time of the freeze
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// Timezone
	TimeZone pulumi.StringPtrInput `pulumi:"timeZone"`
}

func (ManualFreezeFreezeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindow)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowArgs) ToManualFreezeFreezeWindowOutput() ManualFreezeFreezeWindowOutput {
	return i.ToManualFreezeFreezeWindowOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowArgs) ToManualFreezeFreezeWindowOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowOutput)
}

// ManualFreezeFreezeWindowArrayInput is an input type that accepts ManualFreezeFreezeWindowArray and ManualFreezeFreezeWindowArrayOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowArrayInput` via:
//
//	ManualFreezeFreezeWindowArray{ ManualFreezeFreezeWindowArgs{...} }
type ManualFreezeFreezeWindowArrayInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowArrayOutput() ManualFreezeFreezeWindowArrayOutput
	ToManualFreezeFreezeWindowArrayOutputWithContext(context.Context) ManualFreezeFreezeWindowArrayOutput
}

type ManualFreezeFreezeWindowArray []ManualFreezeFreezeWindowInput

func (ManualFreezeFreezeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindow)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowArray) ToManualFreezeFreezeWindowArrayOutput() ManualFreezeFreezeWindowArrayOutput {
	return i.ToManualFreezeFreezeWindowArrayOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowArray) ToManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowArrayOutput)
}

type ManualFreezeFreezeWindowOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindow)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowOutput) ToManualFreezeFreezeWindowOutput() ManualFreezeFreezeWindowOutput {
	return o
}

func (o ManualFreezeFreezeWindowOutput) ToManualFreezeFreezeWindowOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowOutput {
	return o
}

// Duration of the freeze
func (o ManualFreezeFreezeWindowOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// End time of the freeze
func (o ManualFreezeFreezeWindowOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o ManualFreezeFreezeWindowOutput) Recurrences() ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) []ManualFreezeFreezeWindowRecurrence { return v.Recurrences }).(ManualFreezeFreezeWindowRecurrenceArrayOutput)
}

// Start time of the freeze
func (o ManualFreezeFreezeWindowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// Timezone
func (o ManualFreezeFreezeWindowOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindow) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

type ManualFreezeFreezeWindowArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindow)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowArrayOutput) ToManualFreezeFreezeWindowArrayOutput() ManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowArrayOutput) ToManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowArrayOutput) Index(i pulumi.IntInput) ManualFreezeFreezeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeFreezeWindow {
		return vs[0].([]ManualFreezeFreezeWindow)[vs[1].(int)]
	}).(ManualFreezeFreezeWindowOutput)
}

type ManualFreezeFreezeWindowRecurrence struct {
	RecurrenceSpecs []ManualFreezeFreezeWindowRecurrenceRecurrenceSpec `pulumi:"recurrenceSpecs"`
	// Type of freeze
	Type *string `pulumi:"type"`
}

// ManualFreezeFreezeWindowRecurrenceInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceArgs and ManualFreezeFreezeWindowRecurrenceOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceArgs{...}
type ManualFreezeFreezeWindowRecurrenceInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceOutput() ManualFreezeFreezeWindowRecurrenceOutput
	ToManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceOutput
}

type ManualFreezeFreezeWindowRecurrenceArgs struct {
	RecurrenceSpecs ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput `pulumi:"recurrenceSpecs"`
	// Type of freeze
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManualFreezeFreezeWindowRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceArgs) ToManualFreezeFreezeWindowRecurrenceOutput() ManualFreezeFreezeWindowRecurrenceOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceArgs) ToManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceOutput)
}

// ManualFreezeFreezeWindowRecurrenceArrayInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceArray and ManualFreezeFreezeWindowRecurrenceArrayOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceArrayInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceArray{ ManualFreezeFreezeWindowRecurrenceArgs{...} }
type ManualFreezeFreezeWindowRecurrenceArrayInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceArrayOutput() ManualFreezeFreezeWindowRecurrenceArrayOutput
	ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceArrayOutput
}

type ManualFreezeFreezeWindowRecurrenceArray []ManualFreezeFreezeWindowRecurrenceInput

func (ManualFreezeFreezeWindowRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceArray) ToManualFreezeFreezeWindowRecurrenceArrayOutput() ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceArray) ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceArrayOutput)
}

type ManualFreezeFreezeWindowRecurrenceOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceOutput) ToManualFreezeFreezeWindowRecurrenceOutput() ManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceOutput) ToManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceOutput) RecurrenceSpecs() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrence) []ManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return v.RecurrenceSpecs
	}).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

// Type of freeze
func (o ManualFreezeFreezeWindowRecurrenceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrence) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManualFreezeFreezeWindowRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceArrayOutput) ToManualFreezeFreezeWindowRecurrenceArrayOutput() ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceArrayOutput) ToManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceArrayOutput) Index(i pulumi.IntInput) ManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeFreezeWindowRecurrence {
		return vs[0].([]ManualFreezeFreezeWindowRecurrence)[vs[1].(int)]
	}).(ManualFreezeFreezeWindowRecurrenceOutput)
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpec struct {
	Until *string `pulumi:"until"`
	Value *int    `pulumi:"value"`
}

// ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs and ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...}
type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs struct {
	Until pulumi.StringPtrInput `pulumi:"until"`
	Value pulumi.IntPtrInput    `pulumi:"value"`
}

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

// ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput is an input type that accepts ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray and ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput values.
// You can construct a concrete instance of `ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput` via:
//
//	ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{ ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...} }
type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput interface {
	pulumi.Input

	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
	ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray []ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return i.ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Background())
}

func (i ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Until() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrenceRecurrenceSpec) *string { return v.Until }).(pulumi.StringPtrOutput)
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ManualFreezeFreezeWindowRecurrenceRecurrenceSpec) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput struct{ *pulumi.OutputState }

func (ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) Index(i pulumi.IntInput) ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return vs[0].([]ManualFreezeFreezeWindowRecurrenceRecurrenceSpec)[vs[1].(int)]
	}).(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

type MonitoredServiceRequest struct {
	// Set of change sources for the monitored service.
	ChangeSources []MonitoredServiceRequestChangeSource `pulumi:"changeSources"`
	// Dependencies of the monitored service.
	Dependencies []MonitoredServiceRequestDependency `pulumi:"dependencies"`
	// Description for the monitored service.
	Description *string `pulumi:"description"`
	// Enable or disable the monitored service.
	Enabled *bool `pulumi:"enabled"`
	// Environment in which the service is deployed.
	EnvironmentRef string `pulumi:"environmentRef"`
	// Environment reference list for the monitored service.
	EnvironmentRefLists []string `pulumi:"environmentRefLists"`
	// Set of health sources for the monitored service.
	HealthSources []MonitoredServiceRequestHealthSource `pulumi:"healthSources"`
	// Name for the monitored service.
	Name string `pulumi:"name"`
	// Notification rule references for the monitored service.
	NotificationRuleRefs []MonitoredServiceRequestNotificationRuleRef `pulumi:"notificationRuleRefs"`
	// Service reference for the monitored service.
	ServiceRef string `pulumi:"serviceRef"`
	// Tags for the monitored service. comma-separated key value string pairs.
	Tags []string `pulumi:"tags"`
	// Template reference for the monitored service.
	TemplateRef *string `pulumi:"templateRef"`
	// Type of the monitored service.
	Type string `pulumi:"type"`
	// Template version label for the monitored service.
	VersionLabel *string `pulumi:"versionLabel"`
}

// MonitoredServiceRequestInput is an input type that accepts MonitoredServiceRequestArgs and MonitoredServiceRequestOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestInput` via:
//
//	MonitoredServiceRequestArgs{...}
type MonitoredServiceRequestInput interface {
	pulumi.Input

	ToMonitoredServiceRequestOutput() MonitoredServiceRequestOutput
	ToMonitoredServiceRequestOutputWithContext(context.Context) MonitoredServiceRequestOutput
}

type MonitoredServiceRequestArgs struct {
	// Set of change sources for the monitored service.
	ChangeSources MonitoredServiceRequestChangeSourceArrayInput `pulumi:"changeSources"`
	// Dependencies of the monitored service.
	Dependencies MonitoredServiceRequestDependencyArrayInput `pulumi:"dependencies"`
	// Description for the monitored service.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enable or disable the monitored service.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Environment in which the service is deployed.
	EnvironmentRef pulumi.StringInput `pulumi:"environmentRef"`
	// Environment reference list for the monitored service.
	EnvironmentRefLists pulumi.StringArrayInput `pulumi:"environmentRefLists"`
	// Set of health sources for the monitored service.
	HealthSources MonitoredServiceRequestHealthSourceArrayInput `pulumi:"healthSources"`
	// Name for the monitored service.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification rule references for the monitored service.
	NotificationRuleRefs MonitoredServiceRequestNotificationRuleRefArrayInput `pulumi:"notificationRuleRefs"`
	// Service reference for the monitored service.
	ServiceRef pulumi.StringInput `pulumi:"serviceRef"`
	// Tags for the monitored service. comma-separated key value string pairs.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Template reference for the monitored service.
	TemplateRef pulumi.StringPtrInput `pulumi:"templateRef"`
	// Type of the monitored service.
	Type pulumi.StringInput `pulumi:"type"`
	// Template version label for the monitored service.
	VersionLabel pulumi.StringPtrInput `pulumi:"versionLabel"`
}

func (MonitoredServiceRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequest)(nil)).Elem()
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestOutput() MonitoredServiceRequestOutput {
	return i.ToMonitoredServiceRequestOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestOutputWithContext(ctx context.Context) MonitoredServiceRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestOutput)
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return i.ToMonitoredServiceRequestPtrOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestArgs) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestOutput).ToMonitoredServiceRequestPtrOutputWithContext(ctx)
}

// MonitoredServiceRequestPtrInput is an input type that accepts MonitoredServiceRequestArgs, MonitoredServiceRequestPtr and MonitoredServiceRequestPtrOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestPtrInput` via:
//
//	        MonitoredServiceRequestArgs{...}
//
//	or:
//
//	        nil
type MonitoredServiceRequestPtrInput interface {
	pulumi.Input

	ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput
	ToMonitoredServiceRequestPtrOutputWithContext(context.Context) MonitoredServiceRequestPtrOutput
}

type monitoredServiceRequestPtrType MonitoredServiceRequestArgs

func MonitoredServiceRequestPtr(v *MonitoredServiceRequestArgs) MonitoredServiceRequestPtrInput {
	return (*monitoredServiceRequestPtrType)(v)
}

func (*monitoredServiceRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredServiceRequest)(nil)).Elem()
}

func (i *monitoredServiceRequestPtrType) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return i.ToMonitoredServiceRequestPtrOutputWithContext(context.Background())
}

func (i *monitoredServiceRequestPtrType) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestPtrOutput)
}

type MonitoredServiceRequestOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequest)(nil)).Elem()
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestOutput() MonitoredServiceRequestOutput {
	return o
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestOutputWithContext(ctx context.Context) MonitoredServiceRequestOutput {
	return o
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return o.ToMonitoredServiceRequestPtrOutputWithContext(context.Background())
}

func (o MonitoredServiceRequestOutput) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoredServiceRequest) *MonitoredServiceRequest {
		return &v
	}).(MonitoredServiceRequestPtrOutput)
}

// Set of change sources for the monitored service.
func (o MonitoredServiceRequestOutput) ChangeSources() MonitoredServiceRequestChangeSourceArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestChangeSource { return v.ChangeSources }).(MonitoredServiceRequestChangeSourceArrayOutput)
}

// Dependencies of the monitored service.
func (o MonitoredServiceRequestOutput) Dependencies() MonitoredServiceRequestDependencyArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestDependency { return v.Dependencies }).(MonitoredServiceRequestDependencyArrayOutput)
}

// Description for the monitored service.
func (o MonitoredServiceRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable or disable the monitored service.
func (o MonitoredServiceRequestOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Environment in which the service is deployed.
func (o MonitoredServiceRequestOutput) EnvironmentRef() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.EnvironmentRef }).(pulumi.StringOutput)
}

// Environment reference list for the monitored service.
func (o MonitoredServiceRequestOutput) EnvironmentRefLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []string { return v.EnvironmentRefLists }).(pulumi.StringArrayOutput)
}

// Set of health sources for the monitored service.
func (o MonitoredServiceRequestOutput) HealthSources() MonitoredServiceRequestHealthSourceArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestHealthSource { return v.HealthSources }).(MonitoredServiceRequestHealthSourceArrayOutput)
}

// Name for the monitored service.
func (o MonitoredServiceRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.Name }).(pulumi.StringOutput)
}

// Notification rule references for the monitored service.
func (o MonitoredServiceRequestOutput) NotificationRuleRefs() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []MonitoredServiceRequestNotificationRuleRef {
		return v.NotificationRuleRefs
	}).(MonitoredServiceRequestNotificationRuleRefArrayOutput)
}

// Service reference for the monitored service.
func (o MonitoredServiceRequestOutput) ServiceRef() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.ServiceRef }).(pulumi.StringOutput)
}

// Tags for the monitored service. comma-separated key value string pairs.
func (o MonitoredServiceRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Template reference for the monitored service.
func (o MonitoredServiceRequestOutput) TemplateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *string { return v.TemplateRef }).(pulumi.StringPtrOutput)
}

// Type of the monitored service.
func (o MonitoredServiceRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) string { return v.Type }).(pulumi.StringOutput)
}

// Template version label for the monitored service.
func (o MonitoredServiceRequestOutput) VersionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequest) *string { return v.VersionLabel }).(pulumi.StringPtrOutput)
}

type MonitoredServiceRequestPtrOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoredServiceRequest)(nil)).Elem()
}

func (o MonitoredServiceRequestPtrOutput) ToMonitoredServiceRequestPtrOutput() MonitoredServiceRequestPtrOutput {
	return o
}

func (o MonitoredServiceRequestPtrOutput) ToMonitoredServiceRequestPtrOutputWithContext(ctx context.Context) MonitoredServiceRequestPtrOutput {
	return o
}

func (o MonitoredServiceRequestPtrOutput) Elem() MonitoredServiceRequestOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) MonitoredServiceRequest {
		if v != nil {
			return *v
		}
		var ret MonitoredServiceRequest
		return ret
	}).(MonitoredServiceRequestOutput)
}

// Set of change sources for the monitored service.
func (o MonitoredServiceRequestPtrOutput) ChangeSources() MonitoredServiceRequestChangeSourceArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestChangeSource {
		if v == nil {
			return nil
		}
		return v.ChangeSources
	}).(MonitoredServiceRequestChangeSourceArrayOutput)
}

// Dependencies of the monitored service.
func (o MonitoredServiceRequestPtrOutput) Dependencies() MonitoredServiceRequestDependencyArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestDependency {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(MonitoredServiceRequestDependencyArrayOutput)
}

// Description for the monitored service.
func (o MonitoredServiceRequestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Enable or disable the monitored service.
func (o MonitoredServiceRequestPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Environment in which the service is deployed.
func (o MonitoredServiceRequestPtrOutput) EnvironmentRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.EnvironmentRef
	}).(pulumi.StringPtrOutput)
}

// Environment reference list for the monitored service.
func (o MonitoredServiceRequestPtrOutput) EnvironmentRefLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []string {
		if v == nil {
			return nil
		}
		return v.EnvironmentRefLists
	}).(pulumi.StringArrayOutput)
}

// Set of health sources for the monitored service.
func (o MonitoredServiceRequestPtrOutput) HealthSources() MonitoredServiceRequestHealthSourceArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestHealthSource {
		if v == nil {
			return nil
		}
		return v.HealthSources
	}).(MonitoredServiceRequestHealthSourceArrayOutput)
}

// Name for the monitored service.
func (o MonitoredServiceRequestPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification rule references for the monitored service.
func (o MonitoredServiceRequestPtrOutput) NotificationRuleRefs() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []MonitoredServiceRequestNotificationRuleRef {
		if v == nil {
			return nil
		}
		return v.NotificationRuleRefs
	}).(MonitoredServiceRequestNotificationRuleRefArrayOutput)
}

// Service reference for the monitored service.
func (o MonitoredServiceRequestPtrOutput) ServiceRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceRef
	}).(pulumi.StringPtrOutput)
}

// Tags for the monitored service. comma-separated key value string pairs.
func (o MonitoredServiceRequestPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Template reference for the monitored service.
func (o MonitoredServiceRequestPtrOutput) TemplateRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return v.TemplateRef
	}).(pulumi.StringPtrOutput)
}

// Type of the monitored service.
func (o MonitoredServiceRequestPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Template version label for the monitored service.
func (o MonitoredServiceRequestPtrOutput) VersionLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoredServiceRequest) *string {
		if v == nil {
			return nil
		}
		return v.VersionLabel
	}).(pulumi.StringPtrOutput)
}

type MonitoredServiceRequestChangeSource struct {
	Category string `pulumi:"category"`
	Enabled  *bool  `pulumi:"enabled"`
	// Identifier of the monitored service.
	Identifier string  `pulumi:"identifier"`
	Name       string  `pulumi:"name"`
	Spec       *string `pulumi:"spec"`
	Type       string  `pulumi:"type"`
}

// MonitoredServiceRequestChangeSourceInput is an input type that accepts MonitoredServiceRequestChangeSourceArgs and MonitoredServiceRequestChangeSourceOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestChangeSourceInput` via:
//
//	MonitoredServiceRequestChangeSourceArgs{...}
type MonitoredServiceRequestChangeSourceInput interface {
	pulumi.Input

	ToMonitoredServiceRequestChangeSourceOutput() MonitoredServiceRequestChangeSourceOutput
	ToMonitoredServiceRequestChangeSourceOutputWithContext(context.Context) MonitoredServiceRequestChangeSourceOutput
}

type MonitoredServiceRequestChangeSourceArgs struct {
	Category pulumi.StringInput  `pulumi:"category"`
	Enabled  pulumi.BoolPtrInput `pulumi:"enabled"`
	// Identifier of the monitored service.
	Identifier pulumi.StringInput    `pulumi:"identifier"`
	Name       pulumi.StringInput    `pulumi:"name"`
	Spec       pulumi.StringPtrInput `pulumi:"spec"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (MonitoredServiceRequestChangeSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (i MonitoredServiceRequestChangeSourceArgs) ToMonitoredServiceRequestChangeSourceOutput() MonitoredServiceRequestChangeSourceOutput {
	return i.ToMonitoredServiceRequestChangeSourceOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestChangeSourceArgs) ToMonitoredServiceRequestChangeSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestChangeSourceOutput)
}

// MonitoredServiceRequestChangeSourceArrayInput is an input type that accepts MonitoredServiceRequestChangeSourceArray and MonitoredServiceRequestChangeSourceArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestChangeSourceArrayInput` via:
//
//	MonitoredServiceRequestChangeSourceArray{ MonitoredServiceRequestChangeSourceArgs{...} }
type MonitoredServiceRequestChangeSourceArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestChangeSourceArrayOutput() MonitoredServiceRequestChangeSourceArrayOutput
	ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(context.Context) MonitoredServiceRequestChangeSourceArrayOutput
}

type MonitoredServiceRequestChangeSourceArray []MonitoredServiceRequestChangeSourceInput

func (MonitoredServiceRequestChangeSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (i MonitoredServiceRequestChangeSourceArray) ToMonitoredServiceRequestChangeSourceArrayOutput() MonitoredServiceRequestChangeSourceArrayOutput {
	return i.ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestChangeSourceArray) ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestChangeSourceArrayOutput)
}

type MonitoredServiceRequestChangeSourceOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestChangeSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (o MonitoredServiceRequestChangeSourceOutput) ToMonitoredServiceRequestChangeSourceOutput() MonitoredServiceRequestChangeSourceOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceOutput) ToMonitoredServiceRequestChangeSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Category }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestChangeSourceOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Identifier of the monitored service.
func (o MonitoredServiceRequestChangeSourceOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestChangeSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Name }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestChangeSourceOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o MonitoredServiceRequestChangeSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestChangeSource) string { return v.Type }).(pulumi.StringOutput)
}

type MonitoredServiceRequestChangeSourceArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestChangeSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestChangeSource)(nil)).Elem()
}

func (o MonitoredServiceRequestChangeSourceArrayOutput) ToMonitoredServiceRequestChangeSourceArrayOutput() MonitoredServiceRequestChangeSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceArrayOutput) ToMonitoredServiceRequestChangeSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestChangeSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestChangeSourceArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestChangeSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestChangeSource {
		return vs[0].([]MonitoredServiceRequestChangeSource)[vs[1].(int)]
	}).(MonitoredServiceRequestChangeSourceOutput)
}

type MonitoredServiceRequestDependency struct {
	DependencyMetadata         *string `pulumi:"dependencyMetadata"`
	MonitoredServiceIdentifier string  `pulumi:"monitoredServiceIdentifier"`
	Type                       string  `pulumi:"type"`
}

// MonitoredServiceRequestDependencyInput is an input type that accepts MonitoredServiceRequestDependencyArgs and MonitoredServiceRequestDependencyOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestDependencyInput` via:
//
//	MonitoredServiceRequestDependencyArgs{...}
type MonitoredServiceRequestDependencyInput interface {
	pulumi.Input

	ToMonitoredServiceRequestDependencyOutput() MonitoredServiceRequestDependencyOutput
	ToMonitoredServiceRequestDependencyOutputWithContext(context.Context) MonitoredServiceRequestDependencyOutput
}

type MonitoredServiceRequestDependencyArgs struct {
	DependencyMetadata         pulumi.StringPtrInput `pulumi:"dependencyMetadata"`
	MonitoredServiceIdentifier pulumi.StringInput    `pulumi:"monitoredServiceIdentifier"`
	Type                       pulumi.StringInput    `pulumi:"type"`
}

func (MonitoredServiceRequestDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestDependency)(nil)).Elem()
}

func (i MonitoredServiceRequestDependencyArgs) ToMonitoredServiceRequestDependencyOutput() MonitoredServiceRequestDependencyOutput {
	return i.ToMonitoredServiceRequestDependencyOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestDependencyArgs) ToMonitoredServiceRequestDependencyOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestDependencyOutput)
}

// MonitoredServiceRequestDependencyArrayInput is an input type that accepts MonitoredServiceRequestDependencyArray and MonitoredServiceRequestDependencyArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestDependencyArrayInput` via:
//
//	MonitoredServiceRequestDependencyArray{ MonitoredServiceRequestDependencyArgs{...} }
type MonitoredServiceRequestDependencyArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestDependencyArrayOutput() MonitoredServiceRequestDependencyArrayOutput
	ToMonitoredServiceRequestDependencyArrayOutputWithContext(context.Context) MonitoredServiceRequestDependencyArrayOutput
}

type MonitoredServiceRequestDependencyArray []MonitoredServiceRequestDependencyInput

func (MonitoredServiceRequestDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestDependency)(nil)).Elem()
}

func (i MonitoredServiceRequestDependencyArray) ToMonitoredServiceRequestDependencyArrayOutput() MonitoredServiceRequestDependencyArrayOutput {
	return i.ToMonitoredServiceRequestDependencyArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestDependencyArray) ToMonitoredServiceRequestDependencyArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestDependencyArrayOutput)
}

type MonitoredServiceRequestDependencyOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestDependency)(nil)).Elem()
}

func (o MonitoredServiceRequestDependencyOutput) ToMonitoredServiceRequestDependencyOutput() MonitoredServiceRequestDependencyOutput {
	return o
}

func (o MonitoredServiceRequestDependencyOutput) ToMonitoredServiceRequestDependencyOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyOutput {
	return o
}

func (o MonitoredServiceRequestDependencyOutput) DependencyMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitoredServiceRequestDependency) *string { return v.DependencyMetadata }).(pulumi.StringPtrOutput)
}

func (o MonitoredServiceRequestDependencyOutput) MonitoredServiceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestDependency) string { return v.MonitoredServiceIdentifier }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestDependencyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestDependency) string { return v.Type }).(pulumi.StringOutput)
}

type MonitoredServiceRequestDependencyArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestDependency)(nil)).Elem()
}

func (o MonitoredServiceRequestDependencyArrayOutput) ToMonitoredServiceRequestDependencyArrayOutput() MonitoredServiceRequestDependencyArrayOutput {
	return o
}

func (o MonitoredServiceRequestDependencyArrayOutput) ToMonitoredServiceRequestDependencyArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestDependencyArrayOutput {
	return o
}

func (o MonitoredServiceRequestDependencyArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestDependency {
		return vs[0].([]MonitoredServiceRequestDependency)[vs[1].(int)]
	}).(MonitoredServiceRequestDependencyOutput)
}

type MonitoredServiceRequestHealthSource struct {
	// Identifier of the monitored service.
	Identifier string `pulumi:"identifier"`
	Name       string `pulumi:"name"`
	Spec       string `pulumi:"spec"`
	Type       string `pulumi:"type"`
}

// MonitoredServiceRequestHealthSourceInput is an input type that accepts MonitoredServiceRequestHealthSourceArgs and MonitoredServiceRequestHealthSourceOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestHealthSourceInput` via:
//
//	MonitoredServiceRequestHealthSourceArgs{...}
type MonitoredServiceRequestHealthSourceInput interface {
	pulumi.Input

	ToMonitoredServiceRequestHealthSourceOutput() MonitoredServiceRequestHealthSourceOutput
	ToMonitoredServiceRequestHealthSourceOutputWithContext(context.Context) MonitoredServiceRequestHealthSourceOutput
}

type MonitoredServiceRequestHealthSourceArgs struct {
	// Identifier of the monitored service.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	Name       pulumi.StringInput `pulumi:"name"`
	Spec       pulumi.StringInput `pulumi:"spec"`
	Type       pulumi.StringInput `pulumi:"type"`
}

func (MonitoredServiceRequestHealthSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (i MonitoredServiceRequestHealthSourceArgs) ToMonitoredServiceRequestHealthSourceOutput() MonitoredServiceRequestHealthSourceOutput {
	return i.ToMonitoredServiceRequestHealthSourceOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestHealthSourceArgs) ToMonitoredServiceRequestHealthSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestHealthSourceOutput)
}

// MonitoredServiceRequestHealthSourceArrayInput is an input type that accepts MonitoredServiceRequestHealthSourceArray and MonitoredServiceRequestHealthSourceArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestHealthSourceArrayInput` via:
//
//	MonitoredServiceRequestHealthSourceArray{ MonitoredServiceRequestHealthSourceArgs{...} }
type MonitoredServiceRequestHealthSourceArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestHealthSourceArrayOutput() MonitoredServiceRequestHealthSourceArrayOutput
	ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(context.Context) MonitoredServiceRequestHealthSourceArrayOutput
}

type MonitoredServiceRequestHealthSourceArray []MonitoredServiceRequestHealthSourceInput

func (MonitoredServiceRequestHealthSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (i MonitoredServiceRequestHealthSourceArray) ToMonitoredServiceRequestHealthSourceArrayOutput() MonitoredServiceRequestHealthSourceArrayOutput {
	return i.ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestHealthSourceArray) ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestHealthSourceArrayOutput)
}

type MonitoredServiceRequestHealthSourceOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestHealthSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (o MonitoredServiceRequestHealthSourceOutput) ToMonitoredServiceRequestHealthSourceOutput() MonitoredServiceRequestHealthSourceOutput {
	return o
}

func (o MonitoredServiceRequestHealthSourceOutput) ToMonitoredServiceRequestHealthSourceOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceOutput {
	return o
}

// Identifier of the monitored service.
func (o MonitoredServiceRequestHealthSourceOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestHealthSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Name }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestHealthSourceOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Spec }).(pulumi.StringOutput)
}

func (o MonitoredServiceRequestHealthSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestHealthSource) string { return v.Type }).(pulumi.StringOutput)
}

type MonitoredServiceRequestHealthSourceArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestHealthSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestHealthSource)(nil)).Elem()
}

func (o MonitoredServiceRequestHealthSourceArrayOutput) ToMonitoredServiceRequestHealthSourceArrayOutput() MonitoredServiceRequestHealthSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestHealthSourceArrayOutput) ToMonitoredServiceRequestHealthSourceArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestHealthSourceArrayOutput {
	return o
}

func (o MonitoredServiceRequestHealthSourceArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestHealthSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestHealthSource {
		return vs[0].([]MonitoredServiceRequestHealthSource)[vs[1].(int)]
	}).(MonitoredServiceRequestHealthSourceOutput)
}

type MonitoredServiceRequestNotificationRuleRef struct {
	Enabled             bool   `pulumi:"enabled"`
	NotificationRuleRef string `pulumi:"notificationRuleRef"`
}

// MonitoredServiceRequestNotificationRuleRefInput is an input type that accepts MonitoredServiceRequestNotificationRuleRefArgs and MonitoredServiceRequestNotificationRuleRefOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestNotificationRuleRefInput` via:
//
//	MonitoredServiceRequestNotificationRuleRefArgs{...}
type MonitoredServiceRequestNotificationRuleRefInput interface {
	pulumi.Input

	ToMonitoredServiceRequestNotificationRuleRefOutput() MonitoredServiceRequestNotificationRuleRefOutput
	ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(context.Context) MonitoredServiceRequestNotificationRuleRefOutput
}

type MonitoredServiceRequestNotificationRuleRefArgs struct {
	Enabled             pulumi.BoolInput   `pulumi:"enabled"`
	NotificationRuleRef pulumi.StringInput `pulumi:"notificationRuleRef"`
}

func (MonitoredServiceRequestNotificationRuleRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (i MonitoredServiceRequestNotificationRuleRefArgs) ToMonitoredServiceRequestNotificationRuleRefOutput() MonitoredServiceRequestNotificationRuleRefOutput {
	return i.ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestNotificationRuleRefArgs) ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestNotificationRuleRefOutput)
}

// MonitoredServiceRequestNotificationRuleRefArrayInput is an input type that accepts MonitoredServiceRequestNotificationRuleRefArray and MonitoredServiceRequestNotificationRuleRefArrayOutput values.
// You can construct a concrete instance of `MonitoredServiceRequestNotificationRuleRefArrayInput` via:
//
//	MonitoredServiceRequestNotificationRuleRefArray{ MonitoredServiceRequestNotificationRuleRefArgs{...} }
type MonitoredServiceRequestNotificationRuleRefArrayInput interface {
	pulumi.Input

	ToMonitoredServiceRequestNotificationRuleRefArrayOutput() MonitoredServiceRequestNotificationRuleRefArrayOutput
	ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(context.Context) MonitoredServiceRequestNotificationRuleRefArrayOutput
}

type MonitoredServiceRequestNotificationRuleRefArray []MonitoredServiceRequestNotificationRuleRefInput

func (MonitoredServiceRequestNotificationRuleRefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (i MonitoredServiceRequestNotificationRuleRefArray) ToMonitoredServiceRequestNotificationRuleRefArrayOutput() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return i.ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(context.Background())
}

func (i MonitoredServiceRequestNotificationRuleRefArray) ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoredServiceRequestNotificationRuleRefArrayOutput)
}

type MonitoredServiceRequestNotificationRuleRefOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestNotificationRuleRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (o MonitoredServiceRequestNotificationRuleRefOutput) ToMonitoredServiceRequestNotificationRuleRefOutput() MonitoredServiceRequestNotificationRuleRefOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefOutput) ToMonitoredServiceRequestNotificationRuleRefOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v MonitoredServiceRequestNotificationRuleRef) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o MonitoredServiceRequestNotificationRuleRefOutput) NotificationRuleRef() pulumi.StringOutput {
	return o.ApplyT(func(v MonitoredServiceRequestNotificationRuleRef) string { return v.NotificationRuleRef }).(pulumi.StringOutput)
}

type MonitoredServiceRequestNotificationRuleRefArrayOutput struct{ *pulumi.OutputState }

func (MonitoredServiceRequestNotificationRuleRefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitoredServiceRequestNotificationRuleRef)(nil)).Elem()
}

func (o MonitoredServiceRequestNotificationRuleRefArrayOutput) ToMonitoredServiceRequestNotificationRuleRefArrayOutput() MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefArrayOutput) ToMonitoredServiceRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) MonitoredServiceRequestNotificationRuleRefArrayOutput {
	return o
}

func (o MonitoredServiceRequestNotificationRuleRefArrayOutput) Index(i pulumi.IntInput) MonitoredServiceRequestNotificationRuleRefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitoredServiceRequestNotificationRuleRef {
		return vs[0].([]MonitoredServiceRequestNotificationRuleRef)[vs[1].(int)]
	}).(MonitoredServiceRequestNotificationRuleRefOutput)
}

type NexusConnectorCredentials struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username *string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef *string `pulumi:"usernameRef"`
}

// NexusConnectorCredentialsInput is an input type that accepts NexusConnectorCredentialsArgs and NexusConnectorCredentialsOutput values.
// You can construct a concrete instance of `NexusConnectorCredentialsInput` via:
//
//	NexusConnectorCredentialsArgs{...}
type NexusConnectorCredentialsInput interface {
	pulumi.Input

	ToNexusConnectorCredentialsOutput() NexusConnectorCredentialsOutput
	ToNexusConnectorCredentialsOutputWithContext(context.Context) NexusConnectorCredentialsOutput
}

type NexusConnectorCredentialsArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringPtrInput `pulumi:"usernameRef"`
}

func (NexusConnectorCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NexusConnectorCredentials)(nil)).Elem()
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsOutput() NexusConnectorCredentialsOutput {
	return i.ToNexusConnectorCredentialsOutputWithContext(context.Background())
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsOutputWithContext(ctx context.Context) NexusConnectorCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusConnectorCredentialsOutput)
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return i.ToNexusConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i NexusConnectorCredentialsArgs) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusConnectorCredentialsOutput).ToNexusConnectorCredentialsPtrOutputWithContext(ctx)
}

// NexusConnectorCredentialsPtrInput is an input type that accepts NexusConnectorCredentialsArgs, NexusConnectorCredentialsPtr and NexusConnectorCredentialsPtrOutput values.
// You can construct a concrete instance of `NexusConnectorCredentialsPtrInput` via:
//
//	        NexusConnectorCredentialsArgs{...}
//
//	or:
//
//	        nil
type NexusConnectorCredentialsPtrInput interface {
	pulumi.Input

	ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput
	ToNexusConnectorCredentialsPtrOutputWithContext(context.Context) NexusConnectorCredentialsPtrOutput
}

type nexusConnectorCredentialsPtrType NexusConnectorCredentialsArgs

func NexusConnectorCredentialsPtr(v *NexusConnectorCredentialsArgs) NexusConnectorCredentialsPtrInput {
	return (*nexusConnectorCredentialsPtrType)(v)
}

func (*nexusConnectorCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusConnectorCredentials)(nil)).Elem()
}

func (i *nexusConnectorCredentialsPtrType) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return i.ToNexusConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (i *nexusConnectorCredentialsPtrType) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NexusConnectorCredentialsPtrOutput)
}

type NexusConnectorCredentialsOutput struct{ *pulumi.OutputState }

func (NexusConnectorCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NexusConnectorCredentials)(nil)).Elem()
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsOutput() NexusConnectorCredentialsOutput {
	return o
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsOutputWithContext(ctx context.Context) NexusConnectorCredentialsOutput {
	return o
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return o.ToNexusConnectorCredentialsPtrOutputWithContext(context.Background())
}

func (o NexusConnectorCredentialsOutput) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NexusConnectorCredentials) *NexusConnectorCredentials {
		return &v
	}).(NexusConnectorCredentialsPtrOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v NexusConnectorCredentials) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o NexusConnectorCredentialsOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NexusConnectorCredentials) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NexusConnectorCredentials) *string { return v.UsernameRef }).(pulumi.StringPtrOutput)
}

type NexusConnectorCredentialsPtrOutput struct{ *pulumi.OutputState }

func (NexusConnectorCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NexusConnectorCredentials)(nil)).Elem()
}

func (o NexusConnectorCredentialsPtrOutput) ToNexusConnectorCredentialsPtrOutput() NexusConnectorCredentialsPtrOutput {
	return o
}

func (o NexusConnectorCredentialsPtrOutput) ToNexusConnectorCredentialsPtrOutputWithContext(ctx context.Context) NexusConnectorCredentialsPtrOutput {
	return o
}

func (o NexusConnectorCredentialsPtrOutput) Elem() NexusConnectorCredentialsOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) NexusConnectorCredentials {
		if v != nil {
			return *v
		}
		var ret NexusConnectorCredentials
		return ret
	}).(NexusConnectorCredentialsOutput)
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsPtrOutput) PasswordRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordRef
	}).(pulumi.StringPtrOutput)
}

// Username to use for authentication.
func (o NexusConnectorCredentialsPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o NexusConnectorCredentialsPtrOutput) UsernameRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NexusConnectorCredentials) *string {
		if v == nil {
			return nil
		}
		return v.UsernameRef
	}).(pulumi.StringPtrOutput)
}

type PipelineFiltersFilterProperties struct {
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// PipelineFiltersFilterPropertiesInput is an input type that accepts PipelineFiltersFilterPropertiesArgs and PipelineFiltersFilterPropertiesOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesInput` via:
//
//	PipelineFiltersFilterPropertiesArgs{...}
type PipelineFiltersFilterPropertiesInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesOutput() PipelineFiltersFilterPropertiesOutput
	ToPipelineFiltersFilterPropertiesOutputWithContext(context.Context) PipelineFiltersFilterPropertiesOutput
}

type PipelineFiltersFilterPropertiesArgs struct {
	// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (PipelineFiltersFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterProperties)(nil)).Elem()
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesOutput() PipelineFiltersFilterPropertiesOutput {
	return i.ToPipelineFiltersFilterPropertiesOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesOutput)
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i PipelineFiltersFilterPropertiesArgs) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesOutput).ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx)
}

// PipelineFiltersFilterPropertiesPtrInput is an input type that accepts PipelineFiltersFilterPropertiesArgs, PipelineFiltersFilterPropertiesPtr and PipelineFiltersFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `PipelineFiltersFilterPropertiesPtrInput` via:
//
//	        PipelineFiltersFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type PipelineFiltersFilterPropertiesPtrInput interface {
	pulumi.Input

	ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput
	ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Context) PipelineFiltersFilterPropertiesPtrOutput
}

type pipelineFiltersFilterPropertiesPtrType PipelineFiltersFilterPropertiesArgs

func PipelineFiltersFilterPropertiesPtr(v *PipelineFiltersFilterPropertiesArgs) PipelineFiltersFilterPropertiesPtrInput {
	return (*pipelineFiltersFilterPropertiesPtrType)(v)
}

func (*pipelineFiltersFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterProperties)(nil)).Elem()
}

func (i *pipelineFiltersFilterPropertiesPtrType) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return i.ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *pipelineFiltersFilterPropertiesPtrType) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFiltersFilterPropertiesPtrOutput)
}

type PipelineFiltersFilterPropertiesOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFiltersFilterProperties)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesOutput() PipelineFiltersFilterPropertiesOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return o.ToPipelineFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o PipelineFiltersFilterPropertiesOutput) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFiltersFilterProperties) *PipelineFiltersFilterProperties {
		return &v
	}).(PipelineFiltersFilterPropertiesPtrOutput)
}

// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
func (o PipelineFiltersFilterPropertiesOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o PipelineFiltersFilterPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineFiltersFilterProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type PipelineFiltersFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PipelineFiltersFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFiltersFilterProperties)(nil)).Elem()
}

func (o PipelineFiltersFilterPropertiesPtrOutput) ToPipelineFiltersFilterPropertiesPtrOutput() PipelineFiltersFilterPropertiesPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesPtrOutput) ToPipelineFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) PipelineFiltersFilterPropertiesPtrOutput {
	return o
}

func (o PipelineFiltersFilterPropertiesPtrOutput) Elem() PipelineFiltersFilterPropertiesOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) PipelineFiltersFilterProperties {
		if v != nil {
			return *v
		}
		var ret PipelineFiltersFilterProperties
		return ret
	}).(PipelineFiltersFilterPropertiesOutput)
}

// Corresponding Entity of the filters. Currently supported types are {Connector, DelegateProfile, Delegate, PipelineSetup, PipelineExecution, Deployment, Audit, Template, EnvironmentGroup, FileStore, CCMRecommendation, Anomaly, Environment}.
func (o PipelineFiltersFilterPropertiesPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o PipelineFiltersFilterPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineFiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type PipelineGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// PipelineGitDetailsInput is an input type that accepts PipelineGitDetailsArgs and PipelineGitDetailsOutput values.
// You can construct a concrete instance of `PipelineGitDetailsInput` via:
//
//	PipelineGitDetailsArgs{...}
type PipelineGitDetailsInput interface {
	pulumi.Input

	ToPipelineGitDetailsOutput() PipelineGitDetailsOutput
	ToPipelineGitDetailsOutputWithContext(context.Context) PipelineGitDetailsOutput
}

type PipelineGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (PipelineGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitDetails)(nil)).Elem()
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsOutput() PipelineGitDetailsOutput {
	return i.ToPipelineGitDetailsOutputWithContext(context.Background())
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsOutputWithContext(ctx context.Context) PipelineGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitDetailsOutput)
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return i.ToPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i PipelineGitDetailsArgs) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitDetailsOutput).ToPipelineGitDetailsPtrOutputWithContext(ctx)
}

// PipelineGitDetailsPtrInput is an input type that accepts PipelineGitDetailsArgs, PipelineGitDetailsPtr and PipelineGitDetailsPtrOutput values.
// You can construct a concrete instance of `PipelineGitDetailsPtrInput` via:
//
//	        PipelineGitDetailsArgs{...}
//
//	or:
//
//	        nil
type PipelineGitDetailsPtrInput interface {
	pulumi.Input

	ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput
	ToPipelineGitDetailsPtrOutputWithContext(context.Context) PipelineGitDetailsPtrOutput
}

type pipelineGitDetailsPtrType PipelineGitDetailsArgs

func PipelineGitDetailsPtr(v *PipelineGitDetailsArgs) PipelineGitDetailsPtrInput {
	return (*pipelineGitDetailsPtrType)(v)
}

func (*pipelineGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitDetails)(nil)).Elem()
}

func (i *pipelineGitDetailsPtrType) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return i.ToPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i *pipelineGitDetailsPtrType) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitDetailsPtrOutput)
}

type PipelineGitDetailsOutput struct{ *pulumi.OutputState }

func (PipelineGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitDetails)(nil)).Elem()
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsOutput() PipelineGitDetailsOutput {
	return o
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsOutputWithContext(ctx context.Context) PipelineGitDetailsOutput {
	return o
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return o.ToPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (o PipelineGitDetailsOutput) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineGitDetails) *PipelineGitDetails {
		return &v
	}).(PipelineGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o PipelineGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o PipelineGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o PipelineGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PipelineGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o PipelineGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o PipelineGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o PipelineGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type PipelineGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (PipelineGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitDetails)(nil)).Elem()
}

func (o PipelineGitDetailsPtrOutput) ToPipelineGitDetailsPtrOutput() PipelineGitDetailsPtrOutput {
	return o
}

func (o PipelineGitDetailsPtrOutput) ToPipelineGitDetailsPtrOutputWithContext(ctx context.Context) PipelineGitDetailsPtrOutput {
	return o
}

func (o PipelineGitDetailsPtrOutput) Elem() PipelineGitDetailsOutput {
	return o.ApplyT(func(v *PipelineGitDetails) PipelineGitDetails {
		if v != nil {
			return *v
		}
		var ret PipelineGitDetails
		return ret
	}).(PipelineGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o PipelineGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o PipelineGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o PipelineGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PipelineGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o PipelineGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o PipelineGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o PipelineGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o PipelineGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type PolicysetPolicy struct {
	// Account Identifier of the account
	Identifier string `pulumi:"identifier"`
	// Organization Identifier
	Severity string `pulumi:"severity"`
}

// PolicysetPolicyInput is an input type that accepts PolicysetPolicyArgs and PolicysetPolicyOutput values.
// You can construct a concrete instance of `PolicysetPolicyInput` via:
//
//	PolicysetPolicyArgs{...}
type PolicysetPolicyInput interface {
	pulumi.Input

	ToPolicysetPolicyOutput() PolicysetPolicyOutput
	ToPolicysetPolicyOutputWithContext(context.Context) PolicysetPolicyOutput
}

type PolicysetPolicyArgs struct {
	// Account Identifier of the account
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Organization Identifier
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (PolicysetPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicysetPolicy)(nil)).Elem()
}

func (i PolicysetPolicyArgs) ToPolicysetPolicyOutput() PolicysetPolicyOutput {
	return i.ToPolicysetPolicyOutputWithContext(context.Background())
}

func (i PolicysetPolicyArgs) ToPolicysetPolicyOutputWithContext(ctx context.Context) PolicysetPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicysetPolicyOutput)
}

// PolicysetPolicyArrayInput is an input type that accepts PolicysetPolicyArray and PolicysetPolicyArrayOutput values.
// You can construct a concrete instance of `PolicysetPolicyArrayInput` via:
//
//	PolicysetPolicyArray{ PolicysetPolicyArgs{...} }
type PolicysetPolicyArrayInput interface {
	pulumi.Input

	ToPolicysetPolicyArrayOutput() PolicysetPolicyArrayOutput
	ToPolicysetPolicyArrayOutputWithContext(context.Context) PolicysetPolicyArrayOutput
}

type PolicysetPolicyArray []PolicysetPolicyInput

func (PolicysetPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicysetPolicy)(nil)).Elem()
}

func (i PolicysetPolicyArray) ToPolicysetPolicyArrayOutput() PolicysetPolicyArrayOutput {
	return i.ToPolicysetPolicyArrayOutputWithContext(context.Background())
}

func (i PolicysetPolicyArray) ToPolicysetPolicyArrayOutputWithContext(ctx context.Context) PolicysetPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicysetPolicyArrayOutput)
}

type PolicysetPolicyOutput struct{ *pulumi.OutputState }

func (PolicysetPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicysetPolicy)(nil)).Elem()
}

func (o PolicysetPolicyOutput) ToPolicysetPolicyOutput() PolicysetPolicyOutput {
	return o
}

func (o PolicysetPolicyOutput) ToPolicysetPolicyOutputWithContext(ctx context.Context) PolicysetPolicyOutput {
	return o
}

// Account Identifier of the account
func (o PolicysetPolicyOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v PolicysetPolicy) string { return v.Identifier }).(pulumi.StringOutput)
}

// Organization Identifier
func (o PolicysetPolicyOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v PolicysetPolicy) string { return v.Severity }).(pulumi.StringOutput)
}

type PolicysetPolicyArrayOutput struct{ *pulumi.OutputState }

func (PolicysetPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicysetPolicy)(nil)).Elem()
}

func (o PolicysetPolicyArrayOutput) ToPolicysetPolicyArrayOutput() PolicysetPolicyArrayOutput {
	return o
}

func (o PolicysetPolicyArrayOutput) ToPolicysetPolicyArrayOutputWithContext(ctx context.Context) PolicysetPolicyArrayOutput {
	return o
}

func (o PolicysetPolicyArrayOutput) Index(i pulumi.IntInput) PolicysetPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicysetPolicy {
		return vs[0].([]PolicysetPolicy)[vs[1].(int)]
	}).(PolicysetPolicyOutput)
}

type PrometheusConnectorHeader struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef *string `pulumi:"encryptedValueRef"`
	// Key.
	Key string `pulumi:"key"`
	// Value.
	Value *string `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted *bool `pulumi:"valueEncrypted"`
}

// PrometheusConnectorHeaderInput is an input type that accepts PrometheusConnectorHeaderArgs and PrometheusConnectorHeaderOutput values.
// You can construct a concrete instance of `PrometheusConnectorHeaderInput` via:
//
//	PrometheusConnectorHeaderArgs{...}
type PrometheusConnectorHeaderInput interface {
	pulumi.Input

	ToPrometheusConnectorHeaderOutput() PrometheusConnectorHeaderOutput
	ToPrometheusConnectorHeaderOutputWithContext(context.Context) PrometheusConnectorHeaderOutput
}

type PrometheusConnectorHeaderArgs struct {
	// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	EncryptedValueRef pulumi.StringPtrInput `pulumi:"encryptedValueRef"`
	// Key.
	Key pulumi.StringInput `pulumi:"key"`
	// Value.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Encrypted value.
	ValueEncrypted pulumi.BoolPtrInput `pulumi:"valueEncrypted"`
}

func (PrometheusConnectorHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusConnectorHeader)(nil)).Elem()
}

func (i PrometheusConnectorHeaderArgs) ToPrometheusConnectorHeaderOutput() PrometheusConnectorHeaderOutput {
	return i.ToPrometheusConnectorHeaderOutputWithContext(context.Background())
}

func (i PrometheusConnectorHeaderArgs) ToPrometheusConnectorHeaderOutputWithContext(ctx context.Context) PrometheusConnectorHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusConnectorHeaderOutput)
}

// PrometheusConnectorHeaderArrayInput is an input type that accepts PrometheusConnectorHeaderArray and PrometheusConnectorHeaderArrayOutput values.
// You can construct a concrete instance of `PrometheusConnectorHeaderArrayInput` via:
//
//	PrometheusConnectorHeaderArray{ PrometheusConnectorHeaderArgs{...} }
type PrometheusConnectorHeaderArrayInput interface {
	pulumi.Input

	ToPrometheusConnectorHeaderArrayOutput() PrometheusConnectorHeaderArrayOutput
	ToPrometheusConnectorHeaderArrayOutputWithContext(context.Context) PrometheusConnectorHeaderArrayOutput
}

type PrometheusConnectorHeaderArray []PrometheusConnectorHeaderInput

func (PrometheusConnectorHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusConnectorHeader)(nil)).Elem()
}

func (i PrometheusConnectorHeaderArray) ToPrometheusConnectorHeaderArrayOutput() PrometheusConnectorHeaderArrayOutput {
	return i.ToPrometheusConnectorHeaderArrayOutputWithContext(context.Background())
}

func (i PrometheusConnectorHeaderArray) ToPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) PrometheusConnectorHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrometheusConnectorHeaderArrayOutput)
}

type PrometheusConnectorHeaderOutput struct{ *pulumi.OutputState }

func (PrometheusConnectorHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrometheusConnectorHeader)(nil)).Elem()
}

func (o PrometheusConnectorHeaderOutput) ToPrometheusConnectorHeaderOutput() PrometheusConnectorHeaderOutput {
	return o
}

func (o PrometheusConnectorHeaderOutput) ToPrometheusConnectorHeaderOutputWithContext(ctx context.Context) PrometheusConnectorHeaderOutput {
	return o
}

// Reference to the Harness secret containing the encrypted value. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o PrometheusConnectorHeaderOutput) EncryptedValueRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) *string { return v.EncryptedValueRef }).(pulumi.StringPtrOutput)
}

// Key.
func (o PrometheusConnectorHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) string { return v.Key }).(pulumi.StringOutput)
}

// Value.
func (o PrometheusConnectorHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Encrypted value.
func (o PrometheusConnectorHeaderOutput) ValueEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrometheusConnectorHeader) *bool { return v.ValueEncrypted }).(pulumi.BoolPtrOutput)
}

type PrometheusConnectorHeaderArrayOutput struct{ *pulumi.OutputState }

func (PrometheusConnectorHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrometheusConnectorHeader)(nil)).Elem()
}

func (o PrometheusConnectorHeaderArrayOutput) ToPrometheusConnectorHeaderArrayOutput() PrometheusConnectorHeaderArrayOutput {
	return o
}

func (o PrometheusConnectorHeaderArrayOutput) ToPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) PrometheusConnectorHeaderArrayOutput {
	return o
}

func (o PrometheusConnectorHeaderArrayOutput) Index(i pulumi.IntInput) PrometheusConnectorHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrometheusConnectorHeader {
		return vs[0].([]PrometheusConnectorHeader)[vs[1].(int)]
	}).(PrometheusConnectorHeaderOutput)
}

type ResourceGroupIncludedScope struct {
	// Account Identifier of the account
	AccountId *string `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
	Filter string `pulumi:"filter"`
	// Organization Identifier
	OrgId *string `pulumi:"orgId"`
	// Project Identifier
	ProjectId *string `pulumi:"projectId"`
}

// ResourceGroupIncludedScopeInput is an input type that accepts ResourceGroupIncludedScopeArgs and ResourceGroupIncludedScopeOutput values.
// You can construct a concrete instance of `ResourceGroupIncludedScopeInput` via:
//
//	ResourceGroupIncludedScopeArgs{...}
type ResourceGroupIncludedScopeInput interface {
	pulumi.Input

	ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput
	ToResourceGroupIncludedScopeOutputWithContext(context.Context) ResourceGroupIncludedScopeOutput
}

type ResourceGroupIncludedScopeArgs struct {
	// Account Identifier of the account
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
	Filter pulumi.StringInput `pulumi:"filter"`
	// Organization Identifier
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Project Identifier
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (ResourceGroupIncludedScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupIncludedScope)(nil)).Elem()
}

func (i ResourceGroupIncludedScopeArgs) ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput {
	return i.ToResourceGroupIncludedScopeOutputWithContext(context.Background())
}

func (i ResourceGroupIncludedScopeArgs) ToResourceGroupIncludedScopeOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupIncludedScopeOutput)
}

// ResourceGroupIncludedScopeArrayInput is an input type that accepts ResourceGroupIncludedScopeArray and ResourceGroupIncludedScopeArrayOutput values.
// You can construct a concrete instance of `ResourceGroupIncludedScopeArrayInput` via:
//
//	ResourceGroupIncludedScopeArray{ ResourceGroupIncludedScopeArgs{...} }
type ResourceGroupIncludedScopeArrayInput interface {
	pulumi.Input

	ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput
	ToResourceGroupIncludedScopeArrayOutputWithContext(context.Context) ResourceGroupIncludedScopeArrayOutput
}

type ResourceGroupIncludedScopeArray []ResourceGroupIncludedScopeInput

func (ResourceGroupIncludedScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupIncludedScope)(nil)).Elem()
}

func (i ResourceGroupIncludedScopeArray) ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput {
	return i.ToResourceGroupIncludedScopeArrayOutputWithContext(context.Background())
}

func (i ResourceGroupIncludedScopeArray) ToResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupIncludedScopeArrayOutput)
}

type ResourceGroupIncludedScopeOutput struct{ *pulumi.OutputState }

func (ResourceGroupIncludedScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupIncludedScope)(nil)).Elem()
}

func (o ResourceGroupIncludedScopeOutput) ToResourceGroupIncludedScopeOutput() ResourceGroupIncludedScopeOutput {
	return o
}

func (o ResourceGroupIncludedScopeOutput) ToResourceGroupIncludedScopeOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeOutput {
	return o
}

// Account Identifier of the account
func (o ResourceGroupIncludedScopeOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Can be one of these 2 EXCLUDING*CHILD*SCOPES or INCLUDING*CHILD*SCOPES
func (o ResourceGroupIncludedScopeOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) string { return v.Filter }).(pulumi.StringOutput)
}

// Organization Identifier
func (o ResourceGroupIncludedScopeOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Project Identifier
func (o ResourceGroupIncludedScopeOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupIncludedScope) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

type ResourceGroupIncludedScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupIncludedScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupIncludedScope)(nil)).Elem()
}

func (o ResourceGroupIncludedScopeArrayOutput) ToResourceGroupIncludedScopeArrayOutput() ResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o ResourceGroupIncludedScopeArrayOutput) ToResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) ResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o ResourceGroupIncludedScopeArrayOutput) Index(i pulumi.IntInput) ResourceGroupIncludedScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupIncludedScope {
		return vs[0].([]ResourceGroupIncludedScope)[vs[1].(int)]
	}).(ResourceGroupIncludedScopeOutput)
}

type ResourceGroupResourceFilter struct {
	// Include all resource or not
	IncludeAllResources *bool `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources []ResourceGroupResourceFilterResource `pulumi:"resources"`
}

// ResourceGroupResourceFilterInput is an input type that accepts ResourceGroupResourceFilterArgs and ResourceGroupResourceFilterOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterInput` via:
//
//	ResourceGroupResourceFilterArgs{...}
type ResourceGroupResourceFilterInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput
	ToResourceGroupResourceFilterOutputWithContext(context.Context) ResourceGroupResourceFilterOutput
}

type ResourceGroupResourceFilterArgs struct {
	// Include all resource or not
	IncludeAllResources pulumi.BoolPtrInput `pulumi:"includeAllResources"`
	// Resources for a resource group
	Resources ResourceGroupResourceFilterResourceArrayInput `pulumi:"resources"`
}

func (ResourceGroupResourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterArgs) ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput {
	return i.ToResourceGroupResourceFilterOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterArgs) ToResourceGroupResourceFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterOutput)
}

// ResourceGroupResourceFilterArrayInput is an input type that accepts ResourceGroupResourceFilterArray and ResourceGroupResourceFilterArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterArrayInput` via:
//
//	ResourceGroupResourceFilterArray{ ResourceGroupResourceFilterArgs{...} }
type ResourceGroupResourceFilterArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput
	ToResourceGroupResourceFilterArrayOutputWithContext(context.Context) ResourceGroupResourceFilterArrayOutput
}

type ResourceGroupResourceFilterArray []ResourceGroupResourceFilterInput

func (ResourceGroupResourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterArray) ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput {
	return i.ToResourceGroupResourceFilterArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterArray) ToResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterArrayOutput)
}

type ResourceGroupResourceFilterOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterOutput) ToResourceGroupResourceFilterOutput() ResourceGroupResourceFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterOutput) ToResourceGroupResourceFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterOutput {
	return o
}

// Include all resource or not
func (o ResourceGroupResourceFilterOutput) IncludeAllResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilter) *bool { return v.IncludeAllResources }).(pulumi.BoolPtrOutput)
}

// Resources for a resource group
func (o ResourceGroupResourceFilterOutput) Resources() ResourceGroupResourceFilterResourceArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilter) []ResourceGroupResourceFilterResource { return v.Resources }).(ResourceGroupResourceFilterResourceArrayOutput)
}

type ResourceGroupResourceFilterArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterArrayOutput) ToResourceGroupResourceFilterArrayOutput() ResourceGroupResourceFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterArrayOutput) ToResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilter {
		return vs[0].([]ResourceGroupResourceFilter)[vs[1].(int)]
	}).(ResourceGroupResourceFilterOutput)
}

type ResourceGroupResourceFilterResource struct {
	AttributeFilters []ResourceGroupResourceFilterResourceAttributeFilter `pulumi:"attributeFilters"`
	Identifiers      []string                                             `pulumi:"identifiers"`
	ResourceType     string                                               `pulumi:"resourceType"`
}

// ResourceGroupResourceFilterResourceInput is an input type that accepts ResourceGroupResourceFilterResourceArgs and ResourceGroupResourceFilterResourceOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceInput` via:
//
//	ResourceGroupResourceFilterResourceArgs{...}
type ResourceGroupResourceFilterResourceInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput
	ToResourceGroupResourceFilterResourceOutputWithContext(context.Context) ResourceGroupResourceFilterResourceOutput
}

type ResourceGroupResourceFilterResourceArgs struct {
	AttributeFilters ResourceGroupResourceFilterResourceAttributeFilterArrayInput `pulumi:"attributeFilters"`
	Identifiers      pulumi.StringArrayInput                                      `pulumi:"identifiers"`
	ResourceType     pulumi.StringInput                                           `pulumi:"resourceType"`
}

func (ResourceGroupResourceFilterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceArgs) ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput {
	return i.ToResourceGroupResourceFilterResourceOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceArgs) ToResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceOutput)
}

// ResourceGroupResourceFilterResourceArrayInput is an input type that accepts ResourceGroupResourceFilterResourceArray and ResourceGroupResourceFilterResourceArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceArrayInput` via:
//
//	ResourceGroupResourceFilterResourceArray{ ResourceGroupResourceFilterResourceArgs{...} }
type ResourceGroupResourceFilterResourceArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput
	ToResourceGroupResourceFilterResourceArrayOutputWithContext(context.Context) ResourceGroupResourceFilterResourceArrayOutput
}

type ResourceGroupResourceFilterResourceArray []ResourceGroupResourceFilterResourceInput

func (ResourceGroupResourceFilterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceArray) ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput {
	return i.ToResourceGroupResourceFilterResourceArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceArray) ToResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceArrayOutput)
}

type ResourceGroupResourceFilterResourceOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceOutput) ToResourceGroupResourceFilterResourceOutput() ResourceGroupResourceFilterResourceOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceOutput) ToResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceOutput) AttributeFilters() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) []ResourceGroupResourceFilterResourceAttributeFilter {
		return v.AttributeFilters
	}).(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

func (o ResourceGroupResourceFilterResourceOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

func (o ResourceGroupResourceFilterResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type ResourceGroupResourceFilterResourceArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceArrayOutput) ToResourceGroupResourceFilterResourceArrayOutput() ResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceArrayOutput) ToResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilterResource {
		return vs[0].([]ResourceGroupResourceFilterResource)[vs[1].(int)]
	}).(ResourceGroupResourceFilterResourceOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilter struct {
	AttributeName   *string  `pulumi:"attributeName"`
	AttributeValues []string `pulumi:"attributeValues"`
}

// ResourceGroupResourceFilterResourceAttributeFilterInput is an input type that accepts ResourceGroupResourceFilterResourceAttributeFilterArgs and ResourceGroupResourceFilterResourceAttributeFilterOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceAttributeFilterInput` via:
//
//	ResourceGroupResourceFilterResourceAttributeFilterArgs{...}
type ResourceGroupResourceFilterResourceAttributeFilterInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput
	ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput
}

type ResourceGroupResourceFilterResourceAttributeFilterArgs struct {
	AttributeName   pulumi.StringPtrInput   `pulumi:"attributeName"`
	AttributeValues pulumi.StringArrayInput `pulumi:"attributeValues"`
}

func (ResourceGroupResourceFilterResourceAttributeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArgs) ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return i.ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArgs) ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceAttributeFilterOutput)
}

// ResourceGroupResourceFilterResourceAttributeFilterArrayInput is an input type that accepts ResourceGroupResourceFilterResourceAttributeFilterArray and ResourceGroupResourceFilterResourceAttributeFilterArrayOutput values.
// You can construct a concrete instance of `ResourceGroupResourceFilterResourceAttributeFilterArrayInput` via:
//
//	ResourceGroupResourceFilterResourceAttributeFilterArray{ ResourceGroupResourceFilterResourceAttributeFilterArgs{...} }
type ResourceGroupResourceFilterResourceAttributeFilterArrayInput interface {
	pulumi.Input

	ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput
	ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput
}

type ResourceGroupResourceFilterResourceAttributeFilterArray []ResourceGroupResourceFilterResourceAttributeFilterInput

func (ResourceGroupResourceFilterResourceAttributeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArray) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return i.ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Background())
}

func (i ResourceGroupResourceFilterResourceAttributeFilterArray) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilterOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceAttributeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) ToResourceGroupResourceFilterResourceAttributeFilterOutput() ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) ToResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResourceAttributeFilter) *string { return v.AttributeName }).(pulumi.StringPtrOutput)
}

func (o ResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceGroupResourceFilterResourceAttributeFilter) []string { return v.AttributeValues }).(pulumi.StringArrayOutput)
}

type ResourceGroupResourceFilterResourceAttributeFilterArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutput() ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) ResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o ResourceGroupResourceFilterResourceAttributeFilterArrayOutput) Index(i pulumi.IntInput) ResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupResourceFilterResourceAttributeFilter {
		return vs[0].([]ResourceGroupResourceFilterResourceAttributeFilter)[vs[1].(int)]
	}).(ResourceGroupResourceFilterResourceAttributeFilterOutput)
}

type RoleAssignmentsPrincipal struct {
	// Identifier.
	Identifier *string `pulumi:"identifier"`
	// Scope level.
	ScopeLevel *string `pulumi:"scopeLevel"`
	// Type.
	Type string `pulumi:"type"`
}

// RoleAssignmentsPrincipalInput is an input type that accepts RoleAssignmentsPrincipalArgs and RoleAssignmentsPrincipalOutput values.
// You can construct a concrete instance of `RoleAssignmentsPrincipalInput` via:
//
//	RoleAssignmentsPrincipalArgs{...}
type RoleAssignmentsPrincipalInput interface {
	pulumi.Input

	ToRoleAssignmentsPrincipalOutput() RoleAssignmentsPrincipalOutput
	ToRoleAssignmentsPrincipalOutputWithContext(context.Context) RoleAssignmentsPrincipalOutput
}

type RoleAssignmentsPrincipalArgs struct {
	// Identifier.
	Identifier pulumi.StringPtrInput `pulumi:"identifier"`
	// Scope level.
	ScopeLevel pulumi.StringPtrInput `pulumi:"scopeLevel"`
	// Type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RoleAssignmentsPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentsPrincipal)(nil)).Elem()
}

func (i RoleAssignmentsPrincipalArgs) ToRoleAssignmentsPrincipalOutput() RoleAssignmentsPrincipalOutput {
	return i.ToRoleAssignmentsPrincipalOutputWithContext(context.Background())
}

func (i RoleAssignmentsPrincipalArgs) ToRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentsPrincipalOutput)
}

// RoleAssignmentsPrincipalArrayInput is an input type that accepts RoleAssignmentsPrincipalArray and RoleAssignmentsPrincipalArrayOutput values.
// You can construct a concrete instance of `RoleAssignmentsPrincipalArrayInput` via:
//
//	RoleAssignmentsPrincipalArray{ RoleAssignmentsPrincipalArgs{...} }
type RoleAssignmentsPrincipalArrayInput interface {
	pulumi.Input

	ToRoleAssignmentsPrincipalArrayOutput() RoleAssignmentsPrincipalArrayOutput
	ToRoleAssignmentsPrincipalArrayOutputWithContext(context.Context) RoleAssignmentsPrincipalArrayOutput
}

type RoleAssignmentsPrincipalArray []RoleAssignmentsPrincipalInput

func (RoleAssignmentsPrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentsPrincipal)(nil)).Elem()
}

func (i RoleAssignmentsPrincipalArray) ToRoleAssignmentsPrincipalArrayOutput() RoleAssignmentsPrincipalArrayOutput {
	return i.ToRoleAssignmentsPrincipalArrayOutputWithContext(context.Background())
}

func (i RoleAssignmentsPrincipalArray) ToRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleAssignmentsPrincipalArrayOutput)
}

type RoleAssignmentsPrincipalOutput struct{ *pulumi.OutputState }

func (RoleAssignmentsPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleAssignmentsPrincipal)(nil)).Elem()
}

func (o RoleAssignmentsPrincipalOutput) ToRoleAssignmentsPrincipalOutput() RoleAssignmentsPrincipalOutput {
	return o
}

func (o RoleAssignmentsPrincipalOutput) ToRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalOutput {
	return o
}

// Identifier.
func (o RoleAssignmentsPrincipalOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentsPrincipal) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

// Scope level.
func (o RoleAssignmentsPrincipalOutput) ScopeLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleAssignmentsPrincipal) *string { return v.ScopeLevel }).(pulumi.StringPtrOutput)
}

// Type.
func (o RoleAssignmentsPrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoleAssignmentsPrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type RoleAssignmentsPrincipalArrayOutput struct{ *pulumi.OutputState }

func (RoleAssignmentsPrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleAssignmentsPrincipal)(nil)).Elem()
}

func (o RoleAssignmentsPrincipalArrayOutput) ToRoleAssignmentsPrincipalArrayOutput() RoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o RoleAssignmentsPrincipalArrayOutput) ToRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) RoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o RoleAssignmentsPrincipalArrayOutput) Index(i pulumi.IntInput) RoleAssignmentsPrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleAssignmentsPrincipal {
		return vs[0].([]RoleAssignmentsPrincipal)[vs[1].(int)]
	}).(RoleAssignmentsPrincipalOutput)
}

type SecretSshkeyKerberos struct {
	// Username to use for authentication.
	Principal string `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm string `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod *string `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpec *SecretSshkeyKerberosTgtKeyTabFilePathSpec `pulumi:"tgtKeyTabFilePathSpec"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpec *SecretSshkeyKerberosTgtPasswordSpec `pulumi:"tgtPasswordSpec"`
}

// SecretSshkeyKerberosInput is an input type that accepts SecretSshkeyKerberosArgs and SecretSshkeyKerberosOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosInput` via:
//
//	SecretSshkeyKerberosArgs{...}
type SecretSshkeyKerberosInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput
	ToSecretSshkeyKerberosOutputWithContext(context.Context) SecretSshkeyKerberosOutput
}

type SecretSshkeyKerberosArgs struct {
	// Username to use for authentication.
	Principal pulumi.StringInput `pulumi:"principal"`
	// Reference to a secret containing the password to use for authentication.
	Realm pulumi.StringInput `pulumi:"realm"`
	// Method to generate tgt
	TgtGenerationMethod pulumi.StringPtrInput `pulumi:"tgtGenerationMethod"`
	// Authenticate to App Dynamics using username and password.
	TgtKeyTabFilePathSpec SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput `pulumi:"tgtKeyTabFilePathSpec"`
	// Authenticate to App Dynamics using username and password.
	TgtPasswordSpec SecretSshkeyKerberosTgtPasswordSpecPtrInput `pulumi:"tgtPasswordSpec"`
}

func (SecretSshkeyKerberosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberos)(nil)).Elem()
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput {
	return i.ToSecretSshkeyKerberosOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosOutputWithContext(ctx context.Context) SecretSshkeyKerberosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosOutput)
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return i.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosArgs) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosOutput).ToSecretSshkeyKerberosPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosPtrInput is an input type that accepts SecretSshkeyKerberosArgs, SecretSshkeyKerberosPtr and SecretSshkeyKerberosPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosPtrInput` via:
//
//	        SecretSshkeyKerberosArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput
	ToSecretSshkeyKerberosPtrOutputWithContext(context.Context) SecretSshkeyKerberosPtrOutput
}

type secretSshkeyKerberosPtrType SecretSshkeyKerberosArgs

func SecretSshkeyKerberosPtr(v *SecretSshkeyKerberosArgs) SecretSshkeyKerberosPtrInput {
	return (*secretSshkeyKerberosPtrType)(v)
}

func (*secretSshkeyKerberosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberos)(nil)).Elem()
}

func (i *secretSshkeyKerberosPtrType) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return i.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosPtrType) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosPtrOutput)
}

type SecretSshkeyKerberosOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberos)(nil)).Elem()
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosOutput() SecretSshkeyKerberosOutput {
	return o
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosOutputWithContext(ctx context.Context) SecretSshkeyKerberosOutput {
	return o
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return o.ToSecretSshkeyKerberosPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosOutput) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberos) *SecretSshkeyKerberos {
		return &v
	}).(SecretSshkeyKerberosPtrOutput)
}

// Username to use for authentication.
func (o SecretSshkeyKerberosOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) string { return v.Principal }).(pulumi.StringOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o SecretSshkeyKerberosOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) string { return v.Realm }).(pulumi.StringOutput)
}

// Method to generate tgt
func (o SecretSshkeyKerberosOutput) TgtGenerationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *string { return v.TgtGenerationMethod }).(pulumi.StringPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosOutput) TgtKeyTabFilePathSpec() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		return v.TgtKeyTabFilePathSpec
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosOutput) TgtPasswordSpec() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberos) *SecretSshkeyKerberosTgtPasswordSpec { return v.TgtPasswordSpec }).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberos)(nil)).Elem()
}

func (o SecretSshkeyKerberosPtrOutput) ToSecretSshkeyKerberosPtrOutput() SecretSshkeyKerberosPtrOutput {
	return o
}

func (o SecretSshkeyKerberosPtrOutput) ToSecretSshkeyKerberosPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosPtrOutput {
	return o
}

func (o SecretSshkeyKerberosPtrOutput) Elem() SecretSshkeyKerberosOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) SecretSshkeyKerberos {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberos
		return ret
	}).(SecretSshkeyKerberosOutput)
}

// Username to use for authentication.
func (o SecretSshkeyKerberosPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return &v.Principal
	}).(pulumi.StringPtrOutput)
}

// Reference to a secret containing the password to use for authentication.
func (o SecretSshkeyKerberosPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

// Method to generate tgt
func (o SecretSshkeyKerberosPtrOutput) TgtGenerationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *string {
		if v == nil {
			return nil
		}
		return v.TgtGenerationMethod
	}).(pulumi.StringPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosPtrOutput) TgtKeyTabFilePathSpec() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		if v == nil {
			return nil
		}
		return v.TgtKeyTabFilePathSpec
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

// Authenticate to App Dynamics using username and password.
func (o SecretSshkeyKerberosPtrOutput) TgtPasswordSpec() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberos) *SecretSshkeyKerberosTgtPasswordSpec {
		if v == nil {
			return nil
		}
		return v.TgtPasswordSpec
	}).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpec struct {
	KeyPath *string `pulumi:"keyPath"`
}

// SecretSshkeyKerberosTgtKeyTabFilePathSpecInput is an input type that accepts SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs and SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtKeyTabFilePathSpecInput` via:
//
//	SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{...}
type SecretSshkeyKerberosTgtKeyTabFilePathSpecInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput
	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs struct {
	KeyPath pulumi.StringPtrInput `pulumi:"keyPath"`
}

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput)
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput).ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput is an input type that accepts SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs, SecretSshkeyKerberosTgtKeyTabFilePathSpecPtr and SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput` via:
//
//	        SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput
	ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput
}

type secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs

func SecretSshkeyKerberosTgtKeyTabFilePathSpecPtr(v *SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput {
	return (*secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType)(v)
}

func (*secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i *secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosTgtKeyTabFilePathSpecPtrType) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberosTgtKeyTabFilePathSpec) *SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		return &v
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput)
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberosTgtKeyTabFilePathSpec) *string { return v.KeyPath }).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput() SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) ToSecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) Elem() SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtKeyTabFilePathSpec) SecretSshkeyKerberosTgtKeyTabFilePathSpec {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberosTgtKeyTabFilePathSpec
		return ret
	}).(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput)
}

func (o SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtKeyTabFilePathSpec) *string {
		if v == nil {
			return nil
		}
		return v.KeyPath
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpec struct {
	Password *string `pulumi:"password"`
}

// SecretSshkeyKerberosTgtPasswordSpecInput is an input type that accepts SecretSshkeyKerberosTgtPasswordSpecArgs and SecretSshkeyKerberosTgtPasswordSpecOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtPasswordSpecInput` via:
//
//	SecretSshkeyKerberosTgtPasswordSpecArgs{...}
type SecretSshkeyKerberosTgtPasswordSpecInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput
	ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput
}

type SecretSshkeyKerberosTgtPasswordSpecArgs struct {
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (SecretSshkeyKerberosTgtPasswordSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecOutput)
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (i SecretSshkeyKerberosTgtPasswordSpecArgs) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecOutput).ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx)
}

// SecretSshkeyKerberosTgtPasswordSpecPtrInput is an input type that accepts SecretSshkeyKerberosTgtPasswordSpecArgs, SecretSshkeyKerberosTgtPasswordSpecPtr and SecretSshkeyKerberosTgtPasswordSpecPtrOutput values.
// You can construct a concrete instance of `SecretSshkeyKerberosTgtPasswordSpecPtrInput` via:
//
//	        SecretSshkeyKerberosTgtPasswordSpecArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeyKerberosTgtPasswordSpecPtrInput interface {
	pulumi.Input

	ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput
	ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput
}

type secretSshkeyKerberosTgtPasswordSpecPtrType SecretSshkeyKerberosTgtPasswordSpecArgs

func SecretSshkeyKerberosTgtPasswordSpecPtr(v *SecretSshkeyKerberosTgtPasswordSpecArgs) SecretSshkeyKerberosTgtPasswordSpecPtrInput {
	return (*secretSshkeyKerberosTgtPasswordSpecPtrType)(v)
}

func (*secretSshkeyKerberosTgtPasswordSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (i *secretSshkeyKerberosTgtPasswordSpecPtrType) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return i.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (i *secretSshkeyKerberosTgtPasswordSpecPtrType) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpecOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtPasswordSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecOutput() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(context.Background())
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeyKerberosTgtPasswordSpec) *SecretSshkeyKerberosTgtPasswordSpec {
		return &v
	}).(SecretSshkeyKerberosTgtPasswordSpecPtrOutput)
}

func (o SecretSshkeyKerberosTgtPasswordSpecOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeyKerberosTgtPasswordSpec) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type SecretSshkeyKerberosTgtPasswordSpecPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeyKerberosTgtPasswordSpec)(nil)).Elem()
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutput() SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) ToSecretSshkeyKerberosTgtPasswordSpecPtrOutputWithContext(ctx context.Context) SecretSshkeyKerberosTgtPasswordSpecPtrOutput {
	return o
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) Elem() SecretSshkeyKerberosTgtPasswordSpecOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtPasswordSpec) SecretSshkeyKerberosTgtPasswordSpec {
		if v != nil {
			return *v
		}
		var ret SecretSshkeyKerberosTgtPasswordSpec
		return ret
	}).(SecretSshkeyKerberosTgtPasswordSpecOutput)
}

func (o SecretSshkeyKerberosTgtPasswordSpecPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeyKerberosTgtPasswordSpec) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySsh struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType string `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredential *SecretSshkeySshSshPasswordCredential `pulumi:"sshPasswordCredential"`
	// SSH credential of type keyPath
	SshkeyPathCredential *SecretSshkeySshSshkeyPathCredential `pulumi:"sshkeyPathCredential"`
	// SSH credential of type keyReference
	SshkeyReferenceCredential *SecretSshkeySshSshkeyReferenceCredential `pulumi:"sshkeyReferenceCredential"`
}

// SecretSshkeySshInput is an input type that accepts SecretSshkeySshArgs and SecretSshkeySshOutput values.
// You can construct a concrete instance of `SecretSshkeySshInput` via:
//
//	SecretSshkeySshArgs{...}
type SecretSshkeySshInput interface {
	pulumi.Input

	ToSecretSshkeySshOutput() SecretSshkeySshOutput
	ToSecretSshkeySshOutputWithContext(context.Context) SecretSshkeySshOutput
}

type SecretSshkeySshArgs struct {
	// This specifies SSH credential type as Password, KeyPath or KeyReference
	CredentialType pulumi.StringInput `pulumi:"credentialType"`
	// SSH credential of type keyReference
	SshPasswordCredential SecretSshkeySshSshPasswordCredentialPtrInput `pulumi:"sshPasswordCredential"`
	// SSH credential of type keyPath
	SshkeyPathCredential SecretSshkeySshSshkeyPathCredentialPtrInput `pulumi:"sshkeyPathCredential"`
	// SSH credential of type keyReference
	SshkeyReferenceCredential SecretSshkeySshSshkeyReferenceCredentialPtrInput `pulumi:"sshkeyReferenceCredential"`
}

func (SecretSshkeySshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySsh)(nil)).Elem()
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshOutput() SecretSshkeySshOutput {
	return i.ToSecretSshkeySshOutputWithContext(context.Background())
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshOutputWithContext(ctx context.Context) SecretSshkeySshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshOutput)
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return i.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshArgs) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshOutput).ToSecretSshkeySshPtrOutputWithContext(ctx)
}

// SecretSshkeySshPtrInput is an input type that accepts SecretSshkeySshArgs, SecretSshkeySshPtr and SecretSshkeySshPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshPtrInput` via:
//
//	        SecretSshkeySshArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput
	ToSecretSshkeySshPtrOutputWithContext(context.Context) SecretSshkeySshPtrOutput
}

type secretSshkeySshPtrType SecretSshkeySshArgs

func SecretSshkeySshPtr(v *SecretSshkeySshArgs) SecretSshkeySshPtrInput {
	return (*secretSshkeySshPtrType)(v)
}

func (*secretSshkeySshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySsh)(nil)).Elem()
}

func (i *secretSshkeySshPtrType) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return i.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshPtrType) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshPtrOutput)
}

type SecretSshkeySshOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySsh)(nil)).Elem()
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshOutput() SecretSshkeySshOutput {
	return o
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshOutputWithContext(ctx context.Context) SecretSshkeySshOutput {
	return o
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return o.ToSecretSshkeySshPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshOutput) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySsh) *SecretSshkeySsh {
		return &v
	}).(SecretSshkeySshPtrOutput)
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o SecretSshkeySshOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySsh) string { return v.CredentialType }).(pulumi.StringOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshOutput) SshPasswordCredential() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshPasswordCredential { return v.SshPasswordCredential }).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH credential of type keyPath
func (o SecretSshkeySshOutput) SshkeyPathCredential() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshkeyPathCredential { return v.SshkeyPathCredential }).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshOutput) SshkeyReferenceCredential() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyT(func(v SecretSshkeySsh) *SecretSshkeySshSshkeyReferenceCredential { return v.SshkeyReferenceCredential }).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySsh)(nil)).Elem()
}

func (o SecretSshkeySshPtrOutput) ToSecretSshkeySshPtrOutput() SecretSshkeySshPtrOutput {
	return o
}

func (o SecretSshkeySshPtrOutput) ToSecretSshkeySshPtrOutputWithContext(ctx context.Context) SecretSshkeySshPtrOutput {
	return o
}

func (o SecretSshkeySshPtrOutput) Elem() SecretSshkeySshOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) SecretSshkeySsh {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySsh
		return ret
	}).(SecretSshkeySshOutput)
}

// This specifies SSH credential type as Password, KeyPath or KeyReference
func (o SecretSshkeySshPtrOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialType
	}).(pulumi.StringPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshPtrOutput) SshPasswordCredential() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshPasswordCredential {
		if v == nil {
			return nil
		}
		return v.SshPasswordCredential
	}).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

// SSH credential of type keyPath
func (o SecretSshkeySshPtrOutput) SshkeyPathCredential() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshkeyPathCredential {
		if v == nil {
			return nil
		}
		return v.SshkeyPathCredential
	}).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

// SSH credential of type keyReference
func (o SecretSshkeySshPtrOutput) SshkeyReferenceCredential() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySsh) *SecretSshkeySshSshkeyReferenceCredential {
		if v == nil {
			return nil
		}
		return v.SshkeyReferenceCredential
	}).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshSshPasswordCredential struct {
	Password string `pulumi:"password"`
	UserName string `pulumi:"userName"`
}

// SecretSshkeySshSshPasswordCredentialInput is an input type that accepts SecretSshkeySshSshPasswordCredentialArgs and SecretSshkeySshSshPasswordCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshPasswordCredentialInput` via:
//
//	SecretSshkeySshSshPasswordCredentialArgs{...}
type SecretSshkeySshSshPasswordCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput
	ToSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Context) SecretSshkeySshSshPasswordCredentialOutput
}

type SecretSshkeySshSshPasswordCredentialArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (SecretSshkeySshSshPasswordCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialOutput)
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshPasswordCredentialArgs) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialOutput).ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshPasswordCredentialPtrInput is an input type that accepts SecretSshkeySshSshPasswordCredentialArgs, SecretSshkeySshSshPasswordCredentialPtr and SecretSshkeySshSshPasswordCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshPasswordCredentialPtrInput` via:
//
//	        SecretSshkeySshSshPasswordCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshPasswordCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput
	ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput
}

type secretSshkeySshSshPasswordCredentialPtrType SecretSshkeySshSshPasswordCredentialArgs

func SecretSshkeySshSshPasswordCredentialPtr(v *SecretSshkeySshSshPasswordCredentialArgs) SecretSshkeySshSshPasswordCredentialPtrInput {
	return (*secretSshkeySshSshPasswordCredentialPtrType)(v)
}

func (*secretSshkeySshSshPasswordCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshPasswordCredentialPtrType) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return i.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshPasswordCredentialPtrType) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

type SecretSshkeySshSshPasswordCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshPasswordCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialOutput() SecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshPasswordCredentialOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshPasswordCredential) *SecretSshkeySshSshPasswordCredential {
		return &v
	}).(SecretSshkeySshSshPasswordCredentialPtrOutput)
}

func (o SecretSshkeySshSshPasswordCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshPasswordCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o SecretSshkeySshSshPasswordCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshPasswordCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshPasswordCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshPasswordCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutput() SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) ToSecretSshkeySshSshPasswordCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshPasswordCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) Elem() SecretSshkeySshSshPasswordCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) SecretSshkeySshSshPasswordCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshPasswordCredential
		return ret
	}).(SecretSshkeySshSshPasswordCredentialOutput)
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshPasswordCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshPasswordCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySshSshkeyPathCredential struct {
	EncryptedPassphrase *string `pulumi:"encryptedPassphrase"`
	KeyPath             string  `pulumi:"keyPath"`
	UserName            string  `pulumi:"userName"`
}

// SecretSshkeySshSshkeyPathCredentialInput is an input type that accepts SecretSshkeySshSshkeyPathCredentialArgs and SecretSshkeySshSshkeyPathCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyPathCredentialInput` via:
//
//	SecretSshkeySshSshkeyPathCredentialArgs{...}
type SecretSshkeySshSshkeyPathCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput
	ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Context) SecretSshkeySshSshkeyPathCredentialOutput
}

type SecretSshkeySshSshkeyPathCredentialArgs struct {
	EncryptedPassphrase pulumi.StringPtrInput `pulumi:"encryptedPassphrase"`
	KeyPath             pulumi.StringInput    `pulumi:"keyPath"`
	UserName            pulumi.StringInput    `pulumi:"userName"`
}

func (SecretSshkeySshSshkeyPathCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialOutput)
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyPathCredentialArgs) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialOutput).ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshkeyPathCredentialPtrInput is an input type that accepts SecretSshkeySshSshkeyPathCredentialArgs, SecretSshkeySshSshkeyPathCredentialPtr and SecretSshkeySshSshkeyPathCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyPathCredentialPtrInput` via:
//
//	        SecretSshkeySshSshkeyPathCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshkeyPathCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput
	ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput
}

type secretSshkeySshSshkeyPathCredentialPtrType SecretSshkeySshSshkeyPathCredentialArgs

func SecretSshkeySshSshkeyPathCredentialPtr(v *SecretSshkeySshSshkeyPathCredentialArgs) SecretSshkeySshSshkeyPathCredentialPtrInput {
	return (*secretSshkeySshSshkeyPathCredentialPtrType)(v)
}

func (*secretSshkeySshSshkeyPathCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshkeyPathCredentialPtrType) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshkeyPathCredentialPtrType) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

type SecretSshkeySshSshkeyPathCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyPathCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialOutput() SecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshkeyPathCredential) *SecretSshkeySshSshkeyPathCredential {
		return &v
	}).(SecretSshkeySshSshkeyPathCredentialPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) *string { return v.EncryptedPassphrase }).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) string { return v.KeyPath }).(pulumi.StringOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyPathCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshkeyPathCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyPathCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutput() SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) ToSecretSshkeySshSshkeyPathCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyPathCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) Elem() SecretSshkeySshSshkeyPathCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) SecretSshkeySshSshkeyPathCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshkeyPathCredential
		return ret
	}).(SecretSshkeySshSshkeyPathCredentialOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return v.EncryptedPassphrase
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return &v.KeyPath
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyPathCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyPathCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SecretSshkeySshSshkeyReferenceCredential struct {
	EncryptedPassphrase *string `pulumi:"encryptedPassphrase"`
	Key                 string  `pulumi:"key"`
	UserName            string  `pulumi:"userName"`
}

// SecretSshkeySshSshkeyReferenceCredentialInput is an input type that accepts SecretSshkeySshSshkeyReferenceCredentialArgs and SecretSshkeySshSshkeyReferenceCredentialOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyReferenceCredentialInput` via:
//
//	SecretSshkeySshSshkeyReferenceCredentialArgs{...}
type SecretSshkeySshSshkeyReferenceCredentialInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput
	ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput
}

type SecretSshkeySshSshkeyReferenceCredentialArgs struct {
	EncryptedPassphrase pulumi.StringPtrInput `pulumi:"encryptedPassphrase"`
	Key                 pulumi.StringInput    `pulumi:"key"`
	UserName            pulumi.StringInput    `pulumi:"userName"`
}

func (SecretSshkeySshSshkeyReferenceCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialOutput)
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (i SecretSshkeySshSshkeyReferenceCredentialArgs) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialOutput).ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx)
}

// SecretSshkeySshSshkeyReferenceCredentialPtrInput is an input type that accepts SecretSshkeySshSshkeyReferenceCredentialArgs, SecretSshkeySshSshkeyReferenceCredentialPtr and SecretSshkeySshSshkeyReferenceCredentialPtrOutput values.
// You can construct a concrete instance of `SecretSshkeySshSshkeyReferenceCredentialPtrInput` via:
//
//	        SecretSshkeySshSshkeyReferenceCredentialArgs{...}
//
//	or:
//
//	        nil
type SecretSshkeySshSshkeyReferenceCredentialPtrInput interface {
	pulumi.Input

	ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput
	ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput
}

type secretSshkeySshSshkeyReferenceCredentialPtrType SecretSshkeySshSshkeyReferenceCredentialArgs

func SecretSshkeySshSshkeyReferenceCredentialPtr(v *SecretSshkeySshSshkeyReferenceCredentialArgs) SecretSshkeySshSshkeyReferenceCredentialPtrInput {
	return (*secretSshkeySshSshkeyReferenceCredentialPtrType)(v)
}

func (*secretSshkeySshSshkeyReferenceCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i *secretSshkeySshSshkeyReferenceCredentialPtrType) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return i.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (i *secretSshkeySshSshkeyReferenceCredentialPtrType) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

type SecretSshkeySshSshkeyReferenceCredentialOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyReferenceCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialOutput() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(context.Background())
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretSshkeySshSshkeyReferenceCredential) *SecretSshkeySshSshkeyReferenceCredential {
		return &v
	}).(SecretSshkeySshSshkeyReferenceCredentialPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) *string { return v.EncryptedPassphrase }).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) string { return v.Key }).(pulumi.StringOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretSshkeySshSshkeyReferenceCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type SecretSshkeySshSshkeyReferenceCredentialPtrOutput struct{ *pulumi.OutputState }

func (SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutput() SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) ToSecretSshkeySshSshkeyReferenceCredentialPtrOutputWithContext(ctx context.Context) SecretSshkeySshSshkeyReferenceCredentialPtrOutput {
	return o
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) Elem() SecretSshkeySshSshkeyReferenceCredentialOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) SecretSshkeySshSshkeyReferenceCredential {
		if v != nil {
			return *v
		}
		var ret SecretSshkeySshSshkeyReferenceCredential
		return ret
	}).(SecretSshkeySshSshkeyReferenceCredentialOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) EncryptedPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return v.EncryptedPassphrase
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o SecretSshkeySshSshkeyReferenceCredentialPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretSshkeySshSshkeyReferenceCredential) *string {
		if v == nil {
			return nil
		}
		return &v.UserName
	}).(pulumi.StringPtrOutput)
}

type SloRequest struct {
	// Description for the SLO.
	Description *string `pulumi:"description"`
	// Name for the SLO.
	Name string `pulumi:"name"`
	// Notification rule references for the SLO.
	NotificationRuleRefs []SloRequestNotificationRuleRef `pulumi:"notificationRuleRefs"`
	// SLO Target specification.
	SloTarget SloRequestSloTarget `pulumi:"sloTarget"`
	// Specification of the SLO.
	Spec string `pulumi:"spec"`
	// Tags for the SLO. comma-separated key value string pairs.
	Tags []string `pulumi:"tags"`
	// Type of the SLO.
	Type string `pulumi:"type"`
	// User journey reference list for the SLO.
	UserJourneyRefs []string `pulumi:"userJourneyRefs"`
}

// SloRequestInput is an input type that accepts SloRequestArgs and SloRequestOutput values.
// You can construct a concrete instance of `SloRequestInput` via:
//
//	SloRequestArgs{...}
type SloRequestInput interface {
	pulumi.Input

	ToSloRequestOutput() SloRequestOutput
	ToSloRequestOutputWithContext(context.Context) SloRequestOutput
}

type SloRequestArgs struct {
	// Description for the SLO.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name for the SLO.
	Name pulumi.StringInput `pulumi:"name"`
	// Notification rule references for the SLO.
	NotificationRuleRefs SloRequestNotificationRuleRefArrayInput `pulumi:"notificationRuleRefs"`
	// SLO Target specification.
	SloTarget SloRequestSloTargetInput `pulumi:"sloTarget"`
	// Specification of the SLO.
	Spec pulumi.StringInput `pulumi:"spec"`
	// Tags for the SLO. comma-separated key value string pairs.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Type of the SLO.
	Type pulumi.StringInput `pulumi:"type"`
	// User journey reference list for the SLO.
	UserJourneyRefs pulumi.StringArrayInput `pulumi:"userJourneyRefs"`
}

func (SloRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequest)(nil)).Elem()
}

func (i SloRequestArgs) ToSloRequestOutput() SloRequestOutput {
	return i.ToSloRequestOutputWithContext(context.Background())
}

func (i SloRequestArgs) ToSloRequestOutputWithContext(ctx context.Context) SloRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestOutput)
}

func (i SloRequestArgs) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return i.ToSloRequestPtrOutputWithContext(context.Background())
}

func (i SloRequestArgs) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestOutput).ToSloRequestPtrOutputWithContext(ctx)
}

// SloRequestPtrInput is an input type that accepts SloRequestArgs, SloRequestPtr and SloRequestPtrOutput values.
// You can construct a concrete instance of `SloRequestPtrInput` via:
//
//	        SloRequestArgs{...}
//
//	or:
//
//	        nil
type SloRequestPtrInput interface {
	pulumi.Input

	ToSloRequestPtrOutput() SloRequestPtrOutput
	ToSloRequestPtrOutputWithContext(context.Context) SloRequestPtrOutput
}

type sloRequestPtrType SloRequestArgs

func SloRequestPtr(v *SloRequestArgs) SloRequestPtrInput {
	return (*sloRequestPtrType)(v)
}

func (*sloRequestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequest)(nil)).Elem()
}

func (i *sloRequestPtrType) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return i.ToSloRequestPtrOutputWithContext(context.Background())
}

func (i *sloRequestPtrType) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestPtrOutput)
}

type SloRequestOutput struct{ *pulumi.OutputState }

func (SloRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequest)(nil)).Elem()
}

func (o SloRequestOutput) ToSloRequestOutput() SloRequestOutput {
	return o
}

func (o SloRequestOutput) ToSloRequestOutputWithContext(ctx context.Context) SloRequestOutput {
	return o
}

func (o SloRequestOutput) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return o.ToSloRequestPtrOutputWithContext(context.Background())
}

func (o SloRequestOutput) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloRequest) *SloRequest {
		return &v
	}).(SloRequestPtrOutput)
}

// Description for the SLO.
func (o SloRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloRequest) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name for the SLO.
func (o SloRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequest) string { return v.Name }).(pulumi.StringOutput)
}

// Notification rule references for the SLO.
func (o SloRequestOutput) NotificationRuleRefs() SloRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v SloRequest) []SloRequestNotificationRuleRef { return v.NotificationRuleRefs }).(SloRequestNotificationRuleRefArrayOutput)
}

// SLO Target specification.
func (o SloRequestOutput) SloTarget() SloRequestSloTargetOutput {
	return o.ApplyT(func(v SloRequest) SloRequestSloTarget { return v.SloTarget }).(SloRequestSloTargetOutput)
}

// Specification of the SLO.
func (o SloRequestOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequest) string { return v.Spec }).(pulumi.StringOutput)
}

// Tags for the SLO. comma-separated key value string pairs.
func (o SloRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SloRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Type of the SLO.
func (o SloRequestOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequest) string { return v.Type }).(pulumi.StringOutput)
}

// User journey reference list for the SLO.
func (o SloRequestOutput) UserJourneyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SloRequest) []string { return v.UserJourneyRefs }).(pulumi.StringArrayOutput)
}

type SloRequestPtrOutput struct{ *pulumi.OutputState }

func (SloRequestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequest)(nil)).Elem()
}

func (o SloRequestPtrOutput) ToSloRequestPtrOutput() SloRequestPtrOutput {
	return o
}

func (o SloRequestPtrOutput) ToSloRequestPtrOutputWithContext(ctx context.Context) SloRequestPtrOutput {
	return o
}

func (o SloRequestPtrOutput) Elem() SloRequestOutput {
	return o.ApplyT(func(v *SloRequest) SloRequest {
		if v != nil {
			return *v
		}
		var ret SloRequest
		return ret
	}).(SloRequestOutput)
}

// Description for the SLO.
func (o SloRequestPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Name for the SLO.
func (o SloRequestPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Notification rule references for the SLO.
func (o SloRequestPtrOutput) NotificationRuleRefs() SloRequestNotificationRuleRefArrayOutput {
	return o.ApplyT(func(v *SloRequest) []SloRequestNotificationRuleRef {
		if v == nil {
			return nil
		}
		return v.NotificationRuleRefs
	}).(SloRequestNotificationRuleRefArrayOutput)
}

// SLO Target specification.
func (o SloRequestPtrOutput) SloTarget() SloRequestSloTargetPtrOutput {
	return o.ApplyT(func(v *SloRequest) *SloRequestSloTarget {
		if v == nil {
			return nil
		}
		return &v.SloTarget
	}).(SloRequestSloTargetPtrOutput)
}

// Specification of the SLO.
func (o SloRequestPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(pulumi.StringPtrOutput)
}

// Tags for the SLO. comma-separated key value string pairs.
func (o SloRequestPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SloRequest) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// Type of the SLO.
func (o SloRequestPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequest) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// User journey reference list for the SLO.
func (o SloRequestPtrOutput) UserJourneyRefs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SloRequest) []string {
		if v == nil {
			return nil
		}
		return v.UserJourneyRefs
	}).(pulumi.StringArrayOutput)
}

type SloRequestNotificationRuleRef struct {
	Enabled             bool   `pulumi:"enabled"`
	NotificationRuleRef string `pulumi:"notificationRuleRef"`
}

// SloRequestNotificationRuleRefInput is an input type that accepts SloRequestNotificationRuleRefArgs and SloRequestNotificationRuleRefOutput values.
// You can construct a concrete instance of `SloRequestNotificationRuleRefInput` via:
//
//	SloRequestNotificationRuleRefArgs{...}
type SloRequestNotificationRuleRefInput interface {
	pulumi.Input

	ToSloRequestNotificationRuleRefOutput() SloRequestNotificationRuleRefOutput
	ToSloRequestNotificationRuleRefOutputWithContext(context.Context) SloRequestNotificationRuleRefOutput
}

type SloRequestNotificationRuleRefArgs struct {
	Enabled             pulumi.BoolInput   `pulumi:"enabled"`
	NotificationRuleRef pulumi.StringInput `pulumi:"notificationRuleRef"`
}

func (SloRequestNotificationRuleRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestNotificationRuleRef)(nil)).Elem()
}

func (i SloRequestNotificationRuleRefArgs) ToSloRequestNotificationRuleRefOutput() SloRequestNotificationRuleRefOutput {
	return i.ToSloRequestNotificationRuleRefOutputWithContext(context.Background())
}

func (i SloRequestNotificationRuleRefArgs) ToSloRequestNotificationRuleRefOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestNotificationRuleRefOutput)
}

// SloRequestNotificationRuleRefArrayInput is an input type that accepts SloRequestNotificationRuleRefArray and SloRequestNotificationRuleRefArrayOutput values.
// You can construct a concrete instance of `SloRequestNotificationRuleRefArrayInput` via:
//
//	SloRequestNotificationRuleRefArray{ SloRequestNotificationRuleRefArgs{...} }
type SloRequestNotificationRuleRefArrayInput interface {
	pulumi.Input

	ToSloRequestNotificationRuleRefArrayOutput() SloRequestNotificationRuleRefArrayOutput
	ToSloRequestNotificationRuleRefArrayOutputWithContext(context.Context) SloRequestNotificationRuleRefArrayOutput
}

type SloRequestNotificationRuleRefArray []SloRequestNotificationRuleRefInput

func (SloRequestNotificationRuleRefArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloRequestNotificationRuleRef)(nil)).Elem()
}

func (i SloRequestNotificationRuleRefArray) ToSloRequestNotificationRuleRefArrayOutput() SloRequestNotificationRuleRefArrayOutput {
	return i.ToSloRequestNotificationRuleRefArrayOutputWithContext(context.Background())
}

func (i SloRequestNotificationRuleRefArray) ToSloRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestNotificationRuleRefArrayOutput)
}

type SloRequestNotificationRuleRefOutput struct{ *pulumi.OutputState }

func (SloRequestNotificationRuleRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestNotificationRuleRef)(nil)).Elem()
}

func (o SloRequestNotificationRuleRefOutput) ToSloRequestNotificationRuleRefOutput() SloRequestNotificationRuleRefOutput {
	return o
}

func (o SloRequestNotificationRuleRefOutput) ToSloRequestNotificationRuleRefOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefOutput {
	return o
}

func (o SloRequestNotificationRuleRefOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SloRequestNotificationRuleRef) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o SloRequestNotificationRuleRefOutput) NotificationRuleRef() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequestNotificationRuleRef) string { return v.NotificationRuleRef }).(pulumi.StringOutput)
}

type SloRequestNotificationRuleRefArrayOutput struct{ *pulumi.OutputState }

func (SloRequestNotificationRuleRefArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloRequestNotificationRuleRef)(nil)).Elem()
}

func (o SloRequestNotificationRuleRefArrayOutput) ToSloRequestNotificationRuleRefArrayOutput() SloRequestNotificationRuleRefArrayOutput {
	return o
}

func (o SloRequestNotificationRuleRefArrayOutput) ToSloRequestNotificationRuleRefArrayOutputWithContext(ctx context.Context) SloRequestNotificationRuleRefArrayOutput {
	return o
}

func (o SloRequestNotificationRuleRefArrayOutput) Index(i pulumi.IntInput) SloRequestNotificationRuleRefOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloRequestNotificationRuleRef {
		return vs[0].([]SloRequestNotificationRuleRef)[vs[1].(int)]
	}).(SloRequestNotificationRuleRefOutput)
}

type SloRequestSloTarget struct {
	SloTargetPercentage float64 `pulumi:"sloTargetPercentage"`
	Spec                string  `pulumi:"spec"`
	Type                string  `pulumi:"type"`
}

// SloRequestSloTargetInput is an input type that accepts SloRequestSloTargetArgs and SloRequestSloTargetOutput values.
// You can construct a concrete instance of `SloRequestSloTargetInput` via:
//
//	SloRequestSloTargetArgs{...}
type SloRequestSloTargetInput interface {
	pulumi.Input

	ToSloRequestSloTargetOutput() SloRequestSloTargetOutput
	ToSloRequestSloTargetOutputWithContext(context.Context) SloRequestSloTargetOutput
}

type SloRequestSloTargetArgs struct {
	SloTargetPercentage pulumi.Float64Input `pulumi:"sloTargetPercentage"`
	Spec                pulumi.StringInput  `pulumi:"spec"`
	Type                pulumi.StringInput  `pulumi:"type"`
}

func (SloRequestSloTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestSloTarget)(nil)).Elem()
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetOutput() SloRequestSloTargetOutput {
	return i.ToSloRequestSloTargetOutputWithContext(context.Background())
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetOutputWithContext(ctx context.Context) SloRequestSloTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestSloTargetOutput)
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return i.ToSloRequestSloTargetPtrOutputWithContext(context.Background())
}

func (i SloRequestSloTargetArgs) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestSloTargetOutput).ToSloRequestSloTargetPtrOutputWithContext(ctx)
}

// SloRequestSloTargetPtrInput is an input type that accepts SloRequestSloTargetArgs, SloRequestSloTargetPtr and SloRequestSloTargetPtrOutput values.
// You can construct a concrete instance of `SloRequestSloTargetPtrInput` via:
//
//	        SloRequestSloTargetArgs{...}
//
//	or:
//
//	        nil
type SloRequestSloTargetPtrInput interface {
	pulumi.Input

	ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput
	ToSloRequestSloTargetPtrOutputWithContext(context.Context) SloRequestSloTargetPtrOutput
}

type sloRequestSloTargetPtrType SloRequestSloTargetArgs

func SloRequestSloTargetPtr(v *SloRequestSloTargetArgs) SloRequestSloTargetPtrInput {
	return (*sloRequestSloTargetPtrType)(v)
}

func (*sloRequestSloTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequestSloTarget)(nil)).Elem()
}

func (i *sloRequestSloTargetPtrType) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return i.ToSloRequestSloTargetPtrOutputWithContext(context.Background())
}

func (i *sloRequestSloTargetPtrType) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloRequestSloTargetPtrOutput)
}

type SloRequestSloTargetOutput struct{ *pulumi.OutputState }

func (SloRequestSloTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloRequestSloTarget)(nil)).Elem()
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetOutput() SloRequestSloTargetOutput {
	return o
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetOutputWithContext(ctx context.Context) SloRequestSloTargetOutput {
	return o
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return o.ToSloRequestSloTargetPtrOutputWithContext(context.Background())
}

func (o SloRequestSloTargetOutput) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloRequestSloTarget) *SloRequestSloTarget {
		return &v
	}).(SloRequestSloTargetPtrOutput)
}

func (o SloRequestSloTargetOutput) SloTargetPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v SloRequestSloTarget) float64 { return v.SloTargetPercentage }).(pulumi.Float64Output)
}

func (o SloRequestSloTargetOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequestSloTarget) string { return v.Spec }).(pulumi.StringOutput)
}

func (o SloRequestSloTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloRequestSloTarget) string { return v.Type }).(pulumi.StringOutput)
}

type SloRequestSloTargetPtrOutput struct{ *pulumi.OutputState }

func (SloRequestSloTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloRequestSloTarget)(nil)).Elem()
}

func (o SloRequestSloTargetPtrOutput) ToSloRequestSloTargetPtrOutput() SloRequestSloTargetPtrOutput {
	return o
}

func (o SloRequestSloTargetPtrOutput) ToSloRequestSloTargetPtrOutputWithContext(ctx context.Context) SloRequestSloTargetPtrOutput {
	return o
}

func (o SloRequestSloTargetPtrOutput) Elem() SloRequestSloTargetOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) SloRequestSloTarget {
		if v != nil {
			return *v
		}
		var ret SloRequestSloTarget
		return ret
	}).(SloRequestSloTargetOutput)
}

func (o SloRequestSloTargetPtrOutput) SloTargetPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) *float64 {
		if v == nil {
			return nil
		}
		return &v.SloTargetPercentage
	}).(pulumi.Float64PtrOutput)
}

func (o SloRequestSloTargetPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o SloRequestSloTargetPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloRequestSloTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TemplateFiltersFilterProperties struct {
	// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
	FilterType string `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags []string `pulumi:"tags"`
}

// TemplateFiltersFilterPropertiesInput is an input type that accepts TemplateFiltersFilterPropertiesArgs and TemplateFiltersFilterPropertiesOutput values.
// You can construct a concrete instance of `TemplateFiltersFilterPropertiesInput` via:
//
//	TemplateFiltersFilterPropertiesArgs{...}
type TemplateFiltersFilterPropertiesInput interface {
	pulumi.Input

	ToTemplateFiltersFilterPropertiesOutput() TemplateFiltersFilterPropertiesOutput
	ToTemplateFiltersFilterPropertiesOutputWithContext(context.Context) TemplateFiltersFilterPropertiesOutput
}

type TemplateFiltersFilterPropertiesArgs struct {
	// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
	FilterType pulumi.StringInput `pulumi:"filterType"`
	// Tags to associate with the resource. Tags should be in the form `name:value`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (TemplateFiltersFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFiltersFilterProperties)(nil)).Elem()
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesOutput() TemplateFiltersFilterPropertiesOutput {
	return i.ToTemplateFiltersFilterPropertiesOutputWithContext(context.Background())
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFiltersFilterPropertiesOutput)
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return i.ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateFiltersFilterPropertiesArgs) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFiltersFilterPropertiesOutput).ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx)
}

// TemplateFiltersFilterPropertiesPtrInput is an input type that accepts TemplateFiltersFilterPropertiesArgs, TemplateFiltersFilterPropertiesPtr and TemplateFiltersFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateFiltersFilterPropertiesPtrInput` via:
//
//	        TemplateFiltersFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateFiltersFilterPropertiesPtrInput interface {
	pulumi.Input

	ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput
	ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Context) TemplateFiltersFilterPropertiesPtrOutput
}

type templateFiltersFilterPropertiesPtrType TemplateFiltersFilterPropertiesArgs

func TemplateFiltersFilterPropertiesPtr(v *TemplateFiltersFilterPropertiesArgs) TemplateFiltersFilterPropertiesPtrInput {
	return (*templateFiltersFilterPropertiesPtrType)(v)
}

func (*templateFiltersFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFiltersFilterProperties)(nil)).Elem()
}

func (i *templateFiltersFilterPropertiesPtrType) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return i.ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *templateFiltersFilterPropertiesPtrType) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateFiltersFilterPropertiesPtrOutput)
}

type TemplateFiltersFilterPropertiesOutput struct{ *pulumi.OutputState }

func (TemplateFiltersFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateFiltersFilterProperties)(nil)).Elem()
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesOutput() TemplateFiltersFilterPropertiesOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return o.ToTemplateFiltersFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateFiltersFilterPropertiesOutput) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateFiltersFilterProperties) *TemplateFiltersFilterProperties {
		return &v
	}).(TemplateFiltersFilterPropertiesPtrOutput)
}

// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
func (o TemplateFiltersFilterPropertiesOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v TemplateFiltersFilterProperties) string { return v.FilterType }).(pulumi.StringOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o TemplateFiltersFilterPropertiesOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TemplateFiltersFilterProperties) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type TemplateFiltersFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateFiltersFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateFiltersFilterProperties)(nil)).Elem()
}

func (o TemplateFiltersFilterPropertiesPtrOutput) ToTemplateFiltersFilterPropertiesPtrOutput() TemplateFiltersFilterPropertiesPtrOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesPtrOutput) ToTemplateFiltersFilterPropertiesPtrOutputWithContext(ctx context.Context) TemplateFiltersFilterPropertiesPtrOutput {
	return o
}

func (o TemplateFiltersFilterPropertiesPtrOutput) Elem() TemplateFiltersFilterPropertiesOutput {
	return o.ApplyT(func(v *TemplateFiltersFilterProperties) TemplateFiltersFilterProperties {
		if v != nil {
			return *v
		}
		var ret TemplateFiltersFilterProperties
		return ret
	}).(TemplateFiltersFilterPropertiesOutput)
}

// Corresponding Entity of the filters. Currently supported types are {TemplateSetup, TemplateExecution, Template}.
func (o TemplateFiltersFilterPropertiesPtrOutput) FilterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateFiltersFilterProperties) *string {
		if v == nil {
			return nil
		}
		return &v.FilterType
	}).(pulumi.StringPtrOutput)
}

// Tags to associate with the resource. Tags should be in the form `name:value`.
func (o TemplateFiltersFilterPropertiesPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TemplateFiltersFilterProperties) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

type TemplateGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch *string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage *string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef *string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId *string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId *string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType *string `pulumi:"storeType"`
}

// TemplateGitDetailsInput is an input type that accepts TemplateGitDetailsArgs and TemplateGitDetailsOutput values.
// You can construct a concrete instance of `TemplateGitDetailsInput` via:
//
//	TemplateGitDetailsArgs{...}
type TemplateGitDetailsInput interface {
	pulumi.Input

	ToTemplateGitDetailsOutput() TemplateGitDetailsOutput
	ToTemplateGitDetailsOutputWithContext(context.Context) TemplateGitDetailsOutput
}

type TemplateGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringPtrInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringPtrInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
	ConnectorRef pulumi.StringPtrInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringPtrInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringPtrInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringPtrInput `pulumi:"storeType"`
}

func (TemplateGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGitDetails)(nil)).Elem()
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsOutput() TemplateGitDetailsOutput {
	return i.ToTemplateGitDetailsOutputWithContext(context.Background())
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsOutputWithContext(ctx context.Context) TemplateGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitDetailsOutput)
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return i.ToTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i TemplateGitDetailsArgs) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitDetailsOutput).ToTemplateGitDetailsPtrOutputWithContext(ctx)
}

// TemplateGitDetailsPtrInput is an input type that accepts TemplateGitDetailsArgs, TemplateGitDetailsPtr and TemplateGitDetailsPtrOutput values.
// You can construct a concrete instance of `TemplateGitDetailsPtrInput` via:
//
//	        TemplateGitDetailsArgs{...}
//
//	or:
//
//	        nil
type TemplateGitDetailsPtrInput interface {
	pulumi.Input

	ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput
	ToTemplateGitDetailsPtrOutputWithContext(context.Context) TemplateGitDetailsPtrOutput
}

type templateGitDetailsPtrType TemplateGitDetailsArgs

func TemplateGitDetailsPtr(v *TemplateGitDetailsArgs) TemplateGitDetailsPtrInput {
	return (*templateGitDetailsPtrType)(v)
}

func (*templateGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGitDetails)(nil)).Elem()
}

func (i *templateGitDetailsPtrType) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return i.ToTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i *templateGitDetailsPtrType) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateGitDetailsPtrOutput)
}

type TemplateGitDetailsOutput struct{ *pulumi.OutputState }

func (TemplateGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateGitDetails)(nil)).Elem()
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsOutput() TemplateGitDetailsOutput {
	return o
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsOutputWithContext(ctx context.Context) TemplateGitDetailsOutput {
	return o
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return o.ToTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (o TemplateGitDetailsOutput) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateGitDetails) *TemplateGitDetails {
		return &v
	}).(TemplateGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o TemplateGitDetailsOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.BaseBranch }).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o TemplateGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o TemplateGitDetailsOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.CommitMessage }).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TemplateGitDetailsOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.ConnectorRef }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o TemplateGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.LastCommitId }).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.LastObjectId }).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o TemplateGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o TemplateGitDetailsOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateGitDetails) *string { return v.StoreType }).(pulumi.StringPtrOutput)
}

type TemplateGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (TemplateGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateGitDetails)(nil)).Elem()
}

func (o TemplateGitDetailsPtrOutput) ToTemplateGitDetailsPtrOutput() TemplateGitDetailsPtrOutput {
	return o
}

func (o TemplateGitDetailsPtrOutput) ToTemplateGitDetailsPtrOutputWithContext(ctx context.Context) TemplateGitDetailsPtrOutput {
	return o
}

func (o TemplateGitDetailsPtrOutput) Elem() TemplateGitDetailsOutput {
	return o.ApplyT(func(v *TemplateGitDetails) TemplateGitDetails {
		if v != nil {
			return *v
		}
		var ret TemplateGitDetails
		return ret
	}).(TemplateGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o TemplateGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o TemplateGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o TemplateGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity. To reference a connector at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a connector at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o TemplateGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o TemplateGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o TemplateGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o TemplateGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o TemplateGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.StoreType
	}).(pulumi.StringPtrOutput)
}

type UserRoleBinding struct {
	// Managed Role of the user.
	ManagedRole *bool `pulumi:"managedRole"`
	// Resource Group Identifier of the user.
	ResourceGroupIdentifier *string `pulumi:"resourceGroupIdentifier"`
	// Resource Group Name of the user.
	ResourceGroupName *string `pulumi:"resourceGroupName"`
	// Role Identifier of the user.
	RoleIdentifier *string `pulumi:"roleIdentifier"`
	// Role Name Identifier of the user.
	RoleName *string `pulumi:"roleName"`
}

// UserRoleBindingInput is an input type that accepts UserRoleBindingArgs and UserRoleBindingOutput values.
// You can construct a concrete instance of `UserRoleBindingInput` via:
//
//	UserRoleBindingArgs{...}
type UserRoleBindingInput interface {
	pulumi.Input

	ToUserRoleBindingOutput() UserRoleBindingOutput
	ToUserRoleBindingOutputWithContext(context.Context) UserRoleBindingOutput
}

type UserRoleBindingArgs struct {
	// Managed Role of the user.
	ManagedRole pulumi.BoolPtrInput `pulumi:"managedRole"`
	// Resource Group Identifier of the user.
	ResourceGroupIdentifier pulumi.StringPtrInput `pulumi:"resourceGroupIdentifier"`
	// Resource Group Name of the user.
	ResourceGroupName pulumi.StringPtrInput `pulumi:"resourceGroupName"`
	// Role Identifier of the user.
	RoleIdentifier pulumi.StringPtrInput `pulumi:"roleIdentifier"`
	// Role Name Identifier of the user.
	RoleName pulumi.StringPtrInput `pulumi:"roleName"`
}

func (UserRoleBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleBinding)(nil)).Elem()
}

func (i UserRoleBindingArgs) ToUserRoleBindingOutput() UserRoleBindingOutput {
	return i.ToUserRoleBindingOutputWithContext(context.Background())
}

func (i UserRoleBindingArgs) ToUserRoleBindingOutputWithContext(ctx context.Context) UserRoleBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleBindingOutput)
}

// UserRoleBindingArrayInput is an input type that accepts UserRoleBindingArray and UserRoleBindingArrayOutput values.
// You can construct a concrete instance of `UserRoleBindingArrayInput` via:
//
//	UserRoleBindingArray{ UserRoleBindingArgs{...} }
type UserRoleBindingArrayInput interface {
	pulumi.Input

	ToUserRoleBindingArrayOutput() UserRoleBindingArrayOutput
	ToUserRoleBindingArrayOutputWithContext(context.Context) UserRoleBindingArrayOutput
}

type UserRoleBindingArray []UserRoleBindingInput

func (UserRoleBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRoleBinding)(nil)).Elem()
}

func (i UserRoleBindingArray) ToUserRoleBindingArrayOutput() UserRoleBindingArrayOutput {
	return i.ToUserRoleBindingArrayOutputWithContext(context.Background())
}

func (i UserRoleBindingArray) ToUserRoleBindingArrayOutputWithContext(ctx context.Context) UserRoleBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserRoleBindingArrayOutput)
}

type UserRoleBindingOutput struct{ *pulumi.OutputState }

func (UserRoleBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserRoleBinding)(nil)).Elem()
}

func (o UserRoleBindingOutput) ToUserRoleBindingOutput() UserRoleBindingOutput {
	return o
}

func (o UserRoleBindingOutput) ToUserRoleBindingOutputWithContext(ctx context.Context) UserRoleBindingOutput {
	return o
}

// Managed Role of the user.
func (o UserRoleBindingOutput) ManagedRole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *bool { return v.ManagedRole }).(pulumi.BoolPtrOutput)
}

// Resource Group Identifier of the user.
func (o UserRoleBindingOutput) ResourceGroupIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.ResourceGroupIdentifier }).(pulumi.StringPtrOutput)
}

// Resource Group Name of the user.
func (o UserRoleBindingOutput) ResourceGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.ResourceGroupName }).(pulumi.StringPtrOutput)
}

// Role Identifier of the user.
func (o UserRoleBindingOutput) RoleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.RoleIdentifier }).(pulumi.StringPtrOutput)
}

// Role Name Identifier of the user.
func (o UserRoleBindingOutput) RoleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserRoleBinding) *string { return v.RoleName }).(pulumi.StringPtrOutput)
}

type UserRoleBindingArrayOutput struct{ *pulumi.OutputState }

func (UserRoleBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserRoleBinding)(nil)).Elem()
}

func (o UserRoleBindingArrayOutput) ToUserRoleBindingArrayOutput() UserRoleBindingArrayOutput {
	return o
}

func (o UserRoleBindingArrayOutput) ToUserRoleBindingArrayOutputWithContext(ctx context.Context) UserRoleBindingArrayOutput {
	return o
}

func (o UserRoleBindingArrayOutput) Index(i pulumi.IntInput) UserRoleBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserRoleBinding {
		return vs[0].([]UserRoleBinding)[vs[1].(int)]
	}).(UserRoleBindingOutput)
}

type UsergroupNotificationConfig struct {
	// Group email.
	GroupEmail *string `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl *string `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey *string `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers *bool `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl *string `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type *string `pulumi:"type"`
}

// UsergroupNotificationConfigInput is an input type that accepts UsergroupNotificationConfigArgs and UsergroupNotificationConfigOutput values.
// You can construct a concrete instance of `UsergroupNotificationConfigInput` via:
//
//	UsergroupNotificationConfigArgs{...}
type UsergroupNotificationConfigInput interface {
	pulumi.Input

	ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput
	ToUsergroupNotificationConfigOutputWithContext(context.Context) UsergroupNotificationConfigOutput
}

type UsergroupNotificationConfigArgs struct {
	// Group email.
	GroupEmail pulumi.StringPtrInput `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl pulumi.StringPtrInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey pulumi.StringPtrInput `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers pulumi.BoolPtrInput `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl pulumi.StringPtrInput `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (UsergroupNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UsergroupNotificationConfig)(nil)).Elem()
}

func (i UsergroupNotificationConfigArgs) ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput {
	return i.ToUsergroupNotificationConfigOutputWithContext(context.Background())
}

func (i UsergroupNotificationConfigArgs) ToUsergroupNotificationConfigOutputWithContext(ctx context.Context) UsergroupNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupNotificationConfigOutput)
}

// UsergroupNotificationConfigArrayInput is an input type that accepts UsergroupNotificationConfigArray and UsergroupNotificationConfigArrayOutput values.
// You can construct a concrete instance of `UsergroupNotificationConfigArrayInput` via:
//
//	UsergroupNotificationConfigArray{ UsergroupNotificationConfigArgs{...} }
type UsergroupNotificationConfigArrayInput interface {
	pulumi.Input

	ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput
	ToUsergroupNotificationConfigArrayOutputWithContext(context.Context) UsergroupNotificationConfigArrayOutput
}

type UsergroupNotificationConfigArray []UsergroupNotificationConfigInput

func (UsergroupNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsergroupNotificationConfig)(nil)).Elem()
}

func (i UsergroupNotificationConfigArray) ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput {
	return i.ToUsergroupNotificationConfigArrayOutputWithContext(context.Background())
}

func (i UsergroupNotificationConfigArray) ToUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) UsergroupNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UsergroupNotificationConfigArrayOutput)
}

type UsergroupNotificationConfigOutput struct{ *pulumi.OutputState }

func (UsergroupNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UsergroupNotificationConfig)(nil)).Elem()
}

func (o UsergroupNotificationConfigOutput) ToUsergroupNotificationConfigOutput() UsergroupNotificationConfigOutput {
	return o
}

func (o UsergroupNotificationConfigOutput) ToUsergroupNotificationConfigOutputWithContext(ctx context.Context) UsergroupNotificationConfigOutput {
	return o
}

// Group email.
func (o UsergroupNotificationConfigOutput) GroupEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.GroupEmail }).(pulumi.StringPtrOutput)
}

// Url of Microsoft teams webhook.
func (o UsergroupNotificationConfigOutput) MicrosoftTeamsWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringPtrOutput)
}

// Pager duty key.
func (o UsergroupNotificationConfigOutput) PagerDutyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.PagerDutyKey }).(pulumi.StringPtrOutput)
}

// Send email to all the group members.
func (o UsergroupNotificationConfigOutput) SendEmailToAllUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *bool { return v.SendEmailToAllUsers }).(pulumi.BoolPtrOutput)
}

// Url of slack webhook.
func (o UsergroupNotificationConfigOutput) SlackWebhookUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.SlackWebhookUrl }).(pulumi.StringPtrOutput)
}

// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
func (o UsergroupNotificationConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UsergroupNotificationConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type UsergroupNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (UsergroupNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UsergroupNotificationConfig)(nil)).Elem()
}

func (o UsergroupNotificationConfigArrayOutput) ToUsergroupNotificationConfigArrayOutput() UsergroupNotificationConfigArrayOutput {
	return o
}

func (o UsergroupNotificationConfigArrayOutput) ToUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) UsergroupNotificationConfigArrayOutput {
	return o
}

func (o UsergroupNotificationConfigArrayOutput) Index(i pulumi.IntInput) UsergroupNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UsergroupNotificationConfig {
		return vs[0].([]UsergroupNotificationConfig)[vs[1].(int)]
	}).(UsergroupNotificationConfigOutput)
}

type VariablesSpec struct {
	// FixedValue of the variable
	FixedValue string `pulumi:"fixedValue"`
	// Type of Value of the Variable. For now only FIXED is supported
	ValueType string `pulumi:"valueType"`
}

// VariablesSpecInput is an input type that accepts VariablesSpecArgs and VariablesSpecOutput values.
// You can construct a concrete instance of `VariablesSpecInput` via:
//
//	VariablesSpecArgs{...}
type VariablesSpecInput interface {
	pulumi.Input

	ToVariablesSpecOutput() VariablesSpecOutput
	ToVariablesSpecOutputWithContext(context.Context) VariablesSpecOutput
}

type VariablesSpecArgs struct {
	// FixedValue of the variable
	FixedValue pulumi.StringInput `pulumi:"fixedValue"`
	// Type of Value of the Variable. For now only FIXED is supported
	ValueType pulumi.StringInput `pulumi:"valueType"`
}

func (VariablesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablesSpec)(nil)).Elem()
}

func (i VariablesSpecArgs) ToVariablesSpecOutput() VariablesSpecOutput {
	return i.ToVariablesSpecOutputWithContext(context.Background())
}

func (i VariablesSpecArgs) ToVariablesSpecOutputWithContext(ctx context.Context) VariablesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablesSpecOutput)
}

func (i VariablesSpecArgs) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return i.ToVariablesSpecPtrOutputWithContext(context.Background())
}

func (i VariablesSpecArgs) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablesSpecOutput).ToVariablesSpecPtrOutputWithContext(ctx)
}

// VariablesSpecPtrInput is an input type that accepts VariablesSpecArgs, VariablesSpecPtr and VariablesSpecPtrOutput values.
// You can construct a concrete instance of `VariablesSpecPtrInput` via:
//
//	        VariablesSpecArgs{...}
//
//	or:
//
//	        nil
type VariablesSpecPtrInput interface {
	pulumi.Input

	ToVariablesSpecPtrOutput() VariablesSpecPtrOutput
	ToVariablesSpecPtrOutputWithContext(context.Context) VariablesSpecPtrOutput
}

type variablesSpecPtrType VariablesSpecArgs

func VariablesSpecPtr(v *VariablesSpecArgs) VariablesSpecPtrInput {
	return (*variablesSpecPtrType)(v)
}

func (*variablesSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablesSpec)(nil)).Elem()
}

func (i *variablesSpecPtrType) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return i.ToVariablesSpecPtrOutputWithContext(context.Background())
}

func (i *variablesSpecPtrType) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VariablesSpecPtrOutput)
}

type VariablesSpecOutput struct{ *pulumi.OutputState }

func (VariablesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VariablesSpec)(nil)).Elem()
}

func (o VariablesSpecOutput) ToVariablesSpecOutput() VariablesSpecOutput {
	return o
}

func (o VariablesSpecOutput) ToVariablesSpecOutputWithContext(ctx context.Context) VariablesSpecOutput {
	return o
}

func (o VariablesSpecOutput) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return o.ToVariablesSpecPtrOutputWithContext(context.Background())
}

func (o VariablesSpecOutput) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VariablesSpec) *VariablesSpec {
		return &v
	}).(VariablesSpecPtrOutput)
}

// FixedValue of the variable
func (o VariablesSpecOutput) FixedValue() pulumi.StringOutput {
	return o.ApplyT(func(v VariablesSpec) string { return v.FixedValue }).(pulumi.StringOutput)
}

// Type of Value of the Variable. For now only FIXED is supported
func (o VariablesSpecOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v VariablesSpec) string { return v.ValueType }).(pulumi.StringOutput)
}

type VariablesSpecPtrOutput struct{ *pulumi.OutputState }

func (VariablesSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VariablesSpec)(nil)).Elem()
}

func (o VariablesSpecPtrOutput) ToVariablesSpecPtrOutput() VariablesSpecPtrOutput {
	return o
}

func (o VariablesSpecPtrOutput) ToVariablesSpecPtrOutputWithContext(ctx context.Context) VariablesSpecPtrOutput {
	return o
}

func (o VariablesSpecPtrOutput) Elem() VariablesSpecOutput {
	return o.ApplyT(func(v *VariablesSpec) VariablesSpec {
		if v != nil {
			return *v
		}
		var ret VariablesSpec
		return ret
	}).(VariablesSpecOutput)
}

// FixedValue of the variable
func (o VariablesSpecPtrOutput) FixedValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablesSpec) *string {
		if v == nil {
			return nil
		}
		return &v.FixedValue
	}).(pulumi.StringPtrOutput)
}

// Type of Value of the Variable. For now only FIXED is supported
func (o VariablesSpecPtrOutput) ValueType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VariablesSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ValueType
	}).(pulumi.StringPtrOutput)
}

type GetAppDynamicsConnectorApiToken struct {
	ClientId        string `pulumi:"clientId"`
	ClientSecretRef string `pulumi:"clientSecretRef"`
}

// GetAppDynamicsConnectorApiTokenInput is an input type that accepts GetAppDynamicsConnectorApiTokenArgs and GetAppDynamicsConnectorApiTokenOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorApiTokenInput` via:
//
//	GetAppDynamicsConnectorApiTokenArgs{...}
type GetAppDynamicsConnectorApiTokenInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorApiTokenOutput() GetAppDynamicsConnectorApiTokenOutput
	ToGetAppDynamicsConnectorApiTokenOutputWithContext(context.Context) GetAppDynamicsConnectorApiTokenOutput
}

type GetAppDynamicsConnectorApiTokenArgs struct {
	ClientId        pulumi.StringInput `pulumi:"clientId"`
	ClientSecretRef pulumi.StringInput `pulumi:"clientSecretRef"`
}

func (GetAppDynamicsConnectorApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (i GetAppDynamicsConnectorApiTokenArgs) ToGetAppDynamicsConnectorApiTokenOutput() GetAppDynamicsConnectorApiTokenOutput {
	return i.ToGetAppDynamicsConnectorApiTokenOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorApiTokenArgs) ToGetAppDynamicsConnectorApiTokenOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorApiTokenOutput)
}

// GetAppDynamicsConnectorApiTokenArrayInput is an input type that accepts GetAppDynamicsConnectorApiTokenArray and GetAppDynamicsConnectorApiTokenArrayOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorApiTokenArrayInput` via:
//
//	GetAppDynamicsConnectorApiTokenArray{ GetAppDynamicsConnectorApiTokenArgs{...} }
type GetAppDynamicsConnectorApiTokenArrayInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorApiTokenArrayOutput() GetAppDynamicsConnectorApiTokenArrayOutput
	ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(context.Context) GetAppDynamicsConnectorApiTokenArrayOutput
}

type GetAppDynamicsConnectorApiTokenArray []GetAppDynamicsConnectorApiTokenInput

func (GetAppDynamicsConnectorApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (i GetAppDynamicsConnectorApiTokenArray) ToGetAppDynamicsConnectorApiTokenArrayOutput() GetAppDynamicsConnectorApiTokenArrayOutput {
	return i.ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorApiTokenArray) ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorApiTokenArrayOutput)
}

type GetAppDynamicsConnectorApiTokenOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (o GetAppDynamicsConnectorApiTokenOutput) ToGetAppDynamicsConnectorApiTokenOutput() GetAppDynamicsConnectorApiTokenOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenOutput) ToGetAppDynamicsConnectorApiTokenOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorApiToken) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetAppDynamicsConnectorApiTokenOutput) ClientSecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorApiToken) string { return v.ClientSecretRef }).(pulumi.StringOutput)
}

type GetAppDynamicsConnectorApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorApiToken)(nil)).Elem()
}

func (o GetAppDynamicsConnectorApiTokenArrayOutput) ToGetAppDynamicsConnectorApiTokenArrayOutput() GetAppDynamicsConnectorApiTokenArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenArrayOutput) ToGetAppDynamicsConnectorApiTokenArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorApiTokenArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorApiTokenArrayOutput) Index(i pulumi.IntInput) GetAppDynamicsConnectorApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDynamicsConnectorApiToken {
		return vs[0].([]GetAppDynamicsConnectorApiToken)[vs[1].(int)]
	}).(GetAppDynamicsConnectorApiTokenOutput)
}

type GetAppDynamicsConnectorUsernamePassword struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
}

// GetAppDynamicsConnectorUsernamePasswordInput is an input type that accepts GetAppDynamicsConnectorUsernamePasswordArgs and GetAppDynamicsConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorUsernamePasswordInput` via:
//
//	GetAppDynamicsConnectorUsernamePasswordArgs{...}
type GetAppDynamicsConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorUsernamePasswordOutput() GetAppDynamicsConnectorUsernamePasswordOutput
	ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(context.Context) GetAppDynamicsConnectorUsernamePasswordOutput
}

type GetAppDynamicsConnectorUsernamePasswordArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
}

func (GetAppDynamicsConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (i GetAppDynamicsConnectorUsernamePasswordArgs) ToGetAppDynamicsConnectorUsernamePasswordOutput() GetAppDynamicsConnectorUsernamePasswordOutput {
	return i.ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorUsernamePasswordArgs) ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorUsernamePasswordOutput)
}

// GetAppDynamicsConnectorUsernamePasswordArrayInput is an input type that accepts GetAppDynamicsConnectorUsernamePasswordArray and GetAppDynamicsConnectorUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetAppDynamicsConnectorUsernamePasswordArrayInput` via:
//
//	GetAppDynamicsConnectorUsernamePasswordArray{ GetAppDynamicsConnectorUsernamePasswordArgs{...} }
type GetAppDynamicsConnectorUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetAppDynamicsConnectorUsernamePasswordArrayOutput() GetAppDynamicsConnectorUsernamePasswordArrayOutput
	ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(context.Context) GetAppDynamicsConnectorUsernamePasswordArrayOutput
}

type GetAppDynamicsConnectorUsernamePasswordArray []GetAppDynamicsConnectorUsernamePasswordInput

func (GetAppDynamicsConnectorUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (i GetAppDynamicsConnectorUsernamePasswordArray) ToGetAppDynamicsConnectorUsernamePasswordArrayOutput() GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return i.ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetAppDynamicsConnectorUsernamePasswordArray) ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDynamicsConnectorUsernamePasswordArrayOutput)
}

type GetAppDynamicsConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (o GetAppDynamicsConnectorUsernamePasswordOutput) ToGetAppDynamicsConnectorUsernamePasswordOutput() GetAppDynamicsConnectorUsernamePasswordOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordOutput) ToGetAppDynamicsConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetAppDynamicsConnectorUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDynamicsConnectorUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

type GetAppDynamicsConnectorUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetAppDynamicsConnectorUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDynamicsConnectorUsernamePassword)(nil)).Elem()
}

func (o GetAppDynamicsConnectorUsernamePasswordArrayOutput) ToGetAppDynamicsConnectorUsernamePasswordArrayOutput() GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordArrayOutput) ToGetAppDynamicsConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetAppDynamicsConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetAppDynamicsConnectorUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetAppDynamicsConnectorUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDynamicsConnectorUsernamePassword {
		return vs[0].([]GetAppDynamicsConnectorUsernamePassword)[vs[1].(int)]
	}).(GetAppDynamicsConnectorUsernamePasswordOutput)
}

type GetArtifactoryConnectorCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetArtifactoryConnectorCredentialInput is an input type that accepts GetArtifactoryConnectorCredentialArgs and GetArtifactoryConnectorCredentialOutput values.
// You can construct a concrete instance of `GetArtifactoryConnectorCredentialInput` via:
//
//	GetArtifactoryConnectorCredentialArgs{...}
type GetArtifactoryConnectorCredentialInput interface {
	pulumi.Input

	ToGetArtifactoryConnectorCredentialOutput() GetArtifactoryConnectorCredentialOutput
	ToGetArtifactoryConnectorCredentialOutputWithContext(context.Context) GetArtifactoryConnectorCredentialOutput
}

type GetArtifactoryConnectorCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetArtifactoryConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (i GetArtifactoryConnectorCredentialArgs) ToGetArtifactoryConnectorCredentialOutput() GetArtifactoryConnectorCredentialOutput {
	return i.ToGetArtifactoryConnectorCredentialOutputWithContext(context.Background())
}

func (i GetArtifactoryConnectorCredentialArgs) ToGetArtifactoryConnectorCredentialOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArtifactoryConnectorCredentialOutput)
}

// GetArtifactoryConnectorCredentialArrayInput is an input type that accepts GetArtifactoryConnectorCredentialArray and GetArtifactoryConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetArtifactoryConnectorCredentialArrayInput` via:
//
//	GetArtifactoryConnectorCredentialArray{ GetArtifactoryConnectorCredentialArgs{...} }
type GetArtifactoryConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetArtifactoryConnectorCredentialArrayOutput() GetArtifactoryConnectorCredentialArrayOutput
	ToGetArtifactoryConnectorCredentialArrayOutputWithContext(context.Context) GetArtifactoryConnectorCredentialArrayOutput
}

type GetArtifactoryConnectorCredentialArray []GetArtifactoryConnectorCredentialInput

func (GetArtifactoryConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (i GetArtifactoryConnectorCredentialArray) ToGetArtifactoryConnectorCredentialArrayOutput() GetArtifactoryConnectorCredentialArrayOutput {
	return i.ToGetArtifactoryConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetArtifactoryConnectorCredentialArray) ToGetArtifactoryConnectorCredentialArrayOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArtifactoryConnectorCredentialArrayOutput)
}

type GetArtifactoryConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetArtifactoryConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (o GetArtifactoryConnectorCredentialOutput) ToGetArtifactoryConnectorCredentialOutput() GetArtifactoryConnectorCredentialOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialOutput) ToGetArtifactoryConnectorCredentialOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetArtifactoryConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetArtifactoryConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetArtifactoryConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetArtifactoryConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetArtifactoryConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArtifactoryConnectorCredential)(nil)).Elem()
}

func (o GetArtifactoryConnectorCredentialArrayOutput) ToGetArtifactoryConnectorCredentialArrayOutput() GetArtifactoryConnectorCredentialArrayOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialArrayOutput) ToGetArtifactoryConnectorCredentialArrayOutputWithContext(ctx context.Context) GetArtifactoryConnectorCredentialArrayOutput {
	return o
}

func (o GetArtifactoryConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetArtifactoryConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetArtifactoryConnectorCredential {
		return vs[0].([]GetArtifactoryConnectorCredential)[vs[1].(int)]
	}).(GetArtifactoryConnectorCredentialOutput)
}

type GetAwsCCConnectorCrossAccountAccess struct {
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsCCConnectorCrossAccountAccessInput is an input type that accepts GetAwsCCConnectorCrossAccountAccessArgs and GetAwsCCConnectorCrossAccountAccessOutput values.
// You can construct a concrete instance of `GetAwsCCConnectorCrossAccountAccessInput` via:
//
//	GetAwsCCConnectorCrossAccountAccessArgs{...}
type GetAwsCCConnectorCrossAccountAccessInput interface {
	pulumi.Input

	ToGetAwsCCConnectorCrossAccountAccessOutput() GetAwsCCConnectorCrossAccountAccessOutput
	ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(context.Context) GetAwsCCConnectorCrossAccountAccessOutput
}

type GetAwsCCConnectorCrossAccountAccessArgs struct {
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsCCConnectorCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCCConnectorCrossAccountAccessArgs) ToGetAwsCCConnectorCrossAccountAccessOutput() GetAwsCCConnectorCrossAccountAccessOutput {
	return i.ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(context.Background())
}

func (i GetAwsCCConnectorCrossAccountAccessArgs) ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCCConnectorCrossAccountAccessOutput)
}

// GetAwsCCConnectorCrossAccountAccessArrayInput is an input type that accepts GetAwsCCConnectorCrossAccountAccessArray and GetAwsCCConnectorCrossAccountAccessArrayOutput values.
// You can construct a concrete instance of `GetAwsCCConnectorCrossAccountAccessArrayInput` via:
//
//	GetAwsCCConnectorCrossAccountAccessArray{ GetAwsCCConnectorCrossAccountAccessArgs{...} }
type GetAwsCCConnectorCrossAccountAccessArrayInput interface {
	pulumi.Input

	ToGetAwsCCConnectorCrossAccountAccessArrayOutput() GetAwsCCConnectorCrossAccountAccessArrayOutput
	ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(context.Context) GetAwsCCConnectorCrossAccountAccessArrayOutput
}

type GetAwsCCConnectorCrossAccountAccessArray []GetAwsCCConnectorCrossAccountAccessInput

func (GetAwsCCConnectorCrossAccountAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsCCConnectorCrossAccountAccessArray) ToGetAwsCCConnectorCrossAccountAccessArrayOutput() GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return i.ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(context.Background())
}

func (i GetAwsCCConnectorCrossAccountAccessArray) ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsCCConnectorCrossAccountAccessArrayOutput)
}

type GetAwsCCConnectorCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (GetAwsCCConnectorCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCCConnectorCrossAccountAccessOutput) ToGetAwsCCConnectorCrossAccountAccessOutput() GetAwsCCConnectorCrossAccountAccessOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessOutput) ToGetAwsCCConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCCConnectorCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsCCConnectorCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCCConnectorCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsCCConnectorCrossAccountAccessArrayOutput struct{ *pulumi.OutputState }

func (GetAwsCCConnectorCrossAccountAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsCCConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsCCConnectorCrossAccountAccessArrayOutput) ToGetAwsCCConnectorCrossAccountAccessArrayOutput() GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessArrayOutput) ToGetAwsCCConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsCCConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsCCConnectorCrossAccountAccessArrayOutput) Index(i pulumi.IntInput) GetAwsCCConnectorCrossAccountAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsCCConnectorCrossAccountAccess {
		return vs[0].([]GetAwsCCConnectorCrossAccountAccess)[vs[1].(int)]
	}).(GetAwsCCConnectorCrossAccountAccessOutput)
}

type GetAwsConnectorCrossAccountAccess struct {
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsConnectorCrossAccountAccessInput is an input type that accepts GetAwsConnectorCrossAccountAccessArgs and GetAwsConnectorCrossAccountAccessOutput values.
// You can construct a concrete instance of `GetAwsConnectorCrossAccountAccessInput` via:
//
//	GetAwsConnectorCrossAccountAccessArgs{...}
type GetAwsConnectorCrossAccountAccessInput interface {
	pulumi.Input

	ToGetAwsConnectorCrossAccountAccessOutput() GetAwsConnectorCrossAccountAccessOutput
	ToGetAwsConnectorCrossAccountAccessOutputWithContext(context.Context) GetAwsConnectorCrossAccountAccessOutput
}

type GetAwsConnectorCrossAccountAccessArgs struct {
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsConnectorCrossAccountAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsConnectorCrossAccountAccessArgs) ToGetAwsConnectorCrossAccountAccessOutput() GetAwsConnectorCrossAccountAccessOutput {
	return i.ToGetAwsConnectorCrossAccountAccessOutputWithContext(context.Background())
}

func (i GetAwsConnectorCrossAccountAccessArgs) ToGetAwsConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorCrossAccountAccessOutput)
}

// GetAwsConnectorCrossAccountAccessArrayInput is an input type that accepts GetAwsConnectorCrossAccountAccessArray and GetAwsConnectorCrossAccountAccessArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorCrossAccountAccessArrayInput` via:
//
//	GetAwsConnectorCrossAccountAccessArray{ GetAwsConnectorCrossAccountAccessArgs{...} }
type GetAwsConnectorCrossAccountAccessArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorCrossAccountAccessArrayOutput() GetAwsConnectorCrossAccountAccessArrayOutput
	ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(context.Context) GetAwsConnectorCrossAccountAccessArrayOutput
}

type GetAwsConnectorCrossAccountAccessArray []GetAwsConnectorCrossAccountAccessInput

func (GetAwsConnectorCrossAccountAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (i GetAwsConnectorCrossAccountAccessArray) ToGetAwsConnectorCrossAccountAccessArrayOutput() GetAwsConnectorCrossAccountAccessArrayOutput {
	return i.ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorCrossAccountAccessArray) ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorCrossAccountAccessArrayOutput)
}

type GetAwsConnectorCrossAccountAccessOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorCrossAccountAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsConnectorCrossAccountAccessOutput) ToGetAwsConnectorCrossAccountAccessOutput() GetAwsConnectorCrossAccountAccessOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessOutput) ToGetAwsConnectorCrossAccountAccessOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorCrossAccountAccess) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsConnectorCrossAccountAccessOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorCrossAccountAccess) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsConnectorCrossAccountAccessArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorCrossAccountAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorCrossAccountAccess)(nil)).Elem()
}

func (o GetAwsConnectorCrossAccountAccessArrayOutput) ToGetAwsConnectorCrossAccountAccessArrayOutput() GetAwsConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessArrayOutput) ToGetAwsConnectorCrossAccountAccessArrayOutputWithContext(ctx context.Context) GetAwsConnectorCrossAccountAccessArrayOutput {
	return o
}

func (o GetAwsConnectorCrossAccountAccessArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorCrossAccountAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorCrossAccountAccess {
		return vs[0].([]GetAwsConnectorCrossAccountAccess)[vs[1].(int)]
	}).(GetAwsConnectorCrossAccountAccessOutput)
}

type GetAwsConnectorInheritFromDelegate struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetAwsConnectorInheritFromDelegateInput is an input type that accepts GetAwsConnectorInheritFromDelegateArgs and GetAwsConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetAwsConnectorInheritFromDelegateInput` via:
//
//	GetAwsConnectorInheritFromDelegateArgs{...}
type GetAwsConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGetAwsConnectorInheritFromDelegateOutput() GetAwsConnectorInheritFromDelegateOutput
	ToGetAwsConnectorInheritFromDelegateOutputWithContext(context.Context) GetAwsConnectorInheritFromDelegateOutput
}

type GetAwsConnectorInheritFromDelegateArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetAwsConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetAwsConnectorInheritFromDelegateArgs) ToGetAwsConnectorInheritFromDelegateOutput() GetAwsConnectorInheritFromDelegateOutput {
	return i.ToGetAwsConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetAwsConnectorInheritFromDelegateArgs) ToGetAwsConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorInheritFromDelegateOutput)
}

// GetAwsConnectorInheritFromDelegateArrayInput is an input type that accepts GetAwsConnectorInheritFromDelegateArray and GetAwsConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorInheritFromDelegateArrayInput` via:
//
//	GetAwsConnectorInheritFromDelegateArray{ GetAwsConnectorInheritFromDelegateArgs{...} }
type GetAwsConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorInheritFromDelegateArrayOutput() GetAwsConnectorInheritFromDelegateArrayOutput
	ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GetAwsConnectorInheritFromDelegateArrayOutput
}

type GetAwsConnectorInheritFromDelegateArray []GetAwsConnectorInheritFromDelegateInput

func (GetAwsConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetAwsConnectorInheritFromDelegateArray) ToGetAwsConnectorInheritFromDelegateArrayOutput() GetAwsConnectorInheritFromDelegateArrayOutput {
	return i.ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorInheritFromDelegateArray) ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorInheritFromDelegateArrayOutput)
}

type GetAwsConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetAwsConnectorInheritFromDelegateOutput) ToGetAwsConnectorInheritFromDelegateOutput() GetAwsConnectorInheritFromDelegateOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateOutput) ToGetAwsConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetAwsConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetAwsConnectorInheritFromDelegateArrayOutput) ToGetAwsConnectorInheritFromDelegateArrayOutput() GetAwsConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateArrayOutput) ToGetAwsConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetAwsConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetAwsConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorInheritFromDelegate {
		return vs[0].([]GetAwsConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GetAwsConnectorInheritFromDelegateOutput)
}

type GetAwsConnectorIrsa struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetAwsConnectorIrsaInput is an input type that accepts GetAwsConnectorIrsaArgs and GetAwsConnectorIrsaOutput values.
// You can construct a concrete instance of `GetAwsConnectorIrsaInput` via:
//
//	GetAwsConnectorIrsaArgs{...}
type GetAwsConnectorIrsaInput interface {
	pulumi.Input

	ToGetAwsConnectorIrsaOutput() GetAwsConnectorIrsaOutput
	ToGetAwsConnectorIrsaOutputWithContext(context.Context) GetAwsConnectorIrsaOutput
}

type GetAwsConnectorIrsaArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetAwsConnectorIrsaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorIrsa)(nil)).Elem()
}

func (i GetAwsConnectorIrsaArgs) ToGetAwsConnectorIrsaOutput() GetAwsConnectorIrsaOutput {
	return i.ToGetAwsConnectorIrsaOutputWithContext(context.Background())
}

func (i GetAwsConnectorIrsaArgs) ToGetAwsConnectorIrsaOutputWithContext(ctx context.Context) GetAwsConnectorIrsaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorIrsaOutput)
}

// GetAwsConnectorIrsaArrayInput is an input type that accepts GetAwsConnectorIrsaArray and GetAwsConnectorIrsaArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorIrsaArrayInput` via:
//
//	GetAwsConnectorIrsaArray{ GetAwsConnectorIrsaArgs{...} }
type GetAwsConnectorIrsaArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorIrsaArrayOutput() GetAwsConnectorIrsaArrayOutput
	ToGetAwsConnectorIrsaArrayOutputWithContext(context.Context) GetAwsConnectorIrsaArrayOutput
}

type GetAwsConnectorIrsaArray []GetAwsConnectorIrsaInput

func (GetAwsConnectorIrsaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorIrsa)(nil)).Elem()
}

func (i GetAwsConnectorIrsaArray) ToGetAwsConnectorIrsaArrayOutput() GetAwsConnectorIrsaArrayOutput {
	return i.ToGetAwsConnectorIrsaArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorIrsaArray) ToGetAwsConnectorIrsaArrayOutputWithContext(ctx context.Context) GetAwsConnectorIrsaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorIrsaArrayOutput)
}

type GetAwsConnectorIrsaOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorIrsaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorIrsa)(nil)).Elem()
}

func (o GetAwsConnectorIrsaOutput) ToGetAwsConnectorIrsaOutput() GetAwsConnectorIrsaOutput {
	return o
}

func (o GetAwsConnectorIrsaOutput) ToGetAwsConnectorIrsaOutputWithContext(ctx context.Context) GetAwsConnectorIrsaOutput {
	return o
}

func (o GetAwsConnectorIrsaOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorIrsa) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetAwsConnectorIrsaArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorIrsaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorIrsa)(nil)).Elem()
}

func (o GetAwsConnectorIrsaArrayOutput) ToGetAwsConnectorIrsaArrayOutput() GetAwsConnectorIrsaArrayOutput {
	return o
}

func (o GetAwsConnectorIrsaArrayOutput) ToGetAwsConnectorIrsaArrayOutputWithContext(ctx context.Context) GetAwsConnectorIrsaArrayOutput {
	return o
}

func (o GetAwsConnectorIrsaArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorIrsaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorIrsa {
		return vs[0].([]GetAwsConnectorIrsa)[vs[1].(int)]
	}).(GetAwsConnectorIrsaOutput)
}

type GetAwsConnectorManual struct {
	AccessKey         string   `pulumi:"accessKey"`
	AccessKeyRef      string   `pulumi:"accessKeyRef"`
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	SecretKeyRef      string   `pulumi:"secretKeyRef"`
}

// GetAwsConnectorManualInput is an input type that accepts GetAwsConnectorManualArgs and GetAwsConnectorManualOutput values.
// You can construct a concrete instance of `GetAwsConnectorManualInput` via:
//
//	GetAwsConnectorManualArgs{...}
type GetAwsConnectorManualInput interface {
	pulumi.Input

	ToGetAwsConnectorManualOutput() GetAwsConnectorManualOutput
	ToGetAwsConnectorManualOutputWithContext(context.Context) GetAwsConnectorManualOutput
}

type GetAwsConnectorManualArgs struct {
	AccessKey         pulumi.StringInput      `pulumi:"accessKey"`
	AccessKeyRef      pulumi.StringInput      `pulumi:"accessKeyRef"`
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	SecretKeyRef      pulumi.StringInput      `pulumi:"secretKeyRef"`
}

func (GetAwsConnectorManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorManual)(nil)).Elem()
}

func (i GetAwsConnectorManualArgs) ToGetAwsConnectorManualOutput() GetAwsConnectorManualOutput {
	return i.ToGetAwsConnectorManualOutputWithContext(context.Background())
}

func (i GetAwsConnectorManualArgs) ToGetAwsConnectorManualOutputWithContext(ctx context.Context) GetAwsConnectorManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorManualOutput)
}

// GetAwsConnectorManualArrayInput is an input type that accepts GetAwsConnectorManualArray and GetAwsConnectorManualArrayOutput values.
// You can construct a concrete instance of `GetAwsConnectorManualArrayInput` via:
//
//	GetAwsConnectorManualArray{ GetAwsConnectorManualArgs{...} }
type GetAwsConnectorManualArrayInput interface {
	pulumi.Input

	ToGetAwsConnectorManualArrayOutput() GetAwsConnectorManualArrayOutput
	ToGetAwsConnectorManualArrayOutputWithContext(context.Context) GetAwsConnectorManualArrayOutput
}

type GetAwsConnectorManualArray []GetAwsConnectorManualInput

func (GetAwsConnectorManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorManual)(nil)).Elem()
}

func (i GetAwsConnectorManualArray) ToGetAwsConnectorManualArrayOutput() GetAwsConnectorManualArrayOutput {
	return i.ToGetAwsConnectorManualArrayOutputWithContext(context.Background())
}

func (i GetAwsConnectorManualArray) ToGetAwsConnectorManualArrayOutputWithContext(ctx context.Context) GetAwsConnectorManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsConnectorManualArrayOutput)
}

type GetAwsConnectorManualOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsConnectorManual)(nil)).Elem()
}

func (o GetAwsConnectorManualOutput) ToGetAwsConnectorManualOutput() GetAwsConnectorManualOutput {
	return o
}

func (o GetAwsConnectorManualOutput) ToGetAwsConnectorManualOutputWithContext(ctx context.Context) GetAwsConnectorManualOutput {
	return o
}

func (o GetAwsConnectorManualOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) string { return v.AccessKey }).(pulumi.StringOutput)
}

func (o GetAwsConnectorManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o GetAwsConnectorManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

func (o GetAwsConnectorManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsConnectorManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsConnectorManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsConnectorManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsConnectorManual)(nil)).Elem()
}

func (o GetAwsConnectorManualArrayOutput) ToGetAwsConnectorManualArrayOutput() GetAwsConnectorManualArrayOutput {
	return o
}

func (o GetAwsConnectorManualArrayOutput) ToGetAwsConnectorManualArrayOutputWithContext(ctx context.Context) GetAwsConnectorManualArrayOutput {
	return o
}

func (o GetAwsConnectorManualArrayOutput) Index(i pulumi.IntInput) GetAwsConnectorManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsConnectorManual {
		return vs[0].([]GetAwsConnectorManual)[vs[1].(int)]
	}).(GetAwsConnectorManualOutput)
}

type GetAwsKmsConnectorCredential struct {
	AssumeRoles         []GetAwsKmsConnectorCredentialAssumeRole `pulumi:"assumeRoles"`
	InheritFromDelegate bool                                     `pulumi:"inheritFromDelegate"`
	Manuals             []GetAwsKmsConnectorCredentialManual     `pulumi:"manuals"`
}

// GetAwsKmsConnectorCredentialInput is an input type that accepts GetAwsKmsConnectorCredentialArgs and GetAwsKmsConnectorCredentialOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialInput` via:
//
//	GetAwsKmsConnectorCredentialArgs{...}
type GetAwsKmsConnectorCredentialInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialOutput() GetAwsKmsConnectorCredentialOutput
	ToGetAwsKmsConnectorCredentialOutputWithContext(context.Context) GetAwsKmsConnectorCredentialOutput
}

type GetAwsKmsConnectorCredentialArgs struct {
	AssumeRoles         GetAwsKmsConnectorCredentialAssumeRoleArrayInput `pulumi:"assumeRoles"`
	InheritFromDelegate pulumi.BoolInput                                 `pulumi:"inheritFromDelegate"`
	Manuals             GetAwsKmsConnectorCredentialManualArrayInput     `pulumi:"manuals"`
}

func (GetAwsKmsConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialArgs) ToGetAwsKmsConnectorCredentialOutput() GetAwsKmsConnectorCredentialOutput {
	return i.ToGetAwsKmsConnectorCredentialOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialArgs) ToGetAwsKmsConnectorCredentialOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialOutput)
}

// GetAwsKmsConnectorCredentialArrayInput is an input type that accepts GetAwsKmsConnectorCredentialArray and GetAwsKmsConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialArrayInput` via:
//
//	GetAwsKmsConnectorCredentialArray{ GetAwsKmsConnectorCredentialArgs{...} }
type GetAwsKmsConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialArrayOutput() GetAwsKmsConnectorCredentialArrayOutput
	ToGetAwsKmsConnectorCredentialArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialArrayOutput
}

type GetAwsKmsConnectorCredentialArray []GetAwsKmsConnectorCredentialInput

func (GetAwsKmsConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialArray) ToGetAwsKmsConnectorCredentialArrayOutput() GetAwsKmsConnectorCredentialArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialArray) ToGetAwsKmsConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialArrayOutput)
}

type GetAwsKmsConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialOutput) ToGetAwsKmsConnectorCredentialOutput() GetAwsKmsConnectorCredentialOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialOutput) ToGetAwsKmsConnectorCredentialOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialOutput) AssumeRoles() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) []GetAwsKmsConnectorCredentialAssumeRole { return v.AssumeRoles }).(GetAwsKmsConnectorCredentialAssumeRoleArrayOutput)
}

func (o GetAwsKmsConnectorCredentialOutput) InheritFromDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) bool { return v.InheritFromDelegate }).(pulumi.BoolOutput)
}

func (o GetAwsKmsConnectorCredentialOutput) Manuals() GetAwsKmsConnectorCredentialManualArrayOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredential) []GetAwsKmsConnectorCredentialManual { return v.Manuals }).(GetAwsKmsConnectorCredentialManualArrayOutput)
}

type GetAwsKmsConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredential)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialArrayOutput) ToGetAwsKmsConnectorCredentialArrayOutput() GetAwsKmsConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialArrayOutput) ToGetAwsKmsConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredential {
		return vs[0].([]GetAwsKmsConnectorCredential)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialOutput)
}

type GetAwsKmsConnectorCredentialAssumeRole struct {
	Duration   int    `pulumi:"duration"`
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsKmsConnectorCredentialAssumeRoleInput is an input type that accepts GetAwsKmsConnectorCredentialAssumeRoleArgs and GetAwsKmsConnectorCredentialAssumeRoleOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialAssumeRoleInput` via:
//
//	GetAwsKmsConnectorCredentialAssumeRoleArgs{...}
type GetAwsKmsConnectorCredentialAssumeRoleInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialAssumeRoleOutput() GetAwsKmsConnectorCredentialAssumeRoleOutput
	ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(context.Context) GetAwsKmsConnectorCredentialAssumeRoleOutput
}

type GetAwsKmsConnectorCredentialAssumeRoleArgs struct {
	Duration   pulumi.IntInput    `pulumi:"duration"`
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsKmsConnectorCredentialAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArgs) ToGetAwsKmsConnectorCredentialAssumeRoleOutput() GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return i.ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArgs) ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialAssumeRoleOutput)
}

// GetAwsKmsConnectorCredentialAssumeRoleArrayInput is an input type that accepts GetAwsKmsConnectorCredentialAssumeRoleArray and GetAwsKmsConnectorCredentialAssumeRoleArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialAssumeRoleArrayInput` via:
//
//	GetAwsKmsConnectorCredentialAssumeRoleArray{ GetAwsKmsConnectorCredentialAssumeRoleArgs{...} }
type GetAwsKmsConnectorCredentialAssumeRoleArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutput() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput
	ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialAssumeRoleArrayOutput
}

type GetAwsKmsConnectorCredentialAssumeRoleArray []GetAwsKmsConnectorCredentialAssumeRoleInput

func (GetAwsKmsConnectorCredentialAssumeRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArray) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutput() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialAssumeRoleArray) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialAssumeRoleArrayOutput)
}

type GetAwsKmsConnectorCredentialAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) ToGetAwsKmsConnectorCredentialAssumeRoleOutput() GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) ToGetAwsKmsConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsKmsConnectorCredentialAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsKmsConnectorCredentialAssumeRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutput() GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) ToGetAwsKmsConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialAssumeRoleArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialAssumeRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredentialAssumeRole {
		return vs[0].([]GetAwsKmsConnectorCredentialAssumeRole)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialAssumeRoleOutput)
}

type GetAwsKmsConnectorCredentialManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetAwsKmsConnectorCredentialManualInput is an input type that accepts GetAwsKmsConnectorCredentialManualArgs and GetAwsKmsConnectorCredentialManualOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialManualInput` via:
//
//	GetAwsKmsConnectorCredentialManualArgs{...}
type GetAwsKmsConnectorCredentialManualInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialManualOutput() GetAwsKmsConnectorCredentialManualOutput
	ToGetAwsKmsConnectorCredentialManualOutputWithContext(context.Context) GetAwsKmsConnectorCredentialManualOutput
}

type GetAwsKmsConnectorCredentialManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetAwsKmsConnectorCredentialManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialManualArgs) ToGetAwsKmsConnectorCredentialManualOutput() GetAwsKmsConnectorCredentialManualOutput {
	return i.ToGetAwsKmsConnectorCredentialManualOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialManualArgs) ToGetAwsKmsConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialManualOutput)
}

// GetAwsKmsConnectorCredentialManualArrayInput is an input type that accepts GetAwsKmsConnectorCredentialManualArray and GetAwsKmsConnectorCredentialManualArrayOutput values.
// You can construct a concrete instance of `GetAwsKmsConnectorCredentialManualArrayInput` via:
//
//	GetAwsKmsConnectorCredentialManualArray{ GetAwsKmsConnectorCredentialManualArgs{...} }
type GetAwsKmsConnectorCredentialManualArrayInput interface {
	pulumi.Input

	ToGetAwsKmsConnectorCredentialManualArrayOutput() GetAwsKmsConnectorCredentialManualArrayOutput
	ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(context.Context) GetAwsKmsConnectorCredentialManualArrayOutput
}

type GetAwsKmsConnectorCredentialManualArray []GetAwsKmsConnectorCredentialManualInput

func (GetAwsKmsConnectorCredentialManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsKmsConnectorCredentialManualArray) ToGetAwsKmsConnectorCredentialManualArrayOutput() GetAwsKmsConnectorCredentialManualArrayOutput {
	return i.ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(context.Background())
}

func (i GetAwsKmsConnectorCredentialManualArray) ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsKmsConnectorCredentialManualArrayOutput)
}

type GetAwsKmsConnectorCredentialManualOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialManualOutput) ToGetAwsKmsConnectorCredentialManualOutput() GetAwsKmsConnectorCredentialManualOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualOutput) ToGetAwsKmsConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o GetAwsKmsConnectorCredentialManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsKmsConnectorCredentialManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsKmsConnectorCredentialManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsKmsConnectorCredentialManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsKmsConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsKmsConnectorCredentialManualArrayOutput) ToGetAwsKmsConnectorCredentialManualArrayOutput() GetAwsKmsConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualArrayOutput) ToGetAwsKmsConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsKmsConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsKmsConnectorCredentialManualArrayOutput) Index(i pulumi.IntInput) GetAwsKmsConnectorCredentialManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsKmsConnectorCredentialManual {
		return vs[0].([]GetAwsKmsConnectorCredentialManual)[vs[1].(int)]
	}).(GetAwsKmsConnectorCredentialManualOutput)
}

type GetAwsSecretManagerConnectorCredential struct {
	AssumeRoles         []GetAwsSecretManagerConnectorCredentialAssumeRole `pulumi:"assumeRoles"`
	InheritFromDelegate bool                                               `pulumi:"inheritFromDelegate"`
	Manuals             []GetAwsSecretManagerConnectorCredentialManual     `pulumi:"manuals"`
}

// GetAwsSecretManagerConnectorCredentialInput is an input type that accepts GetAwsSecretManagerConnectorCredentialArgs and GetAwsSecretManagerConnectorCredentialOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialInput` via:
//
//	GetAwsSecretManagerConnectorCredentialArgs{...}
type GetAwsSecretManagerConnectorCredentialInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialOutput() GetAwsSecretManagerConnectorCredentialOutput
	ToGetAwsSecretManagerConnectorCredentialOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialOutput
}

type GetAwsSecretManagerConnectorCredentialArgs struct {
	AssumeRoles         GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput `pulumi:"assumeRoles"`
	InheritFromDelegate pulumi.BoolInput                                           `pulumi:"inheritFromDelegate"`
	Manuals             GetAwsSecretManagerConnectorCredentialManualArrayInput     `pulumi:"manuals"`
}

func (GetAwsSecretManagerConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialArgs) ToGetAwsSecretManagerConnectorCredentialOutput() GetAwsSecretManagerConnectorCredentialOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialArgs) ToGetAwsSecretManagerConnectorCredentialOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialOutput)
}

// GetAwsSecretManagerConnectorCredentialArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialArray and GetAwsSecretManagerConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialArray{ GetAwsSecretManagerConnectorCredentialArgs{...} }
type GetAwsSecretManagerConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialArrayOutput() GetAwsSecretManagerConnectorCredentialArrayOutput
	ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialArrayOutput
}

type GetAwsSecretManagerConnectorCredentialArray []GetAwsSecretManagerConnectorCredentialInput

func (GetAwsSecretManagerConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialArray) ToGetAwsSecretManagerConnectorCredentialArrayOutput() GetAwsSecretManagerConnectorCredentialArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialArray) ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialOutput) ToGetAwsSecretManagerConnectorCredentialOutput() GetAwsSecretManagerConnectorCredentialOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialOutput) ToGetAwsSecretManagerConnectorCredentialOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialOutput) AssumeRoles() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) []GetAwsSecretManagerConnectorCredentialAssumeRole {
		return v.AssumeRoles
	}).(GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput)
}

func (o GetAwsSecretManagerConnectorCredentialOutput) InheritFromDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) bool { return v.InheritFromDelegate }).(pulumi.BoolOutput)
}

func (o GetAwsSecretManagerConnectorCredentialOutput) Manuals() GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredential) []GetAwsSecretManagerConnectorCredentialManual {
		return v.Manuals
	}).(GetAwsSecretManagerConnectorCredentialManualArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredential)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialArrayOutput) ToGetAwsSecretManagerConnectorCredentialArrayOutput() GetAwsSecretManagerConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialArrayOutput) ToGetAwsSecretManagerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredential {
		return vs[0].([]GetAwsSecretManagerConnectorCredential)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialOutput)
}

type GetAwsSecretManagerConnectorCredentialAssumeRole struct {
	Duration   int    `pulumi:"duration"`
	ExternalId string `pulumi:"externalId"`
	RoleArn    string `pulumi:"roleArn"`
}

// GetAwsSecretManagerConnectorCredentialAssumeRoleInput is an input type that accepts GetAwsSecretManagerConnectorCredentialAssumeRoleArgs and GetAwsSecretManagerConnectorCredentialAssumeRoleOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialAssumeRoleInput` via:
//
//	GetAwsSecretManagerConnectorCredentialAssumeRoleArgs{...}
type GetAwsSecretManagerConnectorCredentialAssumeRoleInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleOutput
	ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleArgs struct {
	Duration   pulumi.IntInput    `pulumi:"duration"`
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	RoleArn    pulumi.StringInput `pulumi:"roleArn"`
}

func (GetAwsSecretManagerConnectorCredentialAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArgs) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArgs) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialAssumeRoleOutput)
}

// GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialAssumeRoleArray and GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialAssumeRoleArray{ GetAwsSecretManagerConnectorCredentialAssumeRoleArgs{...} }
type GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput
	ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleArray []GetAwsSecretManagerConnectorCredentialAssumeRoleInput

func (GetAwsSecretManagerConnectorCredentialAssumeRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArray) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialAssumeRoleArray) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialAssumeRole) int { return v.Duration }).(pulumi.IntOutput)
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialAssumeRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialAssumeRole)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput() GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) ToGetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialAssumeRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredentialAssumeRole {
		return vs[0].([]GetAwsSecretManagerConnectorCredentialAssumeRole)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialAssumeRoleOutput)
}

type GetAwsSecretManagerConnectorCredentialManual struct {
	AccessKeyRef string `pulumi:"accessKeyRef"`
	SecretKeyRef string `pulumi:"secretKeyRef"`
}

// GetAwsSecretManagerConnectorCredentialManualInput is an input type that accepts GetAwsSecretManagerConnectorCredentialManualArgs and GetAwsSecretManagerConnectorCredentialManualOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialManualInput` via:
//
//	GetAwsSecretManagerConnectorCredentialManualArgs{...}
type GetAwsSecretManagerConnectorCredentialManualInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialManualOutput() GetAwsSecretManagerConnectorCredentialManualOutput
	ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialManualOutput
}

type GetAwsSecretManagerConnectorCredentialManualArgs struct {
	AccessKeyRef pulumi.StringInput `pulumi:"accessKeyRef"`
	SecretKeyRef pulumi.StringInput `pulumi:"secretKeyRef"`
}

func (GetAwsSecretManagerConnectorCredentialManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialManualArgs) ToGetAwsSecretManagerConnectorCredentialManualOutput() GetAwsSecretManagerConnectorCredentialManualOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialManualArgs) ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialManualOutput)
}

// GetAwsSecretManagerConnectorCredentialManualArrayInput is an input type that accepts GetAwsSecretManagerConnectorCredentialManualArray and GetAwsSecretManagerConnectorCredentialManualArrayOutput values.
// You can construct a concrete instance of `GetAwsSecretManagerConnectorCredentialManualArrayInput` via:
//
//	GetAwsSecretManagerConnectorCredentialManualArray{ GetAwsSecretManagerConnectorCredentialManualArgs{...} }
type GetAwsSecretManagerConnectorCredentialManualArrayInput interface {
	pulumi.Input

	ToGetAwsSecretManagerConnectorCredentialManualArrayOutput() GetAwsSecretManagerConnectorCredentialManualArrayOutput
	ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(context.Context) GetAwsSecretManagerConnectorCredentialManualArrayOutput
}

type GetAwsSecretManagerConnectorCredentialManualArray []GetAwsSecretManagerConnectorCredentialManualInput

func (GetAwsSecretManagerConnectorCredentialManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (i GetAwsSecretManagerConnectorCredentialManualArray) ToGetAwsSecretManagerConnectorCredentialManualArrayOutput() GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return i.ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(context.Background())
}

func (i GetAwsSecretManagerConnectorCredentialManualArray) ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAwsSecretManagerConnectorCredentialManualArrayOutput)
}

type GetAwsSecretManagerConnectorCredentialManualOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialManualOutput) ToGetAwsSecretManagerConnectorCredentialManualOutput() GetAwsSecretManagerConnectorCredentialManualOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualOutput) ToGetAwsSecretManagerConnectorCredentialManualOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualOutput) AccessKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialManual) string { return v.AccessKeyRef }).(pulumi.StringOutput)
}

func (o GetAwsSecretManagerConnectorCredentialManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsSecretManagerConnectorCredentialManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetAwsSecretManagerConnectorCredentialManualArrayOutput struct{ *pulumi.OutputState }

func (GetAwsSecretManagerConnectorCredentialManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAwsSecretManagerConnectorCredentialManual)(nil)).Elem()
}

func (o GetAwsSecretManagerConnectorCredentialManualArrayOutput) ToGetAwsSecretManagerConnectorCredentialManualArrayOutput() GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualArrayOutput) ToGetAwsSecretManagerConnectorCredentialManualArrayOutputWithContext(ctx context.Context) GetAwsSecretManagerConnectorCredentialManualArrayOutput {
	return o
}

func (o GetAwsSecretManagerConnectorCredentialManualArrayOutput) Index(i pulumi.IntInput) GetAwsSecretManagerConnectorCredentialManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAwsSecretManagerConnectorCredentialManual {
		return vs[0].([]GetAwsSecretManagerConnectorCredentialManual)[vs[1].(int)]
	}).(GetAwsSecretManagerConnectorCredentialManualOutput)
}

type GetBitbucketConnectorApiAuthentication struct {
	TokenRef    string `pulumi:"tokenRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetBitbucketConnectorApiAuthenticationInput is an input type that accepts GetBitbucketConnectorApiAuthenticationArgs and GetBitbucketConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorApiAuthenticationInput` via:
//
//	GetBitbucketConnectorApiAuthenticationArgs{...}
type GetBitbucketConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGetBitbucketConnectorApiAuthenticationOutput() GetBitbucketConnectorApiAuthenticationOutput
	ToGetBitbucketConnectorApiAuthenticationOutputWithContext(context.Context) GetBitbucketConnectorApiAuthenticationOutput
}

type GetBitbucketConnectorApiAuthenticationArgs struct {
	TokenRef    pulumi.StringInput `pulumi:"tokenRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetBitbucketConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (i GetBitbucketConnectorApiAuthenticationArgs) ToGetBitbucketConnectorApiAuthenticationOutput() GetBitbucketConnectorApiAuthenticationOutput {
	return i.ToGetBitbucketConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorApiAuthenticationArgs) ToGetBitbucketConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorApiAuthenticationOutput)
}

// GetBitbucketConnectorApiAuthenticationArrayInput is an input type that accepts GetBitbucketConnectorApiAuthenticationArray and GetBitbucketConnectorApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorApiAuthenticationArrayInput` via:
//
//	GetBitbucketConnectorApiAuthenticationArray{ GetBitbucketConnectorApiAuthenticationArgs{...} }
type GetBitbucketConnectorApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorApiAuthenticationArrayOutput() GetBitbucketConnectorApiAuthenticationArrayOutput
	ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(context.Context) GetBitbucketConnectorApiAuthenticationArrayOutput
}

type GetBitbucketConnectorApiAuthenticationArray []GetBitbucketConnectorApiAuthenticationInput

func (GetBitbucketConnectorApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (i GetBitbucketConnectorApiAuthenticationArray) ToGetBitbucketConnectorApiAuthenticationArrayOutput() GetBitbucketConnectorApiAuthenticationArrayOutput {
	return i.ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorApiAuthenticationArray) ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorApiAuthenticationArrayOutput)
}

type GetBitbucketConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (o GetBitbucketConnectorApiAuthenticationOutput) ToGetBitbucketConnectorApiAuthenticationOutput() GetBitbucketConnectorApiAuthenticationOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationOutput) ToGetBitbucketConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GetBitbucketConnectorApiAuthenticationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorApiAuthentication) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetBitbucketConnectorApiAuthenticationOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorApiAuthentication) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetBitbucketConnectorApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorApiAuthentication)(nil)).Elem()
}

func (o GetBitbucketConnectorApiAuthenticationArrayOutput) ToGetBitbucketConnectorApiAuthenticationArrayOutput() GetBitbucketConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationArrayOutput) ToGetBitbucketConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetBitbucketConnectorApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorApiAuthentication {
		return vs[0].([]GetBitbucketConnectorApiAuthentication)[vs[1].(int)]
	}).(GetBitbucketConnectorApiAuthenticationOutput)
}

type GetBitbucketConnectorCredential struct {
	Https []GetBitbucketConnectorCredentialHttp `pulumi:"https"`
	Sshes []GetBitbucketConnectorCredentialSsh  `pulumi:"sshes"`
}

// GetBitbucketConnectorCredentialInput is an input type that accepts GetBitbucketConnectorCredentialArgs and GetBitbucketConnectorCredentialOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialInput` via:
//
//	GetBitbucketConnectorCredentialArgs{...}
type GetBitbucketConnectorCredentialInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialOutput() GetBitbucketConnectorCredentialOutput
	ToGetBitbucketConnectorCredentialOutputWithContext(context.Context) GetBitbucketConnectorCredentialOutput
}

type GetBitbucketConnectorCredentialArgs struct {
	Https GetBitbucketConnectorCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetBitbucketConnectorCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetBitbucketConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredential)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialArgs) ToGetBitbucketConnectorCredentialOutput() GetBitbucketConnectorCredentialOutput {
	return i.ToGetBitbucketConnectorCredentialOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialArgs) ToGetBitbucketConnectorCredentialOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialOutput)
}

// GetBitbucketConnectorCredentialArrayInput is an input type that accepts GetBitbucketConnectorCredentialArray and GetBitbucketConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialArrayInput` via:
//
//	GetBitbucketConnectorCredentialArray{ GetBitbucketConnectorCredentialArgs{...} }
type GetBitbucketConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialArrayOutput() GetBitbucketConnectorCredentialArrayOutput
	ToGetBitbucketConnectorCredentialArrayOutputWithContext(context.Context) GetBitbucketConnectorCredentialArrayOutput
}

type GetBitbucketConnectorCredentialArray []GetBitbucketConnectorCredentialInput

func (GetBitbucketConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredential)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialArray) ToGetBitbucketConnectorCredentialArrayOutput() GetBitbucketConnectorCredentialArrayOutput {
	return i.ToGetBitbucketConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialArray) ToGetBitbucketConnectorCredentialArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialArrayOutput)
}

type GetBitbucketConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredential)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialOutput) ToGetBitbucketConnectorCredentialOutput() GetBitbucketConnectorCredentialOutput {
	return o
}

func (o GetBitbucketConnectorCredentialOutput) ToGetBitbucketConnectorCredentialOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialOutput {
	return o
}

func (o GetBitbucketConnectorCredentialOutput) Https() GetBitbucketConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredential) []GetBitbucketConnectorCredentialHttp { return v.Https }).(GetBitbucketConnectorCredentialHttpArrayOutput)
}

func (o GetBitbucketConnectorCredentialOutput) Sshes() GetBitbucketConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredential) []GetBitbucketConnectorCredentialSsh { return v.Sshes }).(GetBitbucketConnectorCredentialSshArrayOutput)
}

type GetBitbucketConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredential)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialArrayOutput) ToGetBitbucketConnectorCredentialArrayOutput() GetBitbucketConnectorCredentialArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialArrayOutput) ToGetBitbucketConnectorCredentialArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorCredential {
		return vs[0].([]GetBitbucketConnectorCredential)[vs[1].(int)]
	}).(GetBitbucketConnectorCredentialOutput)
}

type GetBitbucketConnectorCredentialHttp struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetBitbucketConnectorCredentialHttpInput is an input type that accepts GetBitbucketConnectorCredentialHttpArgs and GetBitbucketConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialHttpInput` via:
//
//	GetBitbucketConnectorCredentialHttpArgs{...}
type GetBitbucketConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialHttpOutput() GetBitbucketConnectorCredentialHttpOutput
	ToGetBitbucketConnectorCredentialHttpOutputWithContext(context.Context) GetBitbucketConnectorCredentialHttpOutput
}

type GetBitbucketConnectorCredentialHttpArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetBitbucketConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialHttpArgs) ToGetBitbucketConnectorCredentialHttpOutput() GetBitbucketConnectorCredentialHttpOutput {
	return i.ToGetBitbucketConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialHttpArgs) ToGetBitbucketConnectorCredentialHttpOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialHttpOutput)
}

// GetBitbucketConnectorCredentialHttpArrayInput is an input type that accepts GetBitbucketConnectorCredentialHttpArray and GetBitbucketConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialHttpArrayInput` via:
//
//	GetBitbucketConnectorCredentialHttpArray{ GetBitbucketConnectorCredentialHttpArgs{...} }
type GetBitbucketConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialHttpArrayOutput() GetBitbucketConnectorCredentialHttpArrayOutput
	ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(context.Context) GetBitbucketConnectorCredentialHttpArrayOutput
}

type GetBitbucketConnectorCredentialHttpArray []GetBitbucketConnectorCredentialHttpInput

func (GetBitbucketConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialHttpArray) ToGetBitbucketConnectorCredentialHttpArrayOutput() GetBitbucketConnectorCredentialHttpArrayOutput {
	return i.ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialHttpArray) ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialHttpArrayOutput)
}

type GetBitbucketConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialHttpOutput) ToGetBitbucketConnectorCredentialHttpOutput() GetBitbucketConnectorCredentialHttpOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpOutput) ToGetBitbucketConnectorCredentialHttpOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetBitbucketConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetBitbucketConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetBitbucketConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialHttp)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialHttpArrayOutput) ToGetBitbucketConnectorCredentialHttpArrayOutput() GetBitbucketConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpArrayOutput) ToGetBitbucketConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorCredentialHttp {
		return vs[0].([]GetBitbucketConnectorCredentialHttp)[vs[1].(int)]
	}).(GetBitbucketConnectorCredentialHttpOutput)
}

type GetBitbucketConnectorCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetBitbucketConnectorCredentialSshInput is an input type that accepts GetBitbucketConnectorCredentialSshArgs and GetBitbucketConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialSshInput` via:
//
//	GetBitbucketConnectorCredentialSshArgs{...}
type GetBitbucketConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialSshOutput() GetBitbucketConnectorCredentialSshOutput
	ToGetBitbucketConnectorCredentialSshOutputWithContext(context.Context) GetBitbucketConnectorCredentialSshOutput
}

type GetBitbucketConnectorCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetBitbucketConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialSshArgs) ToGetBitbucketConnectorCredentialSshOutput() GetBitbucketConnectorCredentialSshOutput {
	return i.ToGetBitbucketConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialSshArgs) ToGetBitbucketConnectorCredentialSshOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialSshOutput)
}

// GetBitbucketConnectorCredentialSshArrayInput is an input type that accepts GetBitbucketConnectorCredentialSshArray and GetBitbucketConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetBitbucketConnectorCredentialSshArrayInput` via:
//
//	GetBitbucketConnectorCredentialSshArray{ GetBitbucketConnectorCredentialSshArgs{...} }
type GetBitbucketConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetBitbucketConnectorCredentialSshArrayOutput() GetBitbucketConnectorCredentialSshArrayOutput
	ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(context.Context) GetBitbucketConnectorCredentialSshArrayOutput
}

type GetBitbucketConnectorCredentialSshArray []GetBitbucketConnectorCredentialSshInput

func (GetBitbucketConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (i GetBitbucketConnectorCredentialSshArray) ToGetBitbucketConnectorCredentialSshArrayOutput() GetBitbucketConnectorCredentialSshArrayOutput {
	return i.ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetBitbucketConnectorCredentialSshArray) ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBitbucketConnectorCredentialSshArrayOutput)
}

type GetBitbucketConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialSshOutput) ToGetBitbucketConnectorCredentialSshOutput() GetBitbucketConnectorCredentialSshOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshOutput) ToGetBitbucketConnectorCredentialSshOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetBitbucketConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetBitbucketConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetBitbucketConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBitbucketConnectorCredentialSsh)(nil)).Elem()
}

func (o GetBitbucketConnectorCredentialSshArrayOutput) ToGetBitbucketConnectorCredentialSshArrayOutput() GetBitbucketConnectorCredentialSshArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshArrayOutput) ToGetBitbucketConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetBitbucketConnectorCredentialSshArrayOutput {
	return o
}

func (o GetBitbucketConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetBitbucketConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBitbucketConnectorCredentialSsh {
		return vs[0].([]GetBitbucketConnectorCredentialSsh)[vs[1].(int)]
	}).(GetBitbucketConnectorCredentialSshOutput)
}

type GetCcmFiltersFilterProperty struct {
	FilterType string   `pulumi:"filterType"`
	Tags       []string `pulumi:"tags"`
}

// GetCcmFiltersFilterPropertyInput is an input type that accepts GetCcmFiltersFilterPropertyArgs and GetCcmFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetCcmFiltersFilterPropertyInput` via:
//
//	GetCcmFiltersFilterPropertyArgs{...}
type GetCcmFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetCcmFiltersFilterPropertyOutput() GetCcmFiltersFilterPropertyOutput
	ToGetCcmFiltersFilterPropertyOutputWithContext(context.Context) GetCcmFiltersFilterPropertyOutput
}

type GetCcmFiltersFilterPropertyArgs struct {
	FilterType pulumi.StringInput      `pulumi:"filterType"`
	Tags       pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetCcmFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (i GetCcmFiltersFilterPropertyArgs) ToGetCcmFiltersFilterPropertyOutput() GetCcmFiltersFilterPropertyOutput {
	return i.ToGetCcmFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetCcmFiltersFilterPropertyArgs) ToGetCcmFiltersFilterPropertyOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCcmFiltersFilterPropertyOutput)
}

// GetCcmFiltersFilterPropertyArrayInput is an input type that accepts GetCcmFiltersFilterPropertyArray and GetCcmFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetCcmFiltersFilterPropertyArrayInput` via:
//
//	GetCcmFiltersFilterPropertyArray{ GetCcmFiltersFilterPropertyArgs{...} }
type GetCcmFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetCcmFiltersFilterPropertyArrayOutput() GetCcmFiltersFilterPropertyArrayOutput
	ToGetCcmFiltersFilterPropertyArrayOutputWithContext(context.Context) GetCcmFiltersFilterPropertyArrayOutput
}

type GetCcmFiltersFilterPropertyArray []GetCcmFiltersFilterPropertyInput

func (GetCcmFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (i GetCcmFiltersFilterPropertyArray) ToGetCcmFiltersFilterPropertyArrayOutput() GetCcmFiltersFilterPropertyArrayOutput {
	return i.ToGetCcmFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetCcmFiltersFilterPropertyArray) ToGetCcmFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCcmFiltersFilterPropertyArrayOutput)
}

type GetCcmFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetCcmFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (o GetCcmFiltersFilterPropertyOutput) ToGetCcmFiltersFilterPropertyOutput() GetCcmFiltersFilterPropertyOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyOutput) ToGetCcmFiltersFilterPropertyOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCcmFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GetCcmFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCcmFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetCcmFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetCcmFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCcmFiltersFilterProperty)(nil)).Elem()
}

func (o GetCcmFiltersFilterPropertyArrayOutput) ToGetCcmFiltersFilterPropertyArrayOutput() GetCcmFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyArrayOutput) ToGetCcmFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetCcmFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetCcmFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetCcmFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCcmFiltersFilterProperty {
		return vs[0].([]GetCcmFiltersFilterProperty)[vs[1].(int)]
	}).(GetCcmFiltersFilterPropertyOutput)
}

type GetConnectorAzureCloudCostBillingExportSpec struct {
	ContainerName      string `pulumi:"containerName"`
	DirectoryName      string `pulumi:"directoryName"`
	ReportName         string `pulumi:"reportName"`
	StorageAccountName string `pulumi:"storageAccountName"`
	// Subsription id.
	SubscriptionId string `pulumi:"subscriptionId"`
}

// GetConnectorAzureCloudCostBillingExportSpecInput is an input type that accepts GetConnectorAzureCloudCostBillingExportSpecArgs and GetConnectorAzureCloudCostBillingExportSpecOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudCostBillingExportSpecInput` via:
//
//	GetConnectorAzureCloudCostBillingExportSpecArgs{...}
type GetConnectorAzureCloudCostBillingExportSpecInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudCostBillingExportSpecOutput() GetConnectorAzureCloudCostBillingExportSpecOutput
	ToGetConnectorAzureCloudCostBillingExportSpecOutputWithContext(context.Context) GetConnectorAzureCloudCostBillingExportSpecOutput
}

type GetConnectorAzureCloudCostBillingExportSpecArgs struct {
	ContainerName      pulumi.StringInput `pulumi:"containerName"`
	DirectoryName      pulumi.StringInput `pulumi:"directoryName"`
	ReportName         pulumi.StringInput `pulumi:"reportName"`
	StorageAccountName pulumi.StringInput `pulumi:"storageAccountName"`
	// Subsription id.
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (GetConnectorAzureCloudCostBillingExportSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (i GetConnectorAzureCloudCostBillingExportSpecArgs) ToGetConnectorAzureCloudCostBillingExportSpecOutput() GetConnectorAzureCloudCostBillingExportSpecOutput {
	return i.ToGetConnectorAzureCloudCostBillingExportSpecOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudCostBillingExportSpecArgs) ToGetConnectorAzureCloudCostBillingExportSpecOutputWithContext(ctx context.Context) GetConnectorAzureCloudCostBillingExportSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudCostBillingExportSpecOutput)
}

// GetConnectorAzureCloudCostBillingExportSpecArrayInput is an input type that accepts GetConnectorAzureCloudCostBillingExportSpecArray and GetConnectorAzureCloudCostBillingExportSpecArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudCostBillingExportSpecArrayInput` via:
//
//	GetConnectorAzureCloudCostBillingExportSpecArray{ GetConnectorAzureCloudCostBillingExportSpecArgs{...} }
type GetConnectorAzureCloudCostBillingExportSpecArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudCostBillingExportSpecArrayOutput() GetConnectorAzureCloudCostBillingExportSpecArrayOutput
	ToGetConnectorAzureCloudCostBillingExportSpecArrayOutputWithContext(context.Context) GetConnectorAzureCloudCostBillingExportSpecArrayOutput
}

type GetConnectorAzureCloudCostBillingExportSpecArray []GetConnectorAzureCloudCostBillingExportSpecInput

func (GetConnectorAzureCloudCostBillingExportSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (i GetConnectorAzureCloudCostBillingExportSpecArray) ToGetConnectorAzureCloudCostBillingExportSpecArrayOutput() GetConnectorAzureCloudCostBillingExportSpecArrayOutput {
	return i.ToGetConnectorAzureCloudCostBillingExportSpecArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudCostBillingExportSpecArray) ToGetConnectorAzureCloudCostBillingExportSpecArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudCostBillingExportSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudCostBillingExportSpecArrayOutput)
}

type GetConnectorAzureCloudCostBillingExportSpecOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudCostBillingExportSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (o GetConnectorAzureCloudCostBillingExportSpecOutput) ToGetConnectorAzureCloudCostBillingExportSpecOutput() GetConnectorAzureCloudCostBillingExportSpecOutput {
	return o
}

func (o GetConnectorAzureCloudCostBillingExportSpecOutput) ToGetConnectorAzureCloudCostBillingExportSpecOutputWithContext(ctx context.Context) GetConnectorAzureCloudCostBillingExportSpecOutput {
	return o
}

func (o GetConnectorAzureCloudCostBillingExportSpecOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudCostBillingExportSpec) string { return v.ContainerName }).(pulumi.StringOutput)
}

func (o GetConnectorAzureCloudCostBillingExportSpecOutput) DirectoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudCostBillingExportSpec) string { return v.DirectoryName }).(pulumi.StringOutput)
}

func (o GetConnectorAzureCloudCostBillingExportSpecOutput) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudCostBillingExportSpec) string { return v.ReportName }).(pulumi.StringOutput)
}

func (o GetConnectorAzureCloudCostBillingExportSpecOutput) StorageAccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudCostBillingExportSpec) string { return v.StorageAccountName }).(pulumi.StringOutput)
}

// Subsription id.
func (o GetConnectorAzureCloudCostBillingExportSpecOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudCostBillingExportSpec) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

type GetConnectorAzureCloudCostBillingExportSpecArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudCostBillingExportSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudCostBillingExportSpec)(nil)).Elem()
}

func (o GetConnectorAzureCloudCostBillingExportSpecArrayOutput) ToGetConnectorAzureCloudCostBillingExportSpecArrayOutput() GetConnectorAzureCloudCostBillingExportSpecArrayOutput {
	return o
}

func (o GetConnectorAzureCloudCostBillingExportSpecArrayOutput) ToGetConnectorAzureCloudCostBillingExportSpecArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudCostBillingExportSpecArrayOutput {
	return o
}

func (o GetConnectorAzureCloudCostBillingExportSpecArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudCostBillingExportSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudCostBillingExportSpec {
		return vs[0].([]GetConnectorAzureCloudCostBillingExportSpec)[vs[1].(int)]
	}).(GetConnectorAzureCloudCostBillingExportSpecOutput)
}

type GetConnectorAzureCloudProviderCredential struct {
	AzureInheritFromDelegateDetails []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail `pulumi:"azureInheritFromDelegateDetails"`
	AzureManualDetails              []GetConnectorAzureCloudProviderCredentialAzureManualDetail              `pulumi:"azureManualDetails"`
	Type                            string                                                                   `pulumi:"type"`
}

// GetConnectorAzureCloudProviderCredentialInput is an input type that accepts GetConnectorAzureCloudProviderCredentialArgs and GetConnectorAzureCloudProviderCredentialOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialInput` via:
//
//	GetConnectorAzureCloudProviderCredentialArgs{...}
type GetConnectorAzureCloudProviderCredentialInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialOutput() GetConnectorAzureCloudProviderCredentialOutput
	ToGetConnectorAzureCloudProviderCredentialOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialOutput
}

type GetConnectorAzureCloudProviderCredentialArgs struct {
	AzureInheritFromDelegateDetails GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayInput `pulumi:"azureInheritFromDelegateDetails"`
	AzureManualDetails              GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayInput              `pulumi:"azureManualDetails"`
	Type                            pulumi.StringInput                                                               `pulumi:"type"`
}

func (GetConnectorAzureCloudProviderCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredential)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialArgs) ToGetConnectorAzureCloudProviderCredentialOutput() GetConnectorAzureCloudProviderCredentialOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialArgs) ToGetConnectorAzureCloudProviderCredentialOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialOutput)
}

// GetConnectorAzureCloudProviderCredentialArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialArray and GetConnectorAzureCloudProviderCredentialArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialArray{ GetConnectorAzureCloudProviderCredentialArgs{...} }
type GetConnectorAzureCloudProviderCredentialArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialArrayOutput() GetConnectorAzureCloudProviderCredentialArrayOutput
	ToGetConnectorAzureCloudProviderCredentialArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialArrayOutput
}

type GetConnectorAzureCloudProviderCredentialArray []GetConnectorAzureCloudProviderCredentialInput

func (GetConnectorAzureCloudProviderCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredential)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialArray) ToGetConnectorAzureCloudProviderCredentialArrayOutput() GetConnectorAzureCloudProviderCredentialArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialArray) ToGetConnectorAzureCloudProviderCredentialArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredential)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialOutput) ToGetConnectorAzureCloudProviderCredentialOutput() GetConnectorAzureCloudProviderCredentialOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialOutput) ToGetConnectorAzureCloudProviderCredentialOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialOutput) AzureInheritFromDelegateDetails() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredential) []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail {
		return v.AzureInheritFromDelegateDetails
	}).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput)
}

func (o GetConnectorAzureCloudProviderCredentialOutput) AzureManualDetails() GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredential) []GetConnectorAzureCloudProviderCredentialAzureManualDetail {
		return v.AzureManualDetails
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput)
}

func (o GetConnectorAzureCloudProviderCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredential) string { return v.Type }).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredential)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialArrayOutput) ToGetConnectorAzureCloudProviderCredentialArrayOutput() GetConnectorAzureCloudProviderCredentialArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialArrayOutput) ToGetConnectorAzureCloudProviderCredentialArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredential {
		return vs[0].([]GetConnectorAzureCloudProviderCredential)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail struct {
	Auths []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth `pulumi:"auths"`
}

// GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs and GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput
	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs struct {
	Auths GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayInput `pulumi:"auths"`
}

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray and GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray{ GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailInput

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput) Auths() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail) []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth {
		return v.Auths
	}).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetail)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth struct {
	AzureMsiAuthUas []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa `pulumi:"azureMsiAuthUas"`
	Type            string                                                                                     `pulumi:"type"`
}

// GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs and GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput
	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs struct {
	AzureMsiAuthUas GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput `pulumi:"azureMsiAuthUas"`
	Type            pulumi.StringInput                                                                                 `pulumi:"type"`
}

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray and GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray{ GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthInput

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput) AzureMsiAuthUas() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth) []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa {
		return v.AzureMsiAuthUas
	}).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput)
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuth)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa struct {
	ClientId string `pulumi:"clientId"`
}

// GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs and GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput
	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs struct {
	ClientId pulumi.StringInput `pulumi:"clientId"`
}

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray and GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray{ GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray []GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa) string {
		return v.ClientId
	}).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput() GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUa)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetail struct {
	ApplicationId string                                                          `pulumi:"applicationId"`
	Auths         []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth `pulumi:"auths"`
	TenantId      string                                                          `pulumi:"tenantId"`
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs and GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureManualDetailInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs struct {
	ApplicationId pulumi.StringInput                                                      `pulumi:"applicationId"`
	Auths         GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayInput `pulumi:"auths"`
	TenantId      pulumi.StringInput                                                      `pulumi:"tenantId"`
}

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetail)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailArray and GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailArray{ GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailArray []GetConnectorAzureCloudProviderCredentialAzureManualDetailInput

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetail)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetail)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetail) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput) Auths() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetail) []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth {
		return v.Auths
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput)
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetail) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetail)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureManualDetail {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureManualDetail)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth struct {
	AzureClientKeyCerts   []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert   `pulumi:"azureClientKeyCerts"`
	AzureClientSecretKeys []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey `pulumi:"azureClientSecretKeys"`
	Type                  string                                                                              `pulumi:"type"`
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs and GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs struct {
	AzureClientKeyCerts   GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput   `pulumi:"azureClientKeyCerts"`
	AzureClientSecretKeys GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput `pulumi:"azureClientSecretKeys"`
	Type                  pulumi.StringInput                                                                          `pulumi:"type"`
}

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray and GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray{ GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthInput

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput) AzureClientKeyCerts() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth) []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert {
		return v.AzureClientKeyCerts
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput)
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput) AzureClientSecretKeys() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth) []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey {
		return v.AzureClientSecretKeys
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput)
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth) string { return v.Type }).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuth)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert struct {
	CertificateRef string `pulumi:"certificateRef"`
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs and GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs struct {
	CertificateRef pulumi.StringInput `pulumi:"certificateRef"`
}

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray and GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray{ GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertInput

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput) CertificateRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert) string {
		return v.CertificateRef
	}).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCert)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey struct {
	SecretRef string `pulumi:"secretRef"`
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs and GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs{...}
type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs struct {
	SecretRef pulumi.StringInput `pulumi:"secretRef"`
}

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput)
}

// GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput is an input type that accepts GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray and GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput values.
// You can construct a concrete instance of `GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput` via:
//
//	GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray{ GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs{...} }
type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput interface {
	pulumi.Input

	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput
	ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray []GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyInput

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return i.ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(context.Background())
}

func (i GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey) string {
		return v.SecretRef
	}).(pulumi.StringOutput)
}

type GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey)(nil)).Elem()
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput() GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) ToGetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutputWithContext(ctx context.Context) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput {
	return o
}

func (o GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput) Index(i pulumi.IntInput) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey {
		return vs[0].([]GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKey)[vs[1].(int)]
	}).(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput)
}

type GetConnectorGcpCloudCostBillingExportSpec struct {
	DataSetId string `pulumi:"dataSetId"`
	TableId   string `pulumi:"tableId"`
}

// GetConnectorGcpCloudCostBillingExportSpecInput is an input type that accepts GetConnectorGcpCloudCostBillingExportSpecArgs and GetConnectorGcpCloudCostBillingExportSpecOutput values.
// You can construct a concrete instance of `GetConnectorGcpCloudCostBillingExportSpecInput` via:
//
//	GetConnectorGcpCloudCostBillingExportSpecArgs{...}
type GetConnectorGcpCloudCostBillingExportSpecInput interface {
	pulumi.Input

	ToGetConnectorGcpCloudCostBillingExportSpecOutput() GetConnectorGcpCloudCostBillingExportSpecOutput
	ToGetConnectorGcpCloudCostBillingExportSpecOutputWithContext(context.Context) GetConnectorGcpCloudCostBillingExportSpecOutput
}

type GetConnectorGcpCloudCostBillingExportSpecArgs struct {
	DataSetId pulumi.StringInput `pulumi:"dataSetId"`
	TableId   pulumi.StringInput `pulumi:"tableId"`
}

func (GetConnectorGcpCloudCostBillingExportSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (i GetConnectorGcpCloudCostBillingExportSpecArgs) ToGetConnectorGcpCloudCostBillingExportSpecOutput() GetConnectorGcpCloudCostBillingExportSpecOutput {
	return i.ToGetConnectorGcpCloudCostBillingExportSpecOutputWithContext(context.Background())
}

func (i GetConnectorGcpCloudCostBillingExportSpecArgs) ToGetConnectorGcpCloudCostBillingExportSpecOutputWithContext(ctx context.Context) GetConnectorGcpCloudCostBillingExportSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorGcpCloudCostBillingExportSpecOutput)
}

// GetConnectorGcpCloudCostBillingExportSpecArrayInput is an input type that accepts GetConnectorGcpCloudCostBillingExportSpecArray and GetConnectorGcpCloudCostBillingExportSpecArrayOutput values.
// You can construct a concrete instance of `GetConnectorGcpCloudCostBillingExportSpecArrayInput` via:
//
//	GetConnectorGcpCloudCostBillingExportSpecArray{ GetConnectorGcpCloudCostBillingExportSpecArgs{...} }
type GetConnectorGcpCloudCostBillingExportSpecArrayInput interface {
	pulumi.Input

	ToGetConnectorGcpCloudCostBillingExportSpecArrayOutput() GetConnectorGcpCloudCostBillingExportSpecArrayOutput
	ToGetConnectorGcpCloudCostBillingExportSpecArrayOutputWithContext(context.Context) GetConnectorGcpCloudCostBillingExportSpecArrayOutput
}

type GetConnectorGcpCloudCostBillingExportSpecArray []GetConnectorGcpCloudCostBillingExportSpecInput

func (GetConnectorGcpCloudCostBillingExportSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (i GetConnectorGcpCloudCostBillingExportSpecArray) ToGetConnectorGcpCloudCostBillingExportSpecArrayOutput() GetConnectorGcpCloudCostBillingExportSpecArrayOutput {
	return i.ToGetConnectorGcpCloudCostBillingExportSpecArrayOutputWithContext(context.Background())
}

func (i GetConnectorGcpCloudCostBillingExportSpecArray) ToGetConnectorGcpCloudCostBillingExportSpecArrayOutputWithContext(ctx context.Context) GetConnectorGcpCloudCostBillingExportSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorGcpCloudCostBillingExportSpecArrayOutput)
}

type GetConnectorGcpCloudCostBillingExportSpecOutput struct{ *pulumi.OutputState }

func (GetConnectorGcpCloudCostBillingExportSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (o GetConnectorGcpCloudCostBillingExportSpecOutput) ToGetConnectorGcpCloudCostBillingExportSpecOutput() GetConnectorGcpCloudCostBillingExportSpecOutput {
	return o
}

func (o GetConnectorGcpCloudCostBillingExportSpecOutput) ToGetConnectorGcpCloudCostBillingExportSpecOutputWithContext(ctx context.Context) GetConnectorGcpCloudCostBillingExportSpecOutput {
	return o
}

func (o GetConnectorGcpCloudCostBillingExportSpecOutput) DataSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpCloudCostBillingExportSpec) string { return v.DataSetId }).(pulumi.StringOutput)
}

func (o GetConnectorGcpCloudCostBillingExportSpecOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorGcpCloudCostBillingExportSpec) string { return v.TableId }).(pulumi.StringOutput)
}

type GetConnectorGcpCloudCostBillingExportSpecArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorGcpCloudCostBillingExportSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorGcpCloudCostBillingExportSpec)(nil)).Elem()
}

func (o GetConnectorGcpCloudCostBillingExportSpecArrayOutput) ToGetConnectorGcpCloudCostBillingExportSpecArrayOutput() GetConnectorGcpCloudCostBillingExportSpecArrayOutput {
	return o
}

func (o GetConnectorGcpCloudCostBillingExportSpecArrayOutput) ToGetConnectorGcpCloudCostBillingExportSpecArrayOutputWithContext(ctx context.Context) GetConnectorGcpCloudCostBillingExportSpecArrayOutput {
	return o
}

func (o GetConnectorGcpCloudCostBillingExportSpecArrayOutput) Index(i pulumi.IntInput) GetConnectorGcpCloudCostBillingExportSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorGcpCloudCostBillingExportSpec {
		return vs[0].([]GetConnectorGcpCloudCostBillingExportSpec)[vs[1].(int)]
	}).(GetConnectorGcpCloudCostBillingExportSpecOutput)
}

type GetConnectorJenkinsAuth struct {
	JenkinsBearerTokens      []GetConnectorJenkinsAuthJenkinsBearerToken      `pulumi:"jenkinsBearerTokens"`
	JenkinsUserNamePasswords []GetConnectorJenkinsAuthJenkinsUserNamePassword `pulumi:"jenkinsUserNamePasswords"`
	Type                     string                                           `pulumi:"type"`
}

// GetConnectorJenkinsAuthInput is an input type that accepts GetConnectorJenkinsAuthArgs and GetConnectorJenkinsAuthOutput values.
// You can construct a concrete instance of `GetConnectorJenkinsAuthInput` via:
//
//	GetConnectorJenkinsAuthArgs{...}
type GetConnectorJenkinsAuthInput interface {
	pulumi.Input

	ToGetConnectorJenkinsAuthOutput() GetConnectorJenkinsAuthOutput
	ToGetConnectorJenkinsAuthOutputWithContext(context.Context) GetConnectorJenkinsAuthOutput
}

type GetConnectorJenkinsAuthArgs struct {
	JenkinsBearerTokens      GetConnectorJenkinsAuthJenkinsBearerTokenArrayInput      `pulumi:"jenkinsBearerTokens"`
	JenkinsUserNamePasswords GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayInput `pulumi:"jenkinsUserNamePasswords"`
	Type                     pulumi.StringInput                                       `pulumi:"type"`
}

func (GetConnectorJenkinsAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJenkinsAuth)(nil)).Elem()
}

func (i GetConnectorJenkinsAuthArgs) ToGetConnectorJenkinsAuthOutput() GetConnectorJenkinsAuthOutput {
	return i.ToGetConnectorJenkinsAuthOutputWithContext(context.Background())
}

func (i GetConnectorJenkinsAuthArgs) ToGetConnectorJenkinsAuthOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJenkinsAuthOutput)
}

// GetConnectorJenkinsAuthArrayInput is an input type that accepts GetConnectorJenkinsAuthArray and GetConnectorJenkinsAuthArrayOutput values.
// You can construct a concrete instance of `GetConnectorJenkinsAuthArrayInput` via:
//
//	GetConnectorJenkinsAuthArray{ GetConnectorJenkinsAuthArgs{...} }
type GetConnectorJenkinsAuthArrayInput interface {
	pulumi.Input

	ToGetConnectorJenkinsAuthArrayOutput() GetConnectorJenkinsAuthArrayOutput
	ToGetConnectorJenkinsAuthArrayOutputWithContext(context.Context) GetConnectorJenkinsAuthArrayOutput
}

type GetConnectorJenkinsAuthArray []GetConnectorJenkinsAuthInput

func (GetConnectorJenkinsAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJenkinsAuth)(nil)).Elem()
}

func (i GetConnectorJenkinsAuthArray) ToGetConnectorJenkinsAuthArrayOutput() GetConnectorJenkinsAuthArrayOutput {
	return i.ToGetConnectorJenkinsAuthArrayOutputWithContext(context.Background())
}

func (i GetConnectorJenkinsAuthArray) ToGetConnectorJenkinsAuthArrayOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJenkinsAuthArrayOutput)
}

type GetConnectorJenkinsAuthOutput struct{ *pulumi.OutputState }

func (GetConnectorJenkinsAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJenkinsAuth)(nil)).Elem()
}

func (o GetConnectorJenkinsAuthOutput) ToGetConnectorJenkinsAuthOutput() GetConnectorJenkinsAuthOutput {
	return o
}

func (o GetConnectorJenkinsAuthOutput) ToGetConnectorJenkinsAuthOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthOutput {
	return o
}

func (o GetConnectorJenkinsAuthOutput) JenkinsBearerTokens() GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuth) []GetConnectorJenkinsAuthJenkinsBearerToken {
		return v.JenkinsBearerTokens
	}).(GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput)
}

func (o GetConnectorJenkinsAuthOutput) JenkinsUserNamePasswords() GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuth) []GetConnectorJenkinsAuthJenkinsUserNamePassword {
		return v.JenkinsUserNamePasswords
	}).(GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput)
}

func (o GetConnectorJenkinsAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuth) string { return v.Type }).(pulumi.StringOutput)
}

type GetConnectorJenkinsAuthArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorJenkinsAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJenkinsAuth)(nil)).Elem()
}

func (o GetConnectorJenkinsAuthArrayOutput) ToGetConnectorJenkinsAuthArrayOutput() GetConnectorJenkinsAuthArrayOutput {
	return o
}

func (o GetConnectorJenkinsAuthArrayOutput) ToGetConnectorJenkinsAuthArrayOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthArrayOutput {
	return o
}

func (o GetConnectorJenkinsAuthArrayOutput) Index(i pulumi.IntInput) GetConnectorJenkinsAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorJenkinsAuth {
		return vs[0].([]GetConnectorJenkinsAuth)[vs[1].(int)]
	}).(GetConnectorJenkinsAuthOutput)
}

type GetConnectorJenkinsAuthJenkinsBearerToken struct {
	TokenRef string `pulumi:"tokenRef"`
}

// GetConnectorJenkinsAuthJenkinsBearerTokenInput is an input type that accepts GetConnectorJenkinsAuthJenkinsBearerTokenArgs and GetConnectorJenkinsAuthJenkinsBearerTokenOutput values.
// You can construct a concrete instance of `GetConnectorJenkinsAuthJenkinsBearerTokenInput` via:
//
//	GetConnectorJenkinsAuthJenkinsBearerTokenArgs{...}
type GetConnectorJenkinsAuthJenkinsBearerTokenInput interface {
	pulumi.Input

	ToGetConnectorJenkinsAuthJenkinsBearerTokenOutput() GetConnectorJenkinsAuthJenkinsBearerTokenOutput
	ToGetConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(context.Context) GetConnectorJenkinsAuthJenkinsBearerTokenOutput
}

type GetConnectorJenkinsAuthJenkinsBearerTokenArgs struct {
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetConnectorJenkinsAuthJenkinsBearerTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (i GetConnectorJenkinsAuthJenkinsBearerTokenArgs) ToGetConnectorJenkinsAuthJenkinsBearerTokenOutput() GetConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return i.ToGetConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(context.Background())
}

func (i GetConnectorJenkinsAuthJenkinsBearerTokenArgs) ToGetConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJenkinsAuthJenkinsBearerTokenOutput)
}

// GetConnectorJenkinsAuthJenkinsBearerTokenArrayInput is an input type that accepts GetConnectorJenkinsAuthJenkinsBearerTokenArray and GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput values.
// You can construct a concrete instance of `GetConnectorJenkinsAuthJenkinsBearerTokenArrayInput` via:
//
//	GetConnectorJenkinsAuthJenkinsBearerTokenArray{ GetConnectorJenkinsAuthJenkinsBearerTokenArgs{...} }
type GetConnectorJenkinsAuthJenkinsBearerTokenArrayInput interface {
	pulumi.Input

	ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput() GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput
	ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutputWithContext(context.Context) GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput
}

type GetConnectorJenkinsAuthJenkinsBearerTokenArray []GetConnectorJenkinsAuthJenkinsBearerTokenInput

func (GetConnectorJenkinsAuthJenkinsBearerTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (i GetConnectorJenkinsAuthJenkinsBearerTokenArray) ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput() GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput {
	return i.ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutputWithContext(context.Background())
}

func (i GetConnectorJenkinsAuthJenkinsBearerTokenArray) ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput)
}

type GetConnectorJenkinsAuthJenkinsBearerTokenOutput struct{ *pulumi.OutputState }

func (GetConnectorJenkinsAuthJenkinsBearerTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (o GetConnectorJenkinsAuthJenkinsBearerTokenOutput) ToGetConnectorJenkinsAuthJenkinsBearerTokenOutput() GetConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsBearerTokenOutput) ToGetConnectorJenkinsAuthJenkinsBearerTokenOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsBearerTokenOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuthJenkinsBearerToken) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJenkinsAuthJenkinsBearerToken)(nil)).Elem()
}

func (o GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput) ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput() GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput) ToGetConnectorJenkinsAuthJenkinsBearerTokenArrayOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput) Index(i pulumi.IntInput) GetConnectorJenkinsAuthJenkinsBearerTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorJenkinsAuthJenkinsBearerToken {
		return vs[0].([]GetConnectorJenkinsAuthJenkinsBearerToken)[vs[1].(int)]
	}).(GetConnectorJenkinsAuthJenkinsBearerTokenOutput)
}

type GetConnectorJenkinsAuthJenkinsUserNamePassword struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorJenkinsAuthJenkinsUserNamePasswordInput is an input type that accepts GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs and GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput values.
// You can construct a concrete instance of `GetConnectorJenkinsAuthJenkinsUserNamePasswordInput` via:
//
//	GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs{...}
type GetConnectorJenkinsAuthJenkinsUserNamePasswordInput interface {
	pulumi.Input

	ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutput() GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput
	ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(context.Context) GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput
}

type GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutput() GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return i.ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(context.Background())
}

func (i GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput)
}

// GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayInput is an input type that accepts GetConnectorJenkinsAuthJenkinsUserNamePasswordArray and GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput values.
// You can construct a concrete instance of `GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayInput` via:
//
//	GetConnectorJenkinsAuthJenkinsUserNamePasswordArray{ GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs{...} }
type GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayInput interface {
	pulumi.Input

	ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput() GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput
	ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutputWithContext(context.Context) GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput
}

type GetConnectorJenkinsAuthJenkinsUserNamePasswordArray []GetConnectorJenkinsAuthJenkinsUserNamePasswordInput

func (GetConnectorJenkinsAuthJenkinsUserNamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (i GetConnectorJenkinsAuthJenkinsUserNamePasswordArray) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput() GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput {
	return i.ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutputWithContext(context.Background())
}

func (i GetConnectorJenkinsAuthJenkinsUserNamePasswordArray) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput)
}

type GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput struct{ *pulumi.OutputState }

func (GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutput() GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuthJenkinsUserNamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuthJenkinsUserNamePassword) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorJenkinsAuthJenkinsUserNamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorJenkinsAuthJenkinsUserNamePassword)(nil)).Elem()
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput() GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput) ToGetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutputWithContext(ctx context.Context) GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput {
	return o
}

func (o GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput) Index(i pulumi.IntInput) GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorJenkinsAuthJenkinsUserNamePassword {
		return vs[0].([]GetConnectorJenkinsAuthJenkinsUserNamePassword)[vs[1].(int)]
	}).(GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput)
}

type GetConnectorOciHelmCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorOciHelmCredentialInput is an input type that accepts GetConnectorOciHelmCredentialArgs and GetConnectorOciHelmCredentialOutput values.
// You can construct a concrete instance of `GetConnectorOciHelmCredentialInput` via:
//
//	GetConnectorOciHelmCredentialArgs{...}
type GetConnectorOciHelmCredentialInput interface {
	pulumi.Input

	ToGetConnectorOciHelmCredentialOutput() GetConnectorOciHelmCredentialOutput
	ToGetConnectorOciHelmCredentialOutputWithContext(context.Context) GetConnectorOciHelmCredentialOutput
}

type GetConnectorOciHelmCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorOciHelmCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorOciHelmCredential)(nil)).Elem()
}

func (i GetConnectorOciHelmCredentialArgs) ToGetConnectorOciHelmCredentialOutput() GetConnectorOciHelmCredentialOutput {
	return i.ToGetConnectorOciHelmCredentialOutputWithContext(context.Background())
}

func (i GetConnectorOciHelmCredentialArgs) ToGetConnectorOciHelmCredentialOutputWithContext(ctx context.Context) GetConnectorOciHelmCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorOciHelmCredentialOutput)
}

// GetConnectorOciHelmCredentialArrayInput is an input type that accepts GetConnectorOciHelmCredentialArray and GetConnectorOciHelmCredentialArrayOutput values.
// You can construct a concrete instance of `GetConnectorOciHelmCredentialArrayInput` via:
//
//	GetConnectorOciHelmCredentialArray{ GetConnectorOciHelmCredentialArgs{...} }
type GetConnectorOciHelmCredentialArrayInput interface {
	pulumi.Input

	ToGetConnectorOciHelmCredentialArrayOutput() GetConnectorOciHelmCredentialArrayOutput
	ToGetConnectorOciHelmCredentialArrayOutputWithContext(context.Context) GetConnectorOciHelmCredentialArrayOutput
}

type GetConnectorOciHelmCredentialArray []GetConnectorOciHelmCredentialInput

func (GetConnectorOciHelmCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorOciHelmCredential)(nil)).Elem()
}

func (i GetConnectorOciHelmCredentialArray) ToGetConnectorOciHelmCredentialArrayOutput() GetConnectorOciHelmCredentialArrayOutput {
	return i.ToGetConnectorOciHelmCredentialArrayOutputWithContext(context.Background())
}

func (i GetConnectorOciHelmCredentialArray) ToGetConnectorOciHelmCredentialArrayOutputWithContext(ctx context.Context) GetConnectorOciHelmCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorOciHelmCredentialArrayOutput)
}

type GetConnectorOciHelmCredentialOutput struct{ *pulumi.OutputState }

func (GetConnectorOciHelmCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorOciHelmCredential)(nil)).Elem()
}

func (o GetConnectorOciHelmCredentialOutput) ToGetConnectorOciHelmCredentialOutput() GetConnectorOciHelmCredentialOutput {
	return o
}

func (o GetConnectorOciHelmCredentialOutput) ToGetConnectorOciHelmCredentialOutputWithContext(ctx context.Context) GetConnectorOciHelmCredentialOutput {
	return o
}

func (o GetConnectorOciHelmCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorOciHelmCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetConnectorOciHelmCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorOciHelmCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetConnectorOciHelmCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorOciHelmCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorOciHelmCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorOciHelmCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorOciHelmCredential)(nil)).Elem()
}

func (o GetConnectorOciHelmCredentialArrayOutput) ToGetConnectorOciHelmCredentialArrayOutput() GetConnectorOciHelmCredentialArrayOutput {
	return o
}

func (o GetConnectorOciHelmCredentialArrayOutput) ToGetConnectorOciHelmCredentialArrayOutputWithContext(ctx context.Context) GetConnectorOciHelmCredentialArrayOutput {
	return o
}

func (o GetConnectorOciHelmCredentialArrayOutput) Index(i pulumi.IntInput) GetConnectorOciHelmCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorOciHelmCredential {
		return vs[0].([]GetConnectorOciHelmCredential)[vs[1].(int)]
	}).(GetConnectorOciHelmCredentialOutput)
}

type GetConnectorServiceNowAuth struct {
	Adfs              []GetConnectorServiceNowAuthAdf              `pulumi:"adfs"`
	AuthType          string                                       `pulumi:"authType"`
	UsernamePasswords []GetConnectorServiceNowAuthUsernamePassword `pulumi:"usernamePasswords"`
}

// GetConnectorServiceNowAuthInput is an input type that accepts GetConnectorServiceNowAuthArgs and GetConnectorServiceNowAuthOutput values.
// You can construct a concrete instance of `GetConnectorServiceNowAuthInput` via:
//
//	GetConnectorServiceNowAuthArgs{...}
type GetConnectorServiceNowAuthInput interface {
	pulumi.Input

	ToGetConnectorServiceNowAuthOutput() GetConnectorServiceNowAuthOutput
	ToGetConnectorServiceNowAuthOutputWithContext(context.Context) GetConnectorServiceNowAuthOutput
}

type GetConnectorServiceNowAuthArgs struct {
	Adfs              GetConnectorServiceNowAuthAdfArrayInput              `pulumi:"adfs"`
	AuthType          pulumi.StringInput                                   `pulumi:"authType"`
	UsernamePasswords GetConnectorServiceNowAuthUsernamePasswordArrayInput `pulumi:"usernamePasswords"`
}

func (GetConnectorServiceNowAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorServiceNowAuth)(nil)).Elem()
}

func (i GetConnectorServiceNowAuthArgs) ToGetConnectorServiceNowAuthOutput() GetConnectorServiceNowAuthOutput {
	return i.ToGetConnectorServiceNowAuthOutputWithContext(context.Background())
}

func (i GetConnectorServiceNowAuthArgs) ToGetConnectorServiceNowAuthOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorServiceNowAuthOutput)
}

// GetConnectorServiceNowAuthArrayInput is an input type that accepts GetConnectorServiceNowAuthArray and GetConnectorServiceNowAuthArrayOutput values.
// You can construct a concrete instance of `GetConnectorServiceNowAuthArrayInput` via:
//
//	GetConnectorServiceNowAuthArray{ GetConnectorServiceNowAuthArgs{...} }
type GetConnectorServiceNowAuthArrayInput interface {
	pulumi.Input

	ToGetConnectorServiceNowAuthArrayOutput() GetConnectorServiceNowAuthArrayOutput
	ToGetConnectorServiceNowAuthArrayOutputWithContext(context.Context) GetConnectorServiceNowAuthArrayOutput
}

type GetConnectorServiceNowAuthArray []GetConnectorServiceNowAuthInput

func (GetConnectorServiceNowAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorServiceNowAuth)(nil)).Elem()
}

func (i GetConnectorServiceNowAuthArray) ToGetConnectorServiceNowAuthArrayOutput() GetConnectorServiceNowAuthArrayOutput {
	return i.ToGetConnectorServiceNowAuthArrayOutputWithContext(context.Background())
}

func (i GetConnectorServiceNowAuthArray) ToGetConnectorServiceNowAuthArrayOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorServiceNowAuthArrayOutput)
}

type GetConnectorServiceNowAuthOutput struct{ *pulumi.OutputState }

func (GetConnectorServiceNowAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorServiceNowAuth)(nil)).Elem()
}

func (o GetConnectorServiceNowAuthOutput) ToGetConnectorServiceNowAuthOutput() GetConnectorServiceNowAuthOutput {
	return o
}

func (o GetConnectorServiceNowAuthOutput) ToGetConnectorServiceNowAuthOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthOutput {
	return o
}

func (o GetConnectorServiceNowAuthOutput) Adfs() GetConnectorServiceNowAuthAdfArrayOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuth) []GetConnectorServiceNowAuthAdf { return v.Adfs }).(GetConnectorServiceNowAuthAdfArrayOutput)
}

func (o GetConnectorServiceNowAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

func (o GetConnectorServiceNowAuthOutput) UsernamePasswords() GetConnectorServiceNowAuthUsernamePasswordArrayOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuth) []GetConnectorServiceNowAuthUsernamePassword {
		return v.UsernamePasswords
	}).(GetConnectorServiceNowAuthUsernamePasswordArrayOutput)
}

type GetConnectorServiceNowAuthArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorServiceNowAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorServiceNowAuth)(nil)).Elem()
}

func (o GetConnectorServiceNowAuthArrayOutput) ToGetConnectorServiceNowAuthArrayOutput() GetConnectorServiceNowAuthArrayOutput {
	return o
}

func (o GetConnectorServiceNowAuthArrayOutput) ToGetConnectorServiceNowAuthArrayOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthArrayOutput {
	return o
}

func (o GetConnectorServiceNowAuthArrayOutput) Index(i pulumi.IntInput) GetConnectorServiceNowAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorServiceNowAuth {
		return vs[0].([]GetConnectorServiceNowAuth)[vs[1].(int)]
	}).(GetConnectorServiceNowAuthOutput)
}

type GetConnectorServiceNowAuthAdf struct {
	AdfsUrl        string `pulumi:"adfsUrl"`
	CertificateRef string `pulumi:"certificateRef"`
	ClientIdRef    string `pulumi:"clientIdRef"`
	PrivateKeyRef  string `pulumi:"privateKeyRef"`
	ResourceIdRef  string `pulumi:"resourceIdRef"`
}

// GetConnectorServiceNowAuthAdfInput is an input type that accepts GetConnectorServiceNowAuthAdfArgs and GetConnectorServiceNowAuthAdfOutput values.
// You can construct a concrete instance of `GetConnectorServiceNowAuthAdfInput` via:
//
//	GetConnectorServiceNowAuthAdfArgs{...}
type GetConnectorServiceNowAuthAdfInput interface {
	pulumi.Input

	ToGetConnectorServiceNowAuthAdfOutput() GetConnectorServiceNowAuthAdfOutput
	ToGetConnectorServiceNowAuthAdfOutputWithContext(context.Context) GetConnectorServiceNowAuthAdfOutput
}

type GetConnectorServiceNowAuthAdfArgs struct {
	AdfsUrl        pulumi.StringInput `pulumi:"adfsUrl"`
	CertificateRef pulumi.StringInput `pulumi:"certificateRef"`
	ClientIdRef    pulumi.StringInput `pulumi:"clientIdRef"`
	PrivateKeyRef  pulumi.StringInput `pulumi:"privateKeyRef"`
	ResourceIdRef  pulumi.StringInput `pulumi:"resourceIdRef"`
}

func (GetConnectorServiceNowAuthAdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorServiceNowAuthAdf)(nil)).Elem()
}

func (i GetConnectorServiceNowAuthAdfArgs) ToGetConnectorServiceNowAuthAdfOutput() GetConnectorServiceNowAuthAdfOutput {
	return i.ToGetConnectorServiceNowAuthAdfOutputWithContext(context.Background())
}

func (i GetConnectorServiceNowAuthAdfArgs) ToGetConnectorServiceNowAuthAdfOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthAdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorServiceNowAuthAdfOutput)
}

// GetConnectorServiceNowAuthAdfArrayInput is an input type that accepts GetConnectorServiceNowAuthAdfArray and GetConnectorServiceNowAuthAdfArrayOutput values.
// You can construct a concrete instance of `GetConnectorServiceNowAuthAdfArrayInput` via:
//
//	GetConnectorServiceNowAuthAdfArray{ GetConnectorServiceNowAuthAdfArgs{...} }
type GetConnectorServiceNowAuthAdfArrayInput interface {
	pulumi.Input

	ToGetConnectorServiceNowAuthAdfArrayOutput() GetConnectorServiceNowAuthAdfArrayOutput
	ToGetConnectorServiceNowAuthAdfArrayOutputWithContext(context.Context) GetConnectorServiceNowAuthAdfArrayOutput
}

type GetConnectorServiceNowAuthAdfArray []GetConnectorServiceNowAuthAdfInput

func (GetConnectorServiceNowAuthAdfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorServiceNowAuthAdf)(nil)).Elem()
}

func (i GetConnectorServiceNowAuthAdfArray) ToGetConnectorServiceNowAuthAdfArrayOutput() GetConnectorServiceNowAuthAdfArrayOutput {
	return i.ToGetConnectorServiceNowAuthAdfArrayOutputWithContext(context.Background())
}

func (i GetConnectorServiceNowAuthAdfArray) ToGetConnectorServiceNowAuthAdfArrayOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthAdfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorServiceNowAuthAdfArrayOutput)
}

type GetConnectorServiceNowAuthAdfOutput struct{ *pulumi.OutputState }

func (GetConnectorServiceNowAuthAdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorServiceNowAuthAdf)(nil)).Elem()
}

func (o GetConnectorServiceNowAuthAdfOutput) ToGetConnectorServiceNowAuthAdfOutput() GetConnectorServiceNowAuthAdfOutput {
	return o
}

func (o GetConnectorServiceNowAuthAdfOutput) ToGetConnectorServiceNowAuthAdfOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthAdfOutput {
	return o
}

func (o GetConnectorServiceNowAuthAdfOutput) AdfsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthAdf) string { return v.AdfsUrl }).(pulumi.StringOutput)
}

func (o GetConnectorServiceNowAuthAdfOutput) CertificateRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthAdf) string { return v.CertificateRef }).(pulumi.StringOutput)
}

func (o GetConnectorServiceNowAuthAdfOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthAdf) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

func (o GetConnectorServiceNowAuthAdfOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthAdf) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

func (o GetConnectorServiceNowAuthAdfOutput) ResourceIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthAdf) string { return v.ResourceIdRef }).(pulumi.StringOutput)
}

type GetConnectorServiceNowAuthAdfArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorServiceNowAuthAdfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorServiceNowAuthAdf)(nil)).Elem()
}

func (o GetConnectorServiceNowAuthAdfArrayOutput) ToGetConnectorServiceNowAuthAdfArrayOutput() GetConnectorServiceNowAuthAdfArrayOutput {
	return o
}

func (o GetConnectorServiceNowAuthAdfArrayOutput) ToGetConnectorServiceNowAuthAdfArrayOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthAdfArrayOutput {
	return o
}

func (o GetConnectorServiceNowAuthAdfArrayOutput) Index(i pulumi.IntInput) GetConnectorServiceNowAuthAdfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorServiceNowAuthAdf {
		return vs[0].([]GetConnectorServiceNowAuthAdf)[vs[1].(int)]
	}).(GetConnectorServiceNowAuthAdfOutput)
}

type GetConnectorServiceNowAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorServiceNowAuthUsernamePasswordInput is an input type that accepts GetConnectorServiceNowAuthUsernamePasswordArgs and GetConnectorServiceNowAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `GetConnectorServiceNowAuthUsernamePasswordInput` via:
//
//	GetConnectorServiceNowAuthUsernamePasswordArgs{...}
type GetConnectorServiceNowAuthUsernamePasswordInput interface {
	pulumi.Input

	ToGetConnectorServiceNowAuthUsernamePasswordOutput() GetConnectorServiceNowAuthUsernamePasswordOutput
	ToGetConnectorServiceNowAuthUsernamePasswordOutputWithContext(context.Context) GetConnectorServiceNowAuthUsernamePasswordOutput
}

type GetConnectorServiceNowAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorServiceNowAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (i GetConnectorServiceNowAuthUsernamePasswordArgs) ToGetConnectorServiceNowAuthUsernamePasswordOutput() GetConnectorServiceNowAuthUsernamePasswordOutput {
	return i.ToGetConnectorServiceNowAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i GetConnectorServiceNowAuthUsernamePasswordArgs) ToGetConnectorServiceNowAuthUsernamePasswordOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorServiceNowAuthUsernamePasswordOutput)
}

// GetConnectorServiceNowAuthUsernamePasswordArrayInput is an input type that accepts GetConnectorServiceNowAuthUsernamePasswordArray and GetConnectorServiceNowAuthUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetConnectorServiceNowAuthUsernamePasswordArrayInput` via:
//
//	GetConnectorServiceNowAuthUsernamePasswordArray{ GetConnectorServiceNowAuthUsernamePasswordArgs{...} }
type GetConnectorServiceNowAuthUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetConnectorServiceNowAuthUsernamePasswordArrayOutput() GetConnectorServiceNowAuthUsernamePasswordArrayOutput
	ToGetConnectorServiceNowAuthUsernamePasswordArrayOutputWithContext(context.Context) GetConnectorServiceNowAuthUsernamePasswordArrayOutput
}

type GetConnectorServiceNowAuthUsernamePasswordArray []GetConnectorServiceNowAuthUsernamePasswordInput

func (GetConnectorServiceNowAuthUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (i GetConnectorServiceNowAuthUsernamePasswordArray) ToGetConnectorServiceNowAuthUsernamePasswordArrayOutput() GetConnectorServiceNowAuthUsernamePasswordArrayOutput {
	return i.ToGetConnectorServiceNowAuthUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetConnectorServiceNowAuthUsernamePasswordArray) ToGetConnectorServiceNowAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorServiceNowAuthUsernamePasswordArrayOutput)
}

type GetConnectorServiceNowAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetConnectorServiceNowAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (o GetConnectorServiceNowAuthUsernamePasswordOutput) ToGetConnectorServiceNowAuthUsernamePasswordOutput() GetConnectorServiceNowAuthUsernamePasswordOutput {
	return o
}

func (o GetConnectorServiceNowAuthUsernamePasswordOutput) ToGetConnectorServiceNowAuthUsernamePasswordOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorServiceNowAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetConnectorServiceNowAuthUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetConnectorServiceNowAuthUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorServiceNowAuthUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorServiceNowAuthUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorServiceNowAuthUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorServiceNowAuthUsernamePassword)(nil)).Elem()
}

func (o GetConnectorServiceNowAuthUsernamePasswordArrayOutput) ToGetConnectorServiceNowAuthUsernamePasswordArrayOutput() GetConnectorServiceNowAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetConnectorServiceNowAuthUsernamePasswordArrayOutput) ToGetConnectorServiceNowAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetConnectorServiceNowAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetConnectorServiceNowAuthUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetConnectorServiceNowAuthUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorServiceNowAuthUsernamePassword {
		return vs[0].([]GetConnectorServiceNowAuthUsernamePassword)[vs[1].(int)]
	}).(GetConnectorServiceNowAuthUsernamePasswordOutput)
}

type GetConnectorSpotPermanentToken struct {
	ApiTokenRef       string   `pulumi:"apiTokenRef"`
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	ExecuteOnDelegate bool     `pulumi:"executeOnDelegate"`
	SpotAccountId     string   `pulumi:"spotAccountId"`
	SpotAccountIdRef  string   `pulumi:"spotAccountIdRef"`
}

// GetConnectorSpotPermanentTokenInput is an input type that accepts GetConnectorSpotPermanentTokenArgs and GetConnectorSpotPermanentTokenOutput values.
// You can construct a concrete instance of `GetConnectorSpotPermanentTokenInput` via:
//
//	GetConnectorSpotPermanentTokenArgs{...}
type GetConnectorSpotPermanentTokenInput interface {
	pulumi.Input

	ToGetConnectorSpotPermanentTokenOutput() GetConnectorSpotPermanentTokenOutput
	ToGetConnectorSpotPermanentTokenOutputWithContext(context.Context) GetConnectorSpotPermanentTokenOutput
}

type GetConnectorSpotPermanentTokenArgs struct {
	ApiTokenRef       pulumi.StringInput      `pulumi:"apiTokenRef"`
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	ExecuteOnDelegate pulumi.BoolInput        `pulumi:"executeOnDelegate"`
	SpotAccountId     pulumi.StringInput      `pulumi:"spotAccountId"`
	SpotAccountIdRef  pulumi.StringInput      `pulumi:"spotAccountIdRef"`
}

func (GetConnectorSpotPermanentTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorSpotPermanentToken)(nil)).Elem()
}

func (i GetConnectorSpotPermanentTokenArgs) ToGetConnectorSpotPermanentTokenOutput() GetConnectorSpotPermanentTokenOutput {
	return i.ToGetConnectorSpotPermanentTokenOutputWithContext(context.Background())
}

func (i GetConnectorSpotPermanentTokenArgs) ToGetConnectorSpotPermanentTokenOutputWithContext(ctx context.Context) GetConnectorSpotPermanentTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorSpotPermanentTokenOutput)
}

// GetConnectorSpotPermanentTokenArrayInput is an input type that accepts GetConnectorSpotPermanentTokenArray and GetConnectorSpotPermanentTokenArrayOutput values.
// You can construct a concrete instance of `GetConnectorSpotPermanentTokenArrayInput` via:
//
//	GetConnectorSpotPermanentTokenArray{ GetConnectorSpotPermanentTokenArgs{...} }
type GetConnectorSpotPermanentTokenArrayInput interface {
	pulumi.Input

	ToGetConnectorSpotPermanentTokenArrayOutput() GetConnectorSpotPermanentTokenArrayOutput
	ToGetConnectorSpotPermanentTokenArrayOutputWithContext(context.Context) GetConnectorSpotPermanentTokenArrayOutput
}

type GetConnectorSpotPermanentTokenArray []GetConnectorSpotPermanentTokenInput

func (GetConnectorSpotPermanentTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorSpotPermanentToken)(nil)).Elem()
}

func (i GetConnectorSpotPermanentTokenArray) ToGetConnectorSpotPermanentTokenArrayOutput() GetConnectorSpotPermanentTokenArrayOutput {
	return i.ToGetConnectorSpotPermanentTokenArrayOutputWithContext(context.Background())
}

func (i GetConnectorSpotPermanentTokenArray) ToGetConnectorSpotPermanentTokenArrayOutputWithContext(ctx context.Context) GetConnectorSpotPermanentTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorSpotPermanentTokenArrayOutput)
}

type GetConnectorSpotPermanentTokenOutput struct{ *pulumi.OutputState }

func (GetConnectorSpotPermanentTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorSpotPermanentToken)(nil)).Elem()
}

func (o GetConnectorSpotPermanentTokenOutput) ToGetConnectorSpotPermanentTokenOutput() GetConnectorSpotPermanentTokenOutput {
	return o
}

func (o GetConnectorSpotPermanentTokenOutput) ToGetConnectorSpotPermanentTokenOutputWithContext(ctx context.Context) GetConnectorSpotPermanentTokenOutput {
	return o
}

func (o GetConnectorSpotPermanentTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorSpotPermanentToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

func (o GetConnectorSpotPermanentTokenOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectorSpotPermanentToken) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

func (o GetConnectorSpotPermanentTokenOutput) ExecuteOnDelegate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectorSpotPermanentToken) bool { return v.ExecuteOnDelegate }).(pulumi.BoolOutput)
}

func (o GetConnectorSpotPermanentTokenOutput) SpotAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorSpotPermanentToken) string { return v.SpotAccountId }).(pulumi.StringOutput)
}

func (o GetConnectorSpotPermanentTokenOutput) SpotAccountIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorSpotPermanentToken) string { return v.SpotAccountIdRef }).(pulumi.StringOutput)
}

type GetConnectorSpotPermanentTokenArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorSpotPermanentTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorSpotPermanentToken)(nil)).Elem()
}

func (o GetConnectorSpotPermanentTokenArrayOutput) ToGetConnectorSpotPermanentTokenArrayOutput() GetConnectorSpotPermanentTokenArrayOutput {
	return o
}

func (o GetConnectorSpotPermanentTokenArrayOutput) ToGetConnectorSpotPermanentTokenArrayOutputWithContext(ctx context.Context) GetConnectorSpotPermanentTokenArrayOutput {
	return o
}

func (o GetConnectorSpotPermanentTokenArrayOutput) Index(i pulumi.IntInput) GetConnectorSpotPermanentTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorSpotPermanentToken {
		return vs[0].([]GetConnectorSpotPermanentToken)[vs[1].(int)]
	}).(GetConnectorSpotPermanentTokenOutput)
}

type GetConnectorTasCredential struct {
	TasManualDetails []GetConnectorTasCredentialTasManualDetail `pulumi:"tasManualDetails"`
	Type             string                                     `pulumi:"type"`
}

// GetConnectorTasCredentialInput is an input type that accepts GetConnectorTasCredentialArgs and GetConnectorTasCredentialOutput values.
// You can construct a concrete instance of `GetConnectorTasCredentialInput` via:
//
//	GetConnectorTasCredentialArgs{...}
type GetConnectorTasCredentialInput interface {
	pulumi.Input

	ToGetConnectorTasCredentialOutput() GetConnectorTasCredentialOutput
	ToGetConnectorTasCredentialOutputWithContext(context.Context) GetConnectorTasCredentialOutput
}

type GetConnectorTasCredentialArgs struct {
	TasManualDetails GetConnectorTasCredentialTasManualDetailArrayInput `pulumi:"tasManualDetails"`
	Type             pulumi.StringInput                                 `pulumi:"type"`
}

func (GetConnectorTasCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTasCredential)(nil)).Elem()
}

func (i GetConnectorTasCredentialArgs) ToGetConnectorTasCredentialOutput() GetConnectorTasCredentialOutput {
	return i.ToGetConnectorTasCredentialOutputWithContext(context.Background())
}

func (i GetConnectorTasCredentialArgs) ToGetConnectorTasCredentialOutputWithContext(ctx context.Context) GetConnectorTasCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTasCredentialOutput)
}

// GetConnectorTasCredentialArrayInput is an input type that accepts GetConnectorTasCredentialArray and GetConnectorTasCredentialArrayOutput values.
// You can construct a concrete instance of `GetConnectorTasCredentialArrayInput` via:
//
//	GetConnectorTasCredentialArray{ GetConnectorTasCredentialArgs{...} }
type GetConnectorTasCredentialArrayInput interface {
	pulumi.Input

	ToGetConnectorTasCredentialArrayOutput() GetConnectorTasCredentialArrayOutput
	ToGetConnectorTasCredentialArrayOutputWithContext(context.Context) GetConnectorTasCredentialArrayOutput
}

type GetConnectorTasCredentialArray []GetConnectorTasCredentialInput

func (GetConnectorTasCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTasCredential)(nil)).Elem()
}

func (i GetConnectorTasCredentialArray) ToGetConnectorTasCredentialArrayOutput() GetConnectorTasCredentialArrayOutput {
	return i.ToGetConnectorTasCredentialArrayOutputWithContext(context.Background())
}

func (i GetConnectorTasCredentialArray) ToGetConnectorTasCredentialArrayOutputWithContext(ctx context.Context) GetConnectorTasCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTasCredentialArrayOutput)
}

type GetConnectorTasCredentialOutput struct{ *pulumi.OutputState }

func (GetConnectorTasCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTasCredential)(nil)).Elem()
}

func (o GetConnectorTasCredentialOutput) ToGetConnectorTasCredentialOutput() GetConnectorTasCredentialOutput {
	return o
}

func (o GetConnectorTasCredentialOutput) ToGetConnectorTasCredentialOutputWithContext(ctx context.Context) GetConnectorTasCredentialOutput {
	return o
}

func (o GetConnectorTasCredentialOutput) TasManualDetails() GetConnectorTasCredentialTasManualDetailArrayOutput {
	return o.ApplyT(func(v GetConnectorTasCredential) []GetConnectorTasCredentialTasManualDetail {
		return v.TasManualDetails
	}).(GetConnectorTasCredentialTasManualDetailArrayOutput)
}

func (o GetConnectorTasCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorTasCredential) string { return v.Type }).(pulumi.StringOutput)
}

type GetConnectorTasCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorTasCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTasCredential)(nil)).Elem()
}

func (o GetConnectorTasCredentialArrayOutput) ToGetConnectorTasCredentialArrayOutput() GetConnectorTasCredentialArrayOutput {
	return o
}

func (o GetConnectorTasCredentialArrayOutput) ToGetConnectorTasCredentialArrayOutputWithContext(ctx context.Context) GetConnectorTasCredentialArrayOutput {
	return o
}

func (o GetConnectorTasCredentialArrayOutput) Index(i pulumi.IntInput) GetConnectorTasCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorTasCredential {
		return vs[0].([]GetConnectorTasCredential)[vs[1].(int)]
	}).(GetConnectorTasCredentialOutput)
}

type GetConnectorTasCredentialTasManualDetail struct {
	EndpointUrl string `pulumi:"endpointUrl"`
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetConnectorTasCredentialTasManualDetailInput is an input type that accepts GetConnectorTasCredentialTasManualDetailArgs and GetConnectorTasCredentialTasManualDetailOutput values.
// You can construct a concrete instance of `GetConnectorTasCredentialTasManualDetailInput` via:
//
//	GetConnectorTasCredentialTasManualDetailArgs{...}
type GetConnectorTasCredentialTasManualDetailInput interface {
	pulumi.Input

	ToGetConnectorTasCredentialTasManualDetailOutput() GetConnectorTasCredentialTasManualDetailOutput
	ToGetConnectorTasCredentialTasManualDetailOutputWithContext(context.Context) GetConnectorTasCredentialTasManualDetailOutput
}

type GetConnectorTasCredentialTasManualDetailArgs struct {
	EndpointUrl pulumi.StringInput `pulumi:"endpointUrl"`
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetConnectorTasCredentialTasManualDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTasCredentialTasManualDetail)(nil)).Elem()
}

func (i GetConnectorTasCredentialTasManualDetailArgs) ToGetConnectorTasCredentialTasManualDetailOutput() GetConnectorTasCredentialTasManualDetailOutput {
	return i.ToGetConnectorTasCredentialTasManualDetailOutputWithContext(context.Background())
}

func (i GetConnectorTasCredentialTasManualDetailArgs) ToGetConnectorTasCredentialTasManualDetailOutputWithContext(ctx context.Context) GetConnectorTasCredentialTasManualDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTasCredentialTasManualDetailOutput)
}

// GetConnectorTasCredentialTasManualDetailArrayInput is an input type that accepts GetConnectorTasCredentialTasManualDetailArray and GetConnectorTasCredentialTasManualDetailArrayOutput values.
// You can construct a concrete instance of `GetConnectorTasCredentialTasManualDetailArrayInput` via:
//
//	GetConnectorTasCredentialTasManualDetailArray{ GetConnectorTasCredentialTasManualDetailArgs{...} }
type GetConnectorTasCredentialTasManualDetailArrayInput interface {
	pulumi.Input

	ToGetConnectorTasCredentialTasManualDetailArrayOutput() GetConnectorTasCredentialTasManualDetailArrayOutput
	ToGetConnectorTasCredentialTasManualDetailArrayOutputWithContext(context.Context) GetConnectorTasCredentialTasManualDetailArrayOutput
}

type GetConnectorTasCredentialTasManualDetailArray []GetConnectorTasCredentialTasManualDetailInput

func (GetConnectorTasCredentialTasManualDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTasCredentialTasManualDetail)(nil)).Elem()
}

func (i GetConnectorTasCredentialTasManualDetailArray) ToGetConnectorTasCredentialTasManualDetailArrayOutput() GetConnectorTasCredentialTasManualDetailArrayOutput {
	return i.ToGetConnectorTasCredentialTasManualDetailArrayOutputWithContext(context.Background())
}

func (i GetConnectorTasCredentialTasManualDetailArray) ToGetConnectorTasCredentialTasManualDetailArrayOutputWithContext(ctx context.Context) GetConnectorTasCredentialTasManualDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTasCredentialTasManualDetailArrayOutput)
}

type GetConnectorTasCredentialTasManualDetailOutput struct{ *pulumi.OutputState }

func (GetConnectorTasCredentialTasManualDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTasCredentialTasManualDetail)(nil)).Elem()
}

func (o GetConnectorTasCredentialTasManualDetailOutput) ToGetConnectorTasCredentialTasManualDetailOutput() GetConnectorTasCredentialTasManualDetailOutput {
	return o
}

func (o GetConnectorTasCredentialTasManualDetailOutput) ToGetConnectorTasCredentialTasManualDetailOutputWithContext(ctx context.Context) GetConnectorTasCredentialTasManualDetailOutput {
	return o
}

func (o GetConnectorTasCredentialTasManualDetailOutput) EndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorTasCredentialTasManualDetail) string { return v.EndpointUrl }).(pulumi.StringOutput)
}

func (o GetConnectorTasCredentialTasManualDetailOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorTasCredentialTasManualDetail) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetConnectorTasCredentialTasManualDetailOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorTasCredentialTasManualDetail) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetConnectorTasCredentialTasManualDetailOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorTasCredentialTasManualDetail) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetConnectorTasCredentialTasManualDetailArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorTasCredentialTasManualDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTasCredentialTasManualDetail)(nil)).Elem()
}

func (o GetConnectorTasCredentialTasManualDetailArrayOutput) ToGetConnectorTasCredentialTasManualDetailArrayOutput() GetConnectorTasCredentialTasManualDetailArrayOutput {
	return o
}

func (o GetConnectorTasCredentialTasManualDetailArrayOutput) ToGetConnectorTasCredentialTasManualDetailArrayOutputWithContext(ctx context.Context) GetConnectorTasCredentialTasManualDetailArrayOutput {
	return o
}

func (o GetConnectorTasCredentialTasManualDetailArrayOutput) Index(i pulumi.IntInput) GetConnectorTasCredentialTasManualDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorTasCredentialTasManualDetail {
		return vs[0].([]GetConnectorTasCredentialTasManualDetail)[vs[1].(int)]
	}).(GetConnectorTasCredentialTasManualDetailOutput)
}

type GetConnectorTerraformCloudCredential struct {
	ApiTokens []GetConnectorTerraformCloudCredentialApiToken `pulumi:"apiTokens"`
}

// GetConnectorTerraformCloudCredentialInput is an input type that accepts GetConnectorTerraformCloudCredentialArgs and GetConnectorTerraformCloudCredentialOutput values.
// You can construct a concrete instance of `GetConnectorTerraformCloudCredentialInput` via:
//
//	GetConnectorTerraformCloudCredentialArgs{...}
type GetConnectorTerraformCloudCredentialInput interface {
	pulumi.Input

	ToGetConnectorTerraformCloudCredentialOutput() GetConnectorTerraformCloudCredentialOutput
	ToGetConnectorTerraformCloudCredentialOutputWithContext(context.Context) GetConnectorTerraformCloudCredentialOutput
}

type GetConnectorTerraformCloudCredentialArgs struct {
	ApiTokens GetConnectorTerraformCloudCredentialApiTokenArrayInput `pulumi:"apiTokens"`
}

func (GetConnectorTerraformCloudCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTerraformCloudCredential)(nil)).Elem()
}

func (i GetConnectorTerraformCloudCredentialArgs) ToGetConnectorTerraformCloudCredentialOutput() GetConnectorTerraformCloudCredentialOutput {
	return i.ToGetConnectorTerraformCloudCredentialOutputWithContext(context.Background())
}

func (i GetConnectorTerraformCloudCredentialArgs) ToGetConnectorTerraformCloudCredentialOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTerraformCloudCredentialOutput)
}

// GetConnectorTerraformCloudCredentialArrayInput is an input type that accepts GetConnectorTerraformCloudCredentialArray and GetConnectorTerraformCloudCredentialArrayOutput values.
// You can construct a concrete instance of `GetConnectorTerraformCloudCredentialArrayInput` via:
//
//	GetConnectorTerraformCloudCredentialArray{ GetConnectorTerraformCloudCredentialArgs{...} }
type GetConnectorTerraformCloudCredentialArrayInput interface {
	pulumi.Input

	ToGetConnectorTerraformCloudCredentialArrayOutput() GetConnectorTerraformCloudCredentialArrayOutput
	ToGetConnectorTerraformCloudCredentialArrayOutputWithContext(context.Context) GetConnectorTerraformCloudCredentialArrayOutput
}

type GetConnectorTerraformCloudCredentialArray []GetConnectorTerraformCloudCredentialInput

func (GetConnectorTerraformCloudCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTerraformCloudCredential)(nil)).Elem()
}

func (i GetConnectorTerraformCloudCredentialArray) ToGetConnectorTerraformCloudCredentialArrayOutput() GetConnectorTerraformCloudCredentialArrayOutput {
	return i.ToGetConnectorTerraformCloudCredentialArrayOutputWithContext(context.Background())
}

func (i GetConnectorTerraformCloudCredentialArray) ToGetConnectorTerraformCloudCredentialArrayOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTerraformCloudCredentialArrayOutput)
}

type GetConnectorTerraformCloudCredentialOutput struct{ *pulumi.OutputState }

func (GetConnectorTerraformCloudCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTerraformCloudCredential)(nil)).Elem()
}

func (o GetConnectorTerraformCloudCredentialOutput) ToGetConnectorTerraformCloudCredentialOutput() GetConnectorTerraformCloudCredentialOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialOutput) ToGetConnectorTerraformCloudCredentialOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialOutput) ApiTokens() GetConnectorTerraformCloudCredentialApiTokenArrayOutput {
	return o.ApplyT(func(v GetConnectorTerraformCloudCredential) []GetConnectorTerraformCloudCredentialApiToken {
		return v.ApiTokens
	}).(GetConnectorTerraformCloudCredentialApiTokenArrayOutput)
}

type GetConnectorTerraformCloudCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorTerraformCloudCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTerraformCloudCredential)(nil)).Elem()
}

func (o GetConnectorTerraformCloudCredentialArrayOutput) ToGetConnectorTerraformCloudCredentialArrayOutput() GetConnectorTerraformCloudCredentialArrayOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialArrayOutput) ToGetConnectorTerraformCloudCredentialArrayOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialArrayOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialArrayOutput) Index(i pulumi.IntInput) GetConnectorTerraformCloudCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorTerraformCloudCredential {
		return vs[0].([]GetConnectorTerraformCloudCredential)[vs[1].(int)]
	}).(GetConnectorTerraformCloudCredentialOutput)
}

type GetConnectorTerraformCloudCredentialApiToken struct {
	ApiTokenRef string `pulumi:"apiTokenRef"`
}

// GetConnectorTerraformCloudCredentialApiTokenInput is an input type that accepts GetConnectorTerraformCloudCredentialApiTokenArgs and GetConnectorTerraformCloudCredentialApiTokenOutput values.
// You can construct a concrete instance of `GetConnectorTerraformCloudCredentialApiTokenInput` via:
//
//	GetConnectorTerraformCloudCredentialApiTokenArgs{...}
type GetConnectorTerraformCloudCredentialApiTokenInput interface {
	pulumi.Input

	ToGetConnectorTerraformCloudCredentialApiTokenOutput() GetConnectorTerraformCloudCredentialApiTokenOutput
	ToGetConnectorTerraformCloudCredentialApiTokenOutputWithContext(context.Context) GetConnectorTerraformCloudCredentialApiTokenOutput
}

type GetConnectorTerraformCloudCredentialApiTokenArgs struct {
	ApiTokenRef pulumi.StringInput `pulumi:"apiTokenRef"`
}

func (GetConnectorTerraformCloudCredentialApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTerraformCloudCredentialApiToken)(nil)).Elem()
}

func (i GetConnectorTerraformCloudCredentialApiTokenArgs) ToGetConnectorTerraformCloudCredentialApiTokenOutput() GetConnectorTerraformCloudCredentialApiTokenOutput {
	return i.ToGetConnectorTerraformCloudCredentialApiTokenOutputWithContext(context.Background())
}

func (i GetConnectorTerraformCloudCredentialApiTokenArgs) ToGetConnectorTerraformCloudCredentialApiTokenOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTerraformCloudCredentialApiTokenOutput)
}

// GetConnectorTerraformCloudCredentialApiTokenArrayInput is an input type that accepts GetConnectorTerraformCloudCredentialApiTokenArray and GetConnectorTerraformCloudCredentialApiTokenArrayOutput values.
// You can construct a concrete instance of `GetConnectorTerraformCloudCredentialApiTokenArrayInput` via:
//
//	GetConnectorTerraformCloudCredentialApiTokenArray{ GetConnectorTerraformCloudCredentialApiTokenArgs{...} }
type GetConnectorTerraformCloudCredentialApiTokenArrayInput interface {
	pulumi.Input

	ToGetConnectorTerraformCloudCredentialApiTokenArrayOutput() GetConnectorTerraformCloudCredentialApiTokenArrayOutput
	ToGetConnectorTerraformCloudCredentialApiTokenArrayOutputWithContext(context.Context) GetConnectorTerraformCloudCredentialApiTokenArrayOutput
}

type GetConnectorTerraformCloudCredentialApiTokenArray []GetConnectorTerraformCloudCredentialApiTokenInput

func (GetConnectorTerraformCloudCredentialApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTerraformCloudCredentialApiToken)(nil)).Elem()
}

func (i GetConnectorTerraformCloudCredentialApiTokenArray) ToGetConnectorTerraformCloudCredentialApiTokenArrayOutput() GetConnectorTerraformCloudCredentialApiTokenArrayOutput {
	return i.ToGetConnectorTerraformCloudCredentialApiTokenArrayOutputWithContext(context.Background())
}

func (i GetConnectorTerraformCloudCredentialApiTokenArray) ToGetConnectorTerraformCloudCredentialApiTokenArrayOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectorTerraformCloudCredentialApiTokenArrayOutput)
}

type GetConnectorTerraformCloudCredentialApiTokenOutput struct{ *pulumi.OutputState }

func (GetConnectorTerraformCloudCredentialApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectorTerraformCloudCredentialApiToken)(nil)).Elem()
}

func (o GetConnectorTerraformCloudCredentialApiTokenOutput) ToGetConnectorTerraformCloudCredentialApiTokenOutput() GetConnectorTerraformCloudCredentialApiTokenOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialApiTokenOutput) ToGetConnectorTerraformCloudCredentialApiTokenOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialApiTokenOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialApiTokenOutput) ApiTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectorTerraformCloudCredentialApiToken) string { return v.ApiTokenRef }).(pulumi.StringOutput)
}

type GetConnectorTerraformCloudCredentialApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetConnectorTerraformCloudCredentialApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectorTerraformCloudCredentialApiToken)(nil)).Elem()
}

func (o GetConnectorTerraformCloudCredentialApiTokenArrayOutput) ToGetConnectorTerraformCloudCredentialApiTokenArrayOutput() GetConnectorTerraformCloudCredentialApiTokenArrayOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialApiTokenArrayOutput) ToGetConnectorTerraformCloudCredentialApiTokenArrayOutputWithContext(ctx context.Context) GetConnectorTerraformCloudCredentialApiTokenArrayOutput {
	return o
}

func (o GetConnectorTerraformCloudCredentialApiTokenArrayOutput) Index(i pulumi.IntInput) GetConnectorTerraformCloudCredentialApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectorTerraformCloudCredentialApiToken {
		return vs[0].([]GetConnectorTerraformCloudCredentialApiToken)[vs[1].(int)]
	}).(GetConnectorTerraformCloudCredentialApiTokenOutput)
}

type GetDockerConnectorCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetDockerConnectorCredentialInput is an input type that accepts GetDockerConnectorCredentialArgs and GetDockerConnectorCredentialOutput values.
// You can construct a concrete instance of `GetDockerConnectorCredentialInput` via:
//
//	GetDockerConnectorCredentialArgs{...}
type GetDockerConnectorCredentialInput interface {
	pulumi.Input

	ToGetDockerConnectorCredentialOutput() GetDockerConnectorCredentialOutput
	ToGetDockerConnectorCredentialOutputWithContext(context.Context) GetDockerConnectorCredentialOutput
}

type GetDockerConnectorCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetDockerConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDockerConnectorCredential)(nil)).Elem()
}

func (i GetDockerConnectorCredentialArgs) ToGetDockerConnectorCredentialOutput() GetDockerConnectorCredentialOutput {
	return i.ToGetDockerConnectorCredentialOutputWithContext(context.Background())
}

func (i GetDockerConnectorCredentialArgs) ToGetDockerConnectorCredentialOutputWithContext(ctx context.Context) GetDockerConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDockerConnectorCredentialOutput)
}

// GetDockerConnectorCredentialArrayInput is an input type that accepts GetDockerConnectorCredentialArray and GetDockerConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetDockerConnectorCredentialArrayInput` via:
//
//	GetDockerConnectorCredentialArray{ GetDockerConnectorCredentialArgs{...} }
type GetDockerConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetDockerConnectorCredentialArrayOutput() GetDockerConnectorCredentialArrayOutput
	ToGetDockerConnectorCredentialArrayOutputWithContext(context.Context) GetDockerConnectorCredentialArrayOutput
}

type GetDockerConnectorCredentialArray []GetDockerConnectorCredentialInput

func (GetDockerConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDockerConnectorCredential)(nil)).Elem()
}

func (i GetDockerConnectorCredentialArray) ToGetDockerConnectorCredentialArrayOutput() GetDockerConnectorCredentialArrayOutput {
	return i.ToGetDockerConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetDockerConnectorCredentialArray) ToGetDockerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetDockerConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDockerConnectorCredentialArrayOutput)
}

type GetDockerConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetDockerConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDockerConnectorCredential)(nil)).Elem()
}

func (o GetDockerConnectorCredentialOutput) ToGetDockerConnectorCredentialOutput() GetDockerConnectorCredentialOutput {
	return o
}

func (o GetDockerConnectorCredentialOutput) ToGetDockerConnectorCredentialOutputWithContext(ctx context.Context) GetDockerConnectorCredentialOutput {
	return o
}

func (o GetDockerConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetDockerConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetDockerConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDockerConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetDockerConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetDockerConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDockerConnectorCredential)(nil)).Elem()
}

func (o GetDockerConnectorCredentialArrayOutput) ToGetDockerConnectorCredentialArrayOutput() GetDockerConnectorCredentialArrayOutput {
	return o
}

func (o GetDockerConnectorCredentialArrayOutput) ToGetDockerConnectorCredentialArrayOutputWithContext(ctx context.Context) GetDockerConnectorCredentialArrayOutput {
	return o
}

func (o GetDockerConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetDockerConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDockerConnectorCredential {
		return vs[0].([]GetDockerConnectorCredential)[vs[1].(int)]
	}).(GetDockerConnectorCredentialOutput)
}

type GetFiltersFilterProperty struct {
	FilterType string   `pulumi:"filterType"`
	Tags       []string `pulumi:"tags"`
}

// GetFiltersFilterPropertyInput is an input type that accepts GetFiltersFilterPropertyArgs and GetFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetFiltersFilterPropertyInput` via:
//
//	GetFiltersFilterPropertyArgs{...}
type GetFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetFiltersFilterPropertyOutput() GetFiltersFilterPropertyOutput
	ToGetFiltersFilterPropertyOutputWithContext(context.Context) GetFiltersFilterPropertyOutput
}

type GetFiltersFilterPropertyArgs struct {
	FilterType pulumi.StringInput      `pulumi:"filterType"`
	Tags       pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFiltersFilterProperty)(nil)).Elem()
}

func (i GetFiltersFilterPropertyArgs) ToGetFiltersFilterPropertyOutput() GetFiltersFilterPropertyOutput {
	return i.ToGetFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetFiltersFilterPropertyArgs) ToGetFiltersFilterPropertyOutputWithContext(ctx context.Context) GetFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFiltersFilterPropertyOutput)
}

// GetFiltersFilterPropertyArrayInput is an input type that accepts GetFiltersFilterPropertyArray and GetFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetFiltersFilterPropertyArrayInput` via:
//
//	GetFiltersFilterPropertyArray{ GetFiltersFilterPropertyArgs{...} }
type GetFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetFiltersFilterPropertyArrayOutput() GetFiltersFilterPropertyArrayOutput
	ToGetFiltersFilterPropertyArrayOutputWithContext(context.Context) GetFiltersFilterPropertyArrayOutput
}

type GetFiltersFilterPropertyArray []GetFiltersFilterPropertyInput

func (GetFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFiltersFilterProperty)(nil)).Elem()
}

func (i GetFiltersFilterPropertyArray) ToGetFiltersFilterPropertyArrayOutput() GetFiltersFilterPropertyArrayOutput {
	return i.ToGetFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetFiltersFilterPropertyArray) ToGetFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFiltersFilterPropertyArrayOutput)
}

type GetFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFiltersFilterProperty)(nil)).Elem()
}

func (o GetFiltersFilterPropertyOutput) ToGetFiltersFilterPropertyOutput() GetFiltersFilterPropertyOutput {
	return o
}

func (o GetFiltersFilterPropertyOutput) ToGetFiltersFilterPropertyOutputWithContext(ctx context.Context) GetFiltersFilterPropertyOutput {
	return o
}

func (o GetFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GetFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFiltersFilterProperty)(nil)).Elem()
}

func (o GetFiltersFilterPropertyArrayOutput) ToGetFiltersFilterPropertyArrayOutput() GetFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetFiltersFilterPropertyArrayOutput) ToGetFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFiltersFilterProperty {
		return vs[0].([]GetFiltersFilterProperty)[vs[1].(int)]
	}).(GetFiltersFilterPropertyOutput)
}

type GetGcpConnectorInheritFromDelegate struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetGcpConnectorInheritFromDelegateInput is an input type that accepts GetGcpConnectorInheritFromDelegateArgs and GetGcpConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetGcpConnectorInheritFromDelegateInput` via:
//
//	GetGcpConnectorInheritFromDelegateArgs{...}
type GetGcpConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGetGcpConnectorInheritFromDelegateOutput() GetGcpConnectorInheritFromDelegateOutput
	ToGetGcpConnectorInheritFromDelegateOutputWithContext(context.Context) GetGcpConnectorInheritFromDelegateOutput
}

type GetGcpConnectorInheritFromDelegateArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetGcpConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetGcpConnectorInheritFromDelegateArgs) ToGetGcpConnectorInheritFromDelegateOutput() GetGcpConnectorInheritFromDelegateOutput {
	return i.ToGetGcpConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetGcpConnectorInheritFromDelegateArgs) ToGetGcpConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorInheritFromDelegateOutput)
}

// GetGcpConnectorInheritFromDelegateArrayInput is an input type that accepts GetGcpConnectorInheritFromDelegateArray and GetGcpConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetGcpConnectorInheritFromDelegateArrayInput` via:
//
//	GetGcpConnectorInheritFromDelegateArray{ GetGcpConnectorInheritFromDelegateArgs{...} }
type GetGcpConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetGcpConnectorInheritFromDelegateArrayOutput() GetGcpConnectorInheritFromDelegateArrayOutput
	ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GetGcpConnectorInheritFromDelegateArrayOutput
}

type GetGcpConnectorInheritFromDelegateArray []GetGcpConnectorInheritFromDelegateInput

func (GetGcpConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetGcpConnectorInheritFromDelegateArray) ToGetGcpConnectorInheritFromDelegateArrayOutput() GetGcpConnectorInheritFromDelegateArrayOutput {
	return i.ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetGcpConnectorInheritFromDelegateArray) ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorInheritFromDelegateArrayOutput)
}

type GetGcpConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetGcpConnectorInheritFromDelegateOutput) ToGetGcpConnectorInheritFromDelegateOutput() GetGcpConnectorInheritFromDelegateOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateOutput) ToGetGcpConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetGcpConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetGcpConnectorInheritFromDelegateArrayOutput) ToGetGcpConnectorInheritFromDelegateArrayOutput() GetGcpConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateArrayOutput) ToGetGcpConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetGcpConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetGcpConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetGcpConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpConnectorInheritFromDelegate {
		return vs[0].([]GetGcpConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GetGcpConnectorInheritFromDelegateOutput)
}

type GetGcpConnectorManual struct {
	DelegateSelectors []string `pulumi:"delegateSelectors"`
	SecretKeyRef      string   `pulumi:"secretKeyRef"`
}

// GetGcpConnectorManualInput is an input type that accepts GetGcpConnectorManualArgs and GetGcpConnectorManualOutput values.
// You can construct a concrete instance of `GetGcpConnectorManualInput` via:
//
//	GetGcpConnectorManualArgs{...}
type GetGcpConnectorManualInput interface {
	pulumi.Input

	ToGetGcpConnectorManualOutput() GetGcpConnectorManualOutput
	ToGetGcpConnectorManualOutputWithContext(context.Context) GetGcpConnectorManualOutput
}

type GetGcpConnectorManualArgs struct {
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
	SecretKeyRef      pulumi.StringInput      `pulumi:"secretKeyRef"`
}

func (GetGcpConnectorManualArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorManual)(nil)).Elem()
}

func (i GetGcpConnectorManualArgs) ToGetGcpConnectorManualOutput() GetGcpConnectorManualOutput {
	return i.ToGetGcpConnectorManualOutputWithContext(context.Background())
}

func (i GetGcpConnectorManualArgs) ToGetGcpConnectorManualOutputWithContext(ctx context.Context) GetGcpConnectorManualOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorManualOutput)
}

// GetGcpConnectorManualArrayInput is an input type that accepts GetGcpConnectorManualArray and GetGcpConnectorManualArrayOutput values.
// You can construct a concrete instance of `GetGcpConnectorManualArrayInput` via:
//
//	GetGcpConnectorManualArray{ GetGcpConnectorManualArgs{...} }
type GetGcpConnectorManualArrayInput interface {
	pulumi.Input

	ToGetGcpConnectorManualArrayOutput() GetGcpConnectorManualArrayOutput
	ToGetGcpConnectorManualArrayOutputWithContext(context.Context) GetGcpConnectorManualArrayOutput
}

type GetGcpConnectorManualArray []GetGcpConnectorManualInput

func (GetGcpConnectorManualArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorManual)(nil)).Elem()
}

func (i GetGcpConnectorManualArray) ToGetGcpConnectorManualArrayOutput() GetGcpConnectorManualArrayOutput {
	return i.ToGetGcpConnectorManualArrayOutputWithContext(context.Background())
}

func (i GetGcpConnectorManualArray) ToGetGcpConnectorManualArrayOutputWithContext(ctx context.Context) GetGcpConnectorManualArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGcpConnectorManualArrayOutput)
}

type GetGcpConnectorManualOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorManualOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGcpConnectorManual)(nil)).Elem()
}

func (o GetGcpConnectorManualOutput) ToGetGcpConnectorManualOutput() GetGcpConnectorManualOutput {
	return o
}

func (o GetGcpConnectorManualOutput) ToGetGcpConnectorManualOutputWithContext(ctx context.Context) GetGcpConnectorManualOutput {
	return o
}

func (o GetGcpConnectorManualOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGcpConnectorManual) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

func (o GetGcpConnectorManualOutput) SecretKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGcpConnectorManual) string { return v.SecretKeyRef }).(pulumi.StringOutput)
}

type GetGcpConnectorManualArrayOutput struct{ *pulumi.OutputState }

func (GetGcpConnectorManualArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGcpConnectorManual)(nil)).Elem()
}

func (o GetGcpConnectorManualArrayOutput) ToGetGcpConnectorManualArrayOutput() GetGcpConnectorManualArrayOutput {
	return o
}

func (o GetGcpConnectorManualArrayOutput) ToGetGcpConnectorManualArrayOutputWithContext(ctx context.Context) GetGcpConnectorManualArrayOutput {
	return o
}

func (o GetGcpConnectorManualArrayOutput) Index(i pulumi.IntInput) GetGcpConnectorManualOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGcpConnectorManual {
		return vs[0].([]GetGcpConnectorManual)[vs[1].(int)]
	}).(GetGcpConnectorManualOutput)
}

type GetGitConnectorCredential struct {
	Https []GetGitConnectorCredentialHttp `pulumi:"https"`
	Sshes []GetGitConnectorCredentialSsh  `pulumi:"sshes"`
}

// GetGitConnectorCredentialInput is an input type that accepts GetGitConnectorCredentialArgs and GetGitConnectorCredentialOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialInput` via:
//
//	GetGitConnectorCredentialArgs{...}
type GetGitConnectorCredentialInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialOutput() GetGitConnectorCredentialOutput
	ToGetGitConnectorCredentialOutputWithContext(context.Context) GetGitConnectorCredentialOutput
}

type GetGitConnectorCredentialArgs struct {
	Https GetGitConnectorCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetGitConnectorCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetGitConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredential)(nil)).Elem()
}

func (i GetGitConnectorCredentialArgs) ToGetGitConnectorCredentialOutput() GetGitConnectorCredentialOutput {
	return i.ToGetGitConnectorCredentialOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialArgs) ToGetGitConnectorCredentialOutputWithContext(ctx context.Context) GetGitConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialOutput)
}

// GetGitConnectorCredentialArrayInput is an input type that accepts GetGitConnectorCredentialArray and GetGitConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialArrayInput` via:
//
//	GetGitConnectorCredentialArray{ GetGitConnectorCredentialArgs{...} }
type GetGitConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialArrayOutput() GetGitConnectorCredentialArrayOutput
	ToGetGitConnectorCredentialArrayOutputWithContext(context.Context) GetGitConnectorCredentialArrayOutput
}

type GetGitConnectorCredentialArray []GetGitConnectorCredentialInput

func (GetGitConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredential)(nil)).Elem()
}

func (i GetGitConnectorCredentialArray) ToGetGitConnectorCredentialArrayOutput() GetGitConnectorCredentialArrayOutput {
	return i.ToGetGitConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialArray) ToGetGitConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialArrayOutput)
}

type GetGitConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredential)(nil)).Elem()
}

func (o GetGitConnectorCredentialOutput) ToGetGitConnectorCredentialOutput() GetGitConnectorCredentialOutput {
	return o
}

func (o GetGitConnectorCredentialOutput) ToGetGitConnectorCredentialOutputWithContext(ctx context.Context) GetGitConnectorCredentialOutput {
	return o
}

func (o GetGitConnectorCredentialOutput) Https() GetGitConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGitConnectorCredential) []GetGitConnectorCredentialHttp { return v.Https }).(GetGitConnectorCredentialHttpArrayOutput)
}

func (o GetGitConnectorCredentialOutput) Sshes() GetGitConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGitConnectorCredential) []GetGitConnectorCredentialSsh { return v.Sshes }).(GetGitConnectorCredentialSshArrayOutput)
}

type GetGitConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredential)(nil)).Elem()
}

func (o GetGitConnectorCredentialArrayOutput) ToGetGitConnectorCredentialArrayOutput() GetGitConnectorCredentialArrayOutput {
	return o
}

func (o GetGitConnectorCredentialArrayOutput) ToGetGitConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialArrayOutput {
	return o
}

func (o GetGitConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetGitConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitConnectorCredential {
		return vs[0].([]GetGitConnectorCredential)[vs[1].(int)]
	}).(GetGitConnectorCredentialOutput)
}

type GetGitConnectorCredentialHttp struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGitConnectorCredentialHttpInput is an input type that accepts GetGitConnectorCredentialHttpArgs and GetGitConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialHttpInput` via:
//
//	GetGitConnectorCredentialHttpArgs{...}
type GetGitConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialHttpOutput() GetGitConnectorCredentialHttpOutput
	ToGetGitConnectorCredentialHttpOutputWithContext(context.Context) GetGitConnectorCredentialHttpOutput
}

type GetGitConnectorCredentialHttpArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGitConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitConnectorCredentialHttpArgs) ToGetGitConnectorCredentialHttpOutput() GetGitConnectorCredentialHttpOutput {
	return i.ToGetGitConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialHttpArgs) ToGetGitConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialHttpOutput)
}

// GetGitConnectorCredentialHttpArrayInput is an input type that accepts GetGitConnectorCredentialHttpArray and GetGitConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialHttpArrayInput` via:
//
//	GetGitConnectorCredentialHttpArray{ GetGitConnectorCredentialHttpArgs{...} }
type GetGitConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialHttpArrayOutput() GetGitConnectorCredentialHttpArrayOutput
	ToGetGitConnectorCredentialHttpArrayOutputWithContext(context.Context) GetGitConnectorCredentialHttpArrayOutput
}

type GetGitConnectorCredentialHttpArray []GetGitConnectorCredentialHttpInput

func (GetGitConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitConnectorCredentialHttpArray) ToGetGitConnectorCredentialHttpArrayOutput() GetGitConnectorCredentialHttpArrayOutput {
	return i.ToGetGitConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialHttpArray) ToGetGitConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialHttpArrayOutput)
}

type GetGitConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitConnectorCredentialHttpOutput) ToGetGitConnectorCredentialHttpOutput() GetGitConnectorCredentialHttpOutput {
	return o
}

func (o GetGitConnectorCredentialHttpOutput) ToGetGitConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpOutput {
	return o
}

func (o GetGitConnectorCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetGitConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGitConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGitConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitConnectorCredentialHttpArrayOutput) ToGetGitConnectorCredentialHttpArrayOutput() GetGitConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitConnectorCredentialHttpArrayOutput) ToGetGitConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGitConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitConnectorCredentialHttp {
		return vs[0].([]GetGitConnectorCredentialHttp)[vs[1].(int)]
	}).(GetGitConnectorCredentialHttpOutput)
}

type GetGitConnectorCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGitConnectorCredentialSshInput is an input type that accepts GetGitConnectorCredentialSshArgs and GetGitConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialSshInput` via:
//
//	GetGitConnectorCredentialSshArgs{...}
type GetGitConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialSshOutput() GetGitConnectorCredentialSshOutput
	ToGetGitConnectorCredentialSshOutputWithContext(context.Context) GetGitConnectorCredentialSshOutput
}

type GetGitConnectorCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGitConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitConnectorCredentialSshArgs) ToGetGitConnectorCredentialSshOutput() GetGitConnectorCredentialSshOutput {
	return i.ToGetGitConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialSshArgs) ToGetGitConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialSshOutput)
}

// GetGitConnectorCredentialSshArrayInput is an input type that accepts GetGitConnectorCredentialSshArray and GetGitConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGitConnectorCredentialSshArrayInput` via:
//
//	GetGitConnectorCredentialSshArray{ GetGitConnectorCredentialSshArgs{...} }
type GetGitConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGitConnectorCredentialSshArrayOutput() GetGitConnectorCredentialSshArrayOutput
	ToGetGitConnectorCredentialSshArrayOutputWithContext(context.Context) GetGitConnectorCredentialSshArrayOutput
}

type GetGitConnectorCredentialSshArray []GetGitConnectorCredentialSshInput

func (GetGitConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitConnectorCredentialSshArray) ToGetGitConnectorCredentialSshArrayOutput() GetGitConnectorCredentialSshArrayOutput {
	return i.ToGetGitConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGitConnectorCredentialSshArray) ToGetGitConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitConnectorCredentialSshArrayOutput)
}

type GetGitConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitConnectorCredentialSshOutput) ToGetGitConnectorCredentialSshOutput() GetGitConnectorCredentialSshOutput {
	return o
}

func (o GetGitConnectorCredentialSshOutput) ToGetGitConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshOutput {
	return o
}

func (o GetGitConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGitConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGitConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitConnectorCredentialSshArrayOutput) ToGetGitConnectorCredentialSshArrayOutput() GetGitConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitConnectorCredentialSshArrayOutput) ToGetGitConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGitConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitConnectorCredentialSsh {
		return vs[0].([]GetGitConnectorCredentialSsh)[vs[1].(int)]
	}).(GetGitConnectorCredentialSshOutput)
}

type GetGithubConnectorApiAuthentication struct {
	GithubApps []GetGithubConnectorApiAuthenticationGithubApp `pulumi:"githubApps"`
	TokenRef   string                                         `pulumi:"tokenRef"`
}

// GetGithubConnectorApiAuthenticationInput is an input type that accepts GetGithubConnectorApiAuthenticationArgs and GetGithubConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationInput` via:
//
//	GetGithubConnectorApiAuthenticationArgs{...}
type GetGithubConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationOutput() GetGithubConnectorApiAuthenticationOutput
	ToGetGithubConnectorApiAuthenticationOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationOutput
}

type GetGithubConnectorApiAuthenticationArgs struct {
	GithubApps GetGithubConnectorApiAuthenticationGithubAppArrayInput `pulumi:"githubApps"`
	TokenRef   pulumi.StringInput                                     `pulumi:"tokenRef"`
}

func (GetGithubConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationArgs) ToGetGithubConnectorApiAuthenticationOutput() GetGithubConnectorApiAuthenticationOutput {
	return i.ToGetGithubConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationArgs) ToGetGithubConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationOutput)
}

// GetGithubConnectorApiAuthenticationArrayInput is an input type that accepts GetGithubConnectorApiAuthenticationArray and GetGithubConnectorApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationArrayInput` via:
//
//	GetGithubConnectorApiAuthenticationArray{ GetGithubConnectorApiAuthenticationArgs{...} }
type GetGithubConnectorApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationArrayOutput() GetGithubConnectorApiAuthenticationArrayOutput
	ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationArrayOutput
}

type GetGithubConnectorApiAuthenticationArray []GetGithubConnectorApiAuthenticationInput

func (GetGithubConnectorApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationArray) ToGetGithubConnectorApiAuthenticationArrayOutput() GetGithubConnectorApiAuthenticationArrayOutput {
	return i.ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationArray) ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationArrayOutput)
}

type GetGithubConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationOutput) ToGetGithubConnectorApiAuthenticationOutput() GetGithubConnectorApiAuthenticationOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationOutput) ToGetGithubConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationOutput) GithubApps() GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthentication) []GetGithubConnectorApiAuthenticationGithubApp {
		return v.GithubApps
	}).(GetGithubConnectorApiAuthenticationGithubAppArrayOutput)
}

func (o GetGithubConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetGithubConnectorApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationArrayOutput) ToGetGithubConnectorApiAuthenticationArrayOutput() GetGithubConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationArrayOutput) ToGetGithubConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorApiAuthentication {
		return vs[0].([]GetGithubConnectorApiAuthentication)[vs[1].(int)]
	}).(GetGithubConnectorApiAuthenticationOutput)
}

type GetGithubConnectorApiAuthenticationGithubApp struct {
	ApplicationId     string `pulumi:"applicationId"`
	ApplicationIdRef  string `pulumi:"applicationIdRef"`
	InstallationId    string `pulumi:"installationId"`
	InstallationIdRef string `pulumi:"installationIdRef"`
	PrivateKeyRef     string `pulumi:"privateKeyRef"`
}

// GetGithubConnectorApiAuthenticationGithubAppInput is an input type that accepts GetGithubConnectorApiAuthenticationGithubAppArgs and GetGithubConnectorApiAuthenticationGithubAppOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationGithubAppInput` via:
//
//	GetGithubConnectorApiAuthenticationGithubAppArgs{...}
type GetGithubConnectorApiAuthenticationGithubAppInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationGithubAppOutput() GetGithubConnectorApiAuthenticationGithubAppOutput
	ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationGithubAppOutput
}

type GetGithubConnectorApiAuthenticationGithubAppArgs struct {
	ApplicationId     pulumi.StringInput `pulumi:"applicationId"`
	ApplicationIdRef  pulumi.StringInput `pulumi:"applicationIdRef"`
	InstallationId    pulumi.StringInput `pulumi:"installationId"`
	InstallationIdRef pulumi.StringInput `pulumi:"installationIdRef"`
	PrivateKeyRef     pulumi.StringInput `pulumi:"privateKeyRef"`
}

func (GetGithubConnectorApiAuthenticationGithubAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationGithubAppArgs) ToGetGithubConnectorApiAuthenticationGithubAppOutput() GetGithubConnectorApiAuthenticationGithubAppOutput {
	return i.ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationGithubAppArgs) ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationGithubAppOutput)
}

// GetGithubConnectorApiAuthenticationGithubAppArrayInput is an input type that accepts GetGithubConnectorApiAuthenticationGithubAppArray and GetGithubConnectorApiAuthenticationGithubAppArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorApiAuthenticationGithubAppArrayInput` via:
//
//	GetGithubConnectorApiAuthenticationGithubAppArray{ GetGithubConnectorApiAuthenticationGithubAppArgs{...} }
type GetGithubConnectorApiAuthenticationGithubAppArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorApiAuthenticationGithubAppArrayOutput() GetGithubConnectorApiAuthenticationGithubAppArrayOutput
	ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(context.Context) GetGithubConnectorApiAuthenticationGithubAppArrayOutput
}

type GetGithubConnectorApiAuthenticationGithubAppArray []GetGithubConnectorApiAuthenticationGithubAppInput

func (GetGithubConnectorApiAuthenticationGithubAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (i GetGithubConnectorApiAuthenticationGithubAppArray) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutput() GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return i.ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorApiAuthenticationGithubAppArray) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorApiAuthenticationGithubAppArrayOutput)
}

type GetGithubConnectorApiAuthenticationGithubAppOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationGithubAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ToGetGithubConnectorApiAuthenticationGithubAppOutput() GetGithubConnectorApiAuthenticationGithubAppOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ToGetGithubConnectorApiAuthenticationGithubAppOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) ApplicationIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.ApplicationIdRef }).(pulumi.StringOutput)
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) InstallationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.InstallationId }).(pulumi.StringOutput)
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) InstallationIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.InstallationIdRef }).(pulumi.StringOutput)
}

func (o GetGithubConnectorApiAuthenticationGithubAppOutput) PrivateKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorApiAuthenticationGithubApp) string { return v.PrivateKeyRef }).(pulumi.StringOutput)
}

type GetGithubConnectorApiAuthenticationGithubAppArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorApiAuthenticationGithubAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorApiAuthenticationGithubApp)(nil)).Elem()
}

func (o GetGithubConnectorApiAuthenticationGithubAppArrayOutput) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutput() GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppArrayOutput) ToGetGithubConnectorApiAuthenticationGithubAppArrayOutputWithContext(ctx context.Context) GetGithubConnectorApiAuthenticationGithubAppArrayOutput {
	return o
}

func (o GetGithubConnectorApiAuthenticationGithubAppArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorApiAuthenticationGithubAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorApiAuthenticationGithubApp {
		return vs[0].([]GetGithubConnectorApiAuthenticationGithubApp)[vs[1].(int)]
	}).(GetGithubConnectorApiAuthenticationGithubAppOutput)
}

type GetGithubConnectorCredential struct {
	Https []GetGithubConnectorCredentialHttp `pulumi:"https"`
	Sshes []GetGithubConnectorCredentialSsh  `pulumi:"sshes"`
}

// GetGithubConnectorCredentialInput is an input type that accepts GetGithubConnectorCredentialArgs and GetGithubConnectorCredentialOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialInput` via:
//
//	GetGithubConnectorCredentialArgs{...}
type GetGithubConnectorCredentialInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialOutput() GetGithubConnectorCredentialOutput
	ToGetGithubConnectorCredentialOutputWithContext(context.Context) GetGithubConnectorCredentialOutput
}

type GetGithubConnectorCredentialArgs struct {
	Https GetGithubConnectorCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetGithubConnectorCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetGithubConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredential)(nil)).Elem()
}

func (i GetGithubConnectorCredentialArgs) ToGetGithubConnectorCredentialOutput() GetGithubConnectorCredentialOutput {
	return i.ToGetGithubConnectorCredentialOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialArgs) ToGetGithubConnectorCredentialOutputWithContext(ctx context.Context) GetGithubConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialOutput)
}

// GetGithubConnectorCredentialArrayInput is an input type that accepts GetGithubConnectorCredentialArray and GetGithubConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialArrayInput` via:
//
//	GetGithubConnectorCredentialArray{ GetGithubConnectorCredentialArgs{...} }
type GetGithubConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialArrayOutput() GetGithubConnectorCredentialArrayOutput
	ToGetGithubConnectorCredentialArrayOutputWithContext(context.Context) GetGithubConnectorCredentialArrayOutput
}

type GetGithubConnectorCredentialArray []GetGithubConnectorCredentialInput

func (GetGithubConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredential)(nil)).Elem()
}

func (i GetGithubConnectorCredentialArray) ToGetGithubConnectorCredentialArrayOutput() GetGithubConnectorCredentialArrayOutput {
	return i.ToGetGithubConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialArray) ToGetGithubConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialArrayOutput)
}

type GetGithubConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredential)(nil)).Elem()
}

func (o GetGithubConnectorCredentialOutput) ToGetGithubConnectorCredentialOutput() GetGithubConnectorCredentialOutput {
	return o
}

func (o GetGithubConnectorCredentialOutput) ToGetGithubConnectorCredentialOutputWithContext(ctx context.Context) GetGithubConnectorCredentialOutput {
	return o
}

func (o GetGithubConnectorCredentialOutput) Https() GetGithubConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorCredential) []GetGithubConnectorCredentialHttp { return v.Https }).(GetGithubConnectorCredentialHttpArrayOutput)
}

func (o GetGithubConnectorCredentialOutput) Sshes() GetGithubConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGithubConnectorCredential) []GetGithubConnectorCredentialSsh { return v.Sshes }).(GetGithubConnectorCredentialSshArrayOutput)
}

type GetGithubConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredential)(nil)).Elem()
}

func (o GetGithubConnectorCredentialArrayOutput) ToGetGithubConnectorCredentialArrayOutput() GetGithubConnectorCredentialArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialArrayOutput) ToGetGithubConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredential {
		return vs[0].([]GetGithubConnectorCredential)[vs[1].(int)]
	}).(GetGithubConnectorCredentialOutput)
}

type GetGithubConnectorCredentialHttp struct {
	TokenRef    string `pulumi:"tokenRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGithubConnectorCredentialHttpInput is an input type that accepts GetGithubConnectorCredentialHttpArgs and GetGithubConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpInput` via:
//
//	GetGithubConnectorCredentialHttpArgs{...}
type GetGithubConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpOutput() GetGithubConnectorCredentialHttpOutput
	ToGetGithubConnectorCredentialHttpOutputWithContext(context.Context) GetGithubConnectorCredentialHttpOutput
}

type GetGithubConnectorCredentialHttpArgs struct {
	TokenRef    pulumi.StringInput `pulumi:"tokenRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGithubConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpArgs) ToGetGithubConnectorCredentialHttpOutput() GetGithubConnectorCredentialHttpOutput {
	return i.ToGetGithubConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpArgs) ToGetGithubConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpOutput)
}

// GetGithubConnectorCredentialHttpArrayInput is an input type that accepts GetGithubConnectorCredentialHttpArray and GetGithubConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialHttpArrayInput` via:
//
//	GetGithubConnectorCredentialHttpArray{ GetGithubConnectorCredentialHttpArgs{...} }
type GetGithubConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialHttpArrayOutput() GetGithubConnectorCredentialHttpArrayOutput
	ToGetGithubConnectorCredentialHttpArrayOutputWithContext(context.Context) GetGithubConnectorCredentialHttpArrayOutput
}

type GetGithubConnectorCredentialHttpArray []GetGithubConnectorCredentialHttpInput

func (GetGithubConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGithubConnectorCredentialHttpArray) ToGetGithubConnectorCredentialHttpArrayOutput() GetGithubConnectorCredentialHttpArrayOutput {
	return i.ToGetGithubConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialHttpArray) ToGetGithubConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialHttpArrayOutput)
}

type GetGithubConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpOutput) ToGetGithubConnectorCredentialHttpOutput() GetGithubConnectorCredentialHttpOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpOutput) ToGetGithubConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GetGithubConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGithubConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGithubConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGithubConnectorCredentialHttpArrayOutput) ToGetGithubConnectorCredentialHttpArrayOutput() GetGithubConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpArrayOutput) ToGetGithubConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredentialHttp {
		return vs[0].([]GetGithubConnectorCredentialHttp)[vs[1].(int)]
	}).(GetGithubConnectorCredentialHttpOutput)
}

type GetGithubConnectorCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGithubConnectorCredentialSshInput is an input type that accepts GetGithubConnectorCredentialSshArgs and GetGithubConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialSshInput` via:
//
//	GetGithubConnectorCredentialSshArgs{...}
type GetGithubConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialSshOutput() GetGithubConnectorCredentialSshOutput
	ToGetGithubConnectorCredentialSshOutputWithContext(context.Context) GetGithubConnectorCredentialSshOutput
}

type GetGithubConnectorCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGithubConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGithubConnectorCredentialSshArgs) ToGetGithubConnectorCredentialSshOutput() GetGithubConnectorCredentialSshOutput {
	return i.ToGetGithubConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialSshArgs) ToGetGithubConnectorCredentialSshOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialSshOutput)
}

// GetGithubConnectorCredentialSshArrayInput is an input type that accepts GetGithubConnectorCredentialSshArray and GetGithubConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGithubConnectorCredentialSshArrayInput` via:
//
//	GetGithubConnectorCredentialSshArray{ GetGithubConnectorCredentialSshArgs{...} }
type GetGithubConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGithubConnectorCredentialSshArrayOutput() GetGithubConnectorCredentialSshArrayOutput
	ToGetGithubConnectorCredentialSshArrayOutputWithContext(context.Context) GetGithubConnectorCredentialSshArrayOutput
}

type GetGithubConnectorCredentialSshArray []GetGithubConnectorCredentialSshInput

func (GetGithubConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGithubConnectorCredentialSshArray) ToGetGithubConnectorCredentialSshArrayOutput() GetGithubConnectorCredentialSshArrayOutput {
	return i.ToGetGithubConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGithubConnectorCredentialSshArray) ToGetGithubConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGithubConnectorCredentialSshArrayOutput)
}

type GetGithubConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGithubConnectorCredentialSshOutput) ToGetGithubConnectorCredentialSshOutput() GetGithubConnectorCredentialSshOutput {
	return o
}

func (o GetGithubConnectorCredentialSshOutput) ToGetGithubConnectorCredentialSshOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshOutput {
	return o
}

func (o GetGithubConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGithubConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGithubConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGithubConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGithubConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGithubConnectorCredentialSshArrayOutput) ToGetGithubConnectorCredentialSshArrayOutput() GetGithubConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialSshArrayOutput) ToGetGithubConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGithubConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGithubConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGithubConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGithubConnectorCredentialSsh {
		return vs[0].([]GetGithubConnectorCredentialSsh)[vs[1].(int)]
	}).(GetGithubConnectorCredentialSshOutput)
}

type GetGitlabConnectorApiAuthentication struct {
	TokenRef string `pulumi:"tokenRef"`
}

// GetGitlabConnectorApiAuthenticationInput is an input type that accepts GetGitlabConnectorApiAuthenticationArgs and GetGitlabConnectorApiAuthenticationOutput values.
// You can construct a concrete instance of `GetGitlabConnectorApiAuthenticationInput` via:
//
//	GetGitlabConnectorApiAuthenticationArgs{...}
type GetGitlabConnectorApiAuthenticationInput interface {
	pulumi.Input

	ToGetGitlabConnectorApiAuthenticationOutput() GetGitlabConnectorApiAuthenticationOutput
	ToGetGitlabConnectorApiAuthenticationOutputWithContext(context.Context) GetGitlabConnectorApiAuthenticationOutput
}

type GetGitlabConnectorApiAuthenticationArgs struct {
	TokenRef pulumi.StringInput `pulumi:"tokenRef"`
}

func (GetGitlabConnectorApiAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGitlabConnectorApiAuthenticationArgs) ToGetGitlabConnectorApiAuthenticationOutput() GetGitlabConnectorApiAuthenticationOutput {
	return i.ToGetGitlabConnectorApiAuthenticationOutputWithContext(context.Background())
}

func (i GetGitlabConnectorApiAuthenticationArgs) ToGetGitlabConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorApiAuthenticationOutput)
}

// GetGitlabConnectorApiAuthenticationArrayInput is an input type that accepts GetGitlabConnectorApiAuthenticationArray and GetGitlabConnectorApiAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorApiAuthenticationArrayInput` via:
//
//	GetGitlabConnectorApiAuthenticationArray{ GetGitlabConnectorApiAuthenticationArgs{...} }
type GetGitlabConnectorApiAuthenticationArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorApiAuthenticationArrayOutput() GetGitlabConnectorApiAuthenticationArrayOutput
	ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(context.Context) GetGitlabConnectorApiAuthenticationArrayOutput
}

type GetGitlabConnectorApiAuthenticationArray []GetGitlabConnectorApiAuthenticationInput

func (GetGitlabConnectorApiAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (i GetGitlabConnectorApiAuthenticationArray) ToGetGitlabConnectorApiAuthenticationArrayOutput() GetGitlabConnectorApiAuthenticationArrayOutput {
	return i.ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorApiAuthenticationArray) ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorApiAuthenticationArrayOutput)
}

type GetGitlabConnectorApiAuthenticationOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorApiAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGitlabConnectorApiAuthenticationOutput) ToGetGitlabConnectorApiAuthenticationOutput() GetGitlabConnectorApiAuthenticationOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationOutput) ToGetGitlabConnectorApiAuthenticationOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorApiAuthentication) string { return v.TokenRef }).(pulumi.StringOutput)
}

type GetGitlabConnectorApiAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorApiAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorApiAuthentication)(nil)).Elem()
}

func (o GetGitlabConnectorApiAuthenticationArrayOutput) ToGetGitlabConnectorApiAuthenticationArrayOutput() GetGitlabConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationArrayOutput) ToGetGitlabConnectorApiAuthenticationArrayOutputWithContext(ctx context.Context) GetGitlabConnectorApiAuthenticationArrayOutput {
	return o
}

func (o GetGitlabConnectorApiAuthenticationArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorApiAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorApiAuthentication {
		return vs[0].([]GetGitlabConnectorApiAuthentication)[vs[1].(int)]
	}).(GetGitlabConnectorApiAuthenticationOutput)
}

type GetGitlabConnectorCredential struct {
	Https []GetGitlabConnectorCredentialHttp `pulumi:"https"`
	Sshes []GetGitlabConnectorCredentialSsh  `pulumi:"sshes"`
}

// GetGitlabConnectorCredentialInput is an input type that accepts GetGitlabConnectorCredentialArgs and GetGitlabConnectorCredentialOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialInput` via:
//
//	GetGitlabConnectorCredentialArgs{...}
type GetGitlabConnectorCredentialInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialOutput() GetGitlabConnectorCredentialOutput
	ToGetGitlabConnectorCredentialOutputWithContext(context.Context) GetGitlabConnectorCredentialOutput
}

type GetGitlabConnectorCredentialArgs struct {
	Https GetGitlabConnectorCredentialHttpArrayInput `pulumi:"https"`
	Sshes GetGitlabConnectorCredentialSshArrayInput  `pulumi:"sshes"`
}

func (GetGitlabConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredential)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialArgs) ToGetGitlabConnectorCredentialOutput() GetGitlabConnectorCredentialOutput {
	return i.ToGetGitlabConnectorCredentialOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialArgs) ToGetGitlabConnectorCredentialOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialOutput)
}

// GetGitlabConnectorCredentialArrayInput is an input type that accepts GetGitlabConnectorCredentialArray and GetGitlabConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialArrayInput` via:
//
//	GetGitlabConnectorCredentialArray{ GetGitlabConnectorCredentialArgs{...} }
type GetGitlabConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialArrayOutput() GetGitlabConnectorCredentialArrayOutput
	ToGetGitlabConnectorCredentialArrayOutputWithContext(context.Context) GetGitlabConnectorCredentialArrayOutput
}

type GetGitlabConnectorCredentialArray []GetGitlabConnectorCredentialInput

func (GetGitlabConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredential)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialArray) ToGetGitlabConnectorCredentialArrayOutput() GetGitlabConnectorCredentialArrayOutput {
	return i.ToGetGitlabConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialArray) ToGetGitlabConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialArrayOutput)
}

type GetGitlabConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredential)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialOutput) ToGetGitlabConnectorCredentialOutput() GetGitlabConnectorCredentialOutput {
	return o
}

func (o GetGitlabConnectorCredentialOutput) ToGetGitlabConnectorCredentialOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialOutput {
	return o
}

func (o GetGitlabConnectorCredentialOutput) Https() GetGitlabConnectorCredentialHttpArrayOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredential) []GetGitlabConnectorCredentialHttp { return v.Https }).(GetGitlabConnectorCredentialHttpArrayOutput)
}

func (o GetGitlabConnectorCredentialOutput) Sshes() GetGitlabConnectorCredentialSshArrayOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredential) []GetGitlabConnectorCredentialSsh { return v.Sshes }).(GetGitlabConnectorCredentialSshArrayOutput)
}

type GetGitlabConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredential)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialArrayOutput) ToGetGitlabConnectorCredentialArrayOutput() GetGitlabConnectorCredentialArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialArrayOutput) ToGetGitlabConnectorCredentialArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorCredential {
		return vs[0].([]GetGitlabConnectorCredential)[vs[1].(int)]
	}).(GetGitlabConnectorCredentialOutput)
}

type GetGitlabConnectorCredentialHttp struct {
	PasswordRef string `pulumi:"passwordRef"`
	TokenRef    string `pulumi:"tokenRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetGitlabConnectorCredentialHttpInput is an input type that accepts GetGitlabConnectorCredentialHttpArgs and GetGitlabConnectorCredentialHttpOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialHttpInput` via:
//
//	GetGitlabConnectorCredentialHttpArgs{...}
type GetGitlabConnectorCredentialHttpInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialHttpOutput() GetGitlabConnectorCredentialHttpOutput
	ToGetGitlabConnectorCredentialHttpOutputWithContext(context.Context) GetGitlabConnectorCredentialHttpOutput
}

type GetGitlabConnectorCredentialHttpArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	TokenRef    pulumi.StringInput `pulumi:"tokenRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetGitlabConnectorCredentialHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialHttpArgs) ToGetGitlabConnectorCredentialHttpOutput() GetGitlabConnectorCredentialHttpOutput {
	return i.ToGetGitlabConnectorCredentialHttpOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialHttpArgs) ToGetGitlabConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialHttpOutput)
}

// GetGitlabConnectorCredentialHttpArrayInput is an input type that accepts GetGitlabConnectorCredentialHttpArray and GetGitlabConnectorCredentialHttpArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialHttpArrayInput` via:
//
//	GetGitlabConnectorCredentialHttpArray{ GetGitlabConnectorCredentialHttpArgs{...} }
type GetGitlabConnectorCredentialHttpArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialHttpArrayOutput() GetGitlabConnectorCredentialHttpArrayOutput
	ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(context.Context) GetGitlabConnectorCredentialHttpArrayOutput
}

type GetGitlabConnectorCredentialHttpArray []GetGitlabConnectorCredentialHttpInput

func (GetGitlabConnectorCredentialHttpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialHttpArray) ToGetGitlabConnectorCredentialHttpArrayOutput() GetGitlabConnectorCredentialHttpArrayOutput {
	return i.ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialHttpArray) ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialHttpArrayOutput)
}

type GetGitlabConnectorCredentialHttpOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialHttpOutput) ToGetGitlabConnectorCredentialHttpOutput() GetGitlabConnectorCredentialHttpOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpOutput) ToGetGitlabConnectorCredentialHttpOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetGitlabConnectorCredentialHttpOutput) TokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.TokenRef }).(pulumi.StringOutput)
}

func (o GetGitlabConnectorCredentialHttpOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetGitlabConnectorCredentialHttpOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialHttp) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetGitlabConnectorCredentialHttpArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialHttpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialHttp)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialHttpArrayOutput) ToGetGitlabConnectorCredentialHttpArrayOutput() GetGitlabConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpArrayOutput) ToGetGitlabConnectorCredentialHttpArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialHttpArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialHttpArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorCredentialHttpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorCredentialHttp {
		return vs[0].([]GetGitlabConnectorCredentialHttp)[vs[1].(int)]
	}).(GetGitlabConnectorCredentialHttpOutput)
}

type GetGitlabConnectorCredentialSsh struct {
	SshKeyRef string `pulumi:"sshKeyRef"`
}

// GetGitlabConnectorCredentialSshInput is an input type that accepts GetGitlabConnectorCredentialSshArgs and GetGitlabConnectorCredentialSshOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialSshInput` via:
//
//	GetGitlabConnectorCredentialSshArgs{...}
type GetGitlabConnectorCredentialSshInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialSshOutput() GetGitlabConnectorCredentialSshOutput
	ToGetGitlabConnectorCredentialSshOutputWithContext(context.Context) GetGitlabConnectorCredentialSshOutput
}

type GetGitlabConnectorCredentialSshArgs struct {
	SshKeyRef pulumi.StringInput `pulumi:"sshKeyRef"`
}

func (GetGitlabConnectorCredentialSshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialSshArgs) ToGetGitlabConnectorCredentialSshOutput() GetGitlabConnectorCredentialSshOutput {
	return i.ToGetGitlabConnectorCredentialSshOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialSshArgs) ToGetGitlabConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialSshOutput)
}

// GetGitlabConnectorCredentialSshArrayInput is an input type that accepts GetGitlabConnectorCredentialSshArray and GetGitlabConnectorCredentialSshArrayOutput values.
// You can construct a concrete instance of `GetGitlabConnectorCredentialSshArrayInput` via:
//
//	GetGitlabConnectorCredentialSshArray{ GetGitlabConnectorCredentialSshArgs{...} }
type GetGitlabConnectorCredentialSshArrayInput interface {
	pulumi.Input

	ToGetGitlabConnectorCredentialSshArrayOutput() GetGitlabConnectorCredentialSshArrayOutput
	ToGetGitlabConnectorCredentialSshArrayOutputWithContext(context.Context) GetGitlabConnectorCredentialSshArrayOutput
}

type GetGitlabConnectorCredentialSshArray []GetGitlabConnectorCredentialSshInput

func (GetGitlabConnectorCredentialSshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (i GetGitlabConnectorCredentialSshArray) ToGetGitlabConnectorCredentialSshArrayOutput() GetGitlabConnectorCredentialSshArrayOutput {
	return i.ToGetGitlabConnectorCredentialSshArrayOutputWithContext(context.Background())
}

func (i GetGitlabConnectorCredentialSshArray) ToGetGitlabConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitlabConnectorCredentialSshArrayOutput)
}

type GetGitlabConnectorCredentialSshOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialSshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialSshOutput) ToGetGitlabConnectorCredentialSshOutput() GetGitlabConnectorCredentialSshOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshOutput) ToGetGitlabConnectorCredentialSshOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshOutput) SshKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitlabConnectorCredentialSsh) string { return v.SshKeyRef }).(pulumi.StringOutput)
}

type GetGitlabConnectorCredentialSshArrayOutput struct{ *pulumi.OutputState }

func (GetGitlabConnectorCredentialSshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitlabConnectorCredentialSsh)(nil)).Elem()
}

func (o GetGitlabConnectorCredentialSshArrayOutput) ToGetGitlabConnectorCredentialSshArrayOutput() GetGitlabConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshArrayOutput) ToGetGitlabConnectorCredentialSshArrayOutputWithContext(ctx context.Context) GetGitlabConnectorCredentialSshArrayOutput {
	return o
}

func (o GetGitlabConnectorCredentialSshArrayOutput) Index(i pulumi.IntInput) GetGitlabConnectorCredentialSshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitlabConnectorCredentialSsh {
		return vs[0].([]GetGitlabConnectorCredentialSsh)[vs[1].(int)]
	}).(GetGitlabConnectorCredentialSshOutput)
}

type GetGitopsAgentMetadata struct {
	HighAvailability bool   `pulumi:"highAvailability"`
	Namespace        string `pulumi:"namespace"`
}

// GetGitopsAgentMetadataInput is an input type that accepts GetGitopsAgentMetadataArgs and GetGitopsAgentMetadataOutput values.
// You can construct a concrete instance of `GetGitopsAgentMetadataInput` via:
//
//	GetGitopsAgentMetadataArgs{...}
type GetGitopsAgentMetadataInput interface {
	pulumi.Input

	ToGetGitopsAgentMetadataOutput() GetGitopsAgentMetadataOutput
	ToGetGitopsAgentMetadataOutputWithContext(context.Context) GetGitopsAgentMetadataOutput
}

type GetGitopsAgentMetadataArgs struct {
	HighAvailability pulumi.BoolInput   `pulumi:"highAvailability"`
	Namespace        pulumi.StringInput `pulumi:"namespace"`
}

func (GetGitopsAgentMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentMetadata)(nil)).Elem()
}

func (i GetGitopsAgentMetadataArgs) ToGetGitopsAgentMetadataOutput() GetGitopsAgentMetadataOutput {
	return i.ToGetGitopsAgentMetadataOutputWithContext(context.Background())
}

func (i GetGitopsAgentMetadataArgs) ToGetGitopsAgentMetadataOutputWithContext(ctx context.Context) GetGitopsAgentMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentMetadataOutput)
}

// GetGitopsAgentMetadataArrayInput is an input type that accepts GetGitopsAgentMetadataArray and GetGitopsAgentMetadataArrayOutput values.
// You can construct a concrete instance of `GetGitopsAgentMetadataArrayInput` via:
//
//	GetGitopsAgentMetadataArray{ GetGitopsAgentMetadataArgs{...} }
type GetGitopsAgentMetadataArrayInput interface {
	pulumi.Input

	ToGetGitopsAgentMetadataArrayOutput() GetGitopsAgentMetadataArrayOutput
	ToGetGitopsAgentMetadataArrayOutputWithContext(context.Context) GetGitopsAgentMetadataArrayOutput
}

type GetGitopsAgentMetadataArray []GetGitopsAgentMetadataInput

func (GetGitopsAgentMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentMetadata)(nil)).Elem()
}

func (i GetGitopsAgentMetadataArray) ToGetGitopsAgentMetadataArrayOutput() GetGitopsAgentMetadataArrayOutput {
	return i.ToGetGitopsAgentMetadataArrayOutputWithContext(context.Background())
}

func (i GetGitopsAgentMetadataArray) ToGetGitopsAgentMetadataArrayOutputWithContext(ctx context.Context) GetGitopsAgentMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsAgentMetadataArrayOutput)
}

type GetGitopsAgentMetadataOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsAgentMetadata)(nil)).Elem()
}

func (o GetGitopsAgentMetadataOutput) ToGetGitopsAgentMetadataOutput() GetGitopsAgentMetadataOutput {
	return o
}

func (o GetGitopsAgentMetadataOutput) ToGetGitopsAgentMetadataOutputWithContext(ctx context.Context) GetGitopsAgentMetadataOutput {
	return o
}

func (o GetGitopsAgentMetadataOutput) HighAvailability() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGitopsAgentMetadata) bool { return v.HighAvailability }).(pulumi.BoolOutput)
}

func (o GetGitopsAgentMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsAgentMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

type GetGitopsAgentMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsAgentMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsAgentMetadata)(nil)).Elem()
}

func (o GetGitopsAgentMetadataArrayOutput) ToGetGitopsAgentMetadataArrayOutput() GetGitopsAgentMetadataArrayOutput {
	return o
}

func (o GetGitopsAgentMetadataArrayOutput) ToGetGitopsAgentMetadataArrayOutputWithContext(ctx context.Context) GetGitopsAgentMetadataArrayOutput {
	return o
}

func (o GetGitopsAgentMetadataArrayOutput) Index(i pulumi.IntInput) GetGitopsAgentMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsAgentMetadata {
		return vs[0].([]GetGitopsAgentMetadata)[vs[1].(int)]
	}).(GetGitopsAgentMetadataOutput)
}

type GetGitopsApplicationsApplication struct {
	// Metadata corresponding to the resources. This includes all the objects a user must create.
	Metadatas []GetGitopsApplicationsApplicationMetadata `pulumi:"metadatas"`
	// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
	Specs []GetGitopsApplicationsApplicationSpec `pulumi:"specs"`
}

// GetGitopsApplicationsApplicationInput is an input type that accepts GetGitopsApplicationsApplicationArgs and GetGitopsApplicationsApplicationOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationInput` via:
//
//	GetGitopsApplicationsApplicationArgs{...}
type GetGitopsApplicationsApplicationInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationOutput() GetGitopsApplicationsApplicationOutput
	ToGetGitopsApplicationsApplicationOutputWithContext(context.Context) GetGitopsApplicationsApplicationOutput
}

type GetGitopsApplicationsApplicationArgs struct {
	// Metadata corresponding to the resources. This includes all the objects a user must create.
	Metadatas GetGitopsApplicationsApplicationMetadataArrayInput `pulumi:"metadatas"`
	// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
	Specs GetGitopsApplicationsApplicationSpecArrayInput `pulumi:"specs"`
}

func (GetGitopsApplicationsApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplication)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationArgs) ToGetGitopsApplicationsApplicationOutput() GetGitopsApplicationsApplicationOutput {
	return i.ToGetGitopsApplicationsApplicationOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationArgs) ToGetGitopsApplicationsApplicationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationOutput)
}

// GetGitopsApplicationsApplicationArrayInput is an input type that accepts GetGitopsApplicationsApplicationArray and GetGitopsApplicationsApplicationArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationArrayInput` via:
//
//	GetGitopsApplicationsApplicationArray{ GetGitopsApplicationsApplicationArgs{...} }
type GetGitopsApplicationsApplicationArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationArrayOutput() GetGitopsApplicationsApplicationArrayOutput
	ToGetGitopsApplicationsApplicationArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationArrayOutput
}

type GetGitopsApplicationsApplicationArray []GetGitopsApplicationsApplicationInput

func (GetGitopsApplicationsApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplication)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationArray) ToGetGitopsApplicationsApplicationArrayOutput() GetGitopsApplicationsApplicationArrayOutput {
	return i.ToGetGitopsApplicationsApplicationArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationArray) ToGetGitopsApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationArrayOutput)
}

type GetGitopsApplicationsApplicationOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplication)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationOutput) ToGetGitopsApplicationsApplicationOutput() GetGitopsApplicationsApplicationOutput {
	return o
}

func (o GetGitopsApplicationsApplicationOutput) ToGetGitopsApplicationsApplicationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationOutput {
	return o
}

// Metadata corresponding to the resources. This includes all the objects a user must create.
func (o GetGitopsApplicationsApplicationOutput) Metadatas() GetGitopsApplicationsApplicationMetadataArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplication) []GetGitopsApplicationsApplicationMetadata {
		return v.Metadatas
	}).(GetGitopsApplicationsApplicationMetadataArrayOutput)
}

// Specifications of the GitOps application. This includes the repository URL, application definition, source, destination and sync policy.
func (o GetGitopsApplicationsApplicationOutput) Specs() GetGitopsApplicationsApplicationSpecArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplication) []GetGitopsApplicationsApplicationSpec { return v.Specs }).(GetGitopsApplicationsApplicationSpecArrayOutput)
}

type GetGitopsApplicationsApplicationArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplication)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationArrayOutput) ToGetGitopsApplicationsApplicationArrayOutput() GetGitopsApplicationsApplicationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationArrayOutput) ToGetGitopsApplicationsApplicationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplication {
		return vs[0].([]GetGitopsApplicationsApplication)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationOutput)
}

type GetGitopsApplicationsApplicationMetadata struct {
	Annotations  map[string]string `pulumi:"annotations"`
	ClusterName  *string           `pulumi:"clusterName"`
	Finalizers   []string          `pulumi:"finalizers"`
	GenerateName *string           `pulumi:"generateName"`
	Generation   string            `pulumi:"generation"`
	Labels       map[string]string `pulumi:"labels"`
	// Name of the GitOps application.
	Name            *string                                                  `pulumi:"name"`
	Namespace       string                                                   `pulumi:"namespace"`
	OwnerReferences []GetGitopsApplicationsApplicationMetadataOwnerReference `pulumi:"ownerReferences"`
	Uid             string                                                   `pulumi:"uid"`
}

// GetGitopsApplicationsApplicationMetadataInput is an input type that accepts GetGitopsApplicationsApplicationMetadataArgs and GetGitopsApplicationsApplicationMetadataOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataInput` via:
//
//	GetGitopsApplicationsApplicationMetadataArgs{...}
type GetGitopsApplicationsApplicationMetadataInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataOutput() GetGitopsApplicationsApplicationMetadataOutput
	ToGetGitopsApplicationsApplicationMetadataOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataOutput
}

type GetGitopsApplicationsApplicationMetadataArgs struct {
	Annotations  pulumi.StringMapInput   `pulumi:"annotations"`
	ClusterName  pulumi.StringPtrInput   `pulumi:"clusterName"`
	Finalizers   pulumi.StringArrayInput `pulumi:"finalizers"`
	GenerateName pulumi.StringPtrInput   `pulumi:"generateName"`
	Generation   pulumi.StringInput      `pulumi:"generation"`
	Labels       pulumi.StringMapInput   `pulumi:"labels"`
	// Name of the GitOps application.
	Name            pulumi.StringPtrInput                                            `pulumi:"name"`
	Namespace       pulumi.StringInput                                               `pulumi:"namespace"`
	OwnerReferences GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput `pulumi:"ownerReferences"`
	Uid             pulumi.StringInput                                               `pulumi:"uid"`
}

func (GetGitopsApplicationsApplicationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataArgs) ToGetGitopsApplicationsApplicationMetadataOutput() GetGitopsApplicationsApplicationMetadataOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataArgs) ToGetGitopsApplicationsApplicationMetadataOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataOutput)
}

// GetGitopsApplicationsApplicationMetadataArrayInput is an input type that accepts GetGitopsApplicationsApplicationMetadataArray and GetGitopsApplicationsApplicationMetadataArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataArrayInput` via:
//
//	GetGitopsApplicationsApplicationMetadataArray{ GetGitopsApplicationsApplicationMetadataArgs{...} }
type GetGitopsApplicationsApplicationMetadataArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataArrayOutput() GetGitopsApplicationsApplicationMetadataArrayOutput
	ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataArrayOutput
}

type GetGitopsApplicationsApplicationMetadataArray []GetGitopsApplicationsApplicationMetadataInput

func (GetGitopsApplicationsApplicationMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataArray) ToGetGitopsApplicationsApplicationMetadataArrayOutput() GetGitopsApplicationsApplicationMetadataArrayOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataArray) ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataArrayOutput)
}

type GetGitopsApplicationsApplicationMetadataOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataOutput) ToGetGitopsApplicationsApplicationMetadataOutput() GetGitopsApplicationsApplicationMetadataOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOutput) ToGetGitopsApplicationsApplicationMetadataOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) Finalizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) []string { return v.Finalizers }).(pulumi.StringArrayOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) GenerateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) *string { return v.GenerateName }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Generation }).(pulumi.StringOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationMetadataOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) OwnerReferences() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) []GetGitopsApplicationsApplicationMetadataOwnerReference {
		return v.OwnerReferences
	}).(GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadata) string { return v.Uid }).(pulumi.StringOutput)
}

type GetGitopsApplicationsApplicationMetadataArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadata)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataArrayOutput) ToGetGitopsApplicationsApplicationMetadataArrayOutput() GetGitopsApplicationsApplicationMetadataArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataArrayOutput) ToGetGitopsApplicationsApplicationMetadataArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationMetadata {
		return vs[0].([]GetGitopsApplicationsApplicationMetadata)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationMetadataOutput)
}

type GetGitopsApplicationsApplicationMetadataOwnerReference struct {
	ApiVersion         *string `pulumi:"apiVersion"`
	BlockOwnerDeletion *bool   `pulumi:"blockOwnerDeletion"`
	Controller         *bool   `pulumi:"controller"`
	// Kind of the GitOps application.
	Kind *string `pulumi:"kind"`
	// Name of the GitOps application.
	Name *string `pulumi:"name"`
	Uid  *string `pulumi:"uid"`
}

// GetGitopsApplicationsApplicationMetadataOwnerReferenceInput is an input type that accepts GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs and GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataOwnerReferenceInput` via:
//
//	GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs{...}
type GetGitopsApplicationsApplicationMetadataOwnerReferenceInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput
	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs struct {
	ApiVersion         pulumi.StringPtrInput `pulumi:"apiVersion"`
	BlockOwnerDeletion pulumi.BoolPtrInput   `pulumi:"blockOwnerDeletion"`
	Controller         pulumi.BoolPtrInput   `pulumi:"controller"`
	// Kind of the GitOps application.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the GitOps application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Uid  pulumi.StringPtrInput `pulumi:"uid"`
}

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput)
}

// GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput is an input type that accepts GetGitopsApplicationsApplicationMetadataOwnerReferenceArray and GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput` via:
//
//	GetGitopsApplicationsApplicationMetadataOwnerReferenceArray{ GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs{...} }
type GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput
	ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceArray []GetGitopsApplicationsApplicationMetadataOwnerReferenceInput

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArray) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return i.ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationMetadataOwnerReferenceArray) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput)
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) BlockOwnerDeletion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) *bool { return v.BlockOwnerDeletion }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Controller() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) *bool { return v.Controller }).(pulumi.BoolPtrOutput)
}

// Kind of the GitOps application.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationMetadataOwnerReference) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationMetadataOwnerReference)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput() GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) ToGetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationMetadataOwnerReference {
		return vs[0].([]GetGitopsApplicationsApplicationMetadataOwnerReference)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput)
}

type GetGitopsApplicationsApplicationSpec struct {
	Destinations []GetGitopsApplicationsApplicationSpecDestination `pulumi:"destinations"`
	Sources      []GetGitopsApplicationsApplicationSpecSource      `pulumi:"sources"`
	SyncPolicies []GetGitopsApplicationsApplicationSpecSyncPolicy  `pulumi:"syncPolicies"`
}

// GetGitopsApplicationsApplicationSpecInput is an input type that accepts GetGitopsApplicationsApplicationSpecArgs and GetGitopsApplicationsApplicationSpecOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecInput` via:
//
//	GetGitopsApplicationsApplicationSpecArgs{...}
type GetGitopsApplicationsApplicationSpecInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecOutput() GetGitopsApplicationsApplicationSpecOutput
	ToGetGitopsApplicationsApplicationSpecOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecOutput
}

type GetGitopsApplicationsApplicationSpecArgs struct {
	Destinations GetGitopsApplicationsApplicationSpecDestinationArrayInput `pulumi:"destinations"`
	Sources      GetGitopsApplicationsApplicationSpecSourceArrayInput      `pulumi:"sources"`
	SyncPolicies GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput  `pulumi:"syncPolicies"`
}

func (GetGitopsApplicationsApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecArgs) ToGetGitopsApplicationsApplicationSpecOutput() GetGitopsApplicationsApplicationSpecOutput {
	return i.ToGetGitopsApplicationsApplicationSpecOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecArgs) ToGetGitopsApplicationsApplicationSpecOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecOutput)
}

// GetGitopsApplicationsApplicationSpecArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecArray and GetGitopsApplicationsApplicationSpecArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecArray{ GetGitopsApplicationsApplicationSpecArgs{...} }
type GetGitopsApplicationsApplicationSpecArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecArrayOutput() GetGitopsApplicationsApplicationSpecArrayOutput
	ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecArrayOutput
}

type GetGitopsApplicationsApplicationSpecArray []GetGitopsApplicationsApplicationSpecInput

func (GetGitopsApplicationsApplicationSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecArray) ToGetGitopsApplicationsApplicationSpecArrayOutput() GetGitopsApplicationsApplicationSpecArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecArray) ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecArrayOutput)
}

type GetGitopsApplicationsApplicationSpecOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecOutput) ToGetGitopsApplicationsApplicationSpecOutput() GetGitopsApplicationsApplicationSpecOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecOutput) ToGetGitopsApplicationsApplicationSpecOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecOutput) Destinations() GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecDestination {
		return v.Destinations
	}).(GetGitopsApplicationsApplicationSpecDestinationArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecOutput) Sources() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecSource {
		return v.Sources
	}).(GetGitopsApplicationsApplicationSpecSourceArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecOutput) SyncPolicies() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpec) []GetGitopsApplicationsApplicationSpecSyncPolicy {
		return v.SyncPolicies
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput)
}

type GetGitopsApplicationsApplicationSpecArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpec)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecArrayOutput) ToGetGitopsApplicationsApplicationSpecArrayOutput() GetGitopsApplicationsApplicationSpecArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecArrayOutput) ToGetGitopsApplicationsApplicationSpecArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpec {
		return vs[0].([]GetGitopsApplicationsApplicationSpec)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecOutput)
}

type GetGitopsApplicationsApplicationSpecDestination struct {
	// Name of the GitOps application.
	Name      *string `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
	Server    *string `pulumi:"server"`
}

// GetGitopsApplicationsApplicationSpecDestinationInput is an input type that accepts GetGitopsApplicationsApplicationSpecDestinationArgs and GetGitopsApplicationsApplicationSpecDestinationOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecDestinationInput` via:
//
//	GetGitopsApplicationsApplicationSpecDestinationArgs{...}
type GetGitopsApplicationsApplicationSpecDestinationInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecDestinationOutput() GetGitopsApplicationsApplicationSpecDestinationOutput
	ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecDestinationOutput
}

type GetGitopsApplicationsApplicationSpecDestinationArgs struct {
	// Name of the GitOps application.
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	Server    pulumi.StringPtrInput `pulumi:"server"`
}

func (GetGitopsApplicationsApplicationSpecDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecDestinationArgs) ToGetGitopsApplicationsApplicationSpecDestinationOutput() GetGitopsApplicationsApplicationSpecDestinationOutput {
	return i.ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecDestinationArgs) ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecDestinationOutput)
}

// GetGitopsApplicationsApplicationSpecDestinationArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecDestinationArray and GetGitopsApplicationsApplicationSpecDestinationArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecDestinationArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecDestinationArray{ GetGitopsApplicationsApplicationSpecDestinationArgs{...} }
type GetGitopsApplicationsApplicationSpecDestinationArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecDestinationArrayOutput() GetGitopsApplicationsApplicationSpecDestinationArrayOutput
	ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecDestinationArrayOutput
}

type GetGitopsApplicationsApplicationSpecDestinationArray []GetGitopsApplicationsApplicationSpecDestinationInput

func (GetGitopsApplicationsApplicationSpecDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecDestinationArray) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutput() GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecDestinationArray) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecDestinationArrayOutput)
}

type GetGitopsApplicationsApplicationSpecDestinationOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecDestinationOutput) ToGetGitopsApplicationsApplicationSpecDestinationOutput() GetGitopsApplicationsApplicationSpecDestinationOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecDestinationOutput) ToGetGitopsApplicationsApplicationSpecDestinationOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationOutput {
	return o
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecDestinationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecDestination) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecDestinationOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecDestination) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecDestination)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecDestinationArrayOutput) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutput() GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecDestinationArrayOutput) ToGetGitopsApplicationsApplicationSpecDestinationArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecDestinationArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecDestinationArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecDestination {
		return vs[0].([]GetGitopsApplicationsApplicationSpecDestination)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecDestinationOutput)
}

type GetGitopsApplicationsApplicationSpecSource struct {
	Chart          *string                                               `pulumi:"chart"`
	Directories    []GetGitopsApplicationsApplicationSpecSourceDirectory `pulumi:"directories"`
	Helms          []GetGitopsApplicationsApplicationSpecSourceHelm      `pulumi:"helms"`
	Ksonnets       []GetGitopsApplicationsApplicationSpecSourceKsonnet   `pulumi:"ksonnets"`
	Kustomizes     []GetGitopsApplicationsApplicationSpecSourceKustomize `pulumi:"kustomizes"`
	Path           *string                                               `pulumi:"path"`
	Plugins        []GetGitopsApplicationsApplicationSpecSourcePlugin    `pulumi:"plugins"`
	RepoUrl        *string                                               `pulumi:"repoUrl"`
	TargetRevision *string                                               `pulumi:"targetRevision"`
}

// GetGitopsApplicationsApplicationSpecSourceInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceArgs and GetGitopsApplicationsApplicationSpecSourceOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceArgs{...}
type GetGitopsApplicationsApplicationSpecSourceInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceOutput() GetGitopsApplicationsApplicationSpecSourceOutput
	ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceOutput
}

type GetGitopsApplicationsApplicationSpecSourceArgs struct {
	Chart          pulumi.StringPtrInput                                         `pulumi:"chart"`
	Directories    GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput `pulumi:"directories"`
	Helms          GetGitopsApplicationsApplicationSpecSourceHelmArrayInput      `pulumi:"helms"`
	Ksonnets       GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput   `pulumi:"ksonnets"`
	Kustomizes     GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput `pulumi:"kustomizes"`
	Path           pulumi.StringPtrInput                                         `pulumi:"path"`
	Plugins        GetGitopsApplicationsApplicationSpecSourcePluginArrayInput    `pulumi:"plugins"`
	RepoUrl        pulumi.StringPtrInput                                         `pulumi:"repoUrl"`
	TargetRevision pulumi.StringPtrInput                                         `pulumi:"targetRevision"`
}

func (GetGitopsApplicationsApplicationSpecSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceArgs) ToGetGitopsApplicationsApplicationSpecSourceOutput() GetGitopsApplicationsApplicationSpecSourceOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceArgs) ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceOutput)
}

// GetGitopsApplicationsApplicationSpecSourceArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceArray and GetGitopsApplicationsApplicationSpecSourceArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceArray{ GetGitopsApplicationsApplicationSpecSourceArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceArrayOutput() GetGitopsApplicationsApplicationSpecSourceArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceArray []GetGitopsApplicationsApplicationSpecSourceInput

func (GetGitopsApplicationsApplicationSpecSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceArray) ToGetGitopsApplicationsApplicationSpecSourceArrayOutput() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceArray) ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) ToGetGitopsApplicationsApplicationSpecSourceOutput() GetGitopsApplicationsApplicationSpecSourceOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) ToGetGitopsApplicationsApplicationSpecSourceOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Chart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) *string { return v.Chart }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Directories() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceDirectory {
		return v.Directories
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Helms() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceHelm {
		return v.Helms
	}).(GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Ksonnets() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceKsonnet {
		return v.Ksonnets
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Kustomizes() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourceKustomize {
		return v.Kustomizes
	}).(GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) Plugins() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) []GetGitopsApplicationsApplicationSpecSourcePlugin {
		return v.Plugins
	}).(GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceOutput) TargetRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSource) *string { return v.TargetRevision }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSource)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceArrayOutput() GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSource {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSource)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectory struct {
	Exclude  *string                                                      `pulumi:"exclude"`
	Include  *string                                                      `pulumi:"include"`
	Jsonnets []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet `pulumi:"jsonnets"`
	Recurse  *bool                                                        `pulumi:"recurse"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryArgs struct {
	Exclude  pulumi.StringPtrInput                                                `pulumi:"exclude"`
	Include  pulumi.StringPtrInput                                                `pulumi:"include"`
	Jsonnets GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput `pulumi:"jsonnets"`
	Recurse  pulumi.BoolPtrInput                                                  `pulumi:"recurse"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryArray and GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryArray []GetGitopsApplicationsApplicationSpecSourceDirectoryInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) *string { return v.Include }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Jsonnets() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet {
		return v.Jsonnets
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryOutput) Recurse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectory) *bool { return v.Recurse }).(pulumi.BoolPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectory)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectory {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectory)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet struct {
	ExtVars []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar `pulumi:"extVars"`
	Libs    []string                                                           `pulumi:"libs"`
	Tlas    []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla    `pulumi:"tlas"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs struct {
	ExtVars GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput `pulumi:"extVars"`
	Libs    pulumi.StringArrayInput                                                    `pulumi:"libs"`
	Tlas    GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput    `pulumi:"tlas"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) ExtVars() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar {
		return v.ExtVars
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) Libs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []string { return v.Libs }).(pulumi.StringArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput) Tlas() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet) []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla {
		return v.Tlas
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnet)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar struct {
	Code *bool `pulumi:"code"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs struct {
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVar)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla struct {
	Code *bool `pulumi:"code"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{...}
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs struct {
	Code pulumi.BoolPtrInput `pulumi:"code"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

// GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray and GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray{ GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray []GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Code() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *bool { return v.Code }).(pulumi.BoolPtrOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput() GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTla)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelm struct {
	FileParameters  []GetGitopsApplicationsApplicationSpecSourceHelmFileParameter `pulumi:"fileParameters"`
	Parameters      []GetGitopsApplicationsApplicationSpecSourceHelmParameter     `pulumi:"parameters"`
	PassCredentials *bool                                                         `pulumi:"passCredentials"`
	ReleaseName     *string                                                       `pulumi:"releaseName"`
	ValueFiles      []string                                                      `pulumi:"valueFiles"`
	Values          *string                                                       `pulumi:"values"`
	Version         *string                                                       `pulumi:"version"`
}

// GetGitopsApplicationsApplicationSpecSourceHelmInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmArgs and GetGitopsApplicationsApplicationSpecSourceHelmOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmArgs{...}
type GetGitopsApplicationsApplicationSpecSourceHelmInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmOutput() GetGitopsApplicationsApplicationSpecSourceHelmOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmArgs struct {
	FileParameters  GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput `pulumi:"fileParameters"`
	Parameters      GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput     `pulumi:"parameters"`
	PassCredentials pulumi.BoolPtrInput                                                   `pulumi:"passCredentials"`
	ReleaseName     pulumi.StringPtrInput                                                 `pulumi:"releaseName"`
	ValueFiles      pulumi.StringArrayInput                                               `pulumi:"valueFiles"`
	Values          pulumi.StringPtrInput                                                 `pulumi:"values"`
	Version         pulumi.StringPtrInput                                                 `pulumi:"version"`
}

func (GetGitopsApplicationsApplicationSpecSourceHelmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmOutput() GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmOutput)
}

// GetGitopsApplicationsApplicationSpecSourceHelmArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmArray and GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmArray{ GetGitopsApplicationsApplicationSpecSourceHelmArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceHelmArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmArray []GetGitopsApplicationsApplicationSpecSourceHelmInput

func (GetGitopsApplicationsApplicationSpecSourceHelmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArray) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmArray) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmOutput() GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) FileParameters() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) []GetGitopsApplicationsApplicationSpecSourceHelmFileParameter {
		return v.FileParameters
	}).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) Parameters() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) []GetGitopsApplicationsApplicationSpecSourceHelmParameter {
		return v.Parameters
	}).(GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) PassCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *bool { return v.PassCredentials }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ReleaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *string { return v.ReleaseName }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) ValueFiles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) []string { return v.ValueFiles }).(pulumi.StringArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *string { return v.Values }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelm) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelm)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceHelmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceHelm {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceHelm)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceHelmOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameter struct {
	// Name of the GitOps application.
	Name *string `pulumi:"name"`
	Path *string `pulumi:"path"`
}

// GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs and GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{...}
type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs struct {
	// Name of the GitOps application.
	Name pulumi.StringPtrInput `pulumi:"name"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput)
}

// GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray and GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray{ GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray []GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return o
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmFileParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmFileParameter) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceHelmFileParameter {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceHelmFileParameter)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameter struct {
	ForceString *bool `pulumi:"forceString"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceHelmParameterInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs and GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmParameterInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs{...}
type GetGitopsApplicationsApplicationSpecSourceHelmParameterInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs struct {
	ForceString pulumi.BoolPtrInput `pulumi:"forceString"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput)
}

// GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceHelmParameterArray and GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceHelmParameterArray{ GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterArray []GetGitopsApplicationsApplicationSpecSourceHelmParameterInput

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceHelmParameterArray) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) ForceString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmParameter) *bool { return v.ForceString }).(pulumi.BoolPtrOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceHelmParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceHelmParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceHelmParameter {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceHelmParameter)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnet struct {
	Environment *string                                                      `pulumi:"environment"`
	Parameters  []GetGitopsApplicationsApplicationSpecSourceKsonnetParameter `pulumi:"parameters"`
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetArgs and GetGitopsApplicationsApplicationSpecSourceKsonnetOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetArgs{...}
type GetGitopsApplicationsApplicationSpecSourceKsonnetInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetArgs struct {
	Environment pulumi.StringPtrInput                                                `pulumi:"environment"`
	Parameters  GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput `pulumi:"parameters"`
}

func (GetGitopsApplicationsApplicationSpecSourceKsonnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetOutput)
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetArray and GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetArray{ GetGitopsApplicationsApplicationSpecSourceKsonnetArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetArray []GetGitopsApplicationsApplicationSpecSourceKsonnetInput

func (GetGitopsApplicationsApplicationSpecSourceKsonnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnet) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetOutput) Parameters() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnet) []GetGitopsApplicationsApplicationSpecSourceKsonnetParameter {
		return v.Parameters
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnet)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceKsonnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceKsonnet {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceKsonnet)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameter struct {
	Component *string `pulumi:"component"`
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs and GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{...}
type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs struct {
	Component pulumi.StringPtrInput `pulumi:"component"`
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput)
}

// GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray and GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray{ GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray []GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Component() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Component }).(pulumi.StringPtrOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKsonnetParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput() GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceKsonnetParameter {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceKsonnetParameter)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKustomize struct {
	CommonAnnotations      map[string]string `pulumi:"commonAnnotations"`
	CommonLabels           map[string]string `pulumi:"commonLabels"`
	ForceCommonAnnotations *bool             `pulumi:"forceCommonAnnotations"`
	ForceCommonLabels      *bool             `pulumi:"forceCommonLabels"`
	Images                 []string          `pulumi:"images"`
	NamePrefix             *string           `pulumi:"namePrefix"`
	NameSuffix             *string           `pulumi:"nameSuffix"`
	Version                *string           `pulumi:"version"`
}

// GetGitopsApplicationsApplicationSpecSourceKustomizeInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKustomizeArgs and GetGitopsApplicationsApplicationSpecSourceKustomizeOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKustomizeInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKustomizeArgs{...}
type GetGitopsApplicationsApplicationSpecSourceKustomizeInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeOutput
	ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeArgs struct {
	CommonAnnotations      pulumi.StringMapInput   `pulumi:"commonAnnotations"`
	CommonLabels           pulumi.StringMapInput   `pulumi:"commonLabels"`
	ForceCommonAnnotations pulumi.BoolPtrInput     `pulumi:"forceCommonAnnotations"`
	ForceCommonLabels      pulumi.BoolPtrInput     `pulumi:"forceCommonLabels"`
	Images                 pulumi.StringArrayInput `pulumi:"images"`
	NamePrefix             pulumi.StringPtrInput   `pulumi:"namePrefix"`
	NameSuffix             pulumi.StringPtrInput   `pulumi:"nameSuffix"`
	Version                pulumi.StringPtrInput   `pulumi:"version"`
}

func (GetGitopsApplicationsApplicationSpecSourceKustomizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArgs) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArgs) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKustomizeOutput)
}

// GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourceKustomizeArray and GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourceKustomizeArray{ GetGitopsApplicationsApplicationSpecSourceKustomizeArgs{...} }
type GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeArray []GetGitopsApplicationsApplicationSpecSourceKustomizeInput

func (GetGitopsApplicationsApplicationSpecSourceKustomizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArray) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourceKustomizeArray) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) CommonAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) map[string]string {
		return v.CommonAnnotations
	}).(pulumi.StringMapOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) CommonLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) map[string]string { return v.CommonLabels }).(pulumi.StringMapOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ForceCommonAnnotations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *bool { return v.ForceCommonAnnotations }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) ForceCommonLabels() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *bool { return v.ForceCommonLabels }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) Images() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) []string { return v.Images }).(pulumi.StringArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) NameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *string { return v.NameSuffix }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourceKustomize) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourceKustomize)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput() GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) ToGetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourceKustomizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourceKustomize {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourceKustomize)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourceKustomizeOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePlugin struct {
	Envs []GetGitopsApplicationsApplicationSpecSourcePluginEnv `pulumi:"envs"`
	// Name of the GitOps application.
	Name *string `pulumi:"name"`
}

// GetGitopsApplicationsApplicationSpecSourcePluginInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginArgs and GetGitopsApplicationsApplicationSpecSourcePluginOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginArgs{...}
type GetGitopsApplicationsApplicationSpecSourcePluginInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginOutput() GetGitopsApplicationsApplicationSpecSourcePluginOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginArgs struct {
	Envs GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput `pulumi:"envs"`
	// Name of the GitOps application.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (GetGitopsApplicationsApplicationSpecSourcePluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginOutput() GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginOutput)
}

// GetGitopsApplicationsApplicationSpecSourcePluginArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginArray and GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginArray{ GetGitopsApplicationsApplicationSpecSourcePluginArgs{...} }
type GetGitopsApplicationsApplicationSpecSourcePluginArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginArray []GetGitopsApplicationsApplicationSpecSourcePluginInput

func (GetGitopsApplicationsApplicationSpecSourcePluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArray) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginArray) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginOutput() GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) Envs() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePlugin) []GetGitopsApplicationsApplicationSpecSourcePluginEnv {
		return v.Envs
	}).(GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput)
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourcePluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePlugin)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourcePluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourcePlugin {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourcePlugin)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourcePluginOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnv struct {
	// Name of the GitOps application.
	Name  *string `pulumi:"name"`
	Value *string `pulumi:"value"`
}

// GetGitopsApplicationsApplicationSpecSourcePluginEnvInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs and GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginEnvInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs{...}
type GetGitopsApplicationsApplicationSpecSourcePluginEnvInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs struct {
	// Name of the GitOps application.
	Name  pulumi.StringPtrInput `pulumi:"name"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput)
}

// GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSourcePluginEnvArray and GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSourcePluginEnvArray{ GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs{...} }
type GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput
	ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvArray []GetGitopsApplicationsApplicationSpecSourcePluginEnvInput

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArray) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSourcePluginEnvArray) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return o
}

// Name of the GitOps application.
func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePluginEnv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSourcePluginEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSourcePluginEnv)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput() GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) ToGetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSourcePluginEnv {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSourcePluginEnv)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicy struct {
	Automateds  []GetGitopsApplicationsApplicationSpecSyncPolicyAutomated `pulumi:"automateds"`
	Retries     []GetGitopsApplicationsApplicationSpecSyncPolicyRetry     `pulumi:"retries"`
	SyncOptions []string                                                  `pulumi:"syncOptions"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyArgs and GetGitopsApplicationsApplicationSpecSyncPolicyOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyOutput() GetGitopsApplicationsApplicationSpecSyncPolicyOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyArgs struct {
	Automateds  GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput `pulumi:"automateds"`
	Retries     GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput     `pulumi:"retries"`
	SyncOptions pulumi.StringArrayInput                                           `pulumi:"syncOptions"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutput() GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyArray and GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyArray{ GetGitopsApplicationsApplicationSpecSyncPolicyArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyArray []GetGitopsApplicationsApplicationSpecSyncPolicyInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutput() GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) Automateds() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicy) []GetGitopsApplicationsApplicationSpecSyncPolicyAutomated {
		return v.Automateds
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) Retries() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicy) []GetGitopsApplicationsApplicationSpecSyncPolicyRetry {
		return v.Retries
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyOutput) SyncOptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicy) []string { return v.SyncOptions }).(pulumi.StringArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicy)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicy {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicy)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomated struct {
	AllowEmpty *bool `pulumi:"allowEmpty"`
	Prune      *bool `pulumi:"prune"`
	SelfHeal   *bool `pulumi:"selfHeal"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs and GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs struct {
	AllowEmpty pulumi.BoolPtrInput `pulumi:"allowEmpty"`
	Prune      pulumi.BoolPtrInput `pulumi:"prune"`
	SelfHeal   pulumi.BoolPtrInput `pulumi:"selfHeal"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray and GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray{ GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray []GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) AllowEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyAutomated) *bool { return v.AllowEmpty }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) Prune() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyAutomated) *bool { return v.Prune }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput) SelfHeal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyAutomated) *bool { return v.SelfHeal }).(pulumi.BoolPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicyAutomated {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicyAutomated)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetry struct {
	Backoffs []GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff `pulumi:"backoffs"`
	Limit    *string                                                      `pulumi:"limit"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs and GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs struct {
	Backoffs GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput `pulumi:"backoffs"`
	Limit    pulumi.StringPtrInput                                                `pulumi:"limit"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray and GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray{ GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray []GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) Backoffs() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetry) []GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff {
		return v.Backoffs
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput) Limit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetry) *string { return v.Limit }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetry)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicyRetry {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicyRetry)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff struct {
	Duration    *string `pulumi:"duration"`
	Factor      *string `pulumi:"factor"`
	MaxDuration *string `pulumi:"maxDuration"`
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs and GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{...}
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs struct {
	Duration    pulumi.StringPtrInput `pulumi:"duration"`
	Factor      pulumi.StringPtrInput `pulumi:"factor"`
	MaxDuration pulumi.StringPtrInput `pulumi:"maxDuration"`
}

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput)
}

// GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput is an input type that accepts GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray and GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput values.
// You can construct a concrete instance of `GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput` via:
//
//	GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray{ GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{...} }
type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput interface {
	pulumi.Input

	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput
	ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray []GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return i.ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(context.Background())
}

func (i GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) Factor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) *string { return v.Factor }).(pulumi.StringPtrOutput)
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput) MaxDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff) *string { return v.MaxDuration }).(pulumi.StringPtrOutput)
}

type GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)(nil)).Elem()
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput() GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) ToGetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutputWithContext(ctx context.Context) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput {
	return o
}

func (o GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput) Index(i pulumi.IntInput) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff {
		return vs[0].([]GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoff)[vs[1].(int)]
	}).(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput)
}

type GetGitopsClusterQuery struct {
	// Cluster server URL or the cluster name.
	Ids []GetGitopsClusterQueryId `pulumi:"ids"`
	// Name of the GitOps cluster.
	Name *string `pulumi:"name"`
	// Server of the GitOps cluster.
	Server *string `pulumi:"server"`
}

// GetGitopsClusterQueryInput is an input type that accepts GetGitopsClusterQueryArgs and GetGitopsClusterQueryOutput values.
// You can construct a concrete instance of `GetGitopsClusterQueryInput` via:
//
//	GetGitopsClusterQueryArgs{...}
type GetGitopsClusterQueryInput interface {
	pulumi.Input

	ToGetGitopsClusterQueryOutput() GetGitopsClusterQueryOutput
	ToGetGitopsClusterQueryOutputWithContext(context.Context) GetGitopsClusterQueryOutput
}

type GetGitopsClusterQueryArgs struct {
	// Cluster server URL or the cluster name.
	Ids GetGitopsClusterQueryIdArrayInput `pulumi:"ids"`
	// Name of the GitOps cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Server of the GitOps cluster.
	Server pulumi.StringPtrInput `pulumi:"server"`
}

func (GetGitopsClusterQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterQuery)(nil)).Elem()
}

func (i GetGitopsClusterQueryArgs) ToGetGitopsClusterQueryOutput() GetGitopsClusterQueryOutput {
	return i.ToGetGitopsClusterQueryOutputWithContext(context.Background())
}

func (i GetGitopsClusterQueryArgs) ToGetGitopsClusterQueryOutputWithContext(ctx context.Context) GetGitopsClusterQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterQueryOutput)
}

// GetGitopsClusterQueryArrayInput is an input type that accepts GetGitopsClusterQueryArray and GetGitopsClusterQueryArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterQueryArrayInput` via:
//
//	GetGitopsClusterQueryArray{ GetGitopsClusterQueryArgs{...} }
type GetGitopsClusterQueryArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterQueryArrayOutput() GetGitopsClusterQueryArrayOutput
	ToGetGitopsClusterQueryArrayOutputWithContext(context.Context) GetGitopsClusterQueryArrayOutput
}

type GetGitopsClusterQueryArray []GetGitopsClusterQueryInput

func (GetGitopsClusterQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterQuery)(nil)).Elem()
}

func (i GetGitopsClusterQueryArray) ToGetGitopsClusterQueryArrayOutput() GetGitopsClusterQueryArrayOutput {
	return i.ToGetGitopsClusterQueryArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterQueryArray) ToGetGitopsClusterQueryArrayOutputWithContext(ctx context.Context) GetGitopsClusterQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterQueryArrayOutput)
}

type GetGitopsClusterQueryOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterQuery)(nil)).Elem()
}

func (o GetGitopsClusterQueryOutput) ToGetGitopsClusterQueryOutput() GetGitopsClusterQueryOutput {
	return o
}

func (o GetGitopsClusterQueryOutput) ToGetGitopsClusterQueryOutputWithContext(ctx context.Context) GetGitopsClusterQueryOutput {
	return o
}

// Cluster server URL or the cluster name.
func (o GetGitopsClusterQueryOutput) Ids() GetGitopsClusterQueryIdArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterQuery) []GetGitopsClusterQueryId { return v.Ids }).(GetGitopsClusterQueryIdArrayOutput)
}

// Name of the GitOps cluster.
func (o GetGitopsClusterQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Server of the GitOps cluster.
func (o GetGitopsClusterQueryOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterQuery) *string { return v.Server }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterQueryArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterQuery)(nil)).Elem()
}

func (o GetGitopsClusterQueryArrayOutput) ToGetGitopsClusterQueryArrayOutput() GetGitopsClusterQueryArrayOutput {
	return o
}

func (o GetGitopsClusterQueryArrayOutput) ToGetGitopsClusterQueryArrayOutputWithContext(ctx context.Context) GetGitopsClusterQueryArrayOutput {
	return o
}

func (o GetGitopsClusterQueryArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterQuery {
		return vs[0].([]GetGitopsClusterQuery)[vs[1].(int)]
	}).(GetGitopsClusterQueryOutput)
}

type GetGitopsClusterQueryId struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// GetGitopsClusterQueryIdInput is an input type that accepts GetGitopsClusterQueryIdArgs and GetGitopsClusterQueryIdOutput values.
// You can construct a concrete instance of `GetGitopsClusterQueryIdInput` via:
//
//	GetGitopsClusterQueryIdArgs{...}
type GetGitopsClusterQueryIdInput interface {
	pulumi.Input

	ToGetGitopsClusterQueryIdOutput() GetGitopsClusterQueryIdOutput
	ToGetGitopsClusterQueryIdOutputWithContext(context.Context) GetGitopsClusterQueryIdOutput
}

type GetGitopsClusterQueryIdArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsClusterQueryIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterQueryId)(nil)).Elem()
}

func (i GetGitopsClusterQueryIdArgs) ToGetGitopsClusterQueryIdOutput() GetGitopsClusterQueryIdOutput {
	return i.ToGetGitopsClusterQueryIdOutputWithContext(context.Background())
}

func (i GetGitopsClusterQueryIdArgs) ToGetGitopsClusterQueryIdOutputWithContext(ctx context.Context) GetGitopsClusterQueryIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterQueryIdOutput)
}

// GetGitopsClusterQueryIdArrayInput is an input type that accepts GetGitopsClusterQueryIdArray and GetGitopsClusterQueryIdArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterQueryIdArrayInput` via:
//
//	GetGitopsClusterQueryIdArray{ GetGitopsClusterQueryIdArgs{...} }
type GetGitopsClusterQueryIdArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterQueryIdArrayOutput() GetGitopsClusterQueryIdArrayOutput
	ToGetGitopsClusterQueryIdArrayOutputWithContext(context.Context) GetGitopsClusterQueryIdArrayOutput
}

type GetGitopsClusterQueryIdArray []GetGitopsClusterQueryIdInput

func (GetGitopsClusterQueryIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterQueryId)(nil)).Elem()
}

func (i GetGitopsClusterQueryIdArray) ToGetGitopsClusterQueryIdArrayOutput() GetGitopsClusterQueryIdArrayOutput {
	return i.ToGetGitopsClusterQueryIdArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterQueryIdArray) ToGetGitopsClusterQueryIdArrayOutputWithContext(ctx context.Context) GetGitopsClusterQueryIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterQueryIdArrayOutput)
}

type GetGitopsClusterQueryIdOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterQueryIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterQueryId)(nil)).Elem()
}

func (o GetGitopsClusterQueryIdOutput) ToGetGitopsClusterQueryIdOutput() GetGitopsClusterQueryIdOutput {
	return o
}

func (o GetGitopsClusterQueryIdOutput) ToGetGitopsClusterQueryIdOutputWithContext(ctx context.Context) GetGitopsClusterQueryIdOutput {
	return o
}

func (o GetGitopsClusterQueryIdOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterQueryId) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterQueryIdOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterQueryId) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterQueryIdArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterQueryIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterQueryId)(nil)).Elem()
}

func (o GetGitopsClusterQueryIdArrayOutput) ToGetGitopsClusterQueryIdArrayOutput() GetGitopsClusterQueryIdArrayOutput {
	return o
}

func (o GetGitopsClusterQueryIdArrayOutput) ToGetGitopsClusterQueryIdArrayOutputWithContext(ctx context.Context) GetGitopsClusterQueryIdArrayOutput {
	return o
}

func (o GetGitopsClusterQueryIdArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterQueryIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterQueryId {
		return vs[0].([]GetGitopsClusterQueryId)[vs[1].(int)]
	}).(GetGitopsClusterQueryIdOutput)
}

type GetGitopsClusterRequest struct {
	Clusters []GetGitopsClusterRequestCluster `pulumi:"clusters"`
	// The ID of this resource.
	Ids           []GetGitopsClusterRequestId         `pulumi:"ids"`
	Tags          []string                            `pulumi:"tags"`
	UpdateMasks   []GetGitopsClusterRequestUpdateMask `pulumi:"updateMasks"`
	UpdatedFields []string                            `pulumi:"updatedFields"`
	Upsert        *bool                               `pulumi:"upsert"`
}

// GetGitopsClusterRequestInput is an input type that accepts GetGitopsClusterRequestArgs and GetGitopsClusterRequestOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestInput` via:
//
//	GetGitopsClusterRequestArgs{...}
type GetGitopsClusterRequestInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestOutput() GetGitopsClusterRequestOutput
	ToGetGitopsClusterRequestOutputWithContext(context.Context) GetGitopsClusterRequestOutput
}

type GetGitopsClusterRequestArgs struct {
	Clusters GetGitopsClusterRequestClusterArrayInput `pulumi:"clusters"`
	// The ID of this resource.
	Ids           GetGitopsClusterRequestIdArrayInput         `pulumi:"ids"`
	Tags          pulumi.StringArrayInput                     `pulumi:"tags"`
	UpdateMasks   GetGitopsClusterRequestUpdateMaskArrayInput `pulumi:"updateMasks"`
	UpdatedFields pulumi.StringArrayInput                     `pulumi:"updatedFields"`
	Upsert        pulumi.BoolPtrInput                         `pulumi:"upsert"`
}

func (GetGitopsClusterRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequest)(nil)).Elem()
}

func (i GetGitopsClusterRequestArgs) ToGetGitopsClusterRequestOutput() GetGitopsClusterRequestOutput {
	return i.ToGetGitopsClusterRequestOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestArgs) ToGetGitopsClusterRequestOutputWithContext(ctx context.Context) GetGitopsClusterRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestOutput)
}

// GetGitopsClusterRequestArrayInput is an input type that accepts GetGitopsClusterRequestArray and GetGitopsClusterRequestArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestArrayInput` via:
//
//	GetGitopsClusterRequestArray{ GetGitopsClusterRequestArgs{...} }
type GetGitopsClusterRequestArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestArrayOutput() GetGitopsClusterRequestArrayOutput
	ToGetGitopsClusterRequestArrayOutputWithContext(context.Context) GetGitopsClusterRequestArrayOutput
}

type GetGitopsClusterRequestArray []GetGitopsClusterRequestInput

func (GetGitopsClusterRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequest)(nil)).Elem()
}

func (i GetGitopsClusterRequestArray) ToGetGitopsClusterRequestArrayOutput() GetGitopsClusterRequestArrayOutput {
	return i.ToGetGitopsClusterRequestArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestArray) ToGetGitopsClusterRequestArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestArrayOutput)
}

type GetGitopsClusterRequestOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequest)(nil)).Elem()
}

func (o GetGitopsClusterRequestOutput) ToGetGitopsClusterRequestOutput() GetGitopsClusterRequestOutput {
	return o
}

func (o GetGitopsClusterRequestOutput) ToGetGitopsClusterRequestOutputWithContext(ctx context.Context) GetGitopsClusterRequestOutput {
	return o
}

func (o GetGitopsClusterRequestOutput) Clusters() GetGitopsClusterRequestClusterArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []GetGitopsClusterRequestCluster { return v.Clusters }).(GetGitopsClusterRequestClusterArrayOutput)
}

// The ID of this resource.
func (o GetGitopsClusterRequestOutput) Ids() GetGitopsClusterRequestIdArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []GetGitopsClusterRequestId { return v.Ids }).(GetGitopsClusterRequestIdArrayOutput)
}

func (o GetGitopsClusterRequestOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetGitopsClusterRequestOutput) UpdateMasks() GetGitopsClusterRequestUpdateMaskArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []GetGitopsClusterRequestUpdateMask { return v.UpdateMasks }).(GetGitopsClusterRequestUpdateMaskArrayOutput)
}

func (o GetGitopsClusterRequestOutput) UpdatedFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) []string { return v.UpdatedFields }).(pulumi.StringArrayOutput)
}

func (o GetGitopsClusterRequestOutput) Upsert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequest) *bool { return v.Upsert }).(pulumi.BoolPtrOutput)
}

type GetGitopsClusterRequestArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequest)(nil)).Elem()
}

func (o GetGitopsClusterRequestArrayOutput) ToGetGitopsClusterRequestArrayOutput() GetGitopsClusterRequestArrayOutput {
	return o
}

func (o GetGitopsClusterRequestArrayOutput) ToGetGitopsClusterRequestArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestArrayOutput {
	return o
}

func (o GetGitopsClusterRequestArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequest {
		return vs[0].([]GetGitopsClusterRequest)[vs[1].(int)]
	}).(GetGitopsClusterRequestOutput)
}

type GetGitopsClusterRequestCluster struct {
	Annotations         map[string]string                                  `pulumi:"annotations"`
	ClusterResources    *bool                                              `pulumi:"clusterResources"`
	Configs             []GetGitopsClusterRequestClusterConfig             `pulumi:"configs"`
	Infos               []GetGitopsClusterRequestClusterInfo               `pulumi:"infos"`
	Labels              map[string]string                                  `pulumi:"labels"`
	Name                *string                                            `pulumi:"name"`
	Namespaces          []string                                           `pulumi:"namespaces"`
	Project             *string                                            `pulumi:"project"`
	RefreshRequestedAts []GetGitopsClusterRequestClusterRefreshRequestedAt `pulumi:"refreshRequestedAts"`
	Server              *string                                            `pulumi:"server"`
	Shard               *string                                            `pulumi:"shard"`
}

// GetGitopsClusterRequestClusterInput is an input type that accepts GetGitopsClusterRequestClusterArgs and GetGitopsClusterRequestClusterOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInput` via:
//
//	GetGitopsClusterRequestClusterArgs{...}
type GetGitopsClusterRequestClusterInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterOutput() GetGitopsClusterRequestClusterOutput
	ToGetGitopsClusterRequestClusterOutputWithContext(context.Context) GetGitopsClusterRequestClusterOutput
}

type GetGitopsClusterRequestClusterArgs struct {
	Annotations         pulumi.StringMapInput                                      `pulumi:"annotations"`
	ClusterResources    pulumi.BoolPtrInput                                        `pulumi:"clusterResources"`
	Configs             GetGitopsClusterRequestClusterConfigArrayInput             `pulumi:"configs"`
	Infos               GetGitopsClusterRequestClusterInfoArrayInput               `pulumi:"infos"`
	Labels              pulumi.StringMapInput                                      `pulumi:"labels"`
	Name                pulumi.StringPtrInput                                      `pulumi:"name"`
	Namespaces          pulumi.StringArrayInput                                    `pulumi:"namespaces"`
	Project             pulumi.StringPtrInput                                      `pulumi:"project"`
	RefreshRequestedAts GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput `pulumi:"refreshRequestedAts"`
	Server              pulumi.StringPtrInput                                      `pulumi:"server"`
	Shard               pulumi.StringPtrInput                                      `pulumi:"shard"`
}

func (GetGitopsClusterRequestClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterArgs) ToGetGitopsClusterRequestClusterOutput() GetGitopsClusterRequestClusterOutput {
	return i.ToGetGitopsClusterRequestClusterOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterArgs) ToGetGitopsClusterRequestClusterOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterOutput)
}

// GetGitopsClusterRequestClusterArrayInput is an input type that accepts GetGitopsClusterRequestClusterArray and GetGitopsClusterRequestClusterArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterArrayInput` via:
//
//	GetGitopsClusterRequestClusterArray{ GetGitopsClusterRequestClusterArgs{...} }
type GetGitopsClusterRequestClusterArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterArrayOutput() GetGitopsClusterRequestClusterArrayOutput
	ToGetGitopsClusterRequestClusterArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterArrayOutput
}

type GetGitopsClusterRequestClusterArray []GetGitopsClusterRequestClusterInput

func (GetGitopsClusterRequestClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterArray) ToGetGitopsClusterRequestClusterArrayOutput() GetGitopsClusterRequestClusterArrayOutput {
	return i.ToGetGitopsClusterRequestClusterArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterArray) ToGetGitopsClusterRequestClusterArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterArrayOutput)
}

type GetGitopsClusterRequestClusterOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterOutput) ToGetGitopsClusterRequestClusterOutput() GetGitopsClusterRequestClusterOutput {
	return o
}

func (o GetGitopsClusterRequestClusterOutput) ToGetGitopsClusterRequestClusterOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterOutput {
	return o
}

func (o GetGitopsClusterRequestClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o GetGitopsClusterRequestClusterOutput) ClusterResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *bool { return v.ClusterResources }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Configs() GetGitopsClusterRequestClusterConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []GetGitopsClusterRequestClusterConfig { return v.Configs }).(GetGitopsClusterRequestClusterConfigArrayOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Infos() GetGitopsClusterRequestClusterInfoArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []GetGitopsClusterRequestClusterInfo { return v.Infos }).(GetGitopsClusterRequestClusterInfoArrayOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Namespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []string { return v.Namespaces }).(pulumi.StringArrayOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterOutput) RefreshRequestedAts() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) []GetGitopsClusterRequestClusterRefreshRequestedAt {
		return v.RefreshRequestedAts
	}).(GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Server }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterOutput) Shard() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestCluster) *string { return v.Shard }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestCluster)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterArrayOutput) ToGetGitopsClusterRequestClusterArrayOutput() GetGitopsClusterRequestClusterArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterArrayOutput) ToGetGitopsClusterRequestClusterArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestCluster {
		return vs[0].([]GetGitopsClusterRequestCluster)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterOutput)
}

type GetGitopsClusterRequestClusterConfig struct {
	AwsAuthConfigs        []GetGitopsClusterRequestClusterConfigAwsAuthConfig      `pulumi:"awsAuthConfigs"`
	BearerToken           *string                                                  `pulumi:"bearerToken"`
	ClusterConnectionType *string                                                  `pulumi:"clusterConnectionType"`
	ExecProviderConfigs   []GetGitopsClusterRequestClusterConfigExecProviderConfig `pulumi:"execProviderConfigs"`
	Password              *string                                                  `pulumi:"password"`
	TlsClientConfigs      []GetGitopsClusterRequestClusterConfigTlsClientConfig    `pulumi:"tlsClientConfigs"`
	Username              *string                                                  `pulumi:"username"`
}

// GetGitopsClusterRequestClusterConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigArgs and GetGitopsClusterRequestClusterConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigArgs{...}
type GetGitopsClusterRequestClusterConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigOutput() GetGitopsClusterRequestClusterConfigOutput
	ToGetGitopsClusterRequestClusterConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigOutput
}

type GetGitopsClusterRequestClusterConfigArgs struct {
	AwsAuthConfigs        GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayInput      `pulumi:"awsAuthConfigs"`
	BearerToken           pulumi.StringPtrInput                                            `pulumi:"bearerToken"`
	ClusterConnectionType pulumi.StringPtrInput                                            `pulumi:"clusterConnectionType"`
	ExecProviderConfigs   GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput `pulumi:"execProviderConfigs"`
	Password              pulumi.StringPtrInput                                            `pulumi:"password"`
	TlsClientConfigs      GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput    `pulumi:"tlsClientConfigs"`
	Username              pulumi.StringPtrInput                                            `pulumi:"username"`
}

func (GetGitopsClusterRequestClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigArgs) ToGetGitopsClusterRequestClusterConfigOutput() GetGitopsClusterRequestClusterConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigArgs) ToGetGitopsClusterRequestClusterConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigOutput)
}

// GetGitopsClusterRequestClusterConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigArray and GetGitopsClusterRequestClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigArray{ GetGitopsClusterRequestClusterConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigArrayOutput() GetGitopsClusterRequestClusterConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigArray []GetGitopsClusterRequestClusterConfigInput

func (GetGitopsClusterRequestClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigArray) ToGetGitopsClusterRequestClusterConfigArrayOutput() GetGitopsClusterRequestClusterConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigArray) ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigOutput) ToGetGitopsClusterRequestClusterConfigOutput() GetGitopsClusterRequestClusterConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigOutput) ToGetGitopsClusterRequestClusterConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigOutput) AwsAuthConfigs() GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) []GetGitopsClusterRequestClusterConfigAwsAuthConfig {
		return v.AwsAuthConfigs
	}).(GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput)
}

func (o GetGitopsClusterRequestClusterConfigOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.BearerToken }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigOutput) ClusterConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.ClusterConnectionType }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigOutput) ExecProviderConfigs() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) []GetGitopsClusterRequestClusterConfigExecProviderConfig {
		return v.ExecProviderConfigs
	}).(GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput)
}

func (o GetGitopsClusterRequestClusterConfigOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigOutput) TlsClientConfigs() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) []GetGitopsClusterRequestClusterConfigTlsClientConfig {
		return v.TlsClientConfigs
	}).(GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput)
}

func (o GetGitopsClusterRequestClusterConfigOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfig) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigArrayOutput() GetGitopsClusterRequestClusterConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigOutput)
}

type GetGitopsClusterRequestClusterConfigAwsAuthConfig struct {
	ClusterName *string `pulumi:"clusterName"`
	RoleARN     *string `pulumi:"roleARN"`
}

// GetGitopsClusterRequestClusterConfigAwsAuthConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs and GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigAwsAuthConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs{...}
type GetGitopsClusterRequestClusterConfigAwsAuthConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutput() GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput
	ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput
}

type GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs struct {
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	RoleARN     pulumi.StringPtrInput `pulumi:"roleARN"`
}

func (GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutput() GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput)
}

// GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigAwsAuthConfigArray and GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigAwsAuthConfigArray{ GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput() GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigAwsAuthConfigArray []GetGitopsClusterRequestClusterConfigAwsAuthConfigInput

func (GetGitopsClusterRequestClusterConfigAwsAuthConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigAwsAuthConfigArray) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput() GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigAwsAuthConfigArray) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutput() GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigAwsAuthConfig) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput) RoleARN() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigAwsAuthConfig) *string { return v.RoleARN }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigAwsAuthConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput() GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfigAwsAuthConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfigAwsAuthConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput)
}

type GetGitopsClusterRequestClusterConfigExecProviderConfig struct {
	ApiVersion  *string           `pulumi:"apiVersion"`
	Args        []string          `pulumi:"args"`
	Command     *string           `pulumi:"command"`
	Env         map[string]string `pulumi:"env"`
	InstallHint *string           `pulumi:"installHint"`
}

// GetGitopsClusterRequestClusterConfigExecProviderConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigExecProviderConfigArgs and GetGitopsClusterRequestClusterConfigExecProviderConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigExecProviderConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigExecProviderConfigArgs{...}
type GetGitopsClusterRequestClusterConfigExecProviderConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigOutput
	ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigArgs struct {
	ApiVersion  pulumi.StringPtrInput   `pulumi:"apiVersion"`
	Args        pulumi.StringArrayInput `pulumi:"args"`
	Command     pulumi.StringPtrInput   `pulumi:"command"`
	Env         pulumi.StringMapInput   `pulumi:"env"`
	InstallHint pulumi.StringPtrInput   `pulumi:"installHint"`
}

func (GetGitopsClusterRequestClusterConfigExecProviderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArgs) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArgs) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigExecProviderConfigOutput)
}

// GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigExecProviderConfigArray and GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigExecProviderConfigArray{ GetGitopsClusterRequestClusterConfigExecProviderConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigArray []GetGitopsClusterRequestClusterConfigExecProviderConfigInput

func (GetGitopsClusterRequestClusterConfigExecProviderConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArray) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigExecProviderConfigArray) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) *string { return v.Command }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigOutput) InstallHint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigExecProviderConfig) *string { return v.InstallHint }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigExecProviderConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput() GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigExecProviderConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfigExecProviderConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfigExecProviderConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigExecProviderConfigOutput)
}

type GetGitopsClusterRequestClusterConfigTlsClientConfig struct {
	CaData     *string `pulumi:"caData"`
	CertData   *string `pulumi:"certData"`
	Insecure   *bool   `pulumi:"insecure"`
	KeyData    *string `pulumi:"keyData"`
	ServerName *string `pulumi:"serverName"`
}

// GetGitopsClusterRequestClusterConfigTlsClientConfigInput is an input type that accepts GetGitopsClusterRequestClusterConfigTlsClientConfigArgs and GetGitopsClusterRequestClusterConfigTlsClientConfigOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigTlsClientConfigInput` via:
//
//	GetGitopsClusterRequestClusterConfigTlsClientConfigArgs{...}
type GetGitopsClusterRequestClusterConfigTlsClientConfigInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigOutput
	ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigArgs struct {
	CaData     pulumi.StringPtrInput `pulumi:"caData"`
	CertData   pulumi.StringPtrInput `pulumi:"certData"`
	Insecure   pulumi.BoolPtrInput   `pulumi:"insecure"`
	KeyData    pulumi.StringPtrInput `pulumi:"keyData"`
	ServerName pulumi.StringPtrInput `pulumi:"serverName"`
}

func (GetGitopsClusterRequestClusterConfigTlsClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArgs) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return i.ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArgs) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigTlsClientConfigOutput)
}

// GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput is an input type that accepts GetGitopsClusterRequestClusterConfigTlsClientConfigArray and GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput` via:
//
//	GetGitopsClusterRequestClusterConfigTlsClientConfigArray{ GetGitopsClusterRequestClusterConfigTlsClientConfigArgs{...} }
type GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput
	ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigArray []GetGitopsClusterRequestClusterConfigTlsClientConfigInput

func (GetGitopsClusterRequestClusterConfigTlsClientConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArray) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return i.ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterConfigTlsClientConfigArray) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput)
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) CaData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.CaData }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) CertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.CertData }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterConfigTlsClientConfig) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterConfigTlsClientConfig)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput() GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) ToGetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterConfigTlsClientConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterConfigTlsClientConfig {
		return vs[0].([]GetGitopsClusterRequestClusterConfigTlsClientConfig)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterConfigTlsClientConfigOutput)
}

type GetGitopsClusterRequestClusterInfo struct {
	ApiVersions       []string                                            `pulumi:"apiVersions"`
	ApplicationsCount *string                                             `pulumi:"applicationsCount"`
	CacheInfos        []GetGitopsClusterRequestClusterInfoCacheInfo       `pulumi:"cacheInfos"`
	ConnectionStates  []GetGitopsClusterRequestClusterInfoConnectionState `pulumi:"connectionStates"`
	ServerVersion     string                                              `pulumi:"serverVersion"`
}

// GetGitopsClusterRequestClusterInfoInput is an input type that accepts GetGitopsClusterRequestClusterInfoArgs and GetGitopsClusterRequestClusterInfoOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoInput` via:
//
//	GetGitopsClusterRequestClusterInfoArgs{...}
type GetGitopsClusterRequestClusterInfoInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoOutput() GetGitopsClusterRequestClusterInfoOutput
	ToGetGitopsClusterRequestClusterInfoOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoOutput
}

type GetGitopsClusterRequestClusterInfoArgs struct {
	ApiVersions       pulumi.StringArrayInput                                     `pulumi:"apiVersions"`
	ApplicationsCount pulumi.StringPtrInput                                       `pulumi:"applicationsCount"`
	CacheInfos        GetGitopsClusterRequestClusterInfoCacheInfoArrayInput       `pulumi:"cacheInfos"`
	ConnectionStates  GetGitopsClusterRequestClusterInfoConnectionStateArrayInput `pulumi:"connectionStates"`
	ServerVersion     pulumi.StringInput                                          `pulumi:"serverVersion"`
}

func (GetGitopsClusterRequestClusterInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoArgs) ToGetGitopsClusterRequestClusterInfoOutput() GetGitopsClusterRequestClusterInfoOutput {
	return i.ToGetGitopsClusterRequestClusterInfoOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoArgs) ToGetGitopsClusterRequestClusterInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoOutput)
}

// GetGitopsClusterRequestClusterInfoArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoArray and GetGitopsClusterRequestClusterInfoArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoArray{ GetGitopsClusterRequestClusterInfoArgs{...} }
type GetGitopsClusterRequestClusterInfoArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoArrayOutput() GetGitopsClusterRequestClusterInfoArrayOutput
	ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoArrayOutput
}

type GetGitopsClusterRequestClusterInfoArray []GetGitopsClusterRequestClusterInfoInput

func (GetGitopsClusterRequestClusterInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoArray) ToGetGitopsClusterRequestClusterInfoArrayOutput() GetGitopsClusterRequestClusterInfoArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoArray) ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoArrayOutput)
}

type GetGitopsClusterRequestClusterInfoOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoOutput) ToGetGitopsClusterRequestClusterInfoOutput() GetGitopsClusterRequestClusterInfoOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoOutput) ToGetGitopsClusterRequestClusterInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoOutput) ApiVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) []string { return v.ApiVersions }).(pulumi.StringArrayOutput)
}

func (o GetGitopsClusterRequestClusterInfoOutput) ApplicationsCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) *string { return v.ApplicationsCount }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterInfoOutput) CacheInfos() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) []GetGitopsClusterRequestClusterInfoCacheInfo {
		return v.CacheInfos
	}).(GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput)
}

func (o GetGitopsClusterRequestClusterInfoOutput) ConnectionStates() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) []GetGitopsClusterRequestClusterInfoConnectionState {
		return v.ConnectionStates
	}).(GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput)
}

func (o GetGitopsClusterRequestClusterInfoOutput) ServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfo) string { return v.ServerVersion }).(pulumi.StringOutput)
}

type GetGitopsClusterRequestClusterInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoArrayOutput() GetGitopsClusterRequestClusterInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfo {
		return vs[0].([]GetGitopsClusterRequestClusterInfo)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoOutput)
}

type GetGitopsClusterRequestClusterInfoCacheInfo struct {
	ApisCount         *string `pulumi:"apisCount"`
	LastCacheSyncTime *string `pulumi:"lastCacheSyncTime"`
	ResourcesCount    *string `pulumi:"resourcesCount"`
}

// GetGitopsClusterRequestClusterInfoCacheInfoInput is an input type that accepts GetGitopsClusterRequestClusterInfoCacheInfoArgs and GetGitopsClusterRequestClusterInfoCacheInfoOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoCacheInfoInput` via:
//
//	GetGitopsClusterRequestClusterInfoCacheInfoArgs{...}
type GetGitopsClusterRequestClusterInfoCacheInfoInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoCacheInfoOutput() GetGitopsClusterRequestClusterInfoCacheInfoOutput
	ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoCacheInfoOutput
}

type GetGitopsClusterRequestClusterInfoCacheInfoArgs struct {
	ApisCount         pulumi.StringPtrInput `pulumi:"apisCount"`
	LastCacheSyncTime pulumi.StringPtrInput `pulumi:"lastCacheSyncTime"`
	ResourcesCount    pulumi.StringPtrInput `pulumi:"resourcesCount"`
}

func (GetGitopsClusterRequestClusterInfoCacheInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArgs) ToGetGitopsClusterRequestClusterInfoCacheInfoOutput() GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return i.ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArgs) ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoCacheInfoOutput)
}

// GetGitopsClusterRequestClusterInfoCacheInfoArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoCacheInfoArray and GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoCacheInfoArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoCacheInfoArray{ GetGitopsClusterRequestClusterInfoCacheInfoArgs{...} }
type GetGitopsClusterRequestClusterInfoCacheInfoArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutput() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput
	ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput
}

type GetGitopsClusterRequestClusterInfoCacheInfoArray []GetGitopsClusterRequestClusterInfoCacheInfoInput

func (GetGitopsClusterRequestClusterInfoCacheInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArray) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutput() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoCacheInfoArray) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput)
}

type GetGitopsClusterRequestClusterInfoCacheInfoOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoCacheInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoOutput() GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ApisCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoCacheInfo) *string { return v.ApisCount }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) LastCacheSyncTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoCacheInfo) *string { return v.LastCacheSyncTime }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoOutput) ResourcesCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoCacheInfo) *string { return v.ResourcesCount }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoCacheInfo)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutput() GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) ToGetGitopsClusterRequestClusterInfoCacheInfoArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoCacheInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfoCacheInfo {
		return vs[0].([]GetGitopsClusterRequestClusterInfoCacheInfo)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoCacheInfoOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionState struct {
	AttemptedAts []GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt `pulumi:"attemptedAts"`
	Message      string                                                         `pulumi:"message"`
	Status       string                                                         `pulumi:"status"`
}

// GetGitopsClusterRequestClusterInfoConnectionStateInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateArgs and GetGitopsClusterRequestClusterInfoConnectionStateOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateArgs{...}
type GetGitopsClusterRequestClusterInfoConnectionStateInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateOutput() GetGitopsClusterRequestClusterInfoConnectionStateOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateArgs struct {
	AttemptedAts GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput `pulumi:"attemptedAts"`
	Message      pulumi.StringInput                                                     `pulumi:"message"`
	Status       pulumi.StringInput                                                     `pulumi:"status"`
}

func (GetGitopsClusterRequestClusterInfoConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateOutput() GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateOutput)
}

// GetGitopsClusterRequestClusterInfoConnectionStateArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateArray and GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateArray{ GetGitopsClusterRequestClusterInfoConnectionStateArgs{...} }
type GetGitopsClusterRequestClusterInfoConnectionStateArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateArray []GetGitopsClusterRequestClusterInfoConnectionStateInput

func (GetGitopsClusterRequestClusterInfoConnectionStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArray) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateArray) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateOutput() GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) AttemptedAts() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionState) []GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt {
		return v.AttemptedAts
	}).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput)
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionState) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionState) string { return v.Status }).(pulumi.StringOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionState)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoConnectionStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfoConnectionState {
		return vs[0].([]GetGitopsClusterRequestClusterInfoConnectionState)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoConnectionStateOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt struct {
	Nanos   *int    `pulumi:"nanos"`
	Seconds *string `pulumi:"seconds"`
}

// GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs and GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{...}
type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs struct {
	Nanos   pulumi.IntPtrInput    `pulumi:"nanos"`
	Seconds pulumi.StringPtrInput `pulumi:"seconds"`
}

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput)
}

// GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput is an input type that accepts GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray and GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput` via:
//
//	GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray{ GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{...} }
type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput
	ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray []GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return i.ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput) Seconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt) *string { return v.Seconds }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput() GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) ToGetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt {
		return vs[0].([]GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAt)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput)
}

type GetGitopsClusterRequestClusterRefreshRequestedAt struct {
	Nanos   *int    `pulumi:"nanos"`
	Seconds *string `pulumi:"seconds"`
}

// GetGitopsClusterRequestClusterRefreshRequestedAtInput is an input type that accepts GetGitopsClusterRequestClusterRefreshRequestedAtArgs and GetGitopsClusterRequestClusterRefreshRequestedAtOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterRefreshRequestedAtInput` via:
//
//	GetGitopsClusterRequestClusterRefreshRequestedAtArgs{...}
type GetGitopsClusterRequestClusterRefreshRequestedAtInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterRefreshRequestedAtOutput() GetGitopsClusterRequestClusterRefreshRequestedAtOutput
	ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtOutput
}

type GetGitopsClusterRequestClusterRefreshRequestedAtArgs struct {
	Nanos   pulumi.IntPtrInput    `pulumi:"nanos"`
	Seconds pulumi.StringPtrInput `pulumi:"seconds"`
}

func (GetGitopsClusterRequestClusterRefreshRequestedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArgs) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutput() GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return i.ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArgs) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterRefreshRequestedAtOutput)
}

// GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput is an input type that accepts GetGitopsClusterRequestClusterRefreshRequestedAtArray and GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput` via:
//
//	GetGitopsClusterRequestClusterRefreshRequestedAtArray{ GetGitopsClusterRequestClusterRefreshRequestedAtArgs{...} }
type GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput
	ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput
}

type GetGitopsClusterRequestClusterRefreshRequestedAtArray []GetGitopsClusterRequestClusterRefreshRequestedAtInput

func (GetGitopsClusterRequestClusterRefreshRequestedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArray) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return i.ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestClusterRefreshRequestedAtArray) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput)
}

type GetGitopsClusterRequestClusterRefreshRequestedAtOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterRefreshRequestedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutput() GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) Nanos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterRefreshRequestedAt) *int { return v.Nanos }).(pulumi.IntPtrOutput)
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtOutput) Seconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestClusterRefreshRequestedAt) *string { return v.Seconds }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestClusterRefreshRequestedAt)(nil)).Elem()
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput() GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) ToGetGitopsClusterRequestClusterRefreshRequestedAtArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput {
	return o
}

func (o GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestClusterRefreshRequestedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestClusterRefreshRequestedAt {
		return vs[0].([]GetGitopsClusterRequestClusterRefreshRequestedAt)[vs[1].(int)]
	}).(GetGitopsClusterRequestClusterRefreshRequestedAtOutput)
}

type GetGitopsClusterRequestId struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// GetGitopsClusterRequestIdInput is an input type that accepts GetGitopsClusterRequestIdArgs and GetGitopsClusterRequestIdOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestIdInput` via:
//
//	GetGitopsClusterRequestIdArgs{...}
type GetGitopsClusterRequestIdInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestIdOutput() GetGitopsClusterRequestIdOutput
	ToGetGitopsClusterRequestIdOutputWithContext(context.Context) GetGitopsClusterRequestIdOutput
}

type GetGitopsClusterRequestIdArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetGitopsClusterRequestIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestId)(nil)).Elem()
}

func (i GetGitopsClusterRequestIdArgs) ToGetGitopsClusterRequestIdOutput() GetGitopsClusterRequestIdOutput {
	return i.ToGetGitopsClusterRequestIdOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestIdArgs) ToGetGitopsClusterRequestIdOutputWithContext(ctx context.Context) GetGitopsClusterRequestIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestIdOutput)
}

// GetGitopsClusterRequestIdArrayInput is an input type that accepts GetGitopsClusterRequestIdArray and GetGitopsClusterRequestIdArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestIdArrayInput` via:
//
//	GetGitopsClusterRequestIdArray{ GetGitopsClusterRequestIdArgs{...} }
type GetGitopsClusterRequestIdArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestIdArrayOutput() GetGitopsClusterRequestIdArrayOutput
	ToGetGitopsClusterRequestIdArrayOutputWithContext(context.Context) GetGitopsClusterRequestIdArrayOutput
}

type GetGitopsClusterRequestIdArray []GetGitopsClusterRequestIdInput

func (GetGitopsClusterRequestIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestId)(nil)).Elem()
}

func (i GetGitopsClusterRequestIdArray) ToGetGitopsClusterRequestIdArrayOutput() GetGitopsClusterRequestIdArrayOutput {
	return i.ToGetGitopsClusterRequestIdArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestIdArray) ToGetGitopsClusterRequestIdArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestIdArrayOutput)
}

type GetGitopsClusterRequestIdOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestId)(nil)).Elem()
}

func (o GetGitopsClusterRequestIdOutput) ToGetGitopsClusterRequestIdOutput() GetGitopsClusterRequestIdOutput {
	return o
}

func (o GetGitopsClusterRequestIdOutput) ToGetGitopsClusterRequestIdOutputWithContext(ctx context.Context) GetGitopsClusterRequestIdOutput {
	return o
}

func (o GetGitopsClusterRequestIdOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestId) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetGitopsClusterRequestIdOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestId) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetGitopsClusterRequestIdArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestId)(nil)).Elem()
}

func (o GetGitopsClusterRequestIdArrayOutput) ToGetGitopsClusterRequestIdArrayOutput() GetGitopsClusterRequestIdArrayOutput {
	return o
}

func (o GetGitopsClusterRequestIdArrayOutput) ToGetGitopsClusterRequestIdArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestIdArrayOutput {
	return o
}

func (o GetGitopsClusterRequestIdArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestId {
		return vs[0].([]GetGitopsClusterRequestId)[vs[1].(int)]
	}).(GetGitopsClusterRequestIdOutput)
}

type GetGitopsClusterRequestUpdateMask struct {
	Paths [][]interface{} `pulumi:"paths"`
}

// GetGitopsClusterRequestUpdateMaskInput is an input type that accepts GetGitopsClusterRequestUpdateMaskArgs and GetGitopsClusterRequestUpdateMaskOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestUpdateMaskInput` via:
//
//	GetGitopsClusterRequestUpdateMaskArgs{...}
type GetGitopsClusterRequestUpdateMaskInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestUpdateMaskOutput() GetGitopsClusterRequestUpdateMaskOutput
	ToGetGitopsClusterRequestUpdateMaskOutputWithContext(context.Context) GetGitopsClusterRequestUpdateMaskOutput
}

type GetGitopsClusterRequestUpdateMaskArgs struct {
	Paths pulumi.ArrayArrayInput `pulumi:"paths"`
}

func (GetGitopsClusterRequestUpdateMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestUpdateMask)(nil)).Elem()
}

func (i GetGitopsClusterRequestUpdateMaskArgs) ToGetGitopsClusterRequestUpdateMaskOutput() GetGitopsClusterRequestUpdateMaskOutput {
	return i.ToGetGitopsClusterRequestUpdateMaskOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestUpdateMaskArgs) ToGetGitopsClusterRequestUpdateMaskOutputWithContext(ctx context.Context) GetGitopsClusterRequestUpdateMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestUpdateMaskOutput)
}

// GetGitopsClusterRequestUpdateMaskArrayInput is an input type that accepts GetGitopsClusterRequestUpdateMaskArray and GetGitopsClusterRequestUpdateMaskArrayOutput values.
// You can construct a concrete instance of `GetGitopsClusterRequestUpdateMaskArrayInput` via:
//
//	GetGitopsClusterRequestUpdateMaskArray{ GetGitopsClusterRequestUpdateMaskArgs{...} }
type GetGitopsClusterRequestUpdateMaskArrayInput interface {
	pulumi.Input

	ToGetGitopsClusterRequestUpdateMaskArrayOutput() GetGitopsClusterRequestUpdateMaskArrayOutput
	ToGetGitopsClusterRequestUpdateMaskArrayOutputWithContext(context.Context) GetGitopsClusterRequestUpdateMaskArrayOutput
}

type GetGitopsClusterRequestUpdateMaskArray []GetGitopsClusterRequestUpdateMaskInput

func (GetGitopsClusterRequestUpdateMaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestUpdateMask)(nil)).Elem()
}

func (i GetGitopsClusterRequestUpdateMaskArray) ToGetGitopsClusterRequestUpdateMaskArrayOutput() GetGitopsClusterRequestUpdateMaskArrayOutput {
	return i.ToGetGitopsClusterRequestUpdateMaskArrayOutputWithContext(context.Background())
}

func (i GetGitopsClusterRequestUpdateMaskArray) ToGetGitopsClusterRequestUpdateMaskArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestUpdateMaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsClusterRequestUpdateMaskArrayOutput)
}

type GetGitopsClusterRequestUpdateMaskOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestUpdateMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsClusterRequestUpdateMask)(nil)).Elem()
}

func (o GetGitopsClusterRequestUpdateMaskOutput) ToGetGitopsClusterRequestUpdateMaskOutput() GetGitopsClusterRequestUpdateMaskOutput {
	return o
}

func (o GetGitopsClusterRequestUpdateMaskOutput) ToGetGitopsClusterRequestUpdateMaskOutputWithContext(ctx context.Context) GetGitopsClusterRequestUpdateMaskOutput {
	return o
}

func (o GetGitopsClusterRequestUpdateMaskOutput) Paths() pulumi.ArrayArrayOutput {
	return o.ApplyT(func(v GetGitopsClusterRequestUpdateMask) [][]interface{} { return v.Paths }).(pulumi.ArrayArrayOutput)
}

type GetGitopsClusterRequestUpdateMaskArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsClusterRequestUpdateMaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsClusterRequestUpdateMask)(nil)).Elem()
}

func (o GetGitopsClusterRequestUpdateMaskArrayOutput) ToGetGitopsClusterRequestUpdateMaskArrayOutput() GetGitopsClusterRequestUpdateMaskArrayOutput {
	return o
}

func (o GetGitopsClusterRequestUpdateMaskArrayOutput) ToGetGitopsClusterRequestUpdateMaskArrayOutputWithContext(ctx context.Context) GetGitopsClusterRequestUpdateMaskArrayOutput {
	return o
}

func (o GetGitopsClusterRequestUpdateMaskArrayOutput) Index(i pulumi.IntInput) GetGitopsClusterRequestUpdateMaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsClusterRequestUpdateMask {
		return vs[0].([]GetGitopsClusterRequestUpdateMask)[vs[1].(int)]
	}).(GetGitopsClusterRequestUpdateMaskOutput)
}

type GetGitopsGnupgRequest struct {
	// Public key details.
	Publickeys []GetGitopsGnupgRequestPublickey `pulumi:"publickeys"`
	// Indicates if the GnuPG Key should be inserted if not present or updated if present.
	Upsert *bool `pulumi:"upsert"`
}

// GetGitopsGnupgRequestInput is an input type that accepts GetGitopsGnupgRequestArgs and GetGitopsGnupgRequestOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestInput` via:
//
//	GetGitopsGnupgRequestArgs{...}
type GetGitopsGnupgRequestInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestOutput() GetGitopsGnupgRequestOutput
	ToGetGitopsGnupgRequestOutputWithContext(context.Context) GetGitopsGnupgRequestOutput
}

type GetGitopsGnupgRequestArgs struct {
	// Public key details.
	Publickeys GetGitopsGnupgRequestPublickeyArrayInput `pulumi:"publickeys"`
	// Indicates if the GnuPG Key should be inserted if not present or updated if present.
	Upsert pulumi.BoolPtrInput `pulumi:"upsert"`
}

func (GetGitopsGnupgRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequest)(nil)).Elem()
}

func (i GetGitopsGnupgRequestArgs) ToGetGitopsGnupgRequestOutput() GetGitopsGnupgRequestOutput {
	return i.ToGetGitopsGnupgRequestOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestArgs) ToGetGitopsGnupgRequestOutputWithContext(ctx context.Context) GetGitopsGnupgRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestOutput)
}

// GetGitopsGnupgRequestArrayInput is an input type that accepts GetGitopsGnupgRequestArray and GetGitopsGnupgRequestArrayOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestArrayInput` via:
//
//	GetGitopsGnupgRequestArray{ GetGitopsGnupgRequestArgs{...} }
type GetGitopsGnupgRequestArrayInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestArrayOutput() GetGitopsGnupgRequestArrayOutput
	ToGetGitopsGnupgRequestArrayOutputWithContext(context.Context) GetGitopsGnupgRequestArrayOutput
}

type GetGitopsGnupgRequestArray []GetGitopsGnupgRequestInput

func (GetGitopsGnupgRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequest)(nil)).Elem()
}

func (i GetGitopsGnupgRequestArray) ToGetGitopsGnupgRequestArrayOutput() GetGitopsGnupgRequestArrayOutput {
	return i.ToGetGitopsGnupgRequestArrayOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestArray) ToGetGitopsGnupgRequestArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestArrayOutput)
}

type GetGitopsGnupgRequestOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequest)(nil)).Elem()
}

func (o GetGitopsGnupgRequestOutput) ToGetGitopsGnupgRequestOutput() GetGitopsGnupgRequestOutput {
	return o
}

func (o GetGitopsGnupgRequestOutput) ToGetGitopsGnupgRequestOutputWithContext(ctx context.Context) GetGitopsGnupgRequestOutput {
	return o
}

// Public key details.
func (o GetGitopsGnupgRequestOutput) Publickeys() GetGitopsGnupgRequestPublickeyArrayOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequest) []GetGitopsGnupgRequestPublickey { return v.Publickeys }).(GetGitopsGnupgRequestPublickeyArrayOutput)
}

// Indicates if the GnuPG Key should be inserted if not present or updated if present.
func (o GetGitopsGnupgRequestOutput) Upsert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequest) *bool { return v.Upsert }).(pulumi.BoolPtrOutput)
}

type GetGitopsGnupgRequestArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequest)(nil)).Elem()
}

func (o GetGitopsGnupgRequestArrayOutput) ToGetGitopsGnupgRequestArrayOutput() GetGitopsGnupgRequestArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestArrayOutput) ToGetGitopsGnupgRequestArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestArrayOutput) Index(i pulumi.IntInput) GetGitopsGnupgRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsGnupgRequest {
		return vs[0].([]GetGitopsGnupgRequest)[vs[1].(int)]
	}).(GetGitopsGnupgRequestOutput)
}

type GetGitopsGnupgRequestPublickey struct {
	Fingerprint *string `pulumi:"fingerprint"`
	KeyData     *string `pulumi:"keyData"`
	KeyId       *string `pulumi:"keyId"`
	Owner       *string `pulumi:"owner"`
	SubType     *string `pulumi:"subType"`
	Trust       *string `pulumi:"trust"`
}

// GetGitopsGnupgRequestPublickeyInput is an input type that accepts GetGitopsGnupgRequestPublickeyArgs and GetGitopsGnupgRequestPublickeyOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestPublickeyInput` via:
//
//	GetGitopsGnupgRequestPublickeyArgs{...}
type GetGitopsGnupgRequestPublickeyInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestPublickeyOutput() GetGitopsGnupgRequestPublickeyOutput
	ToGetGitopsGnupgRequestPublickeyOutputWithContext(context.Context) GetGitopsGnupgRequestPublickeyOutput
}

type GetGitopsGnupgRequestPublickeyArgs struct {
	Fingerprint pulumi.StringPtrInput `pulumi:"fingerprint"`
	KeyData     pulumi.StringPtrInput `pulumi:"keyData"`
	KeyId       pulumi.StringPtrInput `pulumi:"keyId"`
	Owner       pulumi.StringPtrInput `pulumi:"owner"`
	SubType     pulumi.StringPtrInput `pulumi:"subType"`
	Trust       pulumi.StringPtrInput `pulumi:"trust"`
}

func (GetGitopsGnupgRequestPublickeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (i GetGitopsGnupgRequestPublickeyArgs) ToGetGitopsGnupgRequestPublickeyOutput() GetGitopsGnupgRequestPublickeyOutput {
	return i.ToGetGitopsGnupgRequestPublickeyOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestPublickeyArgs) ToGetGitopsGnupgRequestPublickeyOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestPublickeyOutput)
}

// GetGitopsGnupgRequestPublickeyArrayInput is an input type that accepts GetGitopsGnupgRequestPublickeyArray and GetGitopsGnupgRequestPublickeyArrayOutput values.
// You can construct a concrete instance of `GetGitopsGnupgRequestPublickeyArrayInput` via:
//
//	GetGitopsGnupgRequestPublickeyArray{ GetGitopsGnupgRequestPublickeyArgs{...} }
type GetGitopsGnupgRequestPublickeyArrayInput interface {
	pulumi.Input

	ToGetGitopsGnupgRequestPublickeyArrayOutput() GetGitopsGnupgRequestPublickeyArrayOutput
	ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(context.Context) GetGitopsGnupgRequestPublickeyArrayOutput
}

type GetGitopsGnupgRequestPublickeyArray []GetGitopsGnupgRequestPublickeyInput

func (GetGitopsGnupgRequestPublickeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (i GetGitopsGnupgRequestPublickeyArray) ToGetGitopsGnupgRequestPublickeyArrayOutput() GetGitopsGnupgRequestPublickeyArrayOutput {
	return i.ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(context.Background())
}

func (i GetGitopsGnupgRequestPublickeyArray) ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsGnupgRequestPublickeyArrayOutput)
}

type GetGitopsGnupgRequestPublickeyOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestPublickeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (o GetGitopsGnupgRequestPublickeyOutput) ToGetGitopsGnupgRequestPublickeyOutput() GetGitopsGnupgRequestPublickeyOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyOutput) ToGetGitopsGnupgRequestPublickeyOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyOutput) Fingerprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.Fingerprint }).(pulumi.StringPtrOutput)
}

func (o GetGitopsGnupgRequestPublickeyOutput) KeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.KeyData }).(pulumi.StringPtrOutput)
}

func (o GetGitopsGnupgRequestPublickeyOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

func (o GetGitopsGnupgRequestPublickeyOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o GetGitopsGnupgRequestPublickeyOutput) SubType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.SubType }).(pulumi.StringPtrOutput)
}

func (o GetGitopsGnupgRequestPublickeyOutput) Trust() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsGnupgRequestPublickey) *string { return v.Trust }).(pulumi.StringPtrOutput)
}

type GetGitopsGnupgRequestPublickeyArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsGnupgRequestPublickeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsGnupgRequestPublickey)(nil)).Elem()
}

func (o GetGitopsGnupgRequestPublickeyArrayOutput) ToGetGitopsGnupgRequestPublickeyArrayOutput() GetGitopsGnupgRequestPublickeyArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyArrayOutput) ToGetGitopsGnupgRequestPublickeyArrayOutputWithContext(ctx context.Context) GetGitopsGnupgRequestPublickeyArrayOutput {
	return o
}

func (o GetGitopsGnupgRequestPublickeyArrayOutput) Index(i pulumi.IntInput) GetGitopsGnupgRequestPublickeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsGnupgRequestPublickey {
		return vs[0].([]GetGitopsGnupgRequestPublickey)[vs[1].(int)]
	}).(GetGitopsGnupgRequestPublickeyOutput)
}

type GetGitopsRepoCredCred struct {
	// Specifies whether helm-oci support should be enabled for this repo.
	EnableOci *bool `pulumi:"enableOci"`
	// Specifies the GitHub API URL for GitHub app authentication.
	GithubAppEnterpriseBaseUrl *string `pulumi:"githubAppEnterpriseBaseUrl"`
	// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
	GithubAppId *string `pulumi:"githubAppId"`
	// Specifies the ID of the installed GitHub App for GitHub app authentication.
	GithubAppInstallationId *string `pulumi:"githubAppInstallationId"`
	// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
	GithubAppPrivateKey *string `pulumi:"githubAppPrivateKey"`
	// Password for authenticating at the repo server.
	Password *string `pulumi:"password"`
	// Contains the private key data for authenticating at the repo server using SSH (only Git repos).
	SshPrivateKey *string `pulumi:"sshPrivateKey"`
	// Specifies the TLS client cert data for authenticating at the repo server.
	TlsClientCertData *string `pulumi:"tlsClientCertData"`
	// Specifies the TLS client cert key for authenticating at the repo server.
	TlsClientCertKey *string `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
	Type *string `pulumi:"type"`
	// url representing this object.
	Url *string `pulumi:"url"`
	// Username for authenticating at the repo server.
	Username *string `pulumi:"username"`
}

// GetGitopsRepoCredCredInput is an input type that accepts GetGitopsRepoCredCredArgs and GetGitopsRepoCredCredOutput values.
// You can construct a concrete instance of `GetGitopsRepoCredCredInput` via:
//
//	GetGitopsRepoCredCredArgs{...}
type GetGitopsRepoCredCredInput interface {
	pulumi.Input

	ToGetGitopsRepoCredCredOutput() GetGitopsRepoCredCredOutput
	ToGetGitopsRepoCredCredOutputWithContext(context.Context) GetGitopsRepoCredCredOutput
}

type GetGitopsRepoCredCredArgs struct {
	// Specifies whether helm-oci support should be enabled for this repo.
	EnableOci pulumi.BoolPtrInput `pulumi:"enableOci"`
	// Specifies the GitHub API URL for GitHub app authentication.
	GithubAppEnterpriseBaseUrl pulumi.StringPtrInput `pulumi:"githubAppEnterpriseBaseUrl"`
	// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
	GithubAppId pulumi.StringPtrInput `pulumi:"githubAppId"`
	// Specifies the ID of the installed GitHub App for GitHub app authentication.
	GithubAppInstallationId pulumi.StringPtrInput `pulumi:"githubAppInstallationId"`
	// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
	GithubAppPrivateKey pulumi.StringPtrInput `pulumi:"githubAppPrivateKey"`
	// Password for authenticating at the repo server.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Contains the private key data for authenticating at the repo server using SSH (only Git repos).
	SshPrivateKey pulumi.StringPtrInput `pulumi:"sshPrivateKey"`
	// Specifies the TLS client cert data for authenticating at the repo server.
	TlsClientCertData pulumi.StringPtrInput `pulumi:"tlsClientCertData"`
	// Specifies the TLS client cert key for authenticating at the repo server.
	TlsClientCertKey pulumi.StringPtrInput `pulumi:"tlsClientCertKey"`
	// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
	Type pulumi.StringPtrInput `pulumi:"type"`
	// url representing this object.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// Username for authenticating at the repo server.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (GetGitopsRepoCredCredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepoCredCred)(nil)).Elem()
}

func (i GetGitopsRepoCredCredArgs) ToGetGitopsRepoCredCredOutput() GetGitopsRepoCredCredOutput {
	return i.ToGetGitopsRepoCredCredOutputWithContext(context.Background())
}

func (i GetGitopsRepoCredCredArgs) ToGetGitopsRepoCredCredOutputWithContext(ctx context.Context) GetGitopsRepoCredCredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepoCredCredOutput)
}

// GetGitopsRepoCredCredArrayInput is an input type that accepts GetGitopsRepoCredCredArray and GetGitopsRepoCredCredArrayOutput values.
// You can construct a concrete instance of `GetGitopsRepoCredCredArrayInput` via:
//
//	GetGitopsRepoCredCredArray{ GetGitopsRepoCredCredArgs{...} }
type GetGitopsRepoCredCredArrayInput interface {
	pulumi.Input

	ToGetGitopsRepoCredCredArrayOutput() GetGitopsRepoCredCredArrayOutput
	ToGetGitopsRepoCredCredArrayOutputWithContext(context.Context) GetGitopsRepoCredCredArrayOutput
}

type GetGitopsRepoCredCredArray []GetGitopsRepoCredCredInput

func (GetGitopsRepoCredCredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepoCredCred)(nil)).Elem()
}

func (i GetGitopsRepoCredCredArray) ToGetGitopsRepoCredCredArrayOutput() GetGitopsRepoCredCredArrayOutput {
	return i.ToGetGitopsRepoCredCredArrayOutputWithContext(context.Background())
}

func (i GetGitopsRepoCredCredArray) ToGetGitopsRepoCredCredArrayOutputWithContext(ctx context.Context) GetGitopsRepoCredCredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepoCredCredArrayOutput)
}

type GetGitopsRepoCredCredOutput struct{ *pulumi.OutputState }

func (GetGitopsRepoCredCredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepoCredCred)(nil)).Elem()
}

func (o GetGitopsRepoCredCredOutput) ToGetGitopsRepoCredCredOutput() GetGitopsRepoCredCredOutput {
	return o
}

func (o GetGitopsRepoCredCredOutput) ToGetGitopsRepoCredCredOutputWithContext(ctx context.Context) GetGitopsRepoCredCredOutput {
	return o
}

// Specifies whether helm-oci support should be enabled for this repo.
func (o GetGitopsRepoCredCredOutput) EnableOci() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *bool { return v.EnableOci }).(pulumi.BoolPtrOutput)
}

// Specifies the GitHub API URL for GitHub app authentication.
func (o GetGitopsRepoCredCredOutput) GithubAppEnterpriseBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.GithubAppEnterpriseBaseUrl }).(pulumi.StringPtrOutput)
}

// Specifies the Github App ID of the app used to access the repo for GitHub app authentication.
func (o GetGitopsRepoCredCredOutput) GithubAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.GithubAppId }).(pulumi.StringPtrOutput)
}

// Specifies the ID of the installed GitHub App for GitHub app authentication.
func (o GetGitopsRepoCredCredOutput) GithubAppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.GithubAppInstallationId }).(pulumi.StringPtrOutput)
}

// github*app*private_key specifies the private key PEM data for authentication via GitHub app.
func (o GetGitopsRepoCredCredOutput) GithubAppPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.GithubAppPrivateKey }).(pulumi.StringPtrOutput)
}

// Password for authenticating at the repo server.
func (o GetGitopsRepoCredCredOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Contains the private key data for authenticating at the repo server using SSH (only Git repos).
func (o GetGitopsRepoCredCredOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.SshPrivateKey }).(pulumi.StringPtrOutput)
}

// Specifies the TLS client cert data for authenticating at the repo server.
func (o GetGitopsRepoCredCredOutput) TlsClientCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.TlsClientCertData }).(pulumi.StringPtrOutput)
}

// Specifies the TLS client cert key for authenticating at the repo server.
func (o GetGitopsRepoCredCredOutput) TlsClientCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.TlsClientCertKey }).(pulumi.StringPtrOutput)
}

// Type specifies the type of the repoCreds.Can be either 'git' or 'helm. 'git' is assumed if empty or absent
func (o GetGitopsRepoCredCredOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// url representing this object.
func (o GetGitopsRepoCredCredOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// Username for authenticating at the repo server.
func (o GetGitopsRepoCredCredOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepoCredCred) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGitopsRepoCredCredArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsRepoCredCredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepoCredCred)(nil)).Elem()
}

func (o GetGitopsRepoCredCredArrayOutput) ToGetGitopsRepoCredCredArrayOutput() GetGitopsRepoCredCredArrayOutput {
	return o
}

func (o GetGitopsRepoCredCredArrayOutput) ToGetGitopsRepoCredCredArrayOutputWithContext(ctx context.Context) GetGitopsRepoCredCredArrayOutput {
	return o
}

func (o GetGitopsRepoCredCredArrayOutput) Index(i pulumi.IntInput) GetGitopsRepoCredCredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsRepoCredCred {
		return vs[0].([]GetGitopsRepoCredCred)[vs[1].(int)]
	}).(GetGitopsRepoCredCredOutput)
}

type GetGitopsRepositoryRepo struct {
	ConnectionType             *string `pulumi:"connectionType"`
	EnableLfs                  *bool   `pulumi:"enableLfs"`
	EnableOci                  *bool   `pulumi:"enableOci"`
	GithubAppEnterpriseBaseUrl *string `pulumi:"githubAppEnterpriseBaseUrl"`
	GithubAppId                *string `pulumi:"githubAppId"`
	GithubAppInstallationId    *string `pulumi:"githubAppInstallationId"`
	GithubAppPrivateKey        *string `pulumi:"githubAppPrivateKey"`
	InheritedCreds             *bool   `pulumi:"inheritedCreds"`
	Insecure                   *bool   `pulumi:"insecure"`
	InsecureIgnoreHostKey      *bool   `pulumi:"insecureIgnoreHostKey"`
	Name                       *string `pulumi:"name"`
	Password                   *string `pulumi:"password"`
	Project                    string  `pulumi:"project"`
	Proxy                      *string `pulumi:"proxy"`
	// Repo details holding application configurations.
	Repo              *string `pulumi:"repo"`
	SshPrivateKey     *string `pulumi:"sshPrivateKey"`
	TlsClientCertData *string `pulumi:"tlsClientCertData"`
	TlsClientCertKey  *string `pulumi:"tlsClientCertKey"`
	Type_             string  `pulumi:"type_"`
	Username          *string `pulumi:"username"`
}

// GetGitopsRepositoryRepoInput is an input type that accepts GetGitopsRepositoryRepoArgs and GetGitopsRepositoryRepoOutput values.
// You can construct a concrete instance of `GetGitopsRepositoryRepoInput` via:
//
//	GetGitopsRepositoryRepoArgs{...}
type GetGitopsRepositoryRepoInput interface {
	pulumi.Input

	ToGetGitopsRepositoryRepoOutput() GetGitopsRepositoryRepoOutput
	ToGetGitopsRepositoryRepoOutputWithContext(context.Context) GetGitopsRepositoryRepoOutput
}

type GetGitopsRepositoryRepoArgs struct {
	ConnectionType             pulumi.StringPtrInput `pulumi:"connectionType"`
	EnableLfs                  pulumi.BoolPtrInput   `pulumi:"enableLfs"`
	EnableOci                  pulumi.BoolPtrInput   `pulumi:"enableOci"`
	GithubAppEnterpriseBaseUrl pulumi.StringPtrInput `pulumi:"githubAppEnterpriseBaseUrl"`
	GithubAppId                pulumi.StringPtrInput `pulumi:"githubAppId"`
	GithubAppInstallationId    pulumi.StringPtrInput `pulumi:"githubAppInstallationId"`
	GithubAppPrivateKey        pulumi.StringPtrInput `pulumi:"githubAppPrivateKey"`
	InheritedCreds             pulumi.BoolPtrInput   `pulumi:"inheritedCreds"`
	Insecure                   pulumi.BoolPtrInput   `pulumi:"insecure"`
	InsecureIgnoreHostKey      pulumi.BoolPtrInput   `pulumi:"insecureIgnoreHostKey"`
	Name                       pulumi.StringPtrInput `pulumi:"name"`
	Password                   pulumi.StringPtrInput `pulumi:"password"`
	Project                    pulumi.StringInput    `pulumi:"project"`
	Proxy                      pulumi.StringPtrInput `pulumi:"proxy"`
	// Repo details holding application configurations.
	Repo              pulumi.StringPtrInput `pulumi:"repo"`
	SshPrivateKey     pulumi.StringPtrInput `pulumi:"sshPrivateKey"`
	TlsClientCertData pulumi.StringPtrInput `pulumi:"tlsClientCertData"`
	TlsClientCertKey  pulumi.StringPtrInput `pulumi:"tlsClientCertKey"`
	Type_             pulumi.StringInput    `pulumi:"type_"`
	Username          pulumi.StringPtrInput `pulumi:"username"`
}

func (GetGitopsRepositoryRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepositoryRepo)(nil)).Elem()
}

func (i GetGitopsRepositoryRepoArgs) ToGetGitopsRepositoryRepoOutput() GetGitopsRepositoryRepoOutput {
	return i.ToGetGitopsRepositoryRepoOutputWithContext(context.Background())
}

func (i GetGitopsRepositoryRepoArgs) ToGetGitopsRepositoryRepoOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepositoryRepoOutput)
}

// GetGitopsRepositoryRepoArrayInput is an input type that accepts GetGitopsRepositoryRepoArray and GetGitopsRepositoryRepoArrayOutput values.
// You can construct a concrete instance of `GetGitopsRepositoryRepoArrayInput` via:
//
//	GetGitopsRepositoryRepoArray{ GetGitopsRepositoryRepoArgs{...} }
type GetGitopsRepositoryRepoArrayInput interface {
	pulumi.Input

	ToGetGitopsRepositoryRepoArrayOutput() GetGitopsRepositoryRepoArrayOutput
	ToGetGitopsRepositoryRepoArrayOutputWithContext(context.Context) GetGitopsRepositoryRepoArrayOutput
}

type GetGitopsRepositoryRepoArray []GetGitopsRepositoryRepoInput

func (GetGitopsRepositoryRepoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepositoryRepo)(nil)).Elem()
}

func (i GetGitopsRepositoryRepoArray) ToGetGitopsRepositoryRepoArrayOutput() GetGitopsRepositoryRepoArrayOutput {
	return i.ToGetGitopsRepositoryRepoArrayOutputWithContext(context.Background())
}

func (i GetGitopsRepositoryRepoArray) ToGetGitopsRepositoryRepoArrayOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepositoryRepoArrayOutput)
}

type GetGitopsRepositoryRepoOutput struct{ *pulumi.OutputState }

func (GetGitopsRepositoryRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepositoryRepo)(nil)).Elem()
}

func (o GetGitopsRepositoryRepoOutput) ToGetGitopsRepositoryRepoOutput() GetGitopsRepositoryRepoOutput {
	return o
}

func (o GetGitopsRepositoryRepoOutput) ToGetGitopsRepositoryRepoOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoOutput {
	return o
}

func (o GetGitopsRepositoryRepoOutput) ConnectionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.ConnectionType }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) EnableLfs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *bool { return v.EnableLfs }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) EnableOci() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *bool { return v.EnableOci }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) GithubAppEnterpriseBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.GithubAppEnterpriseBaseUrl }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) GithubAppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.GithubAppId }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) GithubAppInstallationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.GithubAppInstallationId }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) GithubAppPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.GithubAppPrivateKey }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) InheritedCreds() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *bool { return v.InheritedCreds }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) InsecureIgnoreHostKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *bool { return v.InsecureIgnoreHostKey }).(pulumi.BoolPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetGitopsRepositoryRepoOutput) Proxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.Proxy }).(pulumi.StringPtrOutput)
}

// Repo details holding application configurations.
func (o GetGitopsRepositoryRepoOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) SshPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.SshPrivateKey }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) TlsClientCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.TlsClientCertData }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) TlsClientCertKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.TlsClientCertKey }).(pulumi.StringPtrOutput)
}

func (o GetGitopsRepositoryRepoOutput) Type_() pulumi.StringOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) string { return v.Type_ }).(pulumi.StringOutput)
}

func (o GetGitopsRepositoryRepoOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGitopsRepositoryRepo) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type GetGitopsRepositoryRepoArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsRepositoryRepoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepositoryRepo)(nil)).Elem()
}

func (o GetGitopsRepositoryRepoArrayOutput) ToGetGitopsRepositoryRepoArrayOutput() GetGitopsRepositoryRepoArrayOutput {
	return o
}

func (o GetGitopsRepositoryRepoArrayOutput) ToGetGitopsRepositoryRepoArrayOutputWithContext(ctx context.Context) GetGitopsRepositoryRepoArrayOutput {
	return o
}

func (o GetGitopsRepositoryRepoArrayOutput) Index(i pulumi.IntInput) GetGitopsRepositoryRepoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsRepositoryRepo {
		return vs[0].([]GetGitopsRepositoryRepo)[vs[1].(int)]
	}).(GetGitopsRepositoryRepoOutput)
}

type GetGitopsRepositoryUpdateMask struct {
	// The set of field mask paths.
	Paths []string `pulumi:"paths"`
}

// GetGitopsRepositoryUpdateMaskInput is an input type that accepts GetGitopsRepositoryUpdateMaskArgs and GetGitopsRepositoryUpdateMaskOutput values.
// You can construct a concrete instance of `GetGitopsRepositoryUpdateMaskInput` via:
//
//	GetGitopsRepositoryUpdateMaskArgs{...}
type GetGitopsRepositoryUpdateMaskInput interface {
	pulumi.Input

	ToGetGitopsRepositoryUpdateMaskOutput() GetGitopsRepositoryUpdateMaskOutput
	ToGetGitopsRepositoryUpdateMaskOutputWithContext(context.Context) GetGitopsRepositoryUpdateMaskOutput
}

type GetGitopsRepositoryUpdateMaskArgs struct {
	// The set of field mask paths.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
}

func (GetGitopsRepositoryUpdateMaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepositoryUpdateMask)(nil)).Elem()
}

func (i GetGitopsRepositoryUpdateMaskArgs) ToGetGitopsRepositoryUpdateMaskOutput() GetGitopsRepositoryUpdateMaskOutput {
	return i.ToGetGitopsRepositoryUpdateMaskOutputWithContext(context.Background())
}

func (i GetGitopsRepositoryUpdateMaskArgs) ToGetGitopsRepositoryUpdateMaskOutputWithContext(ctx context.Context) GetGitopsRepositoryUpdateMaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepositoryUpdateMaskOutput)
}

// GetGitopsRepositoryUpdateMaskArrayInput is an input type that accepts GetGitopsRepositoryUpdateMaskArray and GetGitopsRepositoryUpdateMaskArrayOutput values.
// You can construct a concrete instance of `GetGitopsRepositoryUpdateMaskArrayInput` via:
//
//	GetGitopsRepositoryUpdateMaskArray{ GetGitopsRepositoryUpdateMaskArgs{...} }
type GetGitopsRepositoryUpdateMaskArrayInput interface {
	pulumi.Input

	ToGetGitopsRepositoryUpdateMaskArrayOutput() GetGitopsRepositoryUpdateMaskArrayOutput
	ToGetGitopsRepositoryUpdateMaskArrayOutputWithContext(context.Context) GetGitopsRepositoryUpdateMaskArrayOutput
}

type GetGitopsRepositoryUpdateMaskArray []GetGitopsRepositoryUpdateMaskInput

func (GetGitopsRepositoryUpdateMaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepositoryUpdateMask)(nil)).Elem()
}

func (i GetGitopsRepositoryUpdateMaskArray) ToGetGitopsRepositoryUpdateMaskArrayOutput() GetGitopsRepositoryUpdateMaskArrayOutput {
	return i.ToGetGitopsRepositoryUpdateMaskArrayOutputWithContext(context.Background())
}

func (i GetGitopsRepositoryUpdateMaskArray) ToGetGitopsRepositoryUpdateMaskArrayOutputWithContext(ctx context.Context) GetGitopsRepositoryUpdateMaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGitopsRepositoryUpdateMaskArrayOutput)
}

type GetGitopsRepositoryUpdateMaskOutput struct{ *pulumi.OutputState }

func (GetGitopsRepositoryUpdateMaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGitopsRepositoryUpdateMask)(nil)).Elem()
}

func (o GetGitopsRepositoryUpdateMaskOutput) ToGetGitopsRepositoryUpdateMaskOutput() GetGitopsRepositoryUpdateMaskOutput {
	return o
}

func (o GetGitopsRepositoryUpdateMaskOutput) ToGetGitopsRepositoryUpdateMaskOutputWithContext(ctx context.Context) GetGitopsRepositoryUpdateMaskOutput {
	return o
}

// The set of field mask paths.
func (o GetGitopsRepositoryUpdateMaskOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGitopsRepositoryUpdateMask) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

type GetGitopsRepositoryUpdateMaskArrayOutput struct{ *pulumi.OutputState }

func (GetGitopsRepositoryUpdateMaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGitopsRepositoryUpdateMask)(nil)).Elem()
}

func (o GetGitopsRepositoryUpdateMaskArrayOutput) ToGetGitopsRepositoryUpdateMaskArrayOutput() GetGitopsRepositoryUpdateMaskArrayOutput {
	return o
}

func (o GetGitopsRepositoryUpdateMaskArrayOutput) ToGetGitopsRepositoryUpdateMaskArrayOutputWithContext(ctx context.Context) GetGitopsRepositoryUpdateMaskArrayOutput {
	return o
}

func (o GetGitopsRepositoryUpdateMaskArrayOutput) Index(i pulumi.IntInput) GetGitopsRepositoryUpdateMaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGitopsRepositoryUpdateMask {
		return vs[0].([]GetGitopsRepositoryUpdateMask)[vs[1].(int)]
	}).(GetGitopsRepositoryUpdateMaskOutput)
}

type GetHelmConnectorCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetHelmConnectorCredentialInput is an input type that accepts GetHelmConnectorCredentialArgs and GetHelmConnectorCredentialOutput values.
// You can construct a concrete instance of `GetHelmConnectorCredentialInput` via:
//
//	GetHelmConnectorCredentialArgs{...}
type GetHelmConnectorCredentialInput interface {
	pulumi.Input

	ToGetHelmConnectorCredentialOutput() GetHelmConnectorCredentialOutput
	ToGetHelmConnectorCredentialOutputWithContext(context.Context) GetHelmConnectorCredentialOutput
}

type GetHelmConnectorCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetHelmConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmConnectorCredential)(nil)).Elem()
}

func (i GetHelmConnectorCredentialArgs) ToGetHelmConnectorCredentialOutput() GetHelmConnectorCredentialOutput {
	return i.ToGetHelmConnectorCredentialOutputWithContext(context.Background())
}

func (i GetHelmConnectorCredentialArgs) ToGetHelmConnectorCredentialOutputWithContext(ctx context.Context) GetHelmConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmConnectorCredentialOutput)
}

// GetHelmConnectorCredentialArrayInput is an input type that accepts GetHelmConnectorCredentialArray and GetHelmConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetHelmConnectorCredentialArrayInput` via:
//
//	GetHelmConnectorCredentialArray{ GetHelmConnectorCredentialArgs{...} }
type GetHelmConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetHelmConnectorCredentialArrayOutput() GetHelmConnectorCredentialArrayOutput
	ToGetHelmConnectorCredentialArrayOutputWithContext(context.Context) GetHelmConnectorCredentialArrayOutput
}

type GetHelmConnectorCredentialArray []GetHelmConnectorCredentialInput

func (GetHelmConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmConnectorCredential)(nil)).Elem()
}

func (i GetHelmConnectorCredentialArray) ToGetHelmConnectorCredentialArrayOutput() GetHelmConnectorCredentialArrayOutput {
	return i.ToGetHelmConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetHelmConnectorCredentialArray) ToGetHelmConnectorCredentialArrayOutputWithContext(ctx context.Context) GetHelmConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHelmConnectorCredentialArrayOutput)
}

type GetHelmConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetHelmConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHelmConnectorCredential)(nil)).Elem()
}

func (o GetHelmConnectorCredentialOutput) ToGetHelmConnectorCredentialOutput() GetHelmConnectorCredentialOutput {
	return o
}

func (o GetHelmConnectorCredentialOutput) ToGetHelmConnectorCredentialOutputWithContext(ctx context.Context) GetHelmConnectorCredentialOutput {
	return o
}

func (o GetHelmConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetHelmConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetHelmConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetHelmConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetHelmConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetHelmConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHelmConnectorCredential)(nil)).Elem()
}

func (o GetHelmConnectorCredentialArrayOutput) ToGetHelmConnectorCredentialArrayOutput() GetHelmConnectorCredentialArrayOutput {
	return o
}

func (o GetHelmConnectorCredentialArrayOutput) ToGetHelmConnectorCredentialArrayOutputWithContext(ctx context.Context) GetHelmConnectorCredentialArrayOutput {
	return o
}

func (o GetHelmConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetHelmConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHelmConnectorCredential {
		return vs[0].([]GetHelmConnectorCredential)[vs[1].(int)]
	}).(GetHelmConnectorCredentialOutput)
}

type GetInputSetGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId string `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline).
	ParentEntityConnectorRef string `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName string `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType string `pulumi:"storeType"`
}

// GetInputSetGitDetailsInput is an input type that accepts GetInputSetGitDetailsArgs and GetInputSetGitDetailsOutput values.
// You can construct a concrete instance of `GetInputSetGitDetailsInput` via:
//
//	GetInputSetGitDetailsArgs{...}
type GetInputSetGitDetailsInput interface {
	pulumi.Input

	ToGetInputSetGitDetailsOutput() GetInputSetGitDetailsOutput
	ToGetInputSetGitDetailsOutputWithContext(context.Context) GetInputSetGitDetailsOutput
}

type GetInputSetGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringInput `pulumi:"lastObjectId"`
	// Connector reference for Parent Entity (Pipeline).
	ParentEntityConnectorRef pulumi.StringInput `pulumi:"parentEntityConnectorRef"`
	// Repository name for Parent Entity (Pipeline).
	ParentEntityRepoName pulumi.StringInput `pulumi:"parentEntityRepoName"`
	// Name of the repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringInput `pulumi:"storeType"`
}

func (GetInputSetGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInputSetGitDetails)(nil)).Elem()
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsOutput() GetInputSetGitDetailsOutput {
	return i.ToGetInputSetGitDetailsOutputWithContext(context.Background())
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsOutputWithContext(ctx context.Context) GetInputSetGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInputSetGitDetailsOutput)
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return i.ToGetInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetInputSetGitDetailsArgs) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInputSetGitDetailsOutput).ToGetInputSetGitDetailsPtrOutputWithContext(ctx)
}

// GetInputSetGitDetailsPtrInput is an input type that accepts GetInputSetGitDetailsArgs, GetInputSetGitDetailsPtr and GetInputSetGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetInputSetGitDetailsPtrInput` via:
//
//	        GetInputSetGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetInputSetGitDetailsPtrInput interface {
	pulumi.Input

	ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput
	ToGetInputSetGitDetailsPtrOutputWithContext(context.Context) GetInputSetGitDetailsPtrOutput
}

type getInputSetGitDetailsPtrType GetInputSetGitDetailsArgs

func GetInputSetGitDetailsPtr(v *GetInputSetGitDetailsArgs) GetInputSetGitDetailsPtrInput {
	return (*getInputSetGitDetailsPtrType)(v)
}

func (*getInputSetGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInputSetGitDetails)(nil)).Elem()
}

func (i *getInputSetGitDetailsPtrType) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return i.ToGetInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getInputSetGitDetailsPtrType) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInputSetGitDetailsPtrOutput)
}

type GetInputSetGitDetailsOutput struct{ *pulumi.OutputState }

func (GetInputSetGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInputSetGitDetails)(nil)).Elem()
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsOutput() GetInputSetGitDetailsOutput {
	return o
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsOutputWithContext(ctx context.Context) GetInputSetGitDetailsOutput {
	return o
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return o.ToGetInputSetGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetInputSetGitDetailsOutput) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetInputSetGitDetails) *GetInputSetGitDetails {
		return &v
	}).(GetInputSetGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetInputSetGitDetailsOutput) BaseBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.BaseBranch }).(pulumi.StringOutput)
}

// Name of the branch.
func (o GetInputSetGitDetailsOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.BranchName }).(pulumi.StringOutput)
}

// Commit message used for the merge commit.
func (o GetInputSetGitDetailsOutput) CommitMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.CommitMessage }).(pulumi.StringOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetInputSetGitDetailsOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// File path of the Entity in the repository.
func (o GetInputSetGitDetailsOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.FilePath }).(pulumi.StringOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsOutput) LastCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.LastCommitId }).(pulumi.StringOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsOutput) LastObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.LastObjectId }).(pulumi.StringOutput)
}

// Connector reference for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsOutput) ParentEntityConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.ParentEntityConnectorRef }).(pulumi.StringOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsOutput) ParentEntityRepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.ParentEntityRepoName }).(pulumi.StringOutput)
}

// Name of the repository.
func (o GetInputSetGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetInputSetGitDetailsOutput) StoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInputSetGitDetails) string { return v.StoreType }).(pulumi.StringOutput)
}

type GetInputSetGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetInputSetGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetInputSetGitDetails)(nil)).Elem()
}

func (o GetInputSetGitDetailsPtrOutput) ToGetInputSetGitDetailsPtrOutput() GetInputSetGitDetailsPtrOutput {
	return o
}

func (o GetInputSetGitDetailsPtrOutput) ToGetInputSetGitDetailsPtrOutputWithContext(ctx context.Context) GetInputSetGitDetailsPtrOutput {
	return o
}

func (o GetInputSetGitDetailsPtrOutput) Elem() GetInputSetGitDetailsOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) GetInputSetGitDetails {
		if v != nil {
			return *v
		}
		var ret GetInputSetGitDetails
		return ret
	}).(GetInputSetGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetInputSetGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o GetInputSetGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o GetInputSetGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetInputSetGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetInputSetGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetInputSetGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Connector reference for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsPtrOutput) ParentEntityConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ParentEntityConnectorRef
	}).(pulumi.StringPtrOutput)
}

// Repository name for Parent Entity (Pipeline).
func (o GetInputSetGitDetailsPtrOutput) ParentEntityRepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ParentEntityRepoName
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o GetInputSetGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetInputSetGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetInputSetGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StoreType
	}).(pulumi.StringPtrOutput)
}

type GetJiraConnectorAuth struct {
	AuthType          string                                 `pulumi:"authType"`
	UsernamePasswords []GetJiraConnectorAuthUsernamePassword `pulumi:"usernamePasswords"`
}

// GetJiraConnectorAuthInput is an input type that accepts GetJiraConnectorAuthArgs and GetJiraConnectorAuthOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthInput` via:
//
//	GetJiraConnectorAuthArgs{...}
type GetJiraConnectorAuthInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthOutput() GetJiraConnectorAuthOutput
	ToGetJiraConnectorAuthOutputWithContext(context.Context) GetJiraConnectorAuthOutput
}

type GetJiraConnectorAuthArgs struct {
	AuthType          pulumi.StringInput                             `pulumi:"authType"`
	UsernamePasswords GetJiraConnectorAuthUsernamePasswordArrayInput `pulumi:"usernamePasswords"`
}

func (GetJiraConnectorAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuth)(nil)).Elem()
}

func (i GetJiraConnectorAuthArgs) ToGetJiraConnectorAuthOutput() GetJiraConnectorAuthOutput {
	return i.ToGetJiraConnectorAuthOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthArgs) ToGetJiraConnectorAuthOutputWithContext(ctx context.Context) GetJiraConnectorAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthOutput)
}

// GetJiraConnectorAuthArrayInput is an input type that accepts GetJiraConnectorAuthArray and GetJiraConnectorAuthArrayOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthArrayInput` via:
//
//	GetJiraConnectorAuthArray{ GetJiraConnectorAuthArgs{...} }
type GetJiraConnectorAuthArrayInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthArrayOutput() GetJiraConnectorAuthArrayOutput
	ToGetJiraConnectorAuthArrayOutputWithContext(context.Context) GetJiraConnectorAuthArrayOutput
}

type GetJiraConnectorAuthArray []GetJiraConnectorAuthInput

func (GetJiraConnectorAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuth)(nil)).Elem()
}

func (i GetJiraConnectorAuthArray) ToGetJiraConnectorAuthArrayOutput() GetJiraConnectorAuthArrayOutput {
	return i.ToGetJiraConnectorAuthArrayOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthArray) ToGetJiraConnectorAuthArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthArrayOutput)
}

type GetJiraConnectorAuthOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuth)(nil)).Elem()
}

func (o GetJiraConnectorAuthOutput) ToGetJiraConnectorAuthOutput() GetJiraConnectorAuthOutput {
	return o
}

func (o GetJiraConnectorAuthOutput) ToGetJiraConnectorAuthOutputWithContext(ctx context.Context) GetJiraConnectorAuthOutput {
	return o
}

func (o GetJiraConnectorAuthOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuth) string { return v.AuthType }).(pulumi.StringOutput)
}

func (o GetJiraConnectorAuthOutput) UsernamePasswords() GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return o.ApplyT(func(v GetJiraConnectorAuth) []GetJiraConnectorAuthUsernamePassword { return v.UsernamePasswords }).(GetJiraConnectorAuthUsernamePasswordArrayOutput)
}

type GetJiraConnectorAuthArrayOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuth)(nil)).Elem()
}

func (o GetJiraConnectorAuthArrayOutput) ToGetJiraConnectorAuthArrayOutput() GetJiraConnectorAuthArrayOutput {
	return o
}

func (o GetJiraConnectorAuthArrayOutput) ToGetJiraConnectorAuthArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthArrayOutput {
	return o
}

func (o GetJiraConnectorAuthArrayOutput) Index(i pulumi.IntInput) GetJiraConnectorAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJiraConnectorAuth {
		return vs[0].([]GetJiraConnectorAuth)[vs[1].(int)]
	}).(GetJiraConnectorAuthOutput)
}

type GetJiraConnectorAuthUsernamePassword struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef string `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username string `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef string `pulumi:"usernameRef"`
}

// GetJiraConnectorAuthUsernamePasswordInput is an input type that accepts GetJiraConnectorAuthUsernamePasswordArgs and GetJiraConnectorAuthUsernamePasswordOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthUsernamePasswordInput` via:
//
//	GetJiraConnectorAuthUsernamePasswordArgs{...}
type GetJiraConnectorAuthUsernamePasswordInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthUsernamePasswordOutput() GetJiraConnectorAuthUsernamePasswordOutput
	ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(context.Context) GetJiraConnectorAuthUsernamePasswordOutput
}

type GetJiraConnectorAuthUsernamePasswordArgs struct {
	// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	// Username to use for authentication.
	Username pulumi.StringInput `pulumi:"username"`
	// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetJiraConnectorAuthUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i GetJiraConnectorAuthUsernamePasswordArgs) ToGetJiraConnectorAuthUsernamePasswordOutput() GetJiraConnectorAuthUsernamePasswordOutput {
	return i.ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthUsernamePasswordArgs) ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthUsernamePasswordOutput)
}

// GetJiraConnectorAuthUsernamePasswordArrayInput is an input type that accepts GetJiraConnectorAuthUsernamePasswordArray and GetJiraConnectorAuthUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetJiraConnectorAuthUsernamePasswordArrayInput` via:
//
//	GetJiraConnectorAuthUsernamePasswordArray{ GetJiraConnectorAuthUsernamePasswordArgs{...} }
type GetJiraConnectorAuthUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetJiraConnectorAuthUsernamePasswordArrayOutput() GetJiraConnectorAuthUsernamePasswordArrayOutput
	ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(context.Context) GetJiraConnectorAuthUsernamePasswordArrayOutput
}

type GetJiraConnectorAuthUsernamePasswordArray []GetJiraConnectorAuthUsernamePasswordInput

func (GetJiraConnectorAuthUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (i GetJiraConnectorAuthUsernamePasswordArray) ToGetJiraConnectorAuthUsernamePasswordArrayOutput() GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return i.ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetJiraConnectorAuthUsernamePasswordArray) ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetJiraConnectorAuthUsernamePasswordArrayOutput)
}

type GetJiraConnectorAuthUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o GetJiraConnectorAuthUsernamePasswordOutput) ToGetJiraConnectorAuthUsernamePasswordOutput() GetJiraConnectorAuthUsernamePasswordOutput {
	return o
}

func (o GetJiraConnectorAuthUsernamePasswordOutput) ToGetJiraConnectorAuthUsernamePasswordOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordOutput {
	return o
}

// Reference to a secret containing the password to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJiraConnectorAuthUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

// Username to use for authentication.
func (o GetJiraConnectorAuthUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

// Reference to a secret containing the username to use for authentication. To reference a secret at the organization scope, prefix 'org' to the expression: org.{identifier}. To reference a secret at the account scope, prefix 'account` to the expression: account.{identifier}.
func (o GetJiraConnectorAuthUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetJiraConnectorAuthUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetJiraConnectorAuthUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetJiraConnectorAuthUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetJiraConnectorAuthUsernamePassword)(nil)).Elem()
}

func (o GetJiraConnectorAuthUsernamePasswordArrayOutput) ToGetJiraConnectorAuthUsernamePasswordArrayOutput() GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetJiraConnectorAuthUsernamePasswordArrayOutput) ToGetJiraConnectorAuthUsernamePasswordArrayOutputWithContext(ctx context.Context) GetJiraConnectorAuthUsernamePasswordArrayOutput {
	return o
}

func (o GetJiraConnectorAuthUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetJiraConnectorAuthUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetJiraConnectorAuthUsernamePassword {
		return vs[0].([]GetJiraConnectorAuthUsernamePassword)[vs[1].(int)]
	}).(GetJiraConnectorAuthUsernamePasswordOutput)
}

type GetKubernetesConnectorClientKeyCert struct {
	CaCertRef              string `pulumi:"caCertRef"`
	ClientCertRef          string `pulumi:"clientCertRef"`
	ClientKeyAlgorithm     string `pulumi:"clientKeyAlgorithm"`
	ClientKeyPassphraseRef string `pulumi:"clientKeyPassphraseRef"`
	ClientKeyRef           string `pulumi:"clientKeyRef"`
	MasterUrl              string `pulumi:"masterUrl"`
}

// GetKubernetesConnectorClientKeyCertInput is an input type that accepts GetKubernetesConnectorClientKeyCertArgs and GetKubernetesConnectorClientKeyCertOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorClientKeyCertInput` via:
//
//	GetKubernetesConnectorClientKeyCertArgs{...}
type GetKubernetesConnectorClientKeyCertInput interface {
	pulumi.Input

	ToGetKubernetesConnectorClientKeyCertOutput() GetKubernetesConnectorClientKeyCertOutput
	ToGetKubernetesConnectorClientKeyCertOutputWithContext(context.Context) GetKubernetesConnectorClientKeyCertOutput
}

type GetKubernetesConnectorClientKeyCertArgs struct {
	CaCertRef              pulumi.StringInput `pulumi:"caCertRef"`
	ClientCertRef          pulumi.StringInput `pulumi:"clientCertRef"`
	ClientKeyAlgorithm     pulumi.StringInput `pulumi:"clientKeyAlgorithm"`
	ClientKeyPassphraseRef pulumi.StringInput `pulumi:"clientKeyPassphraseRef"`
	ClientKeyRef           pulumi.StringInput `pulumi:"clientKeyRef"`
	MasterUrl              pulumi.StringInput `pulumi:"masterUrl"`
}

func (GetKubernetesConnectorClientKeyCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i GetKubernetesConnectorClientKeyCertArgs) ToGetKubernetesConnectorClientKeyCertOutput() GetKubernetesConnectorClientKeyCertOutput {
	return i.ToGetKubernetesConnectorClientKeyCertOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorClientKeyCertArgs) ToGetKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorClientKeyCertOutput)
}

// GetKubernetesConnectorClientKeyCertArrayInput is an input type that accepts GetKubernetesConnectorClientKeyCertArray and GetKubernetesConnectorClientKeyCertArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorClientKeyCertArrayInput` via:
//
//	GetKubernetesConnectorClientKeyCertArray{ GetKubernetesConnectorClientKeyCertArgs{...} }
type GetKubernetesConnectorClientKeyCertArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorClientKeyCertArrayOutput() GetKubernetesConnectorClientKeyCertArrayOutput
	ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(context.Context) GetKubernetesConnectorClientKeyCertArrayOutput
}

type GetKubernetesConnectorClientKeyCertArray []GetKubernetesConnectorClientKeyCertInput

func (GetKubernetesConnectorClientKeyCertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (i GetKubernetesConnectorClientKeyCertArray) ToGetKubernetesConnectorClientKeyCertArrayOutput() GetKubernetesConnectorClientKeyCertArrayOutput {
	return i.ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorClientKeyCertArray) ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorClientKeyCertArrayOutput)
}

type GetKubernetesConnectorClientKeyCertOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorClientKeyCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o GetKubernetesConnectorClientKeyCertOutput) ToGetKubernetesConnectorClientKeyCertOutput() GetKubernetesConnectorClientKeyCertOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertOutput) ToGetKubernetesConnectorClientKeyCertOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertOutput) CaCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.CaCertRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorClientKeyCertOutput) ClientCertRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientCertRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorClientKeyCertOutput) ClientKeyAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientKeyAlgorithm }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorClientKeyCertOutput) ClientKeyPassphraseRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientKeyPassphraseRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorClientKeyCertOutput) ClientKeyRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.ClientKeyRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorClientKeyCertOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorClientKeyCert) string { return v.MasterUrl }).(pulumi.StringOutput)
}

type GetKubernetesConnectorClientKeyCertArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorClientKeyCertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorClientKeyCert)(nil)).Elem()
}

func (o GetKubernetesConnectorClientKeyCertArrayOutput) ToGetKubernetesConnectorClientKeyCertArrayOutput() GetKubernetesConnectorClientKeyCertArrayOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertArrayOutput) ToGetKubernetesConnectorClientKeyCertArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorClientKeyCertArrayOutput {
	return o
}

func (o GetKubernetesConnectorClientKeyCertArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorClientKeyCertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorClientKeyCert {
		return vs[0].([]GetKubernetesConnectorClientKeyCert)[vs[1].(int)]
	}).(GetKubernetesConnectorClientKeyCertOutput)
}

type GetKubernetesConnectorInheritFromDelegate struct {
	// Selectors to use for the delegate.
	DelegateSelectors []string `pulumi:"delegateSelectors"`
}

// GetKubernetesConnectorInheritFromDelegateInput is an input type that accepts GetKubernetesConnectorInheritFromDelegateArgs and GetKubernetesConnectorInheritFromDelegateOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorInheritFromDelegateInput` via:
//
//	GetKubernetesConnectorInheritFromDelegateArgs{...}
type GetKubernetesConnectorInheritFromDelegateInput interface {
	pulumi.Input

	ToGetKubernetesConnectorInheritFromDelegateOutput() GetKubernetesConnectorInheritFromDelegateOutput
	ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(context.Context) GetKubernetesConnectorInheritFromDelegateOutput
}

type GetKubernetesConnectorInheritFromDelegateArgs struct {
	// Selectors to use for the delegate.
	DelegateSelectors pulumi.StringArrayInput `pulumi:"delegateSelectors"`
}

func (GetKubernetesConnectorInheritFromDelegateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetKubernetesConnectorInheritFromDelegateArgs) ToGetKubernetesConnectorInheritFromDelegateOutput() GetKubernetesConnectorInheritFromDelegateOutput {
	return i.ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorInheritFromDelegateArgs) ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorInheritFromDelegateOutput)
}

// GetKubernetesConnectorInheritFromDelegateArrayInput is an input type that accepts GetKubernetesConnectorInheritFromDelegateArray and GetKubernetesConnectorInheritFromDelegateArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorInheritFromDelegateArrayInput` via:
//
//	GetKubernetesConnectorInheritFromDelegateArray{ GetKubernetesConnectorInheritFromDelegateArgs{...} }
type GetKubernetesConnectorInheritFromDelegateArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorInheritFromDelegateArrayOutput() GetKubernetesConnectorInheritFromDelegateArrayOutput
	ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(context.Context) GetKubernetesConnectorInheritFromDelegateArrayOutput
}

type GetKubernetesConnectorInheritFromDelegateArray []GetKubernetesConnectorInheritFromDelegateInput

func (GetKubernetesConnectorInheritFromDelegateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (i GetKubernetesConnectorInheritFromDelegateArray) ToGetKubernetesConnectorInheritFromDelegateArrayOutput() GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return i.ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorInheritFromDelegateArray) ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorInheritFromDelegateArrayOutput)
}

type GetKubernetesConnectorInheritFromDelegateOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorInheritFromDelegateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetKubernetesConnectorInheritFromDelegateOutput) ToGetKubernetesConnectorInheritFromDelegateOutput() GetKubernetesConnectorInheritFromDelegateOutput {
	return o
}

func (o GetKubernetesConnectorInheritFromDelegateOutput) ToGetKubernetesConnectorInheritFromDelegateOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateOutput {
	return o
}

// Selectors to use for the delegate.
func (o GetKubernetesConnectorInheritFromDelegateOutput) DelegateSelectors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesConnectorInheritFromDelegate) []string { return v.DelegateSelectors }).(pulumi.StringArrayOutput)
}

type GetKubernetesConnectorInheritFromDelegateArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorInheritFromDelegateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorInheritFromDelegate)(nil)).Elem()
}

func (o GetKubernetesConnectorInheritFromDelegateArrayOutput) ToGetKubernetesConnectorInheritFromDelegateArrayOutput() GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetKubernetesConnectorInheritFromDelegateArrayOutput) ToGetKubernetesConnectorInheritFromDelegateArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorInheritFromDelegateArrayOutput {
	return o
}

func (o GetKubernetesConnectorInheritFromDelegateArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorInheritFromDelegateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorInheritFromDelegate {
		return vs[0].([]GetKubernetesConnectorInheritFromDelegate)[vs[1].(int)]
	}).(GetKubernetesConnectorInheritFromDelegateOutput)
}

type GetKubernetesConnectorOpenidConnect struct {
	ClientIdRef string   `pulumi:"clientIdRef"`
	IssuerUrl   string   `pulumi:"issuerUrl"`
	MasterUrl   string   `pulumi:"masterUrl"`
	PasswordRef string   `pulumi:"passwordRef"`
	Scopes      []string `pulumi:"scopes"`
	SecretRef   string   `pulumi:"secretRef"`
	Username    string   `pulumi:"username"`
	UsernameRef string   `pulumi:"usernameRef"`
}

// GetKubernetesConnectorOpenidConnectInput is an input type that accepts GetKubernetesConnectorOpenidConnectArgs and GetKubernetesConnectorOpenidConnectOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorOpenidConnectInput` via:
//
//	GetKubernetesConnectorOpenidConnectArgs{...}
type GetKubernetesConnectorOpenidConnectInput interface {
	pulumi.Input

	ToGetKubernetesConnectorOpenidConnectOutput() GetKubernetesConnectorOpenidConnectOutput
	ToGetKubernetesConnectorOpenidConnectOutputWithContext(context.Context) GetKubernetesConnectorOpenidConnectOutput
}

type GetKubernetesConnectorOpenidConnectArgs struct {
	ClientIdRef pulumi.StringInput      `pulumi:"clientIdRef"`
	IssuerUrl   pulumi.StringInput      `pulumi:"issuerUrl"`
	MasterUrl   pulumi.StringInput      `pulumi:"masterUrl"`
	PasswordRef pulumi.StringInput      `pulumi:"passwordRef"`
	Scopes      pulumi.StringArrayInput `pulumi:"scopes"`
	SecretRef   pulumi.StringInput      `pulumi:"secretRef"`
	Username    pulumi.StringInput      `pulumi:"username"`
	UsernameRef pulumi.StringInput      `pulumi:"usernameRef"`
}

func (GetKubernetesConnectorOpenidConnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i GetKubernetesConnectorOpenidConnectArgs) ToGetKubernetesConnectorOpenidConnectOutput() GetKubernetesConnectorOpenidConnectOutput {
	return i.ToGetKubernetesConnectorOpenidConnectOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorOpenidConnectArgs) ToGetKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorOpenidConnectOutput)
}

// GetKubernetesConnectorOpenidConnectArrayInput is an input type that accepts GetKubernetesConnectorOpenidConnectArray and GetKubernetesConnectorOpenidConnectArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorOpenidConnectArrayInput` via:
//
//	GetKubernetesConnectorOpenidConnectArray{ GetKubernetesConnectorOpenidConnectArgs{...} }
type GetKubernetesConnectorOpenidConnectArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorOpenidConnectArrayOutput() GetKubernetesConnectorOpenidConnectArrayOutput
	ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(context.Context) GetKubernetesConnectorOpenidConnectArrayOutput
}

type GetKubernetesConnectorOpenidConnectArray []GetKubernetesConnectorOpenidConnectInput

func (GetKubernetesConnectorOpenidConnectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (i GetKubernetesConnectorOpenidConnectArray) ToGetKubernetesConnectorOpenidConnectArrayOutput() GetKubernetesConnectorOpenidConnectArrayOutput {
	return i.ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorOpenidConnectArray) ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorOpenidConnectArrayOutput)
}

type GetKubernetesConnectorOpenidConnectOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorOpenidConnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o GetKubernetesConnectorOpenidConnectOutput) ToGetKubernetesConnectorOpenidConnectOutput() GetKubernetesConnectorOpenidConnectOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectOutput) ToGetKubernetesConnectorOpenidConnectOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectOutput) ClientIdRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.ClientIdRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) IssuerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.IssuerUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.MasterUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) SecretRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.SecretRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorOpenidConnectOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorOpenidConnect) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetKubernetesConnectorOpenidConnectArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorOpenidConnectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorOpenidConnect)(nil)).Elem()
}

func (o GetKubernetesConnectorOpenidConnectArrayOutput) ToGetKubernetesConnectorOpenidConnectArrayOutput() GetKubernetesConnectorOpenidConnectArrayOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectArrayOutput) ToGetKubernetesConnectorOpenidConnectArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorOpenidConnectArrayOutput {
	return o
}

func (o GetKubernetesConnectorOpenidConnectArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorOpenidConnectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorOpenidConnect {
		return vs[0].([]GetKubernetesConnectorOpenidConnect)[vs[1].(int)]
	}).(GetKubernetesConnectorOpenidConnectOutput)
}

type GetKubernetesConnectorServiceAccount struct {
	MasterUrl              string `pulumi:"masterUrl"`
	ServiceAccountTokenRef string `pulumi:"serviceAccountTokenRef"`
}

// GetKubernetesConnectorServiceAccountInput is an input type that accepts GetKubernetesConnectorServiceAccountArgs and GetKubernetesConnectorServiceAccountOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorServiceAccountInput` via:
//
//	GetKubernetesConnectorServiceAccountArgs{...}
type GetKubernetesConnectorServiceAccountInput interface {
	pulumi.Input

	ToGetKubernetesConnectorServiceAccountOutput() GetKubernetesConnectorServiceAccountOutput
	ToGetKubernetesConnectorServiceAccountOutputWithContext(context.Context) GetKubernetesConnectorServiceAccountOutput
}

type GetKubernetesConnectorServiceAccountArgs struct {
	MasterUrl              pulumi.StringInput `pulumi:"masterUrl"`
	ServiceAccountTokenRef pulumi.StringInput `pulumi:"serviceAccountTokenRef"`
}

func (GetKubernetesConnectorServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i GetKubernetesConnectorServiceAccountArgs) ToGetKubernetesConnectorServiceAccountOutput() GetKubernetesConnectorServiceAccountOutput {
	return i.ToGetKubernetesConnectorServiceAccountOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorServiceAccountArgs) ToGetKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorServiceAccountOutput)
}

// GetKubernetesConnectorServiceAccountArrayInput is an input type that accepts GetKubernetesConnectorServiceAccountArray and GetKubernetesConnectorServiceAccountArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorServiceAccountArrayInput` via:
//
//	GetKubernetesConnectorServiceAccountArray{ GetKubernetesConnectorServiceAccountArgs{...} }
type GetKubernetesConnectorServiceAccountArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorServiceAccountArrayOutput() GetKubernetesConnectorServiceAccountArrayOutput
	ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(context.Context) GetKubernetesConnectorServiceAccountArrayOutput
}

type GetKubernetesConnectorServiceAccountArray []GetKubernetesConnectorServiceAccountInput

func (GetKubernetesConnectorServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (i GetKubernetesConnectorServiceAccountArray) ToGetKubernetesConnectorServiceAccountArrayOutput() GetKubernetesConnectorServiceAccountArrayOutput {
	return i.ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorServiceAccountArray) ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorServiceAccountArrayOutput)
}

type GetKubernetesConnectorServiceAccountOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o GetKubernetesConnectorServiceAccountOutput) ToGetKubernetesConnectorServiceAccountOutput() GetKubernetesConnectorServiceAccountOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountOutput) ToGetKubernetesConnectorServiceAccountOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorServiceAccount) string { return v.MasterUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorServiceAccountOutput) ServiceAccountTokenRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorServiceAccount) string { return v.ServiceAccountTokenRef }).(pulumi.StringOutput)
}

type GetKubernetesConnectorServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorServiceAccount)(nil)).Elem()
}

func (o GetKubernetesConnectorServiceAccountArrayOutput) ToGetKubernetesConnectorServiceAccountArrayOutput() GetKubernetesConnectorServiceAccountArrayOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountArrayOutput) ToGetKubernetesConnectorServiceAccountArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorServiceAccountArrayOutput {
	return o
}

func (o GetKubernetesConnectorServiceAccountArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorServiceAccount {
		return vs[0].([]GetKubernetesConnectorServiceAccount)[vs[1].(int)]
	}).(GetKubernetesConnectorServiceAccountOutput)
}

type GetKubernetesConnectorUsernamePassword struct {
	MasterUrl   string `pulumi:"masterUrl"`
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetKubernetesConnectorUsernamePasswordInput is an input type that accepts GetKubernetesConnectorUsernamePasswordArgs and GetKubernetesConnectorUsernamePasswordOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorUsernamePasswordInput` via:
//
//	GetKubernetesConnectorUsernamePasswordArgs{...}
type GetKubernetesConnectorUsernamePasswordInput interface {
	pulumi.Input

	ToGetKubernetesConnectorUsernamePasswordOutput() GetKubernetesConnectorUsernamePasswordOutput
	ToGetKubernetesConnectorUsernamePasswordOutputWithContext(context.Context) GetKubernetesConnectorUsernamePasswordOutput
}

type GetKubernetesConnectorUsernamePasswordArgs struct {
	MasterUrl   pulumi.StringInput `pulumi:"masterUrl"`
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetKubernetesConnectorUsernamePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i GetKubernetesConnectorUsernamePasswordArgs) ToGetKubernetesConnectorUsernamePasswordOutput() GetKubernetesConnectorUsernamePasswordOutput {
	return i.ToGetKubernetesConnectorUsernamePasswordOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorUsernamePasswordArgs) ToGetKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorUsernamePasswordOutput)
}

// GetKubernetesConnectorUsernamePasswordArrayInput is an input type that accepts GetKubernetesConnectorUsernamePasswordArray and GetKubernetesConnectorUsernamePasswordArrayOutput values.
// You can construct a concrete instance of `GetKubernetesConnectorUsernamePasswordArrayInput` via:
//
//	GetKubernetesConnectorUsernamePasswordArray{ GetKubernetesConnectorUsernamePasswordArgs{...} }
type GetKubernetesConnectorUsernamePasswordArrayInput interface {
	pulumi.Input

	ToGetKubernetesConnectorUsernamePasswordArrayOutput() GetKubernetesConnectorUsernamePasswordArrayOutput
	ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(context.Context) GetKubernetesConnectorUsernamePasswordArrayOutput
}

type GetKubernetesConnectorUsernamePasswordArray []GetKubernetesConnectorUsernamePasswordInput

func (GetKubernetesConnectorUsernamePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (i GetKubernetesConnectorUsernamePasswordArray) ToGetKubernetesConnectorUsernamePasswordArrayOutput() GetKubernetesConnectorUsernamePasswordArrayOutput {
	return i.ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(context.Background())
}

func (i GetKubernetesConnectorUsernamePasswordArray) ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesConnectorUsernamePasswordArrayOutput)
}

type GetKubernetesConnectorUsernamePasswordOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorUsernamePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o GetKubernetesConnectorUsernamePasswordOutput) ToGetKubernetesConnectorUsernamePasswordOutput() GetKubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordOutput) ToGetKubernetesConnectorUsernamePasswordOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordOutput) MasterUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.MasterUrl }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorUsernamePasswordOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorUsernamePasswordOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetKubernetesConnectorUsernamePasswordOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesConnectorUsernamePassword) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetKubernetesConnectorUsernamePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesConnectorUsernamePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesConnectorUsernamePassword)(nil)).Elem()
}

func (o GetKubernetesConnectorUsernamePasswordArrayOutput) ToGetKubernetesConnectorUsernamePasswordArrayOutput() GetKubernetesConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordArrayOutput) ToGetKubernetesConnectorUsernamePasswordArrayOutputWithContext(ctx context.Context) GetKubernetesConnectorUsernamePasswordArrayOutput {
	return o
}

func (o GetKubernetesConnectorUsernamePasswordArrayOutput) Index(i pulumi.IntInput) GetKubernetesConnectorUsernamePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesConnectorUsernamePassword {
		return vs[0].([]GetKubernetesConnectorUsernamePassword)[vs[1].(int)]
	}).(GetKubernetesConnectorUsernamePasswordOutput)
}

type GetManualFreezeCurrentOrUpcomingWindow struct {
	// End time of the freeze
	EndTime int `pulumi:"endTime"`
	// Start time of the freeze
	StartTime int `pulumi:"startTime"`
}

// GetManualFreezeCurrentOrUpcomingWindowInput is an input type that accepts GetManualFreezeCurrentOrUpcomingWindowArgs and GetManualFreezeCurrentOrUpcomingWindowOutput values.
// You can construct a concrete instance of `GetManualFreezeCurrentOrUpcomingWindowInput` via:
//
//	GetManualFreezeCurrentOrUpcomingWindowArgs{...}
type GetManualFreezeCurrentOrUpcomingWindowInput interface {
	pulumi.Input

	ToGetManualFreezeCurrentOrUpcomingWindowOutput() GetManualFreezeCurrentOrUpcomingWindowOutput
	ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Context) GetManualFreezeCurrentOrUpcomingWindowOutput
}

type GetManualFreezeCurrentOrUpcomingWindowArgs struct {
	// End time of the freeze
	EndTime pulumi.IntInput `pulumi:"endTime"`
	// Start time of the freeze
	StartTime pulumi.IntInput `pulumi:"startTime"`
}

func (GetManualFreezeCurrentOrUpcomingWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i GetManualFreezeCurrentOrUpcomingWindowArgs) ToGetManualFreezeCurrentOrUpcomingWindowOutput() GetManualFreezeCurrentOrUpcomingWindowOutput {
	return i.ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(context.Background())
}

func (i GetManualFreezeCurrentOrUpcomingWindowArgs) ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeCurrentOrUpcomingWindowOutput)
}

// GetManualFreezeCurrentOrUpcomingWindowArrayInput is an input type that accepts GetManualFreezeCurrentOrUpcomingWindowArray and GetManualFreezeCurrentOrUpcomingWindowArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeCurrentOrUpcomingWindowArrayInput` via:
//
//	GetManualFreezeCurrentOrUpcomingWindowArray{ GetManualFreezeCurrentOrUpcomingWindowArgs{...} }
type GetManualFreezeCurrentOrUpcomingWindowArrayInput interface {
	pulumi.Input

	ToGetManualFreezeCurrentOrUpcomingWindowArrayOutput() GetManualFreezeCurrentOrUpcomingWindowArrayOutput
	ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Context) GetManualFreezeCurrentOrUpcomingWindowArrayOutput
}

type GetManualFreezeCurrentOrUpcomingWindowArray []GetManualFreezeCurrentOrUpcomingWindowInput

func (GetManualFreezeCurrentOrUpcomingWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (i GetManualFreezeCurrentOrUpcomingWindowArray) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutput() GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return i.ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeCurrentOrUpcomingWindowArray) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeCurrentOrUpcomingWindowArrayOutput)
}

type GetManualFreezeCurrentOrUpcomingWindowOutput struct{ *pulumi.OutputState }

func (GetManualFreezeCurrentOrUpcomingWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o GetManualFreezeCurrentOrUpcomingWindowOutput) ToGetManualFreezeCurrentOrUpcomingWindowOutput() GetManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

func (o GetManualFreezeCurrentOrUpcomingWindowOutput) ToGetManualFreezeCurrentOrUpcomingWindowOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowOutput {
	return o
}

// End time of the freeze
func (o GetManualFreezeCurrentOrUpcomingWindowOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetManualFreezeCurrentOrUpcomingWindow) int { return v.EndTime }).(pulumi.IntOutput)
}

// Start time of the freeze
func (o GetManualFreezeCurrentOrUpcomingWindowOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetManualFreezeCurrentOrUpcomingWindow) int { return v.StartTime }).(pulumi.IntOutput)
}

type GetManualFreezeCurrentOrUpcomingWindowArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeCurrentOrUpcomingWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeCurrentOrUpcomingWindow)(nil)).Elem()
}

func (o GetManualFreezeCurrentOrUpcomingWindowArrayOutput) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutput() GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o GetManualFreezeCurrentOrUpcomingWindowArrayOutput) ToGetManualFreezeCurrentOrUpcomingWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeCurrentOrUpcomingWindowArrayOutput {
	return o
}

func (o GetManualFreezeCurrentOrUpcomingWindowArrayOutput) Index(i pulumi.IntInput) GetManualFreezeCurrentOrUpcomingWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeCurrentOrUpcomingWindow {
		return vs[0].([]GetManualFreezeCurrentOrUpcomingWindow)[vs[1].(int)]
	}).(GetManualFreezeCurrentOrUpcomingWindowOutput)
}

type GetManualFreezeFreezeWindow struct {
	// Duration of the freeze
	Duration string `pulumi:"duration"`
	// End time of the freeze
	EndTime     string                                  `pulumi:"endTime"`
	Recurrences []GetManualFreezeFreezeWindowRecurrence `pulumi:"recurrences"`
	// Start time of the freeze
	StartTime string `pulumi:"startTime"`
	// Timezone
	TimeZone string `pulumi:"timeZone"`
}

// GetManualFreezeFreezeWindowInput is an input type that accepts GetManualFreezeFreezeWindowArgs and GetManualFreezeFreezeWindowOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowInput` via:
//
//	GetManualFreezeFreezeWindowArgs{...}
type GetManualFreezeFreezeWindowInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowOutput() GetManualFreezeFreezeWindowOutput
	ToGetManualFreezeFreezeWindowOutputWithContext(context.Context) GetManualFreezeFreezeWindowOutput
}

type GetManualFreezeFreezeWindowArgs struct {
	// Duration of the freeze
	Duration pulumi.StringInput `pulumi:"duration"`
	// End time of the freeze
	EndTime     pulumi.StringInput                              `pulumi:"endTime"`
	Recurrences GetManualFreezeFreezeWindowRecurrenceArrayInput `pulumi:"recurrences"`
	// Start time of the freeze
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Timezone
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (GetManualFreezeFreezeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowArgs) ToGetManualFreezeFreezeWindowOutput() GetManualFreezeFreezeWindowOutput {
	return i.ToGetManualFreezeFreezeWindowOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowArgs) ToGetManualFreezeFreezeWindowOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowOutput)
}

// GetManualFreezeFreezeWindowArrayInput is an input type that accepts GetManualFreezeFreezeWindowArray and GetManualFreezeFreezeWindowArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowArrayInput` via:
//
//	GetManualFreezeFreezeWindowArray{ GetManualFreezeFreezeWindowArgs{...} }
type GetManualFreezeFreezeWindowArrayInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowArrayOutput() GetManualFreezeFreezeWindowArrayOutput
	ToGetManualFreezeFreezeWindowArrayOutputWithContext(context.Context) GetManualFreezeFreezeWindowArrayOutput
}

type GetManualFreezeFreezeWindowArray []GetManualFreezeFreezeWindowInput

func (GetManualFreezeFreezeWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowArray) ToGetManualFreezeFreezeWindowArrayOutput() GetManualFreezeFreezeWindowArrayOutput {
	return i.ToGetManualFreezeFreezeWindowArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowArray) ToGetManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowArrayOutput)
}

type GetManualFreezeFreezeWindowOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowOutput) ToGetManualFreezeFreezeWindowOutput() GetManualFreezeFreezeWindowOutput {
	return o
}

func (o GetManualFreezeFreezeWindowOutput) ToGetManualFreezeFreezeWindowOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowOutput {
	return o
}

// Duration of the freeze
func (o GetManualFreezeFreezeWindowOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.Duration }).(pulumi.StringOutput)
}

// End time of the freeze
func (o GetManualFreezeFreezeWindowOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetManualFreezeFreezeWindowOutput) Recurrences() GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) []GetManualFreezeFreezeWindowRecurrence { return v.Recurrences }).(GetManualFreezeFreezeWindowRecurrenceArrayOutput)
}

// Start time of the freeze
func (o GetManualFreezeFreezeWindowOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.StartTime }).(pulumi.StringOutput)
}

// Timezone
func (o GetManualFreezeFreezeWindowOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindow) string { return v.TimeZone }).(pulumi.StringOutput)
}

type GetManualFreezeFreezeWindowArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindow)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowArrayOutput) ToGetManualFreezeFreezeWindowArrayOutput() GetManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowArrayOutput) ToGetManualFreezeFreezeWindowArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowArrayOutput) Index(i pulumi.IntInput) GetManualFreezeFreezeWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeFreezeWindow {
		return vs[0].([]GetManualFreezeFreezeWindow)[vs[1].(int)]
	}).(GetManualFreezeFreezeWindowOutput)
}

type GetManualFreezeFreezeWindowRecurrence struct {
	RecurrenceSpecs []GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec `pulumi:"recurrenceSpecs"`
	// Type of freeze
	Type string `pulumi:"type"`
}

// GetManualFreezeFreezeWindowRecurrenceInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceArgs and GetManualFreezeFreezeWindowRecurrenceOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceArgs{...}
type GetManualFreezeFreezeWindowRecurrenceInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceOutput() GetManualFreezeFreezeWindowRecurrenceOutput
	ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceOutput
}

type GetManualFreezeFreezeWindowRecurrenceArgs struct {
	RecurrenceSpecs GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput `pulumi:"recurrenceSpecs"`
	// Type of freeze
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetManualFreezeFreezeWindowRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceArgs) ToGetManualFreezeFreezeWindowRecurrenceOutput() GetManualFreezeFreezeWindowRecurrenceOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceArgs) ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceOutput)
}

// GetManualFreezeFreezeWindowRecurrenceArrayInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceArray and GetManualFreezeFreezeWindowRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceArrayInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceArray{ GetManualFreezeFreezeWindowRecurrenceArgs{...} }
type GetManualFreezeFreezeWindowRecurrenceArrayInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceArrayOutput() GetManualFreezeFreezeWindowRecurrenceArrayOutput
	ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceArrayOutput
}

type GetManualFreezeFreezeWindowRecurrenceArray []GetManualFreezeFreezeWindowRecurrenceInput

func (GetManualFreezeFreezeWindowRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceArray) ToGetManualFreezeFreezeWindowRecurrenceArrayOutput() GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceArray) ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceArrayOutput)
}

type GetManualFreezeFreezeWindowRecurrenceOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceOutput) ToGetManualFreezeFreezeWindowRecurrenceOutput() GetManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceOutput) ToGetManualFreezeFreezeWindowRecurrenceOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceOutput) RecurrenceSpecs() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrence) []GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return v.RecurrenceSpecs
	}).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

// Type of freeze
func (o GetManualFreezeFreezeWindowRecurrenceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrence) string { return v.Type }).(pulumi.StringOutput)
}

type GetManualFreezeFreezeWindowRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrence)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceArrayOutput() GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceArrayOutput) Index(i pulumi.IntInput) GetManualFreezeFreezeWindowRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeFreezeWindowRecurrence {
		return vs[0].([]GetManualFreezeFreezeWindowRecurrence)[vs[1].(int)]
	}).(GetManualFreezeFreezeWindowRecurrenceOutput)
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec struct {
	Until string `pulumi:"until"`
	Value int    `pulumi:"value"`
}

// GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs and GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...}
type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs struct {
	Until pulumi.StringInput `pulumi:"until"`
	Value pulumi.IntInput    `pulumi:"value"`
}

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

// GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput is an input type that accepts GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray and GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput values.
// You can construct a concrete instance of `GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput` via:
//
//	GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{ GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{...} }
type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput interface {
	pulumi.Input

	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
	ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray []GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return i.ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(context.Background())
}

func (i GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput)
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Until() pulumi.StringOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec) string { return v.Until }).(pulumi.StringOutput)
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec) int { return v.Value }).(pulumi.IntOutput)
}

type GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput struct{ *pulumi.OutputState }

func (GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)(nil)).Elem()
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput() GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) ToGetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutputWithContext(ctx context.Context) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput {
	return o
}

func (o GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput) Index(i pulumi.IntInput) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec {
		return vs[0].([]GetManualFreezeFreezeWindowRecurrenceRecurrenceSpec)[vs[1].(int)]
	}).(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput)
}

type GetNexusConnectorCredential struct {
	PasswordRef string `pulumi:"passwordRef"`
	Username    string `pulumi:"username"`
	UsernameRef string `pulumi:"usernameRef"`
}

// GetNexusConnectorCredentialInput is an input type that accepts GetNexusConnectorCredentialArgs and GetNexusConnectorCredentialOutput values.
// You can construct a concrete instance of `GetNexusConnectorCredentialInput` via:
//
//	GetNexusConnectorCredentialArgs{...}
type GetNexusConnectorCredentialInput interface {
	pulumi.Input

	ToGetNexusConnectorCredentialOutput() GetNexusConnectorCredentialOutput
	ToGetNexusConnectorCredentialOutputWithContext(context.Context) GetNexusConnectorCredentialOutput
}

type GetNexusConnectorCredentialArgs struct {
	PasswordRef pulumi.StringInput `pulumi:"passwordRef"`
	Username    pulumi.StringInput `pulumi:"username"`
	UsernameRef pulumi.StringInput `pulumi:"usernameRef"`
}

func (GetNexusConnectorCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNexusConnectorCredential)(nil)).Elem()
}

func (i GetNexusConnectorCredentialArgs) ToGetNexusConnectorCredentialOutput() GetNexusConnectorCredentialOutput {
	return i.ToGetNexusConnectorCredentialOutputWithContext(context.Background())
}

func (i GetNexusConnectorCredentialArgs) ToGetNexusConnectorCredentialOutputWithContext(ctx context.Context) GetNexusConnectorCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNexusConnectorCredentialOutput)
}

// GetNexusConnectorCredentialArrayInput is an input type that accepts GetNexusConnectorCredentialArray and GetNexusConnectorCredentialArrayOutput values.
// You can construct a concrete instance of `GetNexusConnectorCredentialArrayInput` via:
//
//	GetNexusConnectorCredentialArray{ GetNexusConnectorCredentialArgs{...} }
type GetNexusConnectorCredentialArrayInput interface {
	pulumi.Input

	ToGetNexusConnectorCredentialArrayOutput() GetNexusConnectorCredentialArrayOutput
	ToGetNexusConnectorCredentialArrayOutputWithContext(context.Context) GetNexusConnectorCredentialArrayOutput
}

type GetNexusConnectorCredentialArray []GetNexusConnectorCredentialInput

func (GetNexusConnectorCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNexusConnectorCredential)(nil)).Elem()
}

func (i GetNexusConnectorCredentialArray) ToGetNexusConnectorCredentialArrayOutput() GetNexusConnectorCredentialArrayOutput {
	return i.ToGetNexusConnectorCredentialArrayOutputWithContext(context.Background())
}

func (i GetNexusConnectorCredentialArray) ToGetNexusConnectorCredentialArrayOutputWithContext(ctx context.Context) GetNexusConnectorCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNexusConnectorCredentialArrayOutput)
}

type GetNexusConnectorCredentialOutput struct{ *pulumi.OutputState }

func (GetNexusConnectorCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNexusConnectorCredential)(nil)).Elem()
}

func (o GetNexusConnectorCredentialOutput) ToGetNexusConnectorCredentialOutput() GetNexusConnectorCredentialOutput {
	return o
}

func (o GetNexusConnectorCredentialOutput) ToGetNexusConnectorCredentialOutputWithContext(ctx context.Context) GetNexusConnectorCredentialOutput {
	return o
}

func (o GetNexusConnectorCredentialOutput) PasswordRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusConnectorCredential) string { return v.PasswordRef }).(pulumi.StringOutput)
}

func (o GetNexusConnectorCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusConnectorCredential) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetNexusConnectorCredentialOutput) UsernameRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetNexusConnectorCredential) string { return v.UsernameRef }).(pulumi.StringOutput)
}

type GetNexusConnectorCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetNexusConnectorCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNexusConnectorCredential)(nil)).Elem()
}

func (o GetNexusConnectorCredentialArrayOutput) ToGetNexusConnectorCredentialArrayOutput() GetNexusConnectorCredentialArrayOutput {
	return o
}

func (o GetNexusConnectorCredentialArrayOutput) ToGetNexusConnectorCredentialArrayOutputWithContext(ctx context.Context) GetNexusConnectorCredentialArrayOutput {
	return o
}

func (o GetNexusConnectorCredentialArrayOutput) Index(i pulumi.IntInput) GetNexusConnectorCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNexusConnectorCredential {
		return vs[0].([]GetNexusConnectorCredential)[vs[1].(int)]
	}).(GetNexusConnectorCredentialOutput)
}

type GetPermissionsPermission struct {
	Action             string   `pulumi:"action"`
	AllowedScopeLevels []string `pulumi:"allowedScopeLevels"`
	Identifier         string   `pulumi:"identifier"`
	IncludeInAllRoles  bool     `pulumi:"includeInAllRoles"`
	Name               string   `pulumi:"name"`
	ResourceType       string   `pulumi:"resourceType"`
	Status             string   `pulumi:"status"`
}

// GetPermissionsPermissionInput is an input type that accepts GetPermissionsPermissionArgs and GetPermissionsPermissionOutput values.
// You can construct a concrete instance of `GetPermissionsPermissionInput` via:
//
//	GetPermissionsPermissionArgs{...}
type GetPermissionsPermissionInput interface {
	pulumi.Input

	ToGetPermissionsPermissionOutput() GetPermissionsPermissionOutput
	ToGetPermissionsPermissionOutputWithContext(context.Context) GetPermissionsPermissionOutput
}

type GetPermissionsPermissionArgs struct {
	Action             pulumi.StringInput      `pulumi:"action"`
	AllowedScopeLevels pulumi.StringArrayInput `pulumi:"allowedScopeLevels"`
	Identifier         pulumi.StringInput      `pulumi:"identifier"`
	IncludeInAllRoles  pulumi.BoolInput        `pulumi:"includeInAllRoles"`
	Name               pulumi.StringInput      `pulumi:"name"`
	ResourceType       pulumi.StringInput      `pulumi:"resourceType"`
	Status             pulumi.StringInput      `pulumi:"status"`
}

func (GetPermissionsPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsPermission)(nil)).Elem()
}

func (i GetPermissionsPermissionArgs) ToGetPermissionsPermissionOutput() GetPermissionsPermissionOutput {
	return i.ToGetPermissionsPermissionOutputWithContext(context.Background())
}

func (i GetPermissionsPermissionArgs) ToGetPermissionsPermissionOutputWithContext(ctx context.Context) GetPermissionsPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionsPermissionOutput)
}

// GetPermissionsPermissionArrayInput is an input type that accepts GetPermissionsPermissionArray and GetPermissionsPermissionArrayOutput values.
// You can construct a concrete instance of `GetPermissionsPermissionArrayInput` via:
//
//	GetPermissionsPermissionArray{ GetPermissionsPermissionArgs{...} }
type GetPermissionsPermissionArrayInput interface {
	pulumi.Input

	ToGetPermissionsPermissionArrayOutput() GetPermissionsPermissionArrayOutput
	ToGetPermissionsPermissionArrayOutputWithContext(context.Context) GetPermissionsPermissionArrayOutput
}

type GetPermissionsPermissionArray []GetPermissionsPermissionInput

func (GetPermissionsPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionsPermission)(nil)).Elem()
}

func (i GetPermissionsPermissionArray) ToGetPermissionsPermissionArrayOutput() GetPermissionsPermissionArrayOutput {
	return i.ToGetPermissionsPermissionArrayOutputWithContext(context.Background())
}

func (i GetPermissionsPermissionArray) ToGetPermissionsPermissionArrayOutputWithContext(ctx context.Context) GetPermissionsPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPermissionsPermissionArrayOutput)
}

type GetPermissionsPermissionOutput struct{ *pulumi.OutputState }

func (GetPermissionsPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionsPermission)(nil)).Elem()
}

func (o GetPermissionsPermissionOutput) ToGetPermissionsPermissionOutput() GetPermissionsPermissionOutput {
	return o
}

func (o GetPermissionsPermissionOutput) ToGetPermissionsPermissionOutputWithContext(ctx context.Context) GetPermissionsPermissionOutput {
	return o
}

func (o GetPermissionsPermissionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetPermissionsPermissionOutput) AllowedScopeLevels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPermissionsPermission) []string { return v.AllowedScopeLevels }).(pulumi.StringArrayOutput)
}

func (o GetPermissionsPermissionOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o GetPermissionsPermissionOutput) IncludeInAllRoles() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPermissionsPermission) bool { return v.IncludeInAllRoles }).(pulumi.BoolOutput)
}

func (o GetPermissionsPermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPermissionsPermissionOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o GetPermissionsPermissionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionsPermission) string { return v.Status }).(pulumi.StringOutput)
}

type GetPermissionsPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetPermissionsPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPermissionsPermission)(nil)).Elem()
}

func (o GetPermissionsPermissionArrayOutput) ToGetPermissionsPermissionArrayOutput() GetPermissionsPermissionArrayOutput {
	return o
}

func (o GetPermissionsPermissionArrayOutput) ToGetPermissionsPermissionArrayOutputWithContext(ctx context.Context) GetPermissionsPermissionArrayOutput {
	return o
}

func (o GetPermissionsPermissionArrayOutput) Index(i pulumi.IntInput) GetPermissionsPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPermissionsPermission {
		return vs[0].([]GetPermissionsPermission)[vs[1].(int)]
	}).(GetPermissionsPermissionOutput)
}

type GetPipelineFiltersFilterProperty struct {
	FilterType string   `pulumi:"filterType"`
	Tags       []string `pulumi:"tags"`
}

// GetPipelineFiltersFilterPropertyInput is an input type that accepts GetPipelineFiltersFilterPropertyArgs and GetPipelineFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyInput` via:
//
//	GetPipelineFiltersFilterPropertyArgs{...}
type GetPipelineFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyOutput() GetPipelineFiltersFilterPropertyOutput
	ToGetPipelineFiltersFilterPropertyOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyOutput
}

type GetPipelineFiltersFilterPropertyArgs struct {
	FilterType pulumi.StringInput      `pulumi:"filterType"`
	Tags       pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetPipelineFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyArgs) ToGetPipelineFiltersFilterPropertyOutput() GetPipelineFiltersFilterPropertyOutput {
	return i.ToGetPipelineFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyArgs) ToGetPipelineFiltersFilterPropertyOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyOutput)
}

// GetPipelineFiltersFilterPropertyArrayInput is an input type that accepts GetPipelineFiltersFilterPropertyArray and GetPipelineFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetPipelineFiltersFilterPropertyArrayInput` via:
//
//	GetPipelineFiltersFilterPropertyArray{ GetPipelineFiltersFilterPropertyArgs{...} }
type GetPipelineFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetPipelineFiltersFilterPropertyArrayOutput() GetPipelineFiltersFilterPropertyArrayOutput
	ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(context.Context) GetPipelineFiltersFilterPropertyArrayOutput
}

type GetPipelineFiltersFilterPropertyArray []GetPipelineFiltersFilterPropertyInput

func (GetPipelineFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (i GetPipelineFiltersFilterPropertyArray) ToGetPipelineFiltersFilterPropertyArrayOutput() GetPipelineFiltersFilterPropertyArrayOutput {
	return i.ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetPipelineFiltersFilterPropertyArray) ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineFiltersFilterPropertyArrayOutput)
}

type GetPipelineFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyOutput) ToGetPipelineFiltersFilterPropertyOutput() GetPipelineFiltersFilterPropertyOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyOutput) ToGetPipelineFiltersFilterPropertyOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GetPipelineFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPipelineFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetPipelineFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineFiltersFilterProperty)(nil)).Elem()
}

func (o GetPipelineFiltersFilterPropertyArrayOutput) ToGetPipelineFiltersFilterPropertyArrayOutput() GetPipelineFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyArrayOutput) ToGetPipelineFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetPipelineFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetPipelineFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetPipelineFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineFiltersFilterProperty {
		return vs[0].([]GetPipelineFiltersFilterProperty)[vs[1].(int)]
	}).(GetPipelineFiltersFilterPropertyOutput)
}

type GetPipelineGitDetails struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch string `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName string `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage string `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef string `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath string `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName string `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType string `pulumi:"storeType"`
}

// GetPipelineGitDetailsInput is an input type that accepts GetPipelineGitDetailsArgs and GetPipelineGitDetailsOutput values.
// You can construct a concrete instance of `GetPipelineGitDetailsInput` via:
//
//	GetPipelineGitDetailsArgs{...}
type GetPipelineGitDetailsInput interface {
	pulumi.Input

	ToGetPipelineGitDetailsOutput() GetPipelineGitDetailsOutput
	ToGetPipelineGitDetailsOutputWithContext(context.Context) GetPipelineGitDetailsOutput
}

type GetPipelineGitDetailsArgs struct {
	// Name of the default branch (this checks out a new branch titled by branch_name).
	BaseBranch pulumi.StringInput `pulumi:"baseBranch"`
	// Name of the branch.
	BranchName pulumi.StringInput `pulumi:"branchName"`
	// Commit message used for the merge commit.
	CommitMessage pulumi.StringInput `pulumi:"commitMessage"`
	// Identifier of the Harness Connector used for CRUD operations on the Entity.
	ConnectorRef pulumi.StringInput `pulumi:"connectorRef"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringInput `pulumi:"filePath"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringInput `pulumi:"repoName"`
	// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
	StoreType pulumi.StringInput `pulumi:"storeType"`
}

func (GetPipelineGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineGitDetails)(nil)).Elem()
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsOutput() GetPipelineGitDetailsOutput {
	return i.ToGetPipelineGitDetailsOutputWithContext(context.Background())
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsOutputWithContext(ctx context.Context) GetPipelineGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineGitDetailsOutput)
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return i.ToGetPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetPipelineGitDetailsArgs) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineGitDetailsOutput).ToGetPipelineGitDetailsPtrOutputWithContext(ctx)
}

// GetPipelineGitDetailsPtrInput is an input type that accepts GetPipelineGitDetailsArgs, GetPipelineGitDetailsPtr and GetPipelineGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetPipelineGitDetailsPtrInput` via:
//
//	        GetPipelineGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetPipelineGitDetailsPtrInput interface {
	pulumi.Input

	ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput
	ToGetPipelineGitDetailsPtrOutputWithContext(context.Context) GetPipelineGitDetailsPtrOutput
}

type getPipelineGitDetailsPtrType GetPipelineGitDetailsArgs

func GetPipelineGitDetailsPtr(v *GetPipelineGitDetailsArgs) GetPipelineGitDetailsPtrInput {
	return (*getPipelineGitDetailsPtrType)(v)
}

func (*getPipelineGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPipelineGitDetails)(nil)).Elem()
}

func (i *getPipelineGitDetailsPtrType) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return i.ToGetPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getPipelineGitDetailsPtrType) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineGitDetailsPtrOutput)
}

type GetPipelineGitDetailsOutput struct{ *pulumi.OutputState }

func (GetPipelineGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineGitDetails)(nil)).Elem()
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsOutput() GetPipelineGitDetailsOutput {
	return o
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsOutputWithContext(ctx context.Context) GetPipelineGitDetailsOutput {
	return o
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return o.ToGetPipelineGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetPipelineGitDetailsOutput) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetPipelineGitDetails) *GetPipelineGitDetails {
		return &v
	}).(GetPipelineGitDetailsPtrOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetPipelineGitDetailsOutput) BaseBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.BaseBranch }).(pulumi.StringOutput)
}

// Name of the branch.
func (o GetPipelineGitDetailsOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.BranchName }).(pulumi.StringOutput)
}

// Commit message used for the merge commit.
func (o GetPipelineGitDetailsOutput) CommitMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.CommitMessage }).(pulumi.StringOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetPipelineGitDetailsOutput) ConnectorRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.ConnectorRef }).(pulumi.StringOutput)
}

// File path of the Entity in the repository.
func (o GetPipelineGitDetailsOutput) FilePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.FilePath }).(pulumi.StringOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsOutput) LastCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.LastCommitId }).(pulumi.StringOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsOutput) LastObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.LastObjectId }).(pulumi.StringOutput)
}

// Name of the repository.
func (o GetPipelineGitDetailsOutput) RepoName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.RepoName }).(pulumi.StringOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetPipelineGitDetailsOutput) StoreType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineGitDetails) string { return v.StoreType }).(pulumi.StringOutput)
}

type GetPipelineGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetPipelineGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetPipelineGitDetails)(nil)).Elem()
}

func (o GetPipelineGitDetailsPtrOutput) ToGetPipelineGitDetailsPtrOutput() GetPipelineGitDetailsPtrOutput {
	return o
}

func (o GetPipelineGitDetailsPtrOutput) ToGetPipelineGitDetailsPtrOutputWithContext(ctx context.Context) GetPipelineGitDetailsPtrOutput {
	return o
}

func (o GetPipelineGitDetailsPtrOutput) Elem() GetPipelineGitDetailsOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) GetPipelineGitDetails {
		if v != nil {
			return *v
		}
		var ret GetPipelineGitDetails
		return ret
	}).(GetPipelineGitDetailsOutput)
}

// Name of the default branch (this checks out a new branch titled by branch_name).
func (o GetPipelineGitDetailsPtrOutput) BaseBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BaseBranch
	}).(pulumi.StringPtrOutput)
}

// Name of the branch.
func (o GetPipelineGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.BranchName
	}).(pulumi.StringPtrOutput)
}

// Commit message used for the merge commit.
func (o GetPipelineGitDetailsPtrOutput) CommitMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.CommitMessage
	}).(pulumi.StringPtrOutput)
}

// Identifier of the Harness Connector used for CRUD operations on the Entity.
func (o GetPipelineGitDetailsPtrOutput) ConnectorRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectorRef
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetPipelineGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.FilePath
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetPipelineGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o GetPipelineGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the Entity is to be stored in Git or not. Possible values: INLINE, REMOTE.
func (o GetPipelineGitDetailsPtrOutput) StoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetPipelineGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.StoreType
	}).(pulumi.StringPtrOutput)
}

type GetPolicysetPolicy struct {
	// Account Identifier of the account
	Identifier string `pulumi:"identifier"`
	// Organization Identifier
	Severity string `pulumi:"severity"`
}

// GetPolicysetPolicyInput is an input type that accepts GetPolicysetPolicyArgs and GetPolicysetPolicyOutput values.
// You can construct a concrete instance of `GetPolicysetPolicyInput` via:
//
//	GetPolicysetPolicyArgs{...}
type GetPolicysetPolicyInput interface {
	pulumi.Input

	ToGetPolicysetPolicyOutput() GetPolicysetPolicyOutput
	ToGetPolicysetPolicyOutputWithContext(context.Context) GetPolicysetPolicyOutput
}

type GetPolicysetPolicyArgs struct {
	// Account Identifier of the account
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Organization Identifier
	Severity pulumi.StringInput `pulumi:"severity"`
}

func (GetPolicysetPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicysetPolicy)(nil)).Elem()
}

func (i GetPolicysetPolicyArgs) ToGetPolicysetPolicyOutput() GetPolicysetPolicyOutput {
	return i.ToGetPolicysetPolicyOutputWithContext(context.Background())
}

func (i GetPolicysetPolicyArgs) ToGetPolicysetPolicyOutputWithContext(ctx context.Context) GetPolicysetPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicysetPolicyOutput)
}

// GetPolicysetPolicyArrayInput is an input type that accepts GetPolicysetPolicyArray and GetPolicysetPolicyArrayOutput values.
// You can construct a concrete instance of `GetPolicysetPolicyArrayInput` via:
//
//	GetPolicysetPolicyArray{ GetPolicysetPolicyArgs{...} }
type GetPolicysetPolicyArrayInput interface {
	pulumi.Input

	ToGetPolicysetPolicyArrayOutput() GetPolicysetPolicyArrayOutput
	ToGetPolicysetPolicyArrayOutputWithContext(context.Context) GetPolicysetPolicyArrayOutput
}

type GetPolicysetPolicyArray []GetPolicysetPolicyInput

func (GetPolicysetPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicysetPolicy)(nil)).Elem()
}

func (i GetPolicysetPolicyArray) ToGetPolicysetPolicyArrayOutput() GetPolicysetPolicyArrayOutput {
	return i.ToGetPolicysetPolicyArrayOutputWithContext(context.Background())
}

func (i GetPolicysetPolicyArray) ToGetPolicysetPolicyArrayOutputWithContext(ctx context.Context) GetPolicysetPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicysetPolicyArrayOutput)
}

type GetPolicysetPolicyOutput struct{ *pulumi.OutputState }

func (GetPolicysetPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicysetPolicy)(nil)).Elem()
}

func (o GetPolicysetPolicyOutput) ToGetPolicysetPolicyOutput() GetPolicysetPolicyOutput {
	return o
}

func (o GetPolicysetPolicyOutput) ToGetPolicysetPolicyOutputWithContext(ctx context.Context) GetPolicysetPolicyOutput {
	return o
}

// Account Identifier of the account
func (o GetPolicysetPolicyOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicysetPolicy) string { return v.Identifier }).(pulumi.StringOutput)
}

// Organization Identifier
func (o GetPolicysetPolicyOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicysetPolicy) string { return v.Severity }).(pulumi.StringOutput)
}

type GetPolicysetPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetPolicysetPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicysetPolicy)(nil)).Elem()
}

func (o GetPolicysetPolicyArrayOutput) ToGetPolicysetPolicyArrayOutput() GetPolicysetPolicyArrayOutput {
	return o
}

func (o GetPolicysetPolicyArrayOutput) ToGetPolicysetPolicyArrayOutputWithContext(ctx context.Context) GetPolicysetPolicyArrayOutput {
	return o
}

func (o GetPolicysetPolicyArrayOutput) Index(i pulumi.IntInput) GetPolicysetPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicysetPolicy {
		return vs[0].([]GetPolicysetPolicy)[vs[1].(int)]
	}).(GetPolicysetPolicyOutput)
}

type GetPrometheusConnectorHeader struct {
	EncryptedValueRef string `pulumi:"encryptedValueRef"`
	Key               string `pulumi:"key"`
	Value             string `pulumi:"value"`
	ValueEncrypted    bool   `pulumi:"valueEncrypted"`
}

// GetPrometheusConnectorHeaderInput is an input type that accepts GetPrometheusConnectorHeaderArgs and GetPrometheusConnectorHeaderOutput values.
// You can construct a concrete instance of `GetPrometheusConnectorHeaderInput` via:
//
//	GetPrometheusConnectorHeaderArgs{...}
type GetPrometheusConnectorHeaderInput interface {
	pulumi.Input

	ToGetPrometheusConnectorHeaderOutput() GetPrometheusConnectorHeaderOutput
	ToGetPrometheusConnectorHeaderOutputWithContext(context.Context) GetPrometheusConnectorHeaderOutput
}

type GetPrometheusConnectorHeaderArgs struct {
	EncryptedValueRef pulumi.StringInput `pulumi:"encryptedValueRef"`
	Key               pulumi.StringInput `pulumi:"key"`
	Value             pulumi.StringInput `pulumi:"value"`
	ValueEncrypted    pulumi.BoolInput   `pulumi:"valueEncrypted"`
}

func (GetPrometheusConnectorHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheusConnectorHeader)(nil)).Elem()
}

func (i GetPrometheusConnectorHeaderArgs) ToGetPrometheusConnectorHeaderOutput() GetPrometheusConnectorHeaderOutput {
	return i.ToGetPrometheusConnectorHeaderOutputWithContext(context.Background())
}

func (i GetPrometheusConnectorHeaderArgs) ToGetPrometheusConnectorHeaderOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrometheusConnectorHeaderOutput)
}

// GetPrometheusConnectorHeaderArrayInput is an input type that accepts GetPrometheusConnectorHeaderArray and GetPrometheusConnectorHeaderArrayOutput values.
// You can construct a concrete instance of `GetPrometheusConnectorHeaderArrayInput` via:
//
//	GetPrometheusConnectorHeaderArray{ GetPrometheusConnectorHeaderArgs{...} }
type GetPrometheusConnectorHeaderArrayInput interface {
	pulumi.Input

	ToGetPrometheusConnectorHeaderArrayOutput() GetPrometheusConnectorHeaderArrayOutput
	ToGetPrometheusConnectorHeaderArrayOutputWithContext(context.Context) GetPrometheusConnectorHeaderArrayOutput
}

type GetPrometheusConnectorHeaderArray []GetPrometheusConnectorHeaderInput

func (GetPrometheusConnectorHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrometheusConnectorHeader)(nil)).Elem()
}

func (i GetPrometheusConnectorHeaderArray) ToGetPrometheusConnectorHeaderArrayOutput() GetPrometheusConnectorHeaderArrayOutput {
	return i.ToGetPrometheusConnectorHeaderArrayOutputWithContext(context.Background())
}

func (i GetPrometheusConnectorHeaderArray) ToGetPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrometheusConnectorHeaderArrayOutput)
}

type GetPrometheusConnectorHeaderOutput struct{ *pulumi.OutputState }

func (GetPrometheusConnectorHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheusConnectorHeader)(nil)).Elem()
}

func (o GetPrometheusConnectorHeaderOutput) ToGetPrometheusConnectorHeaderOutput() GetPrometheusConnectorHeaderOutput {
	return o
}

func (o GetPrometheusConnectorHeaderOutput) ToGetPrometheusConnectorHeaderOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderOutput {
	return o
}

func (o GetPrometheusConnectorHeaderOutput) EncryptedValueRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) string { return v.EncryptedValueRef }).(pulumi.StringOutput)
}

func (o GetPrometheusConnectorHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetPrometheusConnectorHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) string { return v.Value }).(pulumi.StringOutput)
}

func (o GetPrometheusConnectorHeaderOutput) ValueEncrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPrometheusConnectorHeader) bool { return v.ValueEncrypted }).(pulumi.BoolOutput)
}

type GetPrometheusConnectorHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetPrometheusConnectorHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrometheusConnectorHeader)(nil)).Elem()
}

func (o GetPrometheusConnectorHeaderArrayOutput) ToGetPrometheusConnectorHeaderArrayOutput() GetPrometheusConnectorHeaderArrayOutput {
	return o
}

func (o GetPrometheusConnectorHeaderArrayOutput) ToGetPrometheusConnectorHeaderArrayOutputWithContext(ctx context.Context) GetPrometheusConnectorHeaderArrayOutput {
	return o
}

func (o GetPrometheusConnectorHeaderArrayOutput) Index(i pulumi.IntInput) GetPrometheusConnectorHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrometheusConnectorHeader {
		return vs[0].([]GetPrometheusConnectorHeader)[vs[1].(int)]
	}).(GetPrometheusConnectorHeaderOutput)
}

type GetResourceGroupIncludedScope struct {
	// Account Identifier of the account
	AccountId string `pulumi:"accountId"`
	Filter    string `pulumi:"filter"`
	// Unique identifier of the organization.
	OrgId string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId string `pulumi:"projectId"`
}

// GetResourceGroupIncludedScopeInput is an input type that accepts GetResourceGroupIncludedScopeArgs and GetResourceGroupIncludedScopeOutput values.
// You can construct a concrete instance of `GetResourceGroupIncludedScopeInput` via:
//
//	GetResourceGroupIncludedScopeArgs{...}
type GetResourceGroupIncludedScopeInput interface {
	pulumi.Input

	ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput
	ToGetResourceGroupIncludedScopeOutputWithContext(context.Context) GetResourceGroupIncludedScopeOutput
}

type GetResourceGroupIncludedScopeArgs struct {
	// Account Identifier of the account
	AccountId pulumi.StringInput `pulumi:"accountId"`
	Filter    pulumi.StringInput `pulumi:"filter"`
	// Unique identifier of the organization.
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetResourceGroupIncludedScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupIncludedScope)(nil)).Elem()
}

func (i GetResourceGroupIncludedScopeArgs) ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput {
	return i.ToGetResourceGroupIncludedScopeOutputWithContext(context.Background())
}

func (i GetResourceGroupIncludedScopeArgs) ToGetResourceGroupIncludedScopeOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupIncludedScopeOutput)
}

// GetResourceGroupIncludedScopeArrayInput is an input type that accepts GetResourceGroupIncludedScopeArray and GetResourceGroupIncludedScopeArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupIncludedScopeArrayInput` via:
//
//	GetResourceGroupIncludedScopeArray{ GetResourceGroupIncludedScopeArgs{...} }
type GetResourceGroupIncludedScopeArrayInput interface {
	pulumi.Input

	ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput
	ToGetResourceGroupIncludedScopeArrayOutputWithContext(context.Context) GetResourceGroupIncludedScopeArrayOutput
}

type GetResourceGroupIncludedScopeArray []GetResourceGroupIncludedScopeInput

func (GetResourceGroupIncludedScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupIncludedScope)(nil)).Elem()
}

func (i GetResourceGroupIncludedScopeArray) ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput {
	return i.ToGetResourceGroupIncludedScopeArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupIncludedScopeArray) ToGetResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupIncludedScopeArrayOutput)
}

type GetResourceGroupIncludedScopeOutput struct{ *pulumi.OutputState }

func (GetResourceGroupIncludedScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupIncludedScope)(nil)).Elem()
}

func (o GetResourceGroupIncludedScopeOutput) ToGetResourceGroupIncludedScopeOutput() GetResourceGroupIncludedScopeOutput {
	return o
}

func (o GetResourceGroupIncludedScopeOutput) ToGetResourceGroupIncludedScopeOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeOutput {
	return o
}

// Account Identifier of the account
func (o GetResourceGroupIncludedScopeOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetResourceGroupIncludedScopeOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.Filter }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o GetResourceGroupIncludedScopeOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.OrgId }).(pulumi.StringOutput)
}

// Unique identifier of the project.
func (o GetResourceGroupIncludedScopeOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupIncludedScope) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetResourceGroupIncludedScopeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupIncludedScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupIncludedScope)(nil)).Elem()
}

func (o GetResourceGroupIncludedScopeArrayOutput) ToGetResourceGroupIncludedScopeArrayOutput() GetResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o GetResourceGroupIncludedScopeArrayOutput) ToGetResourceGroupIncludedScopeArrayOutputWithContext(ctx context.Context) GetResourceGroupIncludedScopeArrayOutput {
	return o
}

func (o GetResourceGroupIncludedScopeArrayOutput) Index(i pulumi.IntInput) GetResourceGroupIncludedScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupIncludedScope {
		return vs[0].([]GetResourceGroupIncludedScope)[vs[1].(int)]
	}).(GetResourceGroupIncludedScopeOutput)
}

type GetResourceGroupResourceFilter struct {
	IncludeAllResources bool                                     `pulumi:"includeAllResources"`
	Resources           []GetResourceGroupResourceFilterResource `pulumi:"resources"`
}

// GetResourceGroupResourceFilterInput is an input type that accepts GetResourceGroupResourceFilterArgs and GetResourceGroupResourceFilterOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterInput` via:
//
//	GetResourceGroupResourceFilterArgs{...}
type GetResourceGroupResourceFilterInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput
	ToGetResourceGroupResourceFilterOutputWithContext(context.Context) GetResourceGroupResourceFilterOutput
}

type GetResourceGroupResourceFilterArgs struct {
	IncludeAllResources pulumi.BoolInput                                 `pulumi:"includeAllResources"`
	Resources           GetResourceGroupResourceFilterResourceArrayInput `pulumi:"resources"`
}

func (GetResourceGroupResourceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterArgs) ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput {
	return i.ToGetResourceGroupResourceFilterOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterArgs) ToGetResourceGroupResourceFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterOutput)
}

// GetResourceGroupResourceFilterArrayInput is an input type that accepts GetResourceGroupResourceFilterArray and GetResourceGroupResourceFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterArrayInput` via:
//
//	GetResourceGroupResourceFilterArray{ GetResourceGroupResourceFilterArgs{...} }
type GetResourceGroupResourceFilterArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput
	ToGetResourceGroupResourceFilterArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterArrayOutput
}

type GetResourceGroupResourceFilterArray []GetResourceGroupResourceFilterInput

func (GetResourceGroupResourceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterArray) ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput {
	return i.ToGetResourceGroupResourceFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterArray) ToGetResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterArrayOutput)
}

type GetResourceGroupResourceFilterOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterOutput) ToGetResourceGroupResourceFilterOutput() GetResourceGroupResourceFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterOutput) ToGetResourceGroupResourceFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterOutput) IncludeAllResources() pulumi.BoolOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilter) bool { return v.IncludeAllResources }).(pulumi.BoolOutput)
}

func (o GetResourceGroupResourceFilterOutput) Resources() GetResourceGroupResourceFilterResourceArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilter) []GetResourceGroupResourceFilterResource { return v.Resources }).(GetResourceGroupResourceFilterResourceArrayOutput)
}

type GetResourceGroupResourceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterArrayOutput) ToGetResourceGroupResourceFilterArrayOutput() GetResourceGroupResourceFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterArrayOutput) ToGetResourceGroupResourceFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilter {
		return vs[0].([]GetResourceGroupResourceFilter)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterOutput)
}

type GetResourceGroupResourceFilterResource struct {
	AttributeFilters []GetResourceGroupResourceFilterResourceAttributeFilter `pulumi:"attributeFilters"`
	Identifiers      []string                                                `pulumi:"identifiers"`
	ResourceType     string                                                  `pulumi:"resourceType"`
}

// GetResourceGroupResourceFilterResourceInput is an input type that accepts GetResourceGroupResourceFilterResourceArgs and GetResourceGroupResourceFilterResourceOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceInput` via:
//
//	GetResourceGroupResourceFilterResourceArgs{...}
type GetResourceGroupResourceFilterResourceInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput
	ToGetResourceGroupResourceFilterResourceOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceOutput
}

type GetResourceGroupResourceFilterResourceArgs struct {
	AttributeFilters GetResourceGroupResourceFilterResourceAttributeFilterArrayInput `pulumi:"attributeFilters"`
	Identifiers      pulumi.StringArrayInput                                         `pulumi:"identifiers"`
	ResourceType     pulumi.StringInput                                              `pulumi:"resourceType"`
}

func (GetResourceGroupResourceFilterResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceArgs) ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput {
	return i.ToGetResourceGroupResourceFilterResourceOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceArgs) ToGetResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceOutput)
}

// GetResourceGroupResourceFilterResourceArrayInput is an input type that accepts GetResourceGroupResourceFilterResourceArray and GetResourceGroupResourceFilterResourceArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceArrayInput` via:
//
//	GetResourceGroupResourceFilterResourceArray{ GetResourceGroupResourceFilterResourceArgs{...} }
type GetResourceGroupResourceFilterResourceArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput
	ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceArrayOutput
}

type GetResourceGroupResourceFilterResourceArray []GetResourceGroupResourceFilterResourceInput

func (GetResourceGroupResourceFilterResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceArray) ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput {
	return i.ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceArray) ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceArrayOutput)
}

type GetResourceGroupResourceFilterResourceOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceOutput) ToGetResourceGroupResourceFilterResourceOutput() GetResourceGroupResourceFilterResourceOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceOutput) ToGetResourceGroupResourceFilterResourceOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceOutput) AttributeFilters() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) []GetResourceGroupResourceFilterResourceAttributeFilter {
		return v.AttributeFilters
	}).(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

func (o GetResourceGroupResourceFilterResourceOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

func (o GetResourceGroupResourceFilterResourceOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResource) string { return v.ResourceType }).(pulumi.StringOutput)
}

type GetResourceGroupResourceFilterResourceArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResource)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) ToGetResourceGroupResourceFilterResourceArrayOutput() GetResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) ToGetResourceGroupResourceFilterResourceArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilterResource {
		return vs[0].([]GetResourceGroupResourceFilterResource)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterResourceOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilter struct {
	AttributeName   string   `pulumi:"attributeName"`
	AttributeValues []string `pulumi:"attributeValues"`
}

// GetResourceGroupResourceFilterResourceAttributeFilterInput is an input type that accepts GetResourceGroupResourceFilterResourceAttributeFilterArgs and GetResourceGroupResourceFilterResourceAttributeFilterOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceAttributeFilterInput` via:
//
//	GetResourceGroupResourceFilterResourceAttributeFilterArgs{...}
type GetResourceGroupResourceFilterResourceAttributeFilterInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput
	ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput
}

type GetResourceGroupResourceFilterResourceAttributeFilterArgs struct {
	AttributeName   pulumi.StringInput      `pulumi:"attributeName"`
	AttributeValues pulumi.StringArrayInput `pulumi:"attributeValues"`
}

func (GetResourceGroupResourceFilterResourceAttributeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArgs) ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return i.ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArgs) ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceAttributeFilterOutput)
}

// GetResourceGroupResourceFilterResourceAttributeFilterArrayInput is an input type that accepts GetResourceGroupResourceFilterResourceAttributeFilterArray and GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput values.
// You can construct a concrete instance of `GetResourceGroupResourceFilterResourceAttributeFilterArrayInput` via:
//
//	GetResourceGroupResourceFilterResourceAttributeFilterArray{ GetResourceGroupResourceFilterResourceAttributeFilterArgs{...} }
type GetResourceGroupResourceFilterResourceAttributeFilterArrayInput interface {
	pulumi.Input

	ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput
	ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput
}

type GetResourceGroupResourceFilterResourceAttributeFilterArray []GetResourceGroupResourceFilterResourceAttributeFilterInput

func (GetResourceGroupResourceFilterResourceAttributeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArray) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return i.ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(context.Background())
}

func (i GetResourceGroupResourceFilterResourceAttributeFilterArray) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilterOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceAttributeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterOutput() GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResourceAttributeFilter) string { return v.AttributeName }).(pulumi.StringOutput)
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterOutput) AttributeValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourceGroupResourceFilterResourceAttributeFilter) []string { return v.AttributeValues }).(pulumi.StringArrayOutput)
}

type GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput struct{ *pulumi.OutputState }

func (GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceGroupResourceFilterResourceAttributeFilter)(nil)).Elem()
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutput() GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) ToGetResourceGroupResourceFilterResourceAttributeFilterArrayOutputWithContext(ctx context.Context) GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput {
	return o
}

func (o GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput) Index(i pulumi.IntInput) GetResourceGroupResourceFilterResourceAttributeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceGroupResourceFilterResourceAttributeFilter {
		return vs[0].([]GetResourceGroupResourceFilterResourceAttributeFilter)[vs[1].(int)]
	}).(GetResourceGroupResourceFilterResourceAttributeFilterOutput)
}

type GetRoleAssignmentsPrincipal struct {
	// Identifier for role assignment.
	Identifier string `pulumi:"identifier"`
	ScopeLevel string `pulumi:"scopeLevel"`
	Type       string `pulumi:"type"`
}

// GetRoleAssignmentsPrincipalInput is an input type that accepts GetRoleAssignmentsPrincipalArgs and GetRoleAssignmentsPrincipalOutput values.
// You can construct a concrete instance of `GetRoleAssignmentsPrincipalInput` via:
//
//	GetRoleAssignmentsPrincipalArgs{...}
type GetRoleAssignmentsPrincipalInput interface {
	pulumi.Input

	ToGetRoleAssignmentsPrincipalOutput() GetRoleAssignmentsPrincipalOutput
	ToGetRoleAssignmentsPrincipalOutputWithContext(context.Context) GetRoleAssignmentsPrincipalOutput
}

type GetRoleAssignmentsPrincipalArgs struct {
	// Identifier for role assignment.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	ScopeLevel pulumi.StringInput `pulumi:"scopeLevel"`
	Type       pulumi.StringInput `pulumi:"type"`
}

func (GetRoleAssignmentsPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (i GetRoleAssignmentsPrincipalArgs) ToGetRoleAssignmentsPrincipalOutput() GetRoleAssignmentsPrincipalOutput {
	return i.ToGetRoleAssignmentsPrincipalOutputWithContext(context.Background())
}

func (i GetRoleAssignmentsPrincipalArgs) ToGetRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleAssignmentsPrincipalOutput)
}

// GetRoleAssignmentsPrincipalArrayInput is an input type that accepts GetRoleAssignmentsPrincipalArray and GetRoleAssignmentsPrincipalArrayOutput values.
// You can construct a concrete instance of `GetRoleAssignmentsPrincipalArrayInput` via:
//
//	GetRoleAssignmentsPrincipalArray{ GetRoleAssignmentsPrincipalArgs{...} }
type GetRoleAssignmentsPrincipalArrayInput interface {
	pulumi.Input

	ToGetRoleAssignmentsPrincipalArrayOutput() GetRoleAssignmentsPrincipalArrayOutput
	ToGetRoleAssignmentsPrincipalArrayOutputWithContext(context.Context) GetRoleAssignmentsPrincipalArrayOutput
}

type GetRoleAssignmentsPrincipalArray []GetRoleAssignmentsPrincipalInput

func (GetRoleAssignmentsPrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (i GetRoleAssignmentsPrincipalArray) ToGetRoleAssignmentsPrincipalArrayOutput() GetRoleAssignmentsPrincipalArrayOutput {
	return i.ToGetRoleAssignmentsPrincipalArrayOutputWithContext(context.Background())
}

func (i GetRoleAssignmentsPrincipalArray) ToGetRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleAssignmentsPrincipalArrayOutput)
}

type GetRoleAssignmentsPrincipalOutput struct{ *pulumi.OutputState }

func (GetRoleAssignmentsPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (o GetRoleAssignmentsPrincipalOutput) ToGetRoleAssignmentsPrincipalOutput() GetRoleAssignmentsPrincipalOutput {
	return o
}

func (o GetRoleAssignmentsPrincipalOutput) ToGetRoleAssignmentsPrincipalOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalOutput {
	return o
}

// Identifier for role assignment.
func (o GetRoleAssignmentsPrincipalOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleAssignmentsPrincipal) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o GetRoleAssignmentsPrincipalOutput) ScopeLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleAssignmentsPrincipal) string { return v.ScopeLevel }).(pulumi.StringOutput)
}

func (o GetRoleAssignmentsPrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleAssignmentsPrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type GetRoleAssignmentsPrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetRoleAssignmentsPrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleAssignmentsPrincipal)(nil)).Elem()
}

func (o GetRoleAssignmentsPrincipalArrayOutput) ToGetRoleAssignmentsPrincipalArrayOutput() GetRoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o GetRoleAssignmentsPrincipalArrayOutput) ToGetRoleAssignmentsPrincipalArrayOutputWithContext(ctx context.Context) GetRoleAssignmentsPrincipalArrayOutput {
	return o
}

func (o GetRoleAssignmentsPrincipalArrayOutput) Index(i pulumi.IntInput) GetRoleAssignmentsPrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoleAssignmentsPrincipal {
		return vs[0].([]GetRoleAssignmentsPrincipal)[vs[1].(int)]
	}).(GetRoleAssignmentsPrincipalOutput)
}

type GetSecretSshkeyKerbero struct {
	Principal              string                                        `pulumi:"principal"`
	Realm                  string                                        `pulumi:"realm"`
	TgtGenerationMethod    string                                        `pulumi:"tgtGenerationMethod"`
	TgtKeyTabFilePathSpecs []GetSecretSshkeyKerberoTgtKeyTabFilePathSpec `pulumi:"tgtKeyTabFilePathSpecs"`
	TgtPasswordSpecs       []GetSecretSshkeyKerberoTgtPasswordSpec       `pulumi:"tgtPasswordSpecs"`
}

// GetSecretSshkeyKerberoInput is an input type that accepts GetSecretSshkeyKerberoArgs and GetSecretSshkeyKerberoOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoInput` via:
//
//	GetSecretSshkeyKerberoArgs{...}
type GetSecretSshkeyKerberoInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput
	ToGetSecretSshkeyKerberoOutputWithContext(context.Context) GetSecretSshkeyKerberoOutput
}

type GetSecretSshkeyKerberoArgs struct {
	Principal              pulumi.StringInput                                    `pulumi:"principal"`
	Realm                  pulumi.StringInput                                    `pulumi:"realm"`
	TgtGenerationMethod    pulumi.StringInput                                    `pulumi:"tgtGenerationMethod"`
	TgtKeyTabFilePathSpecs GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput `pulumi:"tgtKeyTabFilePathSpecs"`
	TgtPasswordSpecs       GetSecretSshkeyKerberoTgtPasswordSpecArrayInput       `pulumi:"tgtPasswordSpecs"`
}

func (GetSecretSshkeyKerberoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerbero)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoArgs) ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput {
	return i.ToGetSecretSshkeyKerberoOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoArgs) ToGetSecretSshkeyKerberoOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoOutput)
}

// GetSecretSshkeyKerberoArrayInput is an input type that accepts GetSecretSshkeyKerberoArray and GetSecretSshkeyKerberoArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoArrayInput` via:
//
//	GetSecretSshkeyKerberoArray{ GetSecretSshkeyKerberoArgs{...} }
type GetSecretSshkeyKerberoArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput
	ToGetSecretSshkeyKerberoArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoArrayOutput
}

type GetSecretSshkeyKerberoArray []GetSecretSshkeyKerberoInput

func (GetSecretSshkeyKerberoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerbero)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoArray) ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput {
	return i.ToGetSecretSshkeyKerberoArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoArray) ToGetSecretSshkeyKerberoArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoArrayOutput)
}

type GetSecretSshkeyKerberoOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerbero)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoOutput) ToGetSecretSshkeyKerberoOutput() GetSecretSshkeyKerberoOutput {
	return o
}

func (o GetSecretSshkeyKerberoOutput) ToGetSecretSshkeyKerberoOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoOutput {
	return o
}

func (o GetSecretSshkeyKerberoOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.Principal }).(pulumi.StringOutput)
}

func (o GetSecretSshkeyKerberoOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.Realm }).(pulumi.StringOutput)
}

func (o GetSecretSshkeyKerberoOutput) TgtGenerationMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) string { return v.TgtGenerationMethod }).(pulumi.StringOutput)
}

func (o GetSecretSshkeyKerberoOutput) TgtKeyTabFilePathSpecs() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) []GetSecretSshkeyKerberoTgtKeyTabFilePathSpec {
		return v.TgtKeyTabFilePathSpecs
	}).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput)
}

func (o GetSecretSshkeyKerberoOutput) TgtPasswordSpecs() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerbero) []GetSecretSshkeyKerberoTgtPasswordSpec { return v.TgtPasswordSpecs }).(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput)
}

type GetSecretSshkeyKerberoArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerbero)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoArrayOutput) ToGetSecretSshkeyKerberoArrayOutput() GetSecretSshkeyKerberoArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoArrayOutput) ToGetSecretSshkeyKerberoArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerbero {
		return vs[0].([]GetSecretSshkeyKerbero)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpec struct {
	KeyPath string `pulumi:"keyPath"`
}

// GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput is an input type that accepts GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs and GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput` via:
//
//	GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{...}
type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput
	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs struct {
	KeyPath pulumi.StringInput `pulumi:"keyPath"`
}

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return i.ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput)
}

// GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput is an input type that accepts GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray and GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput` via:
//
//	GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray{ GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{...} }
type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput
	ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray []GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return i.ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerberoTgtKeyTabFilePathSpec) string { return v.KeyPath }).(pulumi.StringOutput)
}

type GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput() GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) ToGetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerberoTgtKeyTabFilePathSpec {
		return vs[0].([]GetSecretSshkeyKerberoTgtKeyTabFilePathSpec)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpec struct {
	Password string `pulumi:"password"`
}

// GetSecretSshkeyKerberoTgtPasswordSpecInput is an input type that accepts GetSecretSshkeyKerberoTgtPasswordSpecArgs and GetSecretSshkeyKerberoTgtPasswordSpecOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtPasswordSpecInput` via:
//
//	GetSecretSshkeyKerberoTgtPasswordSpecArgs{...}
type GetSecretSshkeyKerberoTgtPasswordSpecInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput
	ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput
}

type GetSecretSshkeyKerberoTgtPasswordSpecArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
}

func (GetSecretSshkeyKerberoTgtPasswordSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArgs) ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return i.ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArgs) ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtPasswordSpecOutput)
}

// GetSecretSshkeyKerberoTgtPasswordSpecArrayInput is an input type that accepts GetSecretSshkeyKerberoTgtPasswordSpecArray and GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeyKerberoTgtPasswordSpecArrayInput` via:
//
//	GetSecretSshkeyKerberoTgtPasswordSpecArray{ GetSecretSshkeyKerberoTgtPasswordSpecArgs{...} }
type GetSecretSshkeyKerberoTgtPasswordSpecArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput
	ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput
}

type GetSecretSshkeyKerberoTgtPasswordSpecArray []GetSecretSshkeyKerberoTgtPasswordSpecInput

func (GetSecretSshkeyKerberoTgtPasswordSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArray) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return i.ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeyKerberoTgtPasswordSpecArray) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpecOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtPasswordSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecOutput() GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeyKerberoTgtPasswordSpec) string { return v.Password }).(pulumi.StringOutput)
}

type GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeyKerberoTgtPasswordSpec)(nil)).Elem()
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutput() GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) ToGetSecretSshkeyKerberoTgtPasswordSpecArrayOutputWithContext(ctx context.Context) GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput {
	return o
}

func (o GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeyKerberoTgtPasswordSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeyKerberoTgtPasswordSpec {
		return vs[0].([]GetSecretSshkeyKerberoTgtPasswordSpec)[vs[1].(int)]
	}).(GetSecretSshkeyKerberoTgtPasswordSpecOutput)
}

type GetSecretSshkeySsh struct {
	CredentialType             string                                        `pulumi:"credentialType"`
	SshPasswordCredentials     []GetSecretSshkeySshSshPasswordCredential     `pulumi:"sshPasswordCredentials"`
	SshkeyPathCredentials      []GetSecretSshkeySshSshkeyPathCredential      `pulumi:"sshkeyPathCredentials"`
	SshkeyReferenceCredentials []GetSecretSshkeySshSshkeyReferenceCredential `pulumi:"sshkeyReferenceCredentials"`
}

// GetSecretSshkeySshInput is an input type that accepts GetSecretSshkeySshArgs and GetSecretSshkeySshOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshInput` via:
//
//	GetSecretSshkeySshArgs{...}
type GetSecretSshkeySshInput interface {
	pulumi.Input

	ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput
	ToGetSecretSshkeySshOutputWithContext(context.Context) GetSecretSshkeySshOutput
}

type GetSecretSshkeySshArgs struct {
	CredentialType             pulumi.StringInput                                    `pulumi:"credentialType"`
	SshPasswordCredentials     GetSecretSshkeySshSshPasswordCredentialArrayInput     `pulumi:"sshPasswordCredentials"`
	SshkeyPathCredentials      GetSecretSshkeySshSshkeyPathCredentialArrayInput      `pulumi:"sshkeyPathCredentials"`
	SshkeyReferenceCredentials GetSecretSshkeySshSshkeyReferenceCredentialArrayInput `pulumi:"sshkeyReferenceCredentials"`
}

func (GetSecretSshkeySshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySsh)(nil)).Elem()
}

func (i GetSecretSshkeySshArgs) ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput {
	return i.ToGetSecretSshkeySshOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshArgs) ToGetSecretSshkeySshOutputWithContext(ctx context.Context) GetSecretSshkeySshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshOutput)
}

// GetSecretSshkeySshArrayInput is an input type that accepts GetSecretSshkeySshArray and GetSecretSshkeySshArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshArrayInput` via:
//
//	GetSecretSshkeySshArray{ GetSecretSshkeySshArgs{...} }
type GetSecretSshkeySshArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput
	ToGetSecretSshkeySshArrayOutputWithContext(context.Context) GetSecretSshkeySshArrayOutput
}

type GetSecretSshkeySshArray []GetSecretSshkeySshInput

func (GetSecretSshkeySshArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySsh)(nil)).Elem()
}

func (i GetSecretSshkeySshArray) ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput {
	return i.ToGetSecretSshkeySshArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshArray) ToGetSecretSshkeySshArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshArrayOutput)
}

type GetSecretSshkeySshOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySsh)(nil)).Elem()
}

func (o GetSecretSshkeySshOutput) ToGetSecretSshkeySshOutput() GetSecretSshkeySshOutput {
	return o
}

func (o GetSecretSshkeySshOutput) ToGetSecretSshkeySshOutputWithContext(ctx context.Context) GetSecretSshkeySshOutput {
	return o
}

func (o GetSecretSshkeySshOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) string { return v.CredentialType }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshOutput) SshPasswordCredentials() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshPasswordCredential { return v.SshPasswordCredentials }).(GetSecretSshkeySshSshPasswordCredentialArrayOutput)
}

func (o GetSecretSshkeySshOutput) SshkeyPathCredentials() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshkeyPathCredential { return v.SshkeyPathCredentials }).(GetSecretSshkeySshSshkeyPathCredentialArrayOutput)
}

func (o GetSecretSshkeySshOutput) SshkeyReferenceCredentials() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o.ApplyT(func(v GetSecretSshkeySsh) []GetSecretSshkeySshSshkeyReferenceCredential {
		return v.SshkeyReferenceCredentials
	}).(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput)
}

type GetSecretSshkeySshArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySsh)(nil)).Elem()
}

func (o GetSecretSshkeySshArrayOutput) ToGetSecretSshkeySshArrayOutput() GetSecretSshkeySshArrayOutput {
	return o
}

func (o GetSecretSshkeySshArrayOutput) ToGetSecretSshkeySshArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshArrayOutput {
	return o
}

func (o GetSecretSshkeySshArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySsh {
		return vs[0].([]GetSecretSshkeySsh)[vs[1].(int)]
	}).(GetSecretSshkeySshOutput)
}

type GetSecretSshkeySshSshPasswordCredential struct {
	Password string `pulumi:"password"`
	UserName string `pulumi:"userName"`
}

// GetSecretSshkeySshSshPasswordCredentialInput is an input type that accepts GetSecretSshkeySshSshPasswordCredentialArgs and GetSecretSshkeySshSshPasswordCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshPasswordCredentialInput` via:
//
//	GetSecretSshkeySshSshPasswordCredentialArgs{...}
type GetSecretSshkeySshSshPasswordCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput
	ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshPasswordCredentialOutput
}

type GetSecretSshkeySshSshPasswordCredentialArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshPasswordCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshPasswordCredentialArgs) ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput {
	return i.ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshPasswordCredentialArgs) ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshPasswordCredentialOutput)
}

// GetSecretSshkeySshSshPasswordCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshPasswordCredentialArray and GetSecretSshkeySshSshPasswordCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshPasswordCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshPasswordCredentialArray{ GetSecretSshkeySshSshPasswordCredentialArgs{...} }
type GetSecretSshkeySshSshPasswordCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput
	ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput
}

type GetSecretSshkeySshSshPasswordCredentialArray []GetSecretSshkeySshSshPasswordCredentialInput

func (GetSecretSshkeySshSshPasswordCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshPasswordCredentialArray) ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshPasswordCredentialArray) ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshPasswordCredentialArrayOutput)
}

type GetSecretSshkeySshSshPasswordCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshPasswordCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) ToGetSecretSshkeySshSshPasswordCredentialOutput() GetSecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) ToGetSecretSshkeySshSshPasswordCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshPasswordCredential) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshPasswordCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshPasswordCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshPasswordCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshPasswordCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshPasswordCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) ToGetSecretSshkeySshSshPasswordCredentialArrayOutput() GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) ToGetSecretSshkeySshSshPasswordCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshPasswordCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshPasswordCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshPasswordCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshPasswordCredential {
		return vs[0].([]GetSecretSshkeySshSshPasswordCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshPasswordCredentialOutput)
}

type GetSecretSshkeySshSshkeyPathCredential struct {
	EncryptedPassphrase string `pulumi:"encryptedPassphrase"`
	KeyPath             string `pulumi:"keyPath"`
	UserName            string `pulumi:"userName"`
}

// GetSecretSshkeySshSshkeyPathCredentialInput is an input type that accepts GetSecretSshkeySshSshkeyPathCredentialArgs and GetSecretSshkeySshSshkeyPathCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyPathCredentialInput` via:
//
//	GetSecretSshkeySshSshkeyPathCredentialArgs{...}
type GetSecretSshkeySshSshkeyPathCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput
	ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput
}

type GetSecretSshkeySshSshkeyPathCredentialArgs struct {
	EncryptedPassphrase pulumi.StringInput `pulumi:"encryptedPassphrase"`
	KeyPath             pulumi.StringInput `pulumi:"keyPath"`
	UserName            pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshkeyPathCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyPathCredentialArgs) ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput {
	return i.ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyPathCredentialArgs) ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyPathCredentialOutput)
}

// GetSecretSshkeySshSshkeyPathCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshkeyPathCredentialArray and GetSecretSshkeySshSshkeyPathCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyPathCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshkeyPathCredentialArray{ GetSecretSshkeySshSshkeyPathCredentialArgs{...} }
type GetSecretSshkeySshSshkeyPathCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput
	ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput
}

type GetSecretSshkeySshSshkeyPathCredentialArray []GetSecretSshkeySshSshkeyPathCredentialInput

func (GetSecretSshkeySshSshkeyPathCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyPathCredentialArray) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyPathCredentialArray) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyPathCredentialArrayOutput)
}

type GetSecretSshkeySshSshkeyPathCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyPathCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) ToGetSecretSshkeySshSshkeyPathCredentialOutput() GetSecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) ToGetSecretSshkeySshSshkeyPathCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) EncryptedPassphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.EncryptedPassphrase }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) KeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.KeyPath }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyPathCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyPathCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshkeyPathCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyPathCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutput() GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) ToGetSecretSshkeySshSshkeyPathCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyPathCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyPathCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshkeyPathCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshkeyPathCredential {
		return vs[0].([]GetSecretSshkeySshSshkeyPathCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshkeyPathCredentialOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredential struct {
	EncryptedAssphrase string `pulumi:"encryptedAssphrase"`
	Key                string `pulumi:"key"`
	UserName           string `pulumi:"userName"`
}

// GetSecretSshkeySshSshkeyReferenceCredentialInput is an input type that accepts GetSecretSshkeySshSshkeyReferenceCredentialArgs and GetSecretSshkeySshSshkeyReferenceCredentialOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyReferenceCredentialInput` via:
//
//	GetSecretSshkeySshSshkeyReferenceCredentialArgs{...}
type GetSecretSshkeySshSshkeyReferenceCredentialInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput
	ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput
}

type GetSecretSshkeySshSshkeyReferenceCredentialArgs struct {
	EncryptedAssphrase pulumi.StringInput `pulumi:"encryptedAssphrase"`
	Key                pulumi.StringInput `pulumi:"key"`
	UserName           pulumi.StringInput `pulumi:"userName"`
}

func (GetSecretSshkeySshSshkeyReferenceCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArgs) ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return i.ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArgs) ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyReferenceCredentialOutput)
}

// GetSecretSshkeySshSshkeyReferenceCredentialArrayInput is an input type that accepts GetSecretSshkeySshSshkeyReferenceCredentialArray and GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput values.
// You can construct a concrete instance of `GetSecretSshkeySshSshkeyReferenceCredentialArrayInput` via:
//
//	GetSecretSshkeySshSshkeyReferenceCredentialArray{ GetSecretSshkeySshSshkeyReferenceCredentialArgs{...} }
type GetSecretSshkeySshSshkeyReferenceCredentialArrayInput interface {
	pulumi.Input

	ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput
	ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput
}

type GetSecretSshkeySshSshkeyReferenceCredentialArray []GetSecretSshkeySshSshkeyReferenceCredentialInput

func (GetSecretSshkeySshSshkeyReferenceCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArray) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return i.ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(context.Background())
}

func (i GetSecretSshkeySshSshkeyReferenceCredentialArray) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredentialOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyReferenceCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialOutput() GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) EncryptedAssphrase() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.EncryptedAssphrase }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretSshkeySshSshkeyReferenceCredential) string { return v.UserName }).(pulumi.StringOutput)
}

type GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput struct{ *pulumi.OutputState }

func (GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecretSshkeySshSshkeyReferenceCredential)(nil)).Elem()
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutput() GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) ToGetSecretSshkeySshSshkeyReferenceCredentialArrayOutputWithContext(ctx context.Context) GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput {
	return o
}

func (o GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput) Index(i pulumi.IntInput) GetSecretSshkeySshSshkeyReferenceCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecretSshkeySshSshkeyReferenceCredential {
		return vs[0].([]GetSecretSshkeySshSshkeyReferenceCredential)[vs[1].(int)]
	}).(GetSecretSshkeySshSshkeyReferenceCredentialOutput)
}

type GetTemplateFiltersFilterProperty struct {
	FilterType string   `pulumi:"filterType"`
	Tags       []string `pulumi:"tags"`
}

// GetTemplateFiltersFilterPropertyInput is an input type that accepts GetTemplateFiltersFilterPropertyArgs and GetTemplateFiltersFilterPropertyOutput values.
// You can construct a concrete instance of `GetTemplateFiltersFilterPropertyInput` via:
//
//	GetTemplateFiltersFilterPropertyArgs{...}
type GetTemplateFiltersFilterPropertyInput interface {
	pulumi.Input

	ToGetTemplateFiltersFilterPropertyOutput() GetTemplateFiltersFilterPropertyOutput
	ToGetTemplateFiltersFilterPropertyOutputWithContext(context.Context) GetTemplateFiltersFilterPropertyOutput
}

type GetTemplateFiltersFilterPropertyArgs struct {
	FilterType pulumi.StringInput      `pulumi:"filterType"`
	Tags       pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetTemplateFiltersFilterPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (i GetTemplateFiltersFilterPropertyArgs) ToGetTemplateFiltersFilterPropertyOutput() GetTemplateFiltersFilterPropertyOutput {
	return i.ToGetTemplateFiltersFilterPropertyOutputWithContext(context.Background())
}

func (i GetTemplateFiltersFilterPropertyArgs) ToGetTemplateFiltersFilterPropertyOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateFiltersFilterPropertyOutput)
}

// GetTemplateFiltersFilterPropertyArrayInput is an input type that accepts GetTemplateFiltersFilterPropertyArray and GetTemplateFiltersFilterPropertyArrayOutput values.
// You can construct a concrete instance of `GetTemplateFiltersFilterPropertyArrayInput` via:
//
//	GetTemplateFiltersFilterPropertyArray{ GetTemplateFiltersFilterPropertyArgs{...} }
type GetTemplateFiltersFilterPropertyArrayInput interface {
	pulumi.Input

	ToGetTemplateFiltersFilterPropertyArrayOutput() GetTemplateFiltersFilterPropertyArrayOutput
	ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(context.Context) GetTemplateFiltersFilterPropertyArrayOutput
}

type GetTemplateFiltersFilterPropertyArray []GetTemplateFiltersFilterPropertyInput

func (GetTemplateFiltersFilterPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (i GetTemplateFiltersFilterPropertyArray) ToGetTemplateFiltersFilterPropertyArrayOutput() GetTemplateFiltersFilterPropertyArrayOutput {
	return i.ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(context.Background())
}

func (i GetTemplateFiltersFilterPropertyArray) ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateFiltersFilterPropertyArrayOutput)
}

type GetTemplateFiltersFilterPropertyOutput struct{ *pulumi.OutputState }

func (GetTemplateFiltersFilterPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (o GetTemplateFiltersFilterPropertyOutput) ToGetTemplateFiltersFilterPropertyOutput() GetTemplateFiltersFilterPropertyOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyOutput) ToGetTemplateFiltersFilterPropertyOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateFiltersFilterProperty) string { return v.FilterType }).(pulumi.StringOutput)
}

func (o GetTemplateFiltersFilterPropertyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTemplateFiltersFilterProperty) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetTemplateFiltersFilterPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateFiltersFilterPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateFiltersFilterProperty)(nil)).Elem()
}

func (o GetTemplateFiltersFilterPropertyArrayOutput) ToGetTemplateFiltersFilterPropertyArrayOutput() GetTemplateFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyArrayOutput) ToGetTemplateFiltersFilterPropertyArrayOutputWithContext(ctx context.Context) GetTemplateFiltersFilterPropertyArrayOutput {
	return o
}

func (o GetTemplateFiltersFilterPropertyArrayOutput) Index(i pulumi.IntInput) GetTemplateFiltersFilterPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateFiltersFilterProperty {
		return vs[0].([]GetTemplateFiltersFilterProperty)[vs[1].(int)]
	}).(GetTemplateFiltersFilterPropertyOutput)
}

type GetTemplateGitDetails struct {
	// Name of the branch.
	BranchName *string `pulumi:"branchName"`
	// File path of the Entity in the repository.
	FilePath *string `pulumi:"filePath"`
	// File url of the Entity in the repository.
	FileUrl *string `pulumi:"fileUrl"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId string `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId string `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName *string `pulumi:"repoName"`
	// Repo url of the Entity in the repository.
	RepoUrl *string `pulumi:"repoUrl"`
}

// GetTemplateGitDetailsInput is an input type that accepts GetTemplateGitDetailsArgs and GetTemplateGitDetailsOutput values.
// You can construct a concrete instance of `GetTemplateGitDetailsInput` via:
//
//	GetTemplateGitDetailsArgs{...}
type GetTemplateGitDetailsInput interface {
	pulumi.Input

	ToGetTemplateGitDetailsOutput() GetTemplateGitDetailsOutput
	ToGetTemplateGitDetailsOutputWithContext(context.Context) GetTemplateGitDetailsOutput
}

type GetTemplateGitDetailsArgs struct {
	// Name of the branch.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// File path of the Entity in the repository.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// File url of the Entity in the repository.
	FileUrl pulumi.StringPtrInput `pulumi:"fileUrl"`
	// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
	LastCommitId pulumi.StringInput `pulumi:"lastCommitId"`
	// Last object identifier (for Github). To be provided only when updating Pipeline.
	LastObjectId pulumi.StringInput `pulumi:"lastObjectId"`
	// Name of the repository.
	RepoName pulumi.StringPtrInput `pulumi:"repoName"`
	// Repo url of the Entity in the repository.
	RepoUrl pulumi.StringPtrInput `pulumi:"repoUrl"`
}

func (GetTemplateGitDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateGitDetails)(nil)).Elem()
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsOutput() GetTemplateGitDetailsOutput {
	return i.ToGetTemplateGitDetailsOutputWithContext(context.Background())
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsOutputWithContext(ctx context.Context) GetTemplateGitDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateGitDetailsOutput)
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return i.ToGetTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i GetTemplateGitDetailsArgs) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateGitDetailsOutput).ToGetTemplateGitDetailsPtrOutputWithContext(ctx)
}

// GetTemplateGitDetailsPtrInput is an input type that accepts GetTemplateGitDetailsArgs, GetTemplateGitDetailsPtr and GetTemplateGitDetailsPtrOutput values.
// You can construct a concrete instance of `GetTemplateGitDetailsPtrInput` via:
//
//	        GetTemplateGitDetailsArgs{...}
//
//	or:
//
//	        nil
type GetTemplateGitDetailsPtrInput interface {
	pulumi.Input

	ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput
	ToGetTemplateGitDetailsPtrOutputWithContext(context.Context) GetTemplateGitDetailsPtrOutput
}

type getTemplateGitDetailsPtrType GetTemplateGitDetailsArgs

func GetTemplateGitDetailsPtr(v *GetTemplateGitDetailsArgs) GetTemplateGitDetailsPtrInput {
	return (*getTemplateGitDetailsPtrType)(v)
}

func (*getTemplateGitDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTemplateGitDetails)(nil)).Elem()
}

func (i *getTemplateGitDetailsPtrType) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return i.ToGetTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (i *getTemplateGitDetailsPtrType) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateGitDetailsPtrOutput)
}

type GetTemplateGitDetailsOutput struct{ *pulumi.OutputState }

func (GetTemplateGitDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateGitDetails)(nil)).Elem()
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsOutput() GetTemplateGitDetailsOutput {
	return o
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsOutputWithContext(ctx context.Context) GetTemplateGitDetailsOutput {
	return o
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return o.ToGetTemplateGitDetailsPtrOutputWithContext(context.Background())
}

func (o GetTemplateGitDetailsOutput) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTemplateGitDetails) *GetTemplateGitDetails {
		return &v
	}).(GetTemplateGitDetailsPtrOutput)
}

// Name of the branch.
func (o GetTemplateGitDetailsOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetTemplateGitDetailsOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// File url of the Entity in the repository.
func (o GetTemplateGitDetailsOutput) FileUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.FileUrl }).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsOutput) LastCommitId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) string { return v.LastCommitId }).(pulumi.StringOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsOutput) LastObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) string { return v.LastObjectId }).(pulumi.StringOutput)
}

// Name of the repository.
func (o GetTemplateGitDetailsOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.RepoName }).(pulumi.StringPtrOutput)
}

// Repo url of the Entity in the repository.
func (o GetTemplateGitDetailsOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateGitDetails) *string { return v.RepoUrl }).(pulumi.StringPtrOutput)
}

type GetTemplateGitDetailsPtrOutput struct{ *pulumi.OutputState }

func (GetTemplateGitDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTemplateGitDetails)(nil)).Elem()
}

func (o GetTemplateGitDetailsPtrOutput) ToGetTemplateGitDetailsPtrOutput() GetTemplateGitDetailsPtrOutput {
	return o
}

func (o GetTemplateGitDetailsPtrOutput) ToGetTemplateGitDetailsPtrOutputWithContext(ctx context.Context) GetTemplateGitDetailsPtrOutput {
	return o
}

func (o GetTemplateGitDetailsPtrOutput) Elem() GetTemplateGitDetailsOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) GetTemplateGitDetails {
		if v != nil {
			return *v
		}
		var ret GetTemplateGitDetails
		return ret
	}).(GetTemplateGitDetailsOutput)
}

// Name of the branch.
func (o GetTemplateGitDetailsPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// File path of the Entity in the repository.
func (o GetTemplateGitDetailsPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// File url of the Entity in the repository.
func (o GetTemplateGitDetailsPtrOutput) FileUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.FileUrl
	}).(pulumi.StringPtrOutput)
}

// Last commit identifier (for Git Repositories other than Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsPtrOutput) LastCommitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastCommitId
	}).(pulumi.StringPtrOutput)
}

// Last object identifier (for Github). To be provided only when updating Pipeline.
func (o GetTemplateGitDetailsPtrOutput) LastObjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LastObjectId
	}).(pulumi.StringPtrOutput)
}

// Name of the repository.
func (o GetTemplateGitDetailsPtrOutput) RepoName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoName
	}).(pulumi.StringPtrOutput)
}

// Repo url of the Entity in the repository.
func (o GetTemplateGitDetailsPtrOutput) RepoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplateGitDetails) *string {
		if v == nil {
			return nil
		}
		return v.RepoUrl
	}).(pulumi.StringPtrOutput)
}

type GetUsergroupNotificationConfig struct {
	// Group email.
	GroupEmail string `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl string `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey string `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers bool `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl string `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type string `pulumi:"type"`
}

// GetUsergroupNotificationConfigInput is an input type that accepts GetUsergroupNotificationConfigArgs and GetUsergroupNotificationConfigOutput values.
// You can construct a concrete instance of `GetUsergroupNotificationConfigInput` via:
//
//	GetUsergroupNotificationConfigArgs{...}
type GetUsergroupNotificationConfigInput interface {
	pulumi.Input

	ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput
	ToGetUsergroupNotificationConfigOutputWithContext(context.Context) GetUsergroupNotificationConfigOutput
}

type GetUsergroupNotificationConfigArgs struct {
	// Group email.
	GroupEmail pulumi.StringInput `pulumi:"groupEmail"`
	// Url of Microsoft teams webhook.
	MicrosoftTeamsWebhookUrl pulumi.StringInput `pulumi:"microsoftTeamsWebhookUrl"`
	// Pager duty key.
	PagerDutyKey pulumi.StringInput `pulumi:"pagerDutyKey"`
	// Send email to all the group members.
	SendEmailToAllUsers pulumi.BoolInput `pulumi:"sendEmailToAllUsers"`
	// Url of slack webhook.
	SlackWebhookUrl pulumi.StringInput `pulumi:"slackWebhookUrl"`
	// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetUsergroupNotificationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsergroupNotificationConfig)(nil)).Elem()
}

func (i GetUsergroupNotificationConfigArgs) ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput {
	return i.ToGetUsergroupNotificationConfigOutputWithContext(context.Background())
}

func (i GetUsergroupNotificationConfigArgs) ToGetUsergroupNotificationConfigOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsergroupNotificationConfigOutput)
}

// GetUsergroupNotificationConfigArrayInput is an input type that accepts GetUsergroupNotificationConfigArray and GetUsergroupNotificationConfigArrayOutput values.
// You can construct a concrete instance of `GetUsergroupNotificationConfigArrayInput` via:
//
//	GetUsergroupNotificationConfigArray{ GetUsergroupNotificationConfigArgs{...} }
type GetUsergroupNotificationConfigArrayInput interface {
	pulumi.Input

	ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput
	ToGetUsergroupNotificationConfigArrayOutputWithContext(context.Context) GetUsergroupNotificationConfigArrayOutput
}

type GetUsergroupNotificationConfigArray []GetUsergroupNotificationConfigInput

func (GetUsergroupNotificationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsergroupNotificationConfig)(nil)).Elem()
}

func (i GetUsergroupNotificationConfigArray) ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput {
	return i.ToGetUsergroupNotificationConfigArrayOutputWithContext(context.Background())
}

func (i GetUsergroupNotificationConfigArray) ToGetUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsergroupNotificationConfigArrayOutput)
}

type GetUsergroupNotificationConfigOutput struct{ *pulumi.OutputState }

func (GetUsergroupNotificationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsergroupNotificationConfig)(nil)).Elem()
}

func (o GetUsergroupNotificationConfigOutput) ToGetUsergroupNotificationConfigOutput() GetUsergroupNotificationConfigOutput {
	return o
}

func (o GetUsergroupNotificationConfigOutput) ToGetUsergroupNotificationConfigOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigOutput {
	return o
}

// Group email.
func (o GetUsergroupNotificationConfigOutput) GroupEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.GroupEmail }).(pulumi.StringOutput)
}

// Url of Microsoft teams webhook.
func (o GetUsergroupNotificationConfigOutput) MicrosoftTeamsWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.MicrosoftTeamsWebhookUrl }).(pulumi.StringOutput)
}

// Pager duty key.
func (o GetUsergroupNotificationConfigOutput) PagerDutyKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.PagerDutyKey }).(pulumi.StringOutput)
}

// Send email to all the group members.
func (o GetUsergroupNotificationConfigOutput) SendEmailToAllUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) bool { return v.SendEmailToAllUsers }).(pulumi.BoolOutput)
}

// Url of slack webhook.
func (o GetUsergroupNotificationConfigOutput) SlackWebhookUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.SlackWebhookUrl }).(pulumi.StringOutput)
}

// Can be one of EMAIL, SLACK, PAGERDUTY, MSTEAMS.
func (o GetUsergroupNotificationConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsergroupNotificationConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetUsergroupNotificationConfigArrayOutput struct{ *pulumi.OutputState }

func (GetUsergroupNotificationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsergroupNotificationConfig)(nil)).Elem()
}

func (o GetUsergroupNotificationConfigArrayOutput) ToGetUsergroupNotificationConfigArrayOutput() GetUsergroupNotificationConfigArrayOutput {
	return o
}

func (o GetUsergroupNotificationConfigArrayOutput) ToGetUsergroupNotificationConfigArrayOutputWithContext(ctx context.Context) GetUsergroupNotificationConfigArrayOutput {
	return o
}

func (o GetUsergroupNotificationConfigArrayOutput) Index(i pulumi.IntInput) GetUsergroupNotificationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsergroupNotificationConfig {
		return vs[0].([]GetUsergroupNotificationConfig)[vs[1].(int)]
	}).(GetUsergroupNotificationConfigOutput)
}

type GetVariablesSpec struct {
	FixedValue string `pulumi:"fixedValue"`
	ValueType  string `pulumi:"valueType"`
}

// GetVariablesSpecInput is an input type that accepts GetVariablesSpecArgs and GetVariablesSpecOutput values.
// You can construct a concrete instance of `GetVariablesSpecInput` via:
//
//	GetVariablesSpecArgs{...}
type GetVariablesSpecInput interface {
	pulumi.Input

	ToGetVariablesSpecOutput() GetVariablesSpecOutput
	ToGetVariablesSpecOutputWithContext(context.Context) GetVariablesSpecOutput
}

type GetVariablesSpecArgs struct {
	FixedValue pulumi.StringInput `pulumi:"fixedValue"`
	ValueType  pulumi.StringInput `pulumi:"valueType"`
}

func (GetVariablesSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesSpec)(nil)).Elem()
}

func (i GetVariablesSpecArgs) ToGetVariablesSpecOutput() GetVariablesSpecOutput {
	return i.ToGetVariablesSpecOutputWithContext(context.Background())
}

func (i GetVariablesSpecArgs) ToGetVariablesSpecOutputWithContext(ctx context.Context) GetVariablesSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesSpecOutput)
}

// GetVariablesSpecArrayInput is an input type that accepts GetVariablesSpecArray and GetVariablesSpecArrayOutput values.
// You can construct a concrete instance of `GetVariablesSpecArrayInput` via:
//
//	GetVariablesSpecArray{ GetVariablesSpecArgs{...} }
type GetVariablesSpecArrayInput interface {
	pulumi.Input

	ToGetVariablesSpecArrayOutput() GetVariablesSpecArrayOutput
	ToGetVariablesSpecArrayOutputWithContext(context.Context) GetVariablesSpecArrayOutput
}

type GetVariablesSpecArray []GetVariablesSpecInput

func (GetVariablesSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesSpec)(nil)).Elem()
}

func (i GetVariablesSpecArray) ToGetVariablesSpecArrayOutput() GetVariablesSpecArrayOutput {
	return i.ToGetVariablesSpecArrayOutputWithContext(context.Background())
}

func (i GetVariablesSpecArray) ToGetVariablesSpecArrayOutputWithContext(ctx context.Context) GetVariablesSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVariablesSpecArrayOutput)
}

type GetVariablesSpecOutput struct{ *pulumi.OutputState }

func (GetVariablesSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVariablesSpec)(nil)).Elem()
}

func (o GetVariablesSpecOutput) ToGetVariablesSpecOutput() GetVariablesSpecOutput {
	return o
}

func (o GetVariablesSpecOutput) ToGetVariablesSpecOutputWithContext(ctx context.Context) GetVariablesSpecOutput {
	return o
}

func (o GetVariablesSpecOutput) FixedValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesSpec) string { return v.FixedValue }).(pulumi.StringOutput)
}

func (o GetVariablesSpecOutput) ValueType() pulumi.StringOutput {
	return o.ApplyT(func(v GetVariablesSpec) string { return v.ValueType }).(pulumi.StringOutput)
}

type GetVariablesSpecArrayOutput struct{ *pulumi.OutputState }

func (GetVariablesSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVariablesSpec)(nil)).Elem()
}

func (o GetVariablesSpecArrayOutput) ToGetVariablesSpecArrayOutput() GetVariablesSpecArrayOutput {
	return o
}

func (o GetVariablesSpecArrayOutput) ToGetVariablesSpecArrayOutputWithContext(ctx context.Context) GetVariablesSpecArrayOutput {
	return o
}

func (o GetVariablesSpecArrayOutput) Index(i pulumi.IntInput) GetVariablesSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVariablesSpec {
		return vs[0].([]GetVariablesSpec)[vs[1].(int)]
	}).(GetVariablesSpecOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsConnectorApiTokenInput)(nil)).Elem(), AppDynamicsConnectorApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsConnectorApiTokenPtrInput)(nil)).Elem(), AppDynamicsConnectorApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsConnectorUsernamePasswordInput)(nil)).Elem(), AppDynamicsConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDynamicsConnectorUsernamePasswordPtrInput)(nil)).Elem(), AppDynamicsConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryConnectorCredentialsInput)(nil)).Elem(), ArtifactoryConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactoryConnectorCredentialsPtrInput)(nil)).Elem(), ArtifactoryConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCCConnectorCrossAccountAccessInput)(nil)).Elem(), AwsCCConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCCConnectorCrossAccountAccessPtrInput)(nil)).Elem(), AwsCCConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorCrossAccountAccessInput)(nil)).Elem(), AwsConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorCrossAccountAccessPtrInput)(nil)).Elem(), AwsConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorInheritFromDelegateInput)(nil)).Elem(), AwsConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorInheritFromDelegatePtrInput)(nil)).Elem(), AwsConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorIrsaInput)(nil)).Elem(), AwsConnectorIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorIrsaPtrInput)(nil)).Elem(), AwsConnectorIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorManualInput)(nil)).Elem(), AwsConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsConnectorManualPtrInput)(nil)).Elem(), AwsConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorCredentialsInput)(nil)).Elem(), AwsKmsConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorCredentialsPtrInput)(nil)).Elem(), AwsKmsConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorCredentialsAssumeRoleInput)(nil)).Elem(), AwsKmsConnectorCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorCredentialsAssumeRolePtrInput)(nil)).Elem(), AwsKmsConnectorCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorCredentialsManualInput)(nil)).Elem(), AwsKmsConnectorCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsKmsConnectorCredentialsManualPtrInput)(nil)).Elem(), AwsKmsConnectorCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerConnectorCredentialsInput)(nil)).Elem(), AwsSecretManagerConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerConnectorCredentialsPtrInput)(nil)).Elem(), AwsSecretManagerConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerConnectorCredentialsAssumeRoleInput)(nil)).Elem(), AwsSecretManagerConnectorCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerConnectorCredentialsAssumeRolePtrInput)(nil)).Elem(), AwsSecretManagerConnectorCredentialsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerConnectorCredentialsManualInput)(nil)).Elem(), AwsSecretManagerConnectorCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsSecretManagerConnectorCredentialsManualPtrInput)(nil)).Elem(), AwsSecretManagerConnectorCredentialsManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorApiAuthenticationInput)(nil)).Elem(), BitbucketConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorApiAuthenticationPtrInput)(nil)).Elem(), BitbucketConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorCredentialsInput)(nil)).Elem(), BitbucketConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorCredentialsPtrInput)(nil)).Elem(), BitbucketConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorCredentialsHttpInput)(nil)).Elem(), BitbucketConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorCredentialsHttpPtrInput)(nil)).Elem(), BitbucketConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorCredentialsSshInput)(nil)).Elem(), BitbucketConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BitbucketConnectorCredentialsSshPtrInput)(nil)).Elem(), BitbucketConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CcmFiltersFilterPropertiesInput)(nil)).Elem(), CcmFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CcmFiltersFilterPropertiesPtrInput)(nil)).Elem(), CcmFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudCostBillingExportSpecInput)(nil)).Elem(), ConnectorAzureCloudCostBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudCostBillingExportSpecPtrInput)(nil)).Elem(), ConnectorAzureCloudCostBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrInput)(nil)).Elem(), ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorGcpCloudCostBillingExportSpecInput)(nil)).Elem(), ConnectorGcpCloudCostBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorGcpCloudCostBillingExportSpecPtrInput)(nil)).Elem(), ConnectorGcpCloudCostBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorJenkinsAuthInput)(nil)).Elem(), ConnectorJenkinsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorJenkinsAuthPtrInput)(nil)).Elem(), ConnectorJenkinsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorJenkinsAuthJenkinsBearerTokenInput)(nil)).Elem(), ConnectorJenkinsAuthJenkinsBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorJenkinsAuthJenkinsBearerTokenPtrInput)(nil)).Elem(), ConnectorJenkinsAuthJenkinsBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorJenkinsAuthJenkinsUserNamePasswordInput)(nil)).Elem(), ConnectorJenkinsAuthJenkinsUserNamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorJenkinsAuthJenkinsUserNamePasswordPtrInput)(nil)).Elem(), ConnectorJenkinsAuthJenkinsUserNamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorOciHelmCredentialsInput)(nil)).Elem(), ConnectorOciHelmCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorOciHelmCredentialsPtrInput)(nil)).Elem(), ConnectorOciHelmCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorServiceNowAuthInput)(nil)).Elem(), ConnectorServiceNowAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorServiceNowAuthPtrInput)(nil)).Elem(), ConnectorServiceNowAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorServiceNowAuthAdfsInput)(nil)).Elem(), ConnectorServiceNowAuthAdfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorServiceNowAuthAdfsPtrInput)(nil)).Elem(), ConnectorServiceNowAuthAdfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorServiceNowAuthUsernamePasswordInput)(nil)).Elem(), ConnectorServiceNowAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorServiceNowAuthUsernamePasswordPtrInput)(nil)).Elem(), ConnectorServiceNowAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSpotPermanentTokenInput)(nil)).Elem(), ConnectorSpotPermanentTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorSpotPermanentTokenPtrInput)(nil)).Elem(), ConnectorSpotPermanentTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTasCredentialsInput)(nil)).Elem(), ConnectorTasCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTasCredentialsPtrInput)(nil)).Elem(), ConnectorTasCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTasCredentialsTasManualDetailsInput)(nil)).Elem(), ConnectorTasCredentialsTasManualDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTasCredentialsTasManualDetailsPtrInput)(nil)).Elem(), ConnectorTasCredentialsTasManualDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTerraformCloudCredentialsInput)(nil)).Elem(), ConnectorTerraformCloudCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTerraformCloudCredentialsPtrInput)(nil)).Elem(), ConnectorTerraformCloudCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTerraformCloudCredentialsApiTokenInput)(nil)).Elem(), ConnectorTerraformCloudCredentialsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorTerraformCloudCredentialsApiTokenPtrInput)(nil)).Elem(), ConnectorTerraformCloudCredentialsApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerConnectorCredentialsInput)(nil)).Elem(), DockerConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DockerConnectorCredentialsPtrInput)(nil)).Elem(), DockerConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentClustersMappingClusterInput)(nil)).Elem(), EnvironmentClustersMappingClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentClustersMappingClusterArrayInput)(nil)).Elem(), EnvironmentClustersMappingClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureFlagGitDetailsInput)(nil)).Elem(), FeatureFlagGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureFlagGitDetailsPtrInput)(nil)).Elem(), FeatureFlagGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureFlagVariationInput)(nil)).Elem(), FeatureFlagVariationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureFlagVariationArrayInput)(nil)).Elem(), FeatureFlagVariationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FiltersFilterPropertiesInput)(nil)).Elem(), FiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FiltersFilterPropertiesPtrInput)(nil)).Elem(), FiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpConnectorInheritFromDelegateInput)(nil)).Elem(), GcpConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GcpConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpConnectorManualInput)(nil)).Elem(), GcpConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpConnectorManualPtrInput)(nil)).Elem(), GcpConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitConnectorCredentialsInput)(nil)).Elem(), GitConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitConnectorCredentialsPtrInput)(nil)).Elem(), GitConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitConnectorCredentialsHttpInput)(nil)).Elem(), GitConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitConnectorCredentialsHttpPtrInput)(nil)).Elem(), GitConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitConnectorCredentialsSshInput)(nil)).Elem(), GitConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitConnectorCredentialsSshPtrInput)(nil)).Elem(), GitConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsAgentMetadataInput)(nil)).Elem(), GitOpsAgentMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsAgentMetadataArrayInput)(nil)).Elem(), GitOpsAgentMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterQueryInput)(nil)).Elem(), GitOpsClusterQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterQueryArrayInput)(nil)).Elem(), GitOpsClusterQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterQueryIdInput)(nil)).Elem(), GitOpsClusterQueryIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterQueryIdArrayInput)(nil)).Elem(), GitOpsClusterQueryIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestInput)(nil)).Elem(), GitOpsClusterRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestArrayInput)(nil)).Elem(), GitOpsClusterRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInput)(nil)).Elem(), GitOpsClusterRequestClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigAwsAuthConfigInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigAwsAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigAwsAuthConfigArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigAwsAuthConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigExecProviderConfigInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigExecProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigExecProviderConfigArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigExecProviderConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigTlsClientConfigInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigTlsClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterConfigTlsClientConfigArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterConfigTlsClientConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoCacheInfoInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoCacheInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoCacheInfoArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoCacheInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionStateInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoConnectionStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionStateArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoConnectionStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterRefreshRequestedAtInput)(nil)).Elem(), GitOpsClusterRequestClusterRefreshRequestedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestClusterRefreshRequestedAtArrayInput)(nil)).Elem(), GitOpsClusterRequestClusterRefreshRequestedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestIdInput)(nil)).Elem(), GitOpsClusterRequestIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestIdArrayInput)(nil)).Elem(), GitOpsClusterRequestIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestUpdateMaskInput)(nil)).Elem(), GitOpsClusterRequestUpdateMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsClusterRequestUpdateMaskArrayInput)(nil)).Elem(), GitOpsClusterRequestUpdateMaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsRepositoryRepoInput)(nil)).Elem(), GitOpsRepositoryRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsRepositoryRepoArrayInput)(nil)).Elem(), GitOpsRepositoryRepoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsRepositoryUpdateMaskInput)(nil)).Elem(), GitOpsRepositoryUpdateMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitOpsRepositoryUpdateMaskArrayInput)(nil)).Elem(), GitOpsRepositoryUpdateMaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorApiAuthenticationInput)(nil)).Elem(), GithubConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorApiAuthenticationPtrInput)(nil)).Elem(), GithubConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorApiAuthenticationGithubAppInput)(nil)).Elem(), GithubConnectorApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorApiAuthenticationGithubAppPtrInput)(nil)).Elem(), GithubConnectorApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorCredentialsInput)(nil)).Elem(), GithubConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorCredentialsPtrInput)(nil)).Elem(), GithubConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorCredentialsHttpInput)(nil)).Elem(), GithubConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorCredentialsHttpPtrInput)(nil)).Elem(), GithubConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorCredentialsSshInput)(nil)).Elem(), GithubConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GithubConnectorCredentialsSshPtrInput)(nil)).Elem(), GithubConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorApiAuthenticationInput)(nil)).Elem(), GitlabConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorApiAuthenticationPtrInput)(nil)).Elem(), GitlabConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorCredentialsInput)(nil)).Elem(), GitlabConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorCredentialsPtrInput)(nil)).Elem(), GitlabConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorCredentialsHttpInput)(nil)).Elem(), GitlabConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorCredentialsHttpPtrInput)(nil)).Elem(), GitlabConnectorCredentialsHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorCredentialsSshInput)(nil)).Elem(), GitlabConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitlabConnectorCredentialsSshPtrInput)(nil)).Elem(), GitlabConnectorCredentialsSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationInput)(nil)).Elem(), GitopsApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationArrayInput)(nil)).Elem(), GitopsApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationMetadataInput)(nil)).Elem(), GitopsApplicationsApplicationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationMetadataArrayInput)(nil)).Elem(), GitopsApplicationsApplicationMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationMetadataOwnerReferenceInput)(nil)).Elem(), GitopsApplicationsApplicationMetadataOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationMetadataOwnerReferenceArrayInput)(nil)).Elem(), GitopsApplicationsApplicationMetadataOwnerReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecInput)(nil)).Elem(), GitopsApplicationsApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecDestinationInput)(nil)).Elem(), GitopsApplicationsApplicationSpecDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecDestinationArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceHelmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceHelmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmFileParameterInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceHelmFileParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmParameterInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceHelmParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceHelmParameterArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceHelmParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnetInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceKsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnetArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceKsonnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnetParameterInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceKsonnetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKustomizeInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceKustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourceKustomizeArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourceKustomizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePluginInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourcePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePluginArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourcePluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePluginEnvInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourcePluginEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSourcePluginEnvArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSourcePluginEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyAutomatedInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyAutomatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetryInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyRetryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput)(nil)).Elem(), GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgRequestInput)(nil)).Elem(), GitopsGnupgRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgRequestArrayInput)(nil)).Elem(), GitopsGnupgRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgRequestPublickeyInput)(nil)).Elem(), GitopsGnupgRequestPublickeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsGnupgRequestPublickeyArrayInput)(nil)).Elem(), GitopsGnupgRequestPublickeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestInput)(nil)).Elem(), GitopsRepoCertRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestArrayInput)(nil)).Elem(), GitopsRepoCertRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestCertificateInput)(nil)).Elem(), GitopsRepoCertRequestCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestCertificateArrayInput)(nil)).Elem(), GitopsRepoCertRequestCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestCertificateItemInput)(nil)).Elem(), GitopsRepoCertRequestCertificateItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestCertificateItemArrayInput)(nil)).Elem(), GitopsRepoCertRequestCertificateItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestCertificateMetadataInput)(nil)).Elem(), GitopsRepoCertRequestCertificateMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCertRequestCertificateMetadataArrayInput)(nil)).Elem(), GitopsRepoCertRequestCertificateMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCredCredInput)(nil)).Elem(), GitopsRepoCredCredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GitopsRepoCredCredArrayInput)(nil)).Elem(), GitopsRepoCredCredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmConnectorCredentialsInput)(nil)).Elem(), HelmConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HelmConnectorCredentialsPtrInput)(nil)).Elem(), HelmConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetGitDetailsInput)(nil)).Elem(), InputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InputSetGitDetailsPtrInput)(nil)).Elem(), InputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthInput)(nil)).Elem(), JiraConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthPtrInput)(nil)).Elem(), JiraConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthUsernamePasswordInput)(nil)).Elem(), JiraConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JiraConnectorAuthUsernamePasswordPtrInput)(nil)).Elem(), JiraConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorClientKeyCertInput)(nil)).Elem(), KubernetesConnectorClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorClientKeyCertPtrInput)(nil)).Elem(), KubernetesConnectorClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorInheritFromDelegateInput)(nil)).Elem(), KubernetesConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorInheritFromDelegatePtrInput)(nil)).Elem(), KubernetesConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorOpenidConnectInput)(nil)).Elem(), KubernetesConnectorOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorOpenidConnectPtrInput)(nil)).Elem(), KubernetesConnectorOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorServiceAccountInput)(nil)).Elem(), KubernetesConnectorServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorServiceAccountPtrInput)(nil)).Elem(), KubernetesConnectorServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorUsernamePasswordInput)(nil)).Elem(), KubernetesConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesConnectorUsernamePasswordPtrInput)(nil)).Elem(), KubernetesConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindowInput)(nil)).Elem(), ManualFreezeCurrentOrUpcomingWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeCurrentOrUpcomingWindowArrayInput)(nil)).Elem(), ManualFreezeCurrentOrUpcomingWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowInput)(nil)).Elem(), ManualFreezeFreezeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowArrayInput)(nil)).Elem(), ManualFreezeFreezeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceArrayInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput)(nil)).Elem(), ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestInput)(nil)).Elem(), MonitoredServiceRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestPtrInput)(nil)).Elem(), MonitoredServiceRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestChangeSourceInput)(nil)).Elem(), MonitoredServiceRequestChangeSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestChangeSourceArrayInput)(nil)).Elem(), MonitoredServiceRequestChangeSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestDependencyInput)(nil)).Elem(), MonitoredServiceRequestDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestDependencyArrayInput)(nil)).Elem(), MonitoredServiceRequestDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestHealthSourceInput)(nil)).Elem(), MonitoredServiceRequestHealthSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestHealthSourceArrayInput)(nil)).Elem(), MonitoredServiceRequestHealthSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRefInput)(nil)).Elem(), MonitoredServiceRequestNotificationRuleRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoredServiceRequestNotificationRuleRefArrayInput)(nil)).Elem(), MonitoredServiceRequestNotificationRuleRefArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusConnectorCredentialsInput)(nil)).Elem(), NexusConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NexusConnectorCredentialsPtrInput)(nil)).Elem(), NexusConnectorCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesInput)(nil)).Elem(), PipelineFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFiltersFilterPropertiesPtrInput)(nil)).Elem(), PipelineFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitDetailsInput)(nil)).Elem(), PipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitDetailsPtrInput)(nil)).Elem(), PipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicysetPolicyInput)(nil)).Elem(), PolicysetPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicysetPolicyArrayInput)(nil)).Elem(), PolicysetPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusConnectorHeaderInput)(nil)).Elem(), PrometheusConnectorHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrometheusConnectorHeaderArrayInput)(nil)).Elem(), PrometheusConnectorHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupIncludedScopeInput)(nil)).Elem(), ResourceGroupIncludedScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupIncludedScopeArrayInput)(nil)).Elem(), ResourceGroupIncludedScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterInput)(nil)).Elem(), ResourceGroupResourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterArrayInput)(nil)).Elem(), ResourceGroupResourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceInput)(nil)).Elem(), ResourceGroupResourceFilterResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceArrayInput)(nil)).Elem(), ResourceGroupResourceFilterResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilterInput)(nil)).Elem(), ResourceGroupResourceFilterResourceAttributeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupResourceFilterResourceAttributeFilterArrayInput)(nil)).Elem(), ResourceGroupResourceFilterResourceAttributeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleAssignmentsPrincipalInput)(nil)).Elem(), RoleAssignmentsPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleAssignmentsPrincipalArrayInput)(nil)).Elem(), RoleAssignmentsPrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosInput)(nil)).Elem(), SecretSshkeyKerberosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosPtrInput)(nil)).Elem(), SecretSshkeyKerberosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpecInput)(nil)).Elem(), SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrInput)(nil)).Elem(), SecretSshkeyKerberosTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpecInput)(nil)).Elem(), SecretSshkeyKerberosTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeyKerberosTgtPasswordSpecPtrInput)(nil)).Elem(), SecretSshkeyKerberosTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshInput)(nil)).Elem(), SecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshPtrInput)(nil)).Elem(), SecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshPasswordCredentialInput)(nil)).Elem(), SecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshPasswordCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyPathCredentialInput)(nil)).Elem(), SecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyPathCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredentialInput)(nil)).Elem(), SecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretSshkeySshSshkeyReferenceCredentialPtrInput)(nil)).Elem(), SecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestInput)(nil)).Elem(), SloRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestPtrInput)(nil)).Elem(), SloRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestNotificationRuleRefInput)(nil)).Elem(), SloRequestNotificationRuleRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestNotificationRuleRefArrayInput)(nil)).Elem(), SloRequestNotificationRuleRefArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestSloTargetInput)(nil)).Elem(), SloRequestSloTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloRequestSloTargetPtrInput)(nil)).Elem(), SloRequestSloTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFiltersFilterPropertiesInput)(nil)).Elem(), TemplateFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateFiltersFilterPropertiesPtrInput)(nil)).Elem(), TemplateFiltersFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGitDetailsInput)(nil)).Elem(), TemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateGitDetailsPtrInput)(nil)).Elem(), TemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleBindingInput)(nil)).Elem(), UserRoleBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserRoleBindingArrayInput)(nil)).Elem(), UserRoleBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupNotificationConfigInput)(nil)).Elem(), UsergroupNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UsergroupNotificationConfigArrayInput)(nil)).Elem(), UsergroupNotificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablesSpecInput)(nil)).Elem(), VariablesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VariablesSpecPtrInput)(nil)).Elem(), VariablesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorApiTokenInput)(nil)).Elem(), GetAppDynamicsConnectorApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorApiTokenArrayInput)(nil)).Elem(), GetAppDynamicsConnectorApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorUsernamePasswordInput)(nil)).Elem(), GetAppDynamicsConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDynamicsConnectorUsernamePasswordArrayInput)(nil)).Elem(), GetAppDynamicsConnectorUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetArtifactoryConnectorCredentialInput)(nil)).Elem(), GetArtifactoryConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetArtifactoryConnectorCredentialArrayInput)(nil)).Elem(), GetArtifactoryConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccessInput)(nil)).Elem(), GetAwsCCConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsCCConnectorCrossAccountAccessArrayInput)(nil)).Elem(), GetAwsCCConnectorCrossAccountAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorCrossAccountAccessInput)(nil)).Elem(), GetAwsConnectorCrossAccountAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorCrossAccountAccessArrayInput)(nil)).Elem(), GetAwsConnectorCrossAccountAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorInheritFromDelegateInput)(nil)).Elem(), GetAwsConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GetAwsConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorIrsaInput)(nil)).Elem(), GetAwsConnectorIrsaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorIrsaArrayInput)(nil)).Elem(), GetAwsConnectorIrsaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorManualInput)(nil)).Elem(), GetAwsConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsConnectorManualArrayInput)(nil)).Elem(), GetAwsConnectorManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialInput)(nil)).Elem(), GetAwsKmsConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRoleInput)(nil)).Elem(), GetAwsKmsConnectorCredentialAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialAssumeRoleArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialAssumeRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialManualInput)(nil)).Elem(), GetAwsKmsConnectorCredentialManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsKmsConnectorCredentialManualArrayInput)(nil)).Elem(), GetAwsKmsConnectorCredentialManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRoleInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialAssumeRoleArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialAssumeRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManualInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAwsSecretManagerConnectorCredentialManualArrayInput)(nil)).Elem(), GetAwsSecretManagerConnectorCredentialManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorApiAuthenticationInput)(nil)).Elem(), GetBitbucketConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorApiAuthenticationArrayInput)(nil)).Elem(), GetBitbucketConnectorApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialInput)(nil)).Elem(), GetBitbucketConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialArrayInput)(nil)).Elem(), GetBitbucketConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialHttpInput)(nil)).Elem(), GetBitbucketConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialHttpArrayInput)(nil)).Elem(), GetBitbucketConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialSshInput)(nil)).Elem(), GetBitbucketConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBitbucketConnectorCredentialSshArrayInput)(nil)).Elem(), GetBitbucketConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCcmFiltersFilterPropertyInput)(nil)).Elem(), GetCcmFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCcmFiltersFilterPropertyArrayInput)(nil)).Elem(), GetCcmFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudCostBillingExportSpecInput)(nil)).Elem(), GetConnectorAzureCloudCostBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudCostBillingExportSpecArrayInput)(nil)).Elem(), GetConnectorAzureCloudCostBillingExportSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayInput)(nil)).Elem(), GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorGcpCloudCostBillingExportSpecInput)(nil)).Elem(), GetConnectorGcpCloudCostBillingExportSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorGcpCloudCostBillingExportSpecArrayInput)(nil)).Elem(), GetConnectorGcpCloudCostBillingExportSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJenkinsAuthInput)(nil)).Elem(), GetConnectorJenkinsAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJenkinsAuthArrayInput)(nil)).Elem(), GetConnectorJenkinsAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsBearerTokenInput)(nil)).Elem(), GetConnectorJenkinsAuthJenkinsBearerTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsBearerTokenArrayInput)(nil)).Elem(), GetConnectorJenkinsAuthJenkinsBearerTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsUserNamePasswordInput)(nil)).Elem(), GetConnectorJenkinsAuthJenkinsUserNamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayInput)(nil)).Elem(), GetConnectorJenkinsAuthJenkinsUserNamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorOciHelmCredentialInput)(nil)).Elem(), GetConnectorOciHelmCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorOciHelmCredentialArrayInput)(nil)).Elem(), GetConnectorOciHelmCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorServiceNowAuthInput)(nil)).Elem(), GetConnectorServiceNowAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorServiceNowAuthArrayInput)(nil)).Elem(), GetConnectorServiceNowAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorServiceNowAuthAdfInput)(nil)).Elem(), GetConnectorServiceNowAuthAdfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorServiceNowAuthAdfArrayInput)(nil)).Elem(), GetConnectorServiceNowAuthAdfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorServiceNowAuthUsernamePasswordInput)(nil)).Elem(), GetConnectorServiceNowAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorServiceNowAuthUsernamePasswordArrayInput)(nil)).Elem(), GetConnectorServiceNowAuthUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorSpotPermanentTokenInput)(nil)).Elem(), GetConnectorSpotPermanentTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorSpotPermanentTokenArrayInput)(nil)).Elem(), GetConnectorSpotPermanentTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTasCredentialInput)(nil)).Elem(), GetConnectorTasCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTasCredentialArrayInput)(nil)).Elem(), GetConnectorTasCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTasCredentialTasManualDetailInput)(nil)).Elem(), GetConnectorTasCredentialTasManualDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTasCredentialTasManualDetailArrayInput)(nil)).Elem(), GetConnectorTasCredentialTasManualDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTerraformCloudCredentialInput)(nil)).Elem(), GetConnectorTerraformCloudCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTerraformCloudCredentialArrayInput)(nil)).Elem(), GetConnectorTerraformCloudCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTerraformCloudCredentialApiTokenInput)(nil)).Elem(), GetConnectorTerraformCloudCredentialApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectorTerraformCloudCredentialApiTokenArrayInput)(nil)).Elem(), GetConnectorTerraformCloudCredentialApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDockerConnectorCredentialInput)(nil)).Elem(), GetDockerConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDockerConnectorCredentialArrayInput)(nil)).Elem(), GetDockerConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFiltersFilterPropertyInput)(nil)).Elem(), GetFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFiltersFilterPropertyArrayInput)(nil)).Elem(), GetFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorInheritFromDelegateInput)(nil)).Elem(), GetGcpConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GetGcpConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorManualInput)(nil)).Elem(), GetGcpConnectorManualArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGcpConnectorManualArrayInput)(nil)).Elem(), GetGcpConnectorManualArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialInput)(nil)).Elem(), GetGitConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialArrayInput)(nil)).Elem(), GetGitConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialHttpInput)(nil)).Elem(), GetGitConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialHttpArrayInput)(nil)).Elem(), GetGitConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialSshInput)(nil)).Elem(), GetGitConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitConnectorCredentialSshArrayInput)(nil)).Elem(), GetGitConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationArrayInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubAppInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationGithubAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorApiAuthenticationGithubAppArrayInput)(nil)).Elem(), GetGithubConnectorApiAuthenticationGithubAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialInput)(nil)).Elem(), GetGithubConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialArrayInput)(nil)).Elem(), GetGithubConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpInput)(nil)).Elem(), GetGithubConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialHttpArrayInput)(nil)).Elem(), GetGithubConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialSshInput)(nil)).Elem(), GetGithubConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGithubConnectorCredentialSshArrayInput)(nil)).Elem(), GetGithubConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorApiAuthenticationInput)(nil)).Elem(), GetGitlabConnectorApiAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorApiAuthenticationArrayInput)(nil)).Elem(), GetGitlabConnectorApiAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialInput)(nil)).Elem(), GetGitlabConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialArrayInput)(nil)).Elem(), GetGitlabConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialHttpInput)(nil)).Elem(), GetGitlabConnectorCredentialHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialHttpArrayInput)(nil)).Elem(), GetGitlabConnectorCredentialHttpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialSshInput)(nil)).Elem(), GetGitlabConnectorCredentialSshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitlabConnectorCredentialSshArrayInput)(nil)).Elem(), GetGitlabConnectorCredentialSshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentMetadataInput)(nil)).Elem(), GetGitopsAgentMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsAgentMetadataArrayInput)(nil)).Elem(), GetGitopsAgentMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationInput)(nil)).Elem(), GetGitopsApplicationsApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReferenceInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataOwnerReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationMetadataOwnerReferenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestinationInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecDestinationArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameterInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameterInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceHelmParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameterInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomizeInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKustomizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourceKustomizeArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourceKustomizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnvInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSourcePluginEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayInput)(nil)).Elem(), GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterQueryInput)(nil)).Elem(), GetGitopsClusterQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterQueryArrayInput)(nil)).Elem(), GetGitopsClusterQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterQueryIdInput)(nil)).Elem(), GetGitopsClusterQueryIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterQueryIdArrayInput)(nil)).Elem(), GetGitopsClusterQueryIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestInput)(nil)).Elem(), GetGitopsClusterRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestArrayInput)(nil)).Elem(), GetGitopsClusterRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInput)(nil)).Elem(), GetGitopsClusterRequestClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigAwsAuthConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigAwsAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigAwsAuthConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigExecProviderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigExecProviderConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigExecProviderConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfigInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigTlsClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterConfigTlsClientConfigArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterConfigTlsClientConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfoInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoCacheInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoCacheInfoArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoCacheInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAtInput)(nil)).Elem(), GetGitopsClusterRequestClusterRefreshRequestedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestClusterRefreshRequestedAtArrayInput)(nil)).Elem(), GetGitopsClusterRequestClusterRefreshRequestedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestIdInput)(nil)).Elem(), GetGitopsClusterRequestIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestIdArrayInput)(nil)).Elem(), GetGitopsClusterRequestIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestUpdateMaskInput)(nil)).Elem(), GetGitopsClusterRequestUpdateMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsClusterRequestUpdateMaskArrayInput)(nil)).Elem(), GetGitopsClusterRequestUpdateMaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestInput)(nil)).Elem(), GetGitopsGnupgRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestArrayInput)(nil)).Elem(), GetGitopsGnupgRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestPublickeyInput)(nil)).Elem(), GetGitopsGnupgRequestPublickeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsGnupgRequestPublickeyArrayInput)(nil)).Elem(), GetGitopsGnupgRequestPublickeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepoCredCredInput)(nil)).Elem(), GetGitopsRepoCredCredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepoCredCredArrayInput)(nil)).Elem(), GetGitopsRepoCredCredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepositoryRepoInput)(nil)).Elem(), GetGitopsRepositoryRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepositoryRepoArrayInput)(nil)).Elem(), GetGitopsRepositoryRepoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepositoryUpdateMaskInput)(nil)).Elem(), GetGitopsRepositoryUpdateMaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGitopsRepositoryUpdateMaskArrayInput)(nil)).Elem(), GetGitopsRepositoryUpdateMaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmConnectorCredentialInput)(nil)).Elem(), GetHelmConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHelmConnectorCredentialArrayInput)(nil)).Elem(), GetHelmConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInputSetGitDetailsInput)(nil)).Elem(), GetInputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInputSetGitDetailsPtrInput)(nil)).Elem(), GetInputSetGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthInput)(nil)).Elem(), GetJiraConnectorAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthArrayInput)(nil)).Elem(), GetJiraConnectorAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthUsernamePasswordInput)(nil)).Elem(), GetJiraConnectorAuthUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetJiraConnectorAuthUsernamePasswordArrayInput)(nil)).Elem(), GetJiraConnectorAuthUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorClientKeyCertInput)(nil)).Elem(), GetKubernetesConnectorClientKeyCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorClientKeyCertArrayInput)(nil)).Elem(), GetKubernetesConnectorClientKeyCertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegateInput)(nil)).Elem(), GetKubernetesConnectorInheritFromDelegateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorInheritFromDelegateArrayInput)(nil)).Elem(), GetKubernetesConnectorInheritFromDelegateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorOpenidConnectInput)(nil)).Elem(), GetKubernetesConnectorOpenidConnectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorOpenidConnectArrayInput)(nil)).Elem(), GetKubernetesConnectorOpenidConnectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorServiceAccountInput)(nil)).Elem(), GetKubernetesConnectorServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorServiceAccountArrayInput)(nil)).Elem(), GetKubernetesConnectorServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorUsernamePasswordInput)(nil)).Elem(), GetKubernetesConnectorUsernamePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesConnectorUsernamePasswordArrayInput)(nil)).Elem(), GetKubernetesConnectorUsernamePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindowInput)(nil)).Elem(), GetManualFreezeCurrentOrUpcomingWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeCurrentOrUpcomingWindowArrayInput)(nil)).Elem(), GetManualFreezeCurrentOrUpcomingWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowInput)(nil)).Elem(), GetManualFreezeFreezeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowArrayInput)(nil)).Elem(), GetManualFreezeFreezeWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceArrayInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayInput)(nil)).Elem(), GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNexusConnectorCredentialInput)(nil)).Elem(), GetNexusConnectorCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNexusConnectorCredentialArrayInput)(nil)).Elem(), GetNexusConnectorCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionsPermissionInput)(nil)).Elem(), GetPermissionsPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPermissionsPermissionArrayInput)(nil)).Elem(), GetPermissionsPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineFiltersFilterPropertyArrayInput)(nil)).Elem(), GetPipelineFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineGitDetailsInput)(nil)).Elem(), GetPipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineGitDetailsPtrInput)(nil)).Elem(), GetPipelineGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicysetPolicyInput)(nil)).Elem(), GetPolicysetPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicysetPolicyArrayInput)(nil)).Elem(), GetPolicysetPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrometheusConnectorHeaderInput)(nil)).Elem(), GetPrometheusConnectorHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrometheusConnectorHeaderArrayInput)(nil)).Elem(), GetPrometheusConnectorHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupIncludedScopeInput)(nil)).Elem(), GetResourceGroupIncludedScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupIncludedScopeArrayInput)(nil)).Elem(), GetResourceGroupIncludedScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterInput)(nil)).Elem(), GetResourceGroupResourceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilterInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceAttributeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceGroupResourceFilterResourceAttributeFilterArrayInput)(nil)).Elem(), GetResourceGroupResourceFilterResourceAttributeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleAssignmentsPrincipalInput)(nil)).Elem(), GetRoleAssignmentsPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleAssignmentsPrincipalArrayInput)(nil)).Elem(), GetRoleAssignmentsPrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoInput)(nil)).Elem(), GetSecretSshkeyKerberoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpecInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpecInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtPasswordSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeyKerberoTgtPasswordSpecArrayInput)(nil)).Elem(), GetSecretSshkeyKerberoTgtPasswordSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshInput)(nil)).Elem(), GetSecretSshkeySshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshArrayInput)(nil)).Elem(), GetSecretSshkeySshArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshPasswordCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshPasswordCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshPasswordCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshkeyPathCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyPathCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshkeyPathCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredentialInput)(nil)).Elem(), GetSecretSshkeySshSshkeyReferenceCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretSshkeySshSshkeyReferenceCredentialArrayInput)(nil)).Elem(), GetSecretSshkeySshSshkeyReferenceCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateFiltersFilterPropertyInput)(nil)).Elem(), GetTemplateFiltersFilterPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateFiltersFilterPropertyArrayInput)(nil)).Elem(), GetTemplateFiltersFilterPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateGitDetailsInput)(nil)).Elem(), GetTemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateGitDetailsPtrInput)(nil)).Elem(), GetTemplateGitDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsergroupNotificationConfigInput)(nil)).Elem(), GetUsergroupNotificationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsergroupNotificationConfigArrayInput)(nil)).Elem(), GetUsergroupNotificationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesSpecInput)(nil)).Elem(), GetVariablesSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVariablesSpecArrayInput)(nil)).Elem(), GetVariablesSpecArray{})
	pulumi.RegisterOutputType(AppDynamicsConnectorApiTokenOutput{})
	pulumi.RegisterOutputType(AppDynamicsConnectorApiTokenPtrOutput{})
	pulumi.RegisterOutputType(AppDynamicsConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(AppDynamicsConnectorUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ArtifactoryConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(ArtifactoryConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AwsCCConnectorCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(AwsCCConnectorCrossAccountAccessPtrOutput{})
	pulumi.RegisterOutputType(AwsConnectorCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(AwsConnectorCrossAccountAccessPtrOutput{})
	pulumi.RegisterOutputType(AwsConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(AwsConnectorInheritFromDelegatePtrOutput{})
	pulumi.RegisterOutputType(AwsConnectorIrsaOutput{})
	pulumi.RegisterOutputType(AwsConnectorIrsaPtrOutput{})
	pulumi.RegisterOutputType(AwsConnectorManualOutput{})
	pulumi.RegisterOutputType(AwsConnectorManualPtrOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorCredentialsAssumeRoleOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorCredentialsAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorCredentialsManualOutput{})
	pulumi.RegisterOutputType(AwsKmsConnectorCredentialsManualPtrOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerConnectorCredentialsAssumeRoleOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerConnectorCredentialsAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerConnectorCredentialsManualOutput{})
	pulumi.RegisterOutputType(AwsSecretManagerConnectorCredentialsManualPtrOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorCredentialsHttpOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorCredentialsSshOutput{})
	pulumi.RegisterOutputType(BitbucketConnectorCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(CcmFiltersFilterPropertiesOutput{})
	pulumi.RegisterOutputType(CcmFiltersFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudCostBillingExportSpecOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudCostBillingExportSpecPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureInheritFromDelegateDetailsAuthAzureMsiAuthUaPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientKeyCertPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudProviderCredentialsAzureManualDetailsAuthAzureClientSecretKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectorGcpCloudCostBillingExportSpecOutput{})
	pulumi.RegisterOutputType(ConnectorGcpCloudCostBillingExportSpecPtrOutput{})
	pulumi.RegisterOutputType(ConnectorJenkinsAuthOutput{})
	pulumi.RegisterOutputType(ConnectorJenkinsAuthPtrOutput{})
	pulumi.RegisterOutputType(ConnectorJenkinsAuthJenkinsBearerTokenOutput{})
	pulumi.RegisterOutputType(ConnectorJenkinsAuthJenkinsBearerTokenPtrOutput{})
	pulumi.RegisterOutputType(ConnectorJenkinsAuthJenkinsUserNamePasswordOutput{})
	pulumi.RegisterOutputType(ConnectorJenkinsAuthJenkinsUserNamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectorOciHelmCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorOciHelmCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorServiceNowAuthOutput{})
	pulumi.RegisterOutputType(ConnectorServiceNowAuthPtrOutput{})
	pulumi.RegisterOutputType(ConnectorServiceNowAuthAdfsOutput{})
	pulumi.RegisterOutputType(ConnectorServiceNowAuthAdfsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorServiceNowAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(ConnectorServiceNowAuthUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ConnectorSpotPermanentTokenOutput{})
	pulumi.RegisterOutputType(ConnectorSpotPermanentTokenPtrOutput{})
	pulumi.RegisterOutputType(ConnectorTasCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorTasCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorTasCredentialsTasManualDetailsOutput{})
	pulumi.RegisterOutputType(ConnectorTasCredentialsTasManualDetailsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorTerraformCloudCredentialsOutput{})
	pulumi.RegisterOutputType(ConnectorTerraformCloudCredentialsPtrOutput{})
	pulumi.RegisterOutputType(ConnectorTerraformCloudCredentialsApiTokenOutput{})
	pulumi.RegisterOutputType(ConnectorTerraformCloudCredentialsApiTokenPtrOutput{})
	pulumi.RegisterOutputType(DockerConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(DockerConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentClustersMappingClusterOutput{})
	pulumi.RegisterOutputType(EnvironmentClustersMappingClusterArrayOutput{})
	pulumi.RegisterOutputType(FeatureFlagGitDetailsOutput{})
	pulumi.RegisterOutputType(FeatureFlagGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(FeatureFlagVariationOutput{})
	pulumi.RegisterOutputType(FeatureFlagVariationArrayOutput{})
	pulumi.RegisterOutputType(FiltersFilterPropertiesOutput{})
	pulumi.RegisterOutputType(FiltersFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GcpConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GcpConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GcpConnectorManualOutput{})
	pulumi.RegisterOutputType(GcpConnectorManualPtrOutput{})
	pulumi.RegisterOutputType(GitConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(GitConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GitConnectorCredentialsHttpOutput{})
	pulumi.RegisterOutputType(GitConnectorCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(GitConnectorCredentialsSshOutput{})
	pulumi.RegisterOutputType(GitConnectorCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(GitOpsAgentMetadataOutput{})
	pulumi.RegisterOutputType(GitOpsAgentMetadataArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterQueryOutput{})
	pulumi.RegisterOutputType(GitOpsClusterQueryArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterQueryIdOutput{})
	pulumi.RegisterOutputType(GitOpsClusterQueryIdArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigAwsAuthConfigOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigAwsAuthConfigArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigExecProviderConfigOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigExecProviderConfigArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigTlsClientConfigOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterConfigTlsClientConfigArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoCacheInfoOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoCacheInfoArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoConnectionStateOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoConnectionStateArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterRefreshRequestedAtOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestClusterRefreshRequestedAtArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestIdOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestIdArrayOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestUpdateMaskOutput{})
	pulumi.RegisterOutputType(GitOpsClusterRequestUpdateMaskArrayOutput{})
	pulumi.RegisterOutputType(GitOpsRepositoryRepoOutput{})
	pulumi.RegisterOutputType(GitOpsRepositoryRepoArrayOutput{})
	pulumi.RegisterOutputType(GitOpsRepositoryUpdateMaskOutput{})
	pulumi.RegisterOutputType(GitOpsRepositoryUpdateMaskArrayOutput{})
	pulumi.RegisterOutputType(GithubConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GithubConnectorApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GithubConnectorApiAuthenticationGithubAppOutput{})
	pulumi.RegisterOutputType(GithubConnectorApiAuthenticationGithubAppPtrOutput{})
	pulumi.RegisterOutputType(GithubConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(GithubConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GithubConnectorCredentialsHttpOutput{})
	pulumi.RegisterOutputType(GithubConnectorCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(GithubConnectorCredentialsSshOutput{})
	pulumi.RegisterOutputType(GithubConnectorCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(GitlabConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GitlabConnectorApiAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(GitlabConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(GitlabConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GitlabConnectorCredentialsHttpOutput{})
	pulumi.RegisterOutputType(GitlabConnectorCredentialsHttpPtrOutput{})
	pulumi.RegisterOutputType(GitlabConnectorCredentialsSshOutput{})
	pulumi.RegisterOutputType(GitlabConnectorCredentialsSshPtrOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationMetadataOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationMetadataArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationMetadataOwnerReferenceOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecDestinationOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecDestinationArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceHelmOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceHelmArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceHelmFileParameterOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceHelmParameterOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceKsonnetOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceKsonnetArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceKsonnetParameterOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceKustomizeOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourceKustomizeArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourcePluginOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourcePluginArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyRetryOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput{})
	pulumi.RegisterOutputType(GitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput{})
	pulumi.RegisterOutputType(GitopsGnupgRequestOutput{})
	pulumi.RegisterOutputType(GitopsGnupgRequestArrayOutput{})
	pulumi.RegisterOutputType(GitopsGnupgRequestPublickeyOutput{})
	pulumi.RegisterOutputType(GitopsGnupgRequestPublickeyArrayOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestArrayOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestCertificateOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestCertificateArrayOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestCertificateItemOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestCertificateItemArrayOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestCertificateMetadataOutput{})
	pulumi.RegisterOutputType(GitopsRepoCertRequestCertificateMetadataArrayOutput{})
	pulumi.RegisterOutputType(GitopsRepoCredCredOutput{})
	pulumi.RegisterOutputType(GitopsRepoCredCredArrayOutput{})
	pulumi.RegisterOutputType(HelmConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(HelmConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(InputSetGitDetailsOutput{})
	pulumi.RegisterOutputType(InputSetGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthPtrOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(JiraConnectorAuthUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorClientKeyCertOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorClientKeyCertPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorInheritFromDelegatePtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorOpenidConnectOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorOpenidConnectPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorServiceAccountOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorServiceAccountPtrOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(KubernetesConnectorUsernamePasswordPtrOutput{})
	pulumi.RegisterOutputType(ManualFreezeCurrentOrUpcomingWindowOutput{})
	pulumi.RegisterOutputType(ManualFreezeCurrentOrUpcomingWindowArrayOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowArrayOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput{})
	pulumi.RegisterOutputType(ManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestPtrOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestChangeSourceOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestChangeSourceArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestDependencyOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestDependencyArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestHealthSourceOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestHealthSourceArrayOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestNotificationRuleRefOutput{})
	pulumi.RegisterOutputType(MonitoredServiceRequestNotificationRuleRefArrayOutput{})
	pulumi.RegisterOutputType(NexusConnectorCredentialsOutput{})
	pulumi.RegisterOutputType(NexusConnectorCredentialsPtrOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesOutput{})
	pulumi.RegisterOutputType(PipelineFiltersFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PipelineGitDetailsOutput{})
	pulumi.RegisterOutputType(PipelineGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(PolicysetPolicyOutput{})
	pulumi.RegisterOutputType(PolicysetPolicyArrayOutput{})
	pulumi.RegisterOutputType(PrometheusConnectorHeaderOutput{})
	pulumi.RegisterOutputType(PrometheusConnectorHeaderArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupIncludedScopeOutput{})
	pulumi.RegisterOutputType(ResourceGroupIncludedScopeArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceAttributeFilterOutput{})
	pulumi.RegisterOutputType(ResourceGroupResourceFilterResourceAttributeFilterArrayOutput{})
	pulumi.RegisterOutputType(RoleAssignmentsPrincipalOutput{})
	pulumi.RegisterOutputType(RoleAssignmentsPrincipalArrayOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtKeyTabFilePathSpecOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtKeyTabFilePathSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtPasswordSpecOutput{})
	pulumi.RegisterOutputType(SecretSshkeyKerberosTgtPasswordSpecPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshPasswordCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshPasswordCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyPathCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyPathCredentialPtrOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyReferenceCredentialOutput{})
	pulumi.RegisterOutputType(SecretSshkeySshSshkeyReferenceCredentialPtrOutput{})
	pulumi.RegisterOutputType(SloRequestOutput{})
	pulumi.RegisterOutputType(SloRequestPtrOutput{})
	pulumi.RegisterOutputType(SloRequestNotificationRuleRefOutput{})
	pulumi.RegisterOutputType(SloRequestNotificationRuleRefArrayOutput{})
	pulumi.RegisterOutputType(SloRequestSloTargetOutput{})
	pulumi.RegisterOutputType(SloRequestSloTargetPtrOutput{})
	pulumi.RegisterOutputType(TemplateFiltersFilterPropertiesOutput{})
	pulumi.RegisterOutputType(TemplateFiltersFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TemplateGitDetailsOutput{})
	pulumi.RegisterOutputType(TemplateGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(UserRoleBindingOutput{})
	pulumi.RegisterOutputType(UserRoleBindingArrayOutput{})
	pulumi.RegisterOutputType(UsergroupNotificationConfigOutput{})
	pulumi.RegisterOutputType(UsergroupNotificationConfigArrayOutput{})
	pulumi.RegisterOutputType(VariablesSpecOutput{})
	pulumi.RegisterOutputType(VariablesSpecPtrOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorApiTokenOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetAppDynamicsConnectorUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetArtifactoryConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetArtifactoryConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsCCConnectorCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(GetAwsCCConnectorCrossAccountAccessArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorCrossAccountAccessOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorCrossAccountAccessArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorIrsaOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorIrsaArrayOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorManualOutput{})
	pulumi.RegisterOutputType(GetAwsConnectorManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialAssumeRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialManualOutput{})
	pulumi.RegisterOutputType(GetAwsKmsConnectorCredentialManualArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialAssumeRoleArrayOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialManualOutput{})
	pulumi.RegisterOutputType(GetAwsSecretManagerConnectorCredentialManualArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetBitbucketConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetCcmFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetCcmFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudCostBillingExportSpecOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudCostBillingExportSpecArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureInheritFromDelegateDetailAuthAzureMsiAuthUaArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientKeyCertArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyOutput{})
	pulumi.RegisterOutputType(GetConnectorAzureCloudProviderCredentialAzureManualDetailAuthAzureClientSecretKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorGcpCloudCostBillingExportSpecOutput{})
	pulumi.RegisterOutputType(GetConnectorGcpCloudCostBillingExportSpecArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorJenkinsAuthOutput{})
	pulumi.RegisterOutputType(GetConnectorJenkinsAuthArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorJenkinsAuthJenkinsBearerTokenOutput{})
	pulumi.RegisterOutputType(GetConnectorJenkinsAuthJenkinsBearerTokenArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorJenkinsAuthJenkinsUserNamePasswordOutput{})
	pulumi.RegisterOutputType(GetConnectorJenkinsAuthJenkinsUserNamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorOciHelmCredentialOutput{})
	pulumi.RegisterOutputType(GetConnectorOciHelmCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorServiceNowAuthOutput{})
	pulumi.RegisterOutputType(GetConnectorServiceNowAuthArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorServiceNowAuthAdfOutput{})
	pulumi.RegisterOutputType(GetConnectorServiceNowAuthAdfArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorServiceNowAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetConnectorServiceNowAuthUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorSpotPermanentTokenOutput{})
	pulumi.RegisterOutputType(GetConnectorSpotPermanentTokenArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorTasCredentialOutput{})
	pulumi.RegisterOutputType(GetConnectorTasCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorTasCredentialTasManualDetailOutput{})
	pulumi.RegisterOutputType(GetConnectorTasCredentialTasManualDetailArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorTerraformCloudCredentialOutput{})
	pulumi.RegisterOutputType(GetConnectorTerraformCloudCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetConnectorTerraformCloudCredentialApiTokenOutput{})
	pulumi.RegisterOutputType(GetConnectorTerraformCloudCredentialApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetDockerConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetDockerConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorManualOutput{})
	pulumi.RegisterOutputType(GetGcpConnectorManualArrayOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGitConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationGithubAppOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorApiAuthenticationGithubAppArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGithubConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorApiAuthenticationOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorApiAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialHttpOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialHttpArrayOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialSshOutput{})
	pulumi.RegisterOutputType(GetGitlabConnectorCredentialSshArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentMetadataOutput{})
	pulumi.RegisterOutputType(GetGitopsAgentMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataOwnerReferenceOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationMetadataOwnerReferenceArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecDestinationOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetExtVarArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceDirectoryJsonnetTlaArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmFileParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmParameterOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceHelmParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKsonnetParameterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKustomizeOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourceKustomizeArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginEnvOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSourcePluginEnvArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyAutomatedArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffOutput{})
	pulumi.RegisterOutputType(GetGitopsApplicationsApplicationSpecSyncPolicyRetryBackoffArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterQueryOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterQueryArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterQueryIdOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterQueryIdArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigAwsAuthConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigAwsAuthConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigExecProviderConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigExecProviderConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigTlsClientConfigOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterConfigTlsClientConfigArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoCacheInfoOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoCacheInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterInfoConnectionStateAttemptedAtArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterRefreshRequestedAtOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestClusterRefreshRequestedAtArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestIdOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestIdArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestUpdateMaskOutput{})
	pulumi.RegisterOutputType(GetGitopsClusterRequestUpdateMaskArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestPublickeyOutput{})
	pulumi.RegisterOutputType(GetGitopsGnupgRequestPublickeyArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsRepoCredCredOutput{})
	pulumi.RegisterOutputType(GetGitopsRepoCredCredArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsRepositoryRepoOutput{})
	pulumi.RegisterOutputType(GetGitopsRepositoryRepoArrayOutput{})
	pulumi.RegisterOutputType(GetGitopsRepositoryUpdateMaskOutput{})
	pulumi.RegisterOutputType(GetGitopsRepositoryUpdateMaskArrayOutput{})
	pulumi.RegisterOutputType(GetHelmConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetHelmConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetInputSetGitDetailsOutput{})
	pulumi.RegisterOutputType(GetInputSetGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthArrayOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetJiraConnectorAuthUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorClientKeyCertOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorClientKeyCertArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorInheritFromDelegateOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorInheritFromDelegateArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorOpenidConnectOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorOpenidConnectArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorServiceAccountOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorUsernamePasswordOutput{})
	pulumi.RegisterOutputType(GetKubernetesConnectorUsernamePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeCurrentOrUpcomingWindowOutput{})
	pulumi.RegisterOutputType(GetManualFreezeCurrentOrUpcomingWindowArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecOutput{})
	pulumi.RegisterOutputType(GetManualFreezeFreezeWindowRecurrenceRecurrenceSpecArrayOutput{})
	pulumi.RegisterOutputType(GetNexusConnectorCredentialOutput{})
	pulumi.RegisterOutputType(GetNexusConnectorCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetPermissionsPermissionOutput{})
	pulumi.RegisterOutputType(GetPermissionsPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetPipelineFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineGitDetailsOutput{})
	pulumi.RegisterOutputType(GetPipelineGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetPolicysetPolicyOutput{})
	pulumi.RegisterOutputType(GetPolicysetPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetPrometheusConnectorHeaderOutput{})
	pulumi.RegisterOutputType(GetPrometheusConnectorHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupIncludedScopeOutput{})
	pulumi.RegisterOutputType(GetResourceGroupIncludedScopeArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceArrayOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceAttributeFilterOutput{})
	pulumi.RegisterOutputType(GetResourceGroupResourceFilterResourceAttributeFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRoleAssignmentsPrincipalOutput{})
	pulumi.RegisterOutputType(GetRoleAssignmentsPrincipalArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtKeyTabFilePathSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtPasswordSpecOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeyKerberoTgtPasswordSpecArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshPasswordCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshPasswordCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyPathCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyPathCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyReferenceCredentialOutput{})
	pulumi.RegisterOutputType(GetSecretSshkeySshSshkeyReferenceCredentialArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateFiltersFilterPropertyOutput{})
	pulumi.RegisterOutputType(GetTemplateFiltersFilterPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateGitDetailsOutput{})
	pulumi.RegisterOutputType(GetTemplateGitDetailsPtrOutput{})
	pulumi.RegisterOutputType(GetUsergroupNotificationConfigOutput{})
	pulumi.RegisterOutputType(GetUsergroupNotificationConfigArrayOutput{})
	pulumi.RegisterOutputType(GetVariablesSpecOutput{})
	pulumi.RegisterOutputType(GetVariablesSpecArrayOutput{})
}
