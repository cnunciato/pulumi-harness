// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource for looking up a GCP Cloud Cost Connector.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.LookupConnectorGcpCloudCost(ctx, &platform.LookupConnectorGcpCloudCostArgs{
//				Identifier: "identifier",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupConnectorGcpCloudCost(ctx *pulumi.Context, args *LookupConnectorGcpCloudCostArgs, opts ...pulumi.InvokeOption) (*LookupConnectorGcpCloudCostResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupConnectorGcpCloudCostResult
	err := ctx.Invoke("harness:platform/getConnectorGcpCloudCost:getConnectorGcpCloudCost", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectorGcpCloudCost.
type LookupConnectorGcpCloudCostArgs struct {
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getConnectorGcpCloudCost.
type LookupConnectorGcpCloudCostResult struct {
	// Returns billing details.
	BillingExportSpecs []GetConnectorGcpCloudCostBillingExportSpec `pulumi:"billingExportSpecs"`
	// Description of the resource.
	Description string `pulumi:"description"`
	// Indicates which features to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// GCP Project Id.
	GcpProjectId string `pulumi:"gcpProjectId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Email corresponding to the Service Account.
	ServiceAccountEmail string `pulumi:"serviceAccountEmail"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
}

func LookupConnectorGcpCloudCostOutput(ctx *pulumi.Context, args LookupConnectorGcpCloudCostOutputArgs, opts ...pulumi.InvokeOption) LookupConnectorGcpCloudCostResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectorGcpCloudCostResult, error) {
			args := v.(LookupConnectorGcpCloudCostArgs)
			r, err := LookupConnectorGcpCloudCost(ctx, &args, opts...)
			var s LookupConnectorGcpCloudCostResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectorGcpCloudCostResultOutput)
}

// A collection of arguments for invoking getConnectorGcpCloudCost.
type LookupConnectorGcpCloudCostOutputArgs struct {
	// Unique identifier of the resource.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (LookupConnectorGcpCloudCostOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorGcpCloudCostArgs)(nil)).Elem()
}

// A collection of values returned by getConnectorGcpCloudCost.
type LookupConnectorGcpCloudCostResultOutput struct{ *pulumi.OutputState }

func (LookupConnectorGcpCloudCostResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectorGcpCloudCostResult)(nil)).Elem()
}

func (o LookupConnectorGcpCloudCostResultOutput) ToLookupConnectorGcpCloudCostResultOutput() LookupConnectorGcpCloudCostResultOutput {
	return o
}

func (o LookupConnectorGcpCloudCostResultOutput) ToLookupConnectorGcpCloudCostResultOutputWithContext(ctx context.Context) LookupConnectorGcpCloudCostResultOutput {
	return o
}

// Returns billing details.
func (o LookupConnectorGcpCloudCostResultOutput) BillingExportSpecs() GetConnectorGcpCloudCostBillingExportSpecArrayOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) []GetConnectorGcpCloudCostBillingExportSpec {
		return v.BillingExportSpecs
	}).(GetConnectorGcpCloudCostBillingExportSpecArrayOutput)
}

// Description of the resource.
func (o LookupConnectorGcpCloudCostResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) string { return v.Description }).(pulumi.StringOutput)
}

// Indicates which features to enable among Billing, Optimization, and Visibility.
func (o LookupConnectorGcpCloudCostResultOutput) FeaturesEnableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) []string { return v.FeaturesEnableds }).(pulumi.StringArrayOutput)
}

// GCP Project Id.
func (o LookupConnectorGcpCloudCostResultOutput) GcpProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) string { return v.GcpProjectId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupConnectorGcpCloudCostResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) string { return v.Id }).(pulumi.StringOutput)
}

// Unique identifier of the resource.
func (o LookupConnectorGcpCloudCostResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o LookupConnectorGcpCloudCostResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Unique identifier of the organization.
func (o LookupConnectorGcpCloudCostResultOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) *string { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o LookupConnectorGcpCloudCostResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Email corresponding to the Service Account.
func (o LookupConnectorGcpCloudCostResultOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) string { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o LookupConnectorGcpCloudCostResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupConnectorGcpCloudCostResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectorGcpCloudCostResultOutput{})
}
