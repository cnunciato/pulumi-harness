// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package platform

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for creating an Azure Cloud Cost connector in Harness.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-harness/sdk/go/harness/platform"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := platform.NewConnectorAzureCloudCost(ctx, "example", &platform.ConnectorAzureCloudCostArgs{
//				BillingExportSpec: &platform.ConnectorAzureCloudCostBillingExportSpecArgs{
//					ContainerName:      pulumi.String("container_name"),
//					DirectoryName:      pulumi.String("directory_name"),
//					ReportName:         pulumi.String("report_name"),
//					StorageAccountName: pulumi.String("storage_account_name"),
//					SubscriptionId:     pulumi.String("subscription_id"),
//				},
//				Description: pulumi.String("example"),
//				FeaturesEnableds: pulumi.StringArray{
//					pulumi.String("BILLING"),
//					pulumi.String("VISIBILITY"),
//					pulumi.String("OPTIMIZATION"),
//				},
//				Identifier:     pulumi.String("identifier"),
//				SubscriptionId: pulumi.String("subscription_id"),
//				Tags: pulumi.StringArray{
//					pulumi.String("foo:bar"),
//				},
//				TenantId: pulumi.String("tenant_id"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// # Import account level azure cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorAzureCloudCost:ConnectorAzureCloudCost example <connector_id>
//
// ```
//
//	Import org level azure cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorAzureCloudCost:ConnectorAzureCloudCost example <ord_id>/<connector_id>
//
// ```
//
//	Import project level azure cloud cost connector
//
// ```sh
//
//	$ pulumi import harness:platform/connectorAzureCloudCost:ConnectorAzureCloudCost example <org_id>/<project_id>/<connector_id>
//
// ```
type ConnectorAzureCloudCost struct {
	pulumi.CustomResourceState

	// Returns billing details for the Azure account.
	BillingExportSpec ConnectorAzureCloudCostBillingExportSpecPtrOutput `pulumi:"billingExportSpec"`
	// Description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayOutput `pulumi:"featuresEnableds"`
	// Unique identifier of the resource.
	Identifier pulumi.StringOutput `pulumi:"identifier"`
	// Name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrOutput `pulumi:"projectId"`
	// Subsription id.
	SubscriptionId pulumi.StringOutput `pulumi:"subscriptionId"`
	// Tags to associate with the resource.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Tenant id.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewConnectorAzureCloudCost registers a new resource with the given unique name, arguments, and options.
func NewConnectorAzureCloudCost(ctx *pulumi.Context,
	name string, args *ConnectorAzureCloudCostArgs, opts ...pulumi.ResourceOption) (*ConnectorAzureCloudCost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeaturesEnableds == nil {
		return nil, errors.New("invalid value for required argument 'FeaturesEnableds'")
	}
	if args.Identifier == nil {
		return nil, errors.New("invalid value for required argument 'Identifier'")
	}
	if args.SubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'SubscriptionId'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource ConnectorAzureCloudCost
	err := ctx.RegisterResource("harness:platform/connectorAzureCloudCost:ConnectorAzureCloudCost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectorAzureCloudCost gets an existing ConnectorAzureCloudCost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectorAzureCloudCost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectorAzureCloudCostState, opts ...pulumi.ResourceOption) (*ConnectorAzureCloudCost, error) {
	var resource ConnectorAzureCloudCost
	err := ctx.ReadResource("harness:platform/connectorAzureCloudCost:ConnectorAzureCloudCost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectorAzureCloudCost resources.
type connectorAzureCloudCostState struct {
	// Returns billing details for the Azure account.
	BillingExportSpec *ConnectorAzureCloudCostBillingExportSpec `pulumi:"billingExportSpec"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// Unique identifier of the resource.
	Identifier *string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Subsription id.
	SubscriptionId *string `pulumi:"subscriptionId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// Tenant id.
	TenantId *string `pulumi:"tenantId"`
}

type ConnectorAzureCloudCostState struct {
	// Returns billing details for the Azure account.
	BillingExportSpec ConnectorAzureCloudCostBillingExportSpecPtrInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayInput
	// Unique identifier of the resource.
	Identifier pulumi.StringPtrInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Subsription id.
	SubscriptionId pulumi.StringPtrInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
	// Tenant id.
	TenantId pulumi.StringPtrInput
}

func (ConnectorAzureCloudCostState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorAzureCloudCostState)(nil)).Elem()
}

type connectorAzureCloudCostArgs struct {
	// Returns billing details for the Azure account.
	BillingExportSpec *ConnectorAzureCloudCostBillingExportSpec `pulumi:"billingExportSpec"`
	// Description of the resource.
	Description *string `pulumi:"description"`
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds []string `pulumi:"featuresEnableds"`
	// Unique identifier of the resource.
	Identifier string `pulumi:"identifier"`
	// Name of the resource.
	Name *string `pulumi:"name"`
	// Unique identifier of the organization.
	OrgId *string `pulumi:"orgId"`
	// Unique identifier of the project.
	ProjectId *string `pulumi:"projectId"`
	// Subsription id.
	SubscriptionId string `pulumi:"subscriptionId"`
	// Tags to associate with the resource.
	Tags []string `pulumi:"tags"`
	// Tenant id.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a ConnectorAzureCloudCost resource.
type ConnectorAzureCloudCostArgs struct {
	// Returns billing details for the Azure account.
	BillingExportSpec ConnectorAzureCloudCostBillingExportSpecPtrInput
	// Description of the resource.
	Description pulumi.StringPtrInput
	// Indicates which feature to enable among Billing, Optimization, and Visibility.
	FeaturesEnableds pulumi.StringArrayInput
	// Unique identifier of the resource.
	Identifier pulumi.StringInput
	// Name of the resource.
	Name pulumi.StringPtrInput
	// Unique identifier of the organization.
	OrgId pulumi.StringPtrInput
	// Unique identifier of the project.
	ProjectId pulumi.StringPtrInput
	// Subsription id.
	SubscriptionId pulumi.StringInput
	// Tags to associate with the resource.
	Tags pulumi.StringArrayInput
	// Tenant id.
	TenantId pulumi.StringInput
}

func (ConnectorAzureCloudCostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectorAzureCloudCostArgs)(nil)).Elem()
}

type ConnectorAzureCloudCostInput interface {
	pulumi.Input

	ToConnectorAzureCloudCostOutput() ConnectorAzureCloudCostOutput
	ToConnectorAzureCloudCostOutputWithContext(ctx context.Context) ConnectorAzureCloudCostOutput
}

func (*ConnectorAzureCloudCost) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudCost)(nil)).Elem()
}

func (i *ConnectorAzureCloudCost) ToConnectorAzureCloudCostOutput() ConnectorAzureCloudCostOutput {
	return i.ToConnectorAzureCloudCostOutputWithContext(context.Background())
}

func (i *ConnectorAzureCloudCost) ToConnectorAzureCloudCostOutputWithContext(ctx context.Context) ConnectorAzureCloudCostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudCostOutput)
}

// ConnectorAzureCloudCostArrayInput is an input type that accepts ConnectorAzureCloudCostArray and ConnectorAzureCloudCostArrayOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudCostArrayInput` via:
//
//	ConnectorAzureCloudCostArray{ ConnectorAzureCloudCostArgs{...} }
type ConnectorAzureCloudCostArrayInput interface {
	pulumi.Input

	ToConnectorAzureCloudCostArrayOutput() ConnectorAzureCloudCostArrayOutput
	ToConnectorAzureCloudCostArrayOutputWithContext(context.Context) ConnectorAzureCloudCostArrayOutput
}

type ConnectorAzureCloudCostArray []ConnectorAzureCloudCostInput

func (ConnectorAzureCloudCostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorAzureCloudCost)(nil)).Elem()
}

func (i ConnectorAzureCloudCostArray) ToConnectorAzureCloudCostArrayOutput() ConnectorAzureCloudCostArrayOutput {
	return i.ToConnectorAzureCloudCostArrayOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudCostArray) ToConnectorAzureCloudCostArrayOutputWithContext(ctx context.Context) ConnectorAzureCloudCostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudCostArrayOutput)
}

// ConnectorAzureCloudCostMapInput is an input type that accepts ConnectorAzureCloudCostMap and ConnectorAzureCloudCostMapOutput values.
// You can construct a concrete instance of `ConnectorAzureCloudCostMapInput` via:
//
//	ConnectorAzureCloudCostMap{ "key": ConnectorAzureCloudCostArgs{...} }
type ConnectorAzureCloudCostMapInput interface {
	pulumi.Input

	ToConnectorAzureCloudCostMapOutput() ConnectorAzureCloudCostMapOutput
	ToConnectorAzureCloudCostMapOutputWithContext(context.Context) ConnectorAzureCloudCostMapOutput
}

type ConnectorAzureCloudCostMap map[string]ConnectorAzureCloudCostInput

func (ConnectorAzureCloudCostMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorAzureCloudCost)(nil)).Elem()
}

func (i ConnectorAzureCloudCostMap) ToConnectorAzureCloudCostMapOutput() ConnectorAzureCloudCostMapOutput {
	return i.ToConnectorAzureCloudCostMapOutputWithContext(context.Background())
}

func (i ConnectorAzureCloudCostMap) ToConnectorAzureCloudCostMapOutputWithContext(ctx context.Context) ConnectorAzureCloudCostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAzureCloudCostMapOutput)
}

type ConnectorAzureCloudCostOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudCostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAzureCloudCost)(nil)).Elem()
}

func (o ConnectorAzureCloudCostOutput) ToConnectorAzureCloudCostOutput() ConnectorAzureCloudCostOutput {
	return o
}

func (o ConnectorAzureCloudCostOutput) ToConnectorAzureCloudCostOutputWithContext(ctx context.Context) ConnectorAzureCloudCostOutput {
	return o
}

// Returns billing details for the Azure account.
func (o ConnectorAzureCloudCostOutput) BillingExportSpec() ConnectorAzureCloudCostBillingExportSpecPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) ConnectorAzureCloudCostBillingExportSpecPtrOutput {
		return v.BillingExportSpec
	}).(ConnectorAzureCloudCostBillingExportSpecPtrOutput)
}

// Description of the resource.
func (o ConnectorAzureCloudCostOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates which feature to enable among Billing, Optimization, and Visibility.
func (o ConnectorAzureCloudCostOutput) FeaturesEnableds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringArrayOutput { return v.FeaturesEnableds }).(pulumi.StringArrayOutput)
}

// Unique identifier of the resource.
func (o ConnectorAzureCloudCostOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringOutput { return v.Identifier }).(pulumi.StringOutput)
}

// Name of the resource.
func (o ConnectorAzureCloudCostOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier of the organization.
func (o ConnectorAzureCloudCostOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// Unique identifier of the project.
func (o ConnectorAzureCloudCostOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringPtrOutput { return v.ProjectId }).(pulumi.StringPtrOutput)
}

// Subsription id.
func (o ConnectorAzureCloudCostOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringOutput { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Tags to associate with the resource.
func (o ConnectorAzureCloudCostOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Tenant id.
func (o ConnectorAzureCloudCostOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectorAzureCloudCost) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type ConnectorAzureCloudCostArrayOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudCostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConnectorAzureCloudCost)(nil)).Elem()
}

func (o ConnectorAzureCloudCostArrayOutput) ToConnectorAzureCloudCostArrayOutput() ConnectorAzureCloudCostArrayOutput {
	return o
}

func (o ConnectorAzureCloudCostArrayOutput) ToConnectorAzureCloudCostArrayOutputWithContext(ctx context.Context) ConnectorAzureCloudCostArrayOutput {
	return o
}

func (o ConnectorAzureCloudCostArrayOutput) Index(i pulumi.IntInput) ConnectorAzureCloudCostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConnectorAzureCloudCost {
		return vs[0].([]*ConnectorAzureCloudCost)[vs[1].(int)]
	}).(ConnectorAzureCloudCostOutput)
}

type ConnectorAzureCloudCostMapOutput struct{ *pulumi.OutputState }

func (ConnectorAzureCloudCostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConnectorAzureCloudCost)(nil)).Elem()
}

func (o ConnectorAzureCloudCostMapOutput) ToConnectorAzureCloudCostMapOutput() ConnectorAzureCloudCostMapOutput {
	return o
}

func (o ConnectorAzureCloudCostMapOutput) ToConnectorAzureCloudCostMapOutputWithContext(ctx context.Context) ConnectorAzureCloudCostMapOutput {
	return o
}

func (o ConnectorAzureCloudCostMapOutput) MapIndex(k pulumi.StringInput) ConnectorAzureCloudCostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConnectorAzureCloudCost {
		return vs[0].(map[string]*ConnectorAzureCloudCost)[vs[1].(string)]
	}).(ConnectorAzureCloudCostOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudCostInput)(nil)).Elem(), &ConnectorAzureCloudCost{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudCostArrayInput)(nil)).Elem(), ConnectorAzureCloudCostArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAzureCloudCostMapInput)(nil)).Elem(), ConnectorAzureCloudCostMap{})
	pulumi.RegisterOutputType(ConnectorAzureCloudCostOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudCostArrayOutput{})
	pulumi.RegisterOutputType(ConnectorAzureCloudCostMapOutput{})
}
